{"version":3,"sources":["webpack:///static/js/main.f02dc7da.js","webpack:///webpack/bootstrap 3af453783720649484d3","webpack:///./~/react/~/fbjs/lib/invariant.js","webpack:///./~/react/lib/reactProdInvariant.js","webpack:///./~/react/~/fbjs/lib/warning.js","webpack:///./~/react/~/object-assign/index.js","webpack:///./~/react/lib/ReactDOMComponentTree.js","webpack:///./~/react/~/fbjs/lib/ExecutionEnvironment.js","webpack:///./~/react/lib/ReactInstrumentation.js","webpack:///./~/react/~/fbjs/lib/emptyFunction.js","webpack:///./~/react/lib/ReactElement.js","webpack:///./~/react/lib/ReactUpdates.js","webpack:///./~/react/lib/EventConstants.js","webpack:///./~/react/lib/SyntheticEvent.js","webpack:///./~/react/lib/PooledClass.js","webpack:///./~/react/lib/ReactCurrentOwner.js","webpack:///./~/react/~/fbjs/lib/keyOf.js","webpack:///./~/react/lib/DOMLazyTree.js","webpack:///./~/react/lib/DOMProperty.js","webpack:///./~/react/lib/ReactReconciler.js","webpack:///./~/react/lib/EventPluginHub.js","webpack:///./~/react/lib/EventPropagators.js","webpack:///./~/react/lib/ReactInstanceMap.js","webpack:///./~/react/lib/SyntheticUIEvent.js","webpack:///./~/react/lib/Transaction.js","webpack:///./~/react/~/fbjs/lib/emptyObject.js","webpack:///./~/react/lib/DisabledInputUtils.js","webpack:///./~/react/lib/ReactBrowserEventEmitter.js","webpack:///./~/react/lib/SyntheticMouseEvent.js","webpack:///./~/react/lib/escapeTextContentForBrowser.js","webpack:///./~/react/lib/setInnerHTML.js","webpack:///./~/react/~/fbjs/lib/keyMirror.js","webpack:///./~/p5/lib/p5.js","webpack:///./~/react-scripts/~/process/browser.js","webpack:///./~/react/lib/DOMChildrenOperations.js","webpack:///./~/react/lib/DOMNamespaces.js","webpack:///./~/react/lib/EventPluginRegistry.js","webpack:///./~/react/lib/EventPluginUtils.js","webpack:///./~/react/lib/KeyEscapeUtils.js","webpack:///./~/react/lib/LinkedValueUtils.js","webpack:///./~/react/lib/ReactComponent.js","webpack:///./~/react/lib/ReactComponentEnvironment.js","webpack:///./~/react/lib/ReactComponentTreeHook.js","webpack:///./~/react/lib/ReactErrorUtils.js","webpack:///./~/react/lib/ReactNoopUpdateQueue.js","webpack:///./~/react/lib/ReactPropTypeLocationNames.js","webpack:///./~/react/lib/ReactPropTypeLocations.js","webpack:///./~/react/lib/ReactPropTypesSecret.js","webpack:///./~/react/lib/ReactUpdateQueue.js","webpack:///./~/react/lib/createMicrosoftUnsafeLocalFunction.js","webpack:///./~/react/lib/getEventCharCode.js","webpack:///./~/react/lib/getEventModifierState.js","webpack:///./~/react/lib/getEventTarget.js","webpack:///./~/react/lib/isEventSupported.js","webpack:///./~/react/lib/shouldUpdateReactComponent.js","webpack:///./~/react/lib/traverseAllChildren.js","webpack:///./~/react/lib/validateDOMNesting.js","webpack:///./~/react/~/fbjs/lib/shallowEqual.js","webpack:///./~/react-scripts/~/promise/lib/core.js","webpack:///./~/react/lib/CSSProperty.js","webpack:///./~/react/lib/CallbackQueue.js","webpack:///./~/react/lib/DOMPropertyOperations.js","webpack:///./~/react/lib/ReactChildren.js","webpack:///./~/react/lib/ReactClass.js","webpack:///./~/react/lib/ReactDOMComponentFlags.js","webpack:///./~/react/lib/ReactDOMSelect.js","webpack:///./~/react/lib/ReactEmptyComponent.js","webpack:///./~/react/lib/ReactFeatureFlags.js","webpack:///./~/react/lib/ReactHostComponent.js","webpack:///./~/react/lib/ReactInputSelection.js","webpack:///./~/react/lib/ReactMount.js","webpack:///./~/react/lib/ReactMultiChildUpdateTypes.js","webpack:///./~/react/lib/ReactNodeTypes.js","webpack:///./~/react/lib/ReactPropTypes.js","webpack:///./~/react/lib/ReactVersion.js","webpack:///./~/react/lib/ViewportMetrics.js","webpack:///./~/react/lib/accumulateInto.js","webpack:///./~/react/lib/canDefineProperty.js","webpack:///./~/react/lib/forEachAccumulated.js","webpack:///./~/react/lib/getHostComponentFromComposite.js","webpack:///./~/react/lib/getIteratorFn.js","webpack:///./~/react/lib/getTextContentAccessor.js","webpack:///./~/react/lib/instantiateReactComponent.js","webpack:///./~/react/lib/isTextInputElement.js","webpack:///./~/react/lib/setTextContent.js","webpack:///./~/react/~/fbjs/lib/EventListener.js","webpack:///./~/react/~/fbjs/lib/focusNode.js","webpack:///./~/react/~/fbjs/lib/getActiveElement.js","webpack:///./~/react/react.js","webpack:///./~/react-dom/index.js","webpack:///./~/react-scripts/config/polyfills.js","webpack:///./~/react-scripts/~/asap/browser-raw.js","webpack:///./src/App.js","webpack:///./src/index.js","webpack:///./src/sketches/gravitron.js","webpack:///./src/sketches/otherSketch.js","webpack:///./~/react-scripts/~/promise/lib/es6-extensions.js","webpack:///./~/react-scripts/~/promise/lib/rejection-tracking.js","webpack:///./~/react-scripts/~/whatwg-fetch/fetch.js","webpack:///./~/react/lib/AutoFocusUtils.js","webpack:///./~/react/lib/BeforeInputEventPlugin.js","webpack:///./~/react/lib/CSSPropertyOperations.js","webpack:///./~/react/lib/ChangeEventPlugin.js","webpack:///./~/react/lib/Danger.js","webpack:///./~/react/lib/DefaultEventPluginOrder.js","webpack:///./~/react/lib/EnterLeaveEventPlugin.js","webpack:///./~/react/lib/FallbackCompositionState.js","webpack:///./~/react/lib/HTMLDOMPropertyConfig.js","webpack:///./~/react/lib/React.js","webpack:///./~/react/lib/ReactChildReconciler.js","webpack:///./~/react/lib/ReactComponentBrowserEnvironment.js","webpack:///./~/react/lib/ReactCompositeComponent.js","webpack:///./~/react/lib/ReactDOM.js","webpack:///./~/react/lib/ReactDOMButton.js","webpack:///./~/react/lib/ReactDOMComponent.js","webpack:///./~/react/lib/ReactDOMContainerInfo.js","webpack:///./~/react/lib/ReactDOMEmptyComponent.js","webpack:///./~/react/lib/ReactDOMFactories.js","webpack:///./~/react/lib/ReactDOMFeatureFlags.js","webpack:///./~/react/lib/ReactDOMIDOperations.js","webpack:///./~/react/lib/ReactDOMInput.js","webpack:///./~/react/lib/ReactDOMOption.js","webpack:///./~/react/lib/ReactDOMSelection.js","webpack:///./~/react/lib/ReactDOMTextComponent.js","webpack:///./~/react/lib/ReactDOMTextarea.js","webpack:///./~/react/lib/ReactDOMTreeTraversal.js","webpack:///./~/react/lib/ReactDefaultBatchingStrategy.js","webpack:///./~/react/lib/ReactDefaultInjection.js","webpack:///./~/react/lib/ReactEventEmitterMixin.js","webpack:///./~/react/lib/ReactEventListener.js","webpack:///./~/react/lib/ReactInjection.js","webpack:///./~/react/lib/ReactMarkupChecksum.js","webpack:///./~/react/lib/ReactMultiChild.js","webpack:///./~/react/lib/ReactOwner.js","webpack:///./~/react/lib/ReactPureComponent.js","webpack:///./~/react/lib/ReactReconcileTransaction.js","webpack:///./~/react/lib/ReactRef.js","webpack:///./~/react/lib/ReactServerRenderingTransaction.js","webpack:///./~/react/lib/ReactServerUpdateQueue.js","webpack:///./~/react/lib/SVGDOMPropertyConfig.js","webpack:///./~/react/lib/SelectEventPlugin.js","webpack:///./~/react/lib/SimpleEventPlugin.js","webpack:///./~/react/lib/SyntheticAnimationEvent.js","webpack:///./~/react/lib/SyntheticClipboardEvent.js","webpack:///./~/react/lib/SyntheticCompositionEvent.js","webpack:///./~/react/lib/SyntheticDragEvent.js","webpack:///./~/react/lib/SyntheticFocusEvent.js","webpack:///./~/react/lib/SyntheticInputEvent.js","webpack:///./~/react/lib/SyntheticKeyboardEvent.js","webpack:///./~/react/lib/SyntheticTouchEvent.js","webpack:///./~/react/lib/SyntheticTransitionEvent.js","webpack:///./~/react/lib/SyntheticWheelEvent.js","webpack:///./~/react/lib/adler32.js","webpack:///./~/react/lib/checkReactTypeSpec.js","webpack:///./~/react/lib/dangerousStyleValue.js","webpack:///./~/react/lib/findDOMNode.js","webpack:///./~/react/lib/flattenChildren.js","webpack:///./~/react/lib/getEventKey.js","webpack:///./~/react/lib/getNodeForCharacterOffset.js","webpack:///./~/react/lib/getVendorPrefixedEventName.js","webpack:///./~/react/lib/onlyChild.js","webpack:///./~/react/lib/quoteAttributeValueForBrowser.js","webpack:///./~/react/lib/renderSubtreeIntoContainer.js","webpack:///./~/react/~/fbjs/lib/camelize.js","webpack:///./~/react/~/fbjs/lib/camelizeStyleName.js","webpack:///./~/react/~/fbjs/lib/containsNode.js","webpack:///./~/react/~/fbjs/lib/createArrayFromMixed.js","webpack:///./~/react/~/fbjs/lib/createNodesFromMarkup.js","webpack:///./~/react/~/fbjs/lib/getMarkupWrap.js","webpack:///./~/react/~/fbjs/lib/getUnboundedScrollPosition.js","webpack:///./~/react/~/fbjs/lib/hyphenate.js","webpack:///./~/react/~/fbjs/lib/hyphenateStyleName.js","webpack:///./~/react/~/fbjs/lib/isNode.js","webpack:///./~/react/~/fbjs/lib/isTextNode.js","webpack:///./~/react/~/fbjs/lib/memoizeStringOnly.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","this","concat","invariant","condition","format","d","e","f","error","undefined","Error","argIndex","replace","name","framesToPop","reactProdInvariant","code","argCount","arguments","length","message","argIdx","encodeURIComponent","emptyFunction","warning","toObject","val","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","propIsEnumerable","propertyIsEnumerable","target","source","from","symbols","to","s","key","getOwnPropertySymbols","getRenderedHostOrTextFromComponent","component","rendered","_renderedComponent","precacheNode","inst","node","hostInst","_hostNode","internalInstanceKey","uncacheNode","precacheChildNodes","_flags","Flags","hasCachedChildNodes","children","_renderedChildren","childNode","firstChild","outer","childInst","childID","_domID","nextSibling","nodeType","getAttribute","ATTR_NAME","nodeValue","_prodInvariant","getClosestInstanceFromNode","parents","push","parentNode","closest","pop","getInstanceFromNode","getNodeFromInstance","_hostParent","DOMProperty","ReactDOMComponentFlags","ID_ATTRIBUTE_NAME","Math","random","toString","ReactDOMComponentTree","canUseDOM","window","document","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","isInWorker","debugTool","makeEmptyFunction","arg","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","hasValidRef","config","ref","hasValidKey","_assign","ReactCurrentOwner","REACT_ELEMENT_TYPE","Symbol","RESERVED_PROPS","__self","__source","ReactElement","type","self","owner","props","element","$$typeof","_owner","propName","childrenLength","childArray","Array","defaultProps","current","createFactory","factory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","ensureInjected","ReactUpdates","ReactReconcileTransaction","batchingStrategy","ReactUpdatesFlushTransaction","reinitializeTransaction","dirtyComponentsLength","callbackQueue","CallbackQueue","getPooled","reconcileTransaction","batchedUpdates","callback","mountOrderComparator","c1","c2","_mountOrder","runBatchedUpdates","transaction","len","dirtyComponents","sort","updateBatchNumber","callbacks","_pendingCallbacks","markerName","ReactFeatureFlags","logTopLevelRenders","namedComponent","_currentElement","getName","console","time","ReactReconciler","performUpdateIfNecessary","timeEnd","j","enqueue","getPublicInstance","enqueueUpdate","isBatchingUpdates","_updateBatchNumber","asap","context","asapCallbackQueue","asapEnqueued","PooledClass","Transaction","NESTED_UPDATES","initialize","close","splice","flushBatchedUpdates","UPDATE_QUEUEING","reset","notifyAll","TRANSACTION_WRAPPERS","Mixin","getTransactionWrappers","destructor","release","perform","method","scope","addPoolingTo","queue","ReactUpdatesInjection","injectReconcileTransaction","ReconcileTransaction","injectBatchingStrategy","_batchingStrategy","injection","keyMirror","PropagationPhases","bubbled","captured","topLevelTypes","topAbort","topAnimationEnd","topAnimationIteration","topAnimationStart","topBlur","topCanPlay","topCanPlayThrough","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topFocus","topInput","topInvalid","topKeyDown","topKeyPress","topKeyUp","topLoad","topLoadedData","topLoadedMetadata","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topPause","topPlay","topPlaying","topProgress","topRateChange","topReset","topScroll","topSeeked","topSeeking","topSelectionChange","topStalled","topSubmit","topSuspend","topTextInput","topTimeUpdate","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topVolumeChange","topWaiting","topWheel","EventConstants","SyntheticEvent","dispatchConfig","targetInst","nativeEvent","nativeEventTarget","_targetInst","Interface","constructor","normalize","defaultPrevented","returnValue","isDefaultPrevented","isPropagationStopped","shouldBeReleasedProperties","Proxy","EventInterface","currentTarget","eventPhase","bubbles","cancelable","timeStamp","event","Date","now","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","augmentClass","Class","Super","E","fourArgumentPooler","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","instance","twoArgumentPooler","a1","a2","threeArgumentPooler","a3","a4","fiveArgumentPooler","a5","standardReleaser","poolSize","DEFAULT_POOL_SIZE","DEFAULT_POOLER","CopyConstructor","pooler","NewKlass","keyOf","oneKeyObj","insertTreeChildren","tree","enableLazy","insertTreeBefore","html","setInnerHTML","text","setTextContent","replaceChildWithTree","oldNode","newTree","replaceChild","queueChild","parentTree","childTree","appendChild","queueHTML","queueText","nodeName","DOMLazyTree","DOMNamespaces","createMicrosoftUnsafeLocalFunction","ELEMENT_NODE_TYPE","DOCUMENT_FRAGMENT_NODE_TYPE","documentMode","navigator","userAgent","test","referenceNode","toLowerCase","namespaceURI","insertBefore","checkMask","value","bitmask","DOMPropertyInjection","MUST_USE_PROPERTY","HAS_BOOLEAN_VALUE","HAS_NUMERIC_VALUE","HAS_POSITIVE_NUMERIC_VALUE","HAS_OVERLOADED_BOOLEAN_VALUE","injectDOMPropertyConfig","domPropertyConfig","Injection","Properties","DOMAttributeNamespaces","DOMAttributeNames","DOMPropertyNames","DOMMutationMethods","isCustomAttribute","_isCustomAttributeFunctions","properties","lowerCased","propConfig","propertyInfo","attributeName","attributeNamespace","propertyName","mutationMethod","mustUseProperty","hasBooleanValue","hasNumericValue","hasPositiveNumericValue","hasOverloadedBooleanValue","ATTRIBUTE_NAME_START_CHAR","ROOT_ATTRIBUTE_NAME","ATTRIBUTE_NAME_CHAR","getPossibleStandardName","isCustomAttributeFn","attachRefs","ReactRef","mountComponent","internalInstance","hostParent","hostContainerInfo","parentDebugID","markup","getReactMountReady","getHostNode","unmountComponent","safely","detachRefs","receiveComponent","nextElement","prevElement","_context","refsChanged","shouldUpdateRefs","EventPluginRegistry","EventPluginUtils","ReactErrorUtils","accumulateInto","forEachAccumulated","listenerBank","eventQueue","executeDispatchesAndRelease","simulated","executeDispatchesInOrder","executeDispatchesAndReleaseSimulated","executeDispatchesAndReleaseTopLevel","getDictionaryKey","_rootNodeID","EventPluginHub","injectEventPluginOrder","injectEventPluginsByName","putListener","registrationName","listener","bankForRegistrationName","PluginModule","registrationNameModules","didPutListener","getListener","deleteListener","willDeleteListener","deleteAllListeners","extractEvents","topLevelType","events","plugins","possiblePlugin","extractedEvents","enqueueEvents","processEventQueue","processingEventQueue","rethrowCaughtError","__purge","__getListenerBank","listenerAtPhase","propagationPhase","phasedRegistrationNames","accumulateDirectionalDispatches","upwards","phase","_dispatchListeners","_dispatchInstances","accumulateTwoPhaseDispatchesSingle","traverseTwoPhase","accumulateTwoPhaseDispatchesSingleSkipTarget","parentInst","getParentInstance","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","leave","enter","traverseEnterLeave","accumulateDirectDispatches","EventPropagators","ReactInstanceMap","remove","_reactInternalInstance","get","has","set","SyntheticUIEvent","dispatchMarker","getEventTarget","UIEventInterface","view","doc","ownerDocument","defaultView","parentWindow","detail","transactionWrappers","wrapperInitData","_isInTransaction","isInTransaction","errorThrown","ret","initializeAll","closeAll","err","startIndex","wrapper","OBSERVED_ERROR","initData","emptyObject","disableableMouseListenerNames","onClick","onDoubleClick","onMouseDown","onMouseMove","onMouseUp","onClickCapture","onDoubleClickCapture","onMouseDownCapture","onMouseMoveCapture","onMouseUpCapture","DisabledInputUtils","getHostProps","disabled","hostProps","getListeningForDocument","mountAt","topListenersIDKey","reactTopListenersCounter","alreadyListeningTo","hasEventPageXY","ReactEventEmitterMixin","ViewportMetrics","getVendorPrefixedEventName","isEventSupported","isMonitoringScrollValue","topEventMapping","ReactBrowserEventEmitter","ReactEventListener","injectReactEventListener","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","listenTo","contentDocumentHandle","isListening","dependencies","registrationNameDependencies","dependency","trapBubbledEvent","trapCapturedEvent","WINDOW_HANDLE","handlerBaseName","handle","supportsEventPageXY","createEvent","ev","ensureScrollValueMonitoring","refresh","refreshScrollValues","monitorScrollValue","SyntheticMouseEvent","getEventModifierState","MouseEventInterface","screenX","screenY","clientX","clientY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","button","buttons","relatedTarget","fromElement","srcElement","toElement","pageX","currentScrollLeft","pageY","currentScrollTop","escapeHtml","string","str","match","matchHtmlRegExp","exec","escape","index","lastIndex","charCodeAt","substring","escapeTextContentForBrowser","reusableSVGContainer","WHITESPACE_TEST","NONVISIBLE_TEST","svg","innerHTML","svgNode","testElement","textNode","data","removeChild","deleteData","obj","isArray","require","define","t","r","o","u","l","1","_dereq_","2","argument","predicate","assert","3","line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","4","DefaultEncoding","font","CmapEncoding","cmap","CffEncoding","encoding","charset","GlyphNames","post","version","names","standardNames","numberOfGlyphs","glyphNameIndex","addGlyphNames","glyph","glyphIndexMap","tables","charCodes","glyphIndex","glyphs","addUnicode","parseInt","cffEncoding","glyphNames","glyphIndexToName","cffStandardStrings","cffStandardEncoding","cffExpertEncoding","charToGlyphIndex","unicodes","charName","indexOf","nameToGlyphIndex","gid","5","Font","options","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","glyphset","GlyphSet","path","sfnt","hasChar","charToGlyph","stringToGlyphs","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","x","y","fontSize","kerning","fontScale","advanceWidth","kerningValue","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","draw","drawPoints","drawMetrics","validate","warnings","assertStringAttribute","attrName","_this","trim","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","buffer","ArrayBuffer","intArray","Uint8Array","download","fileName","requestFileSystem","webkitRequestFileSystem","TEMPORARY","byteLength","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","write","location","href","toURL","./encoding","./glyphset","./path","./tables/sfnt","6","getPathDefinition","_path","commands","configurable","Glyph","bindConstructorValues","check","unicode","xMin","yMin","xMax","yMax","defineProperty","scale","cmd","quadraticCurveTo","curveTo","closePath","getContours","points","contours","currentContour","pt","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","min","max","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw","7","glyphLoader","_glyph","ttfGlyphLoader","parseGlyph","position","buildPath","cffGlyphLoader","parseCFFCharstring","charstring","loader","./glyph","8","toArrayBuffer","arrayBuffer","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","indexToLocFormat","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","_font","parse","getFixed","outlinesFormat","getTag","numTables","getUShort","tag","offset","getULong","head","hhea","numberOfHMetrics","maxp","numGlyphs","_name","fontFamily","fontSubfamily","os2","shortVersion","locaTable","loca","glyf","hmtx","cff","kern","gpos","load","isNode","loadFn","_parse","./font","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post","9","Parser","relativeOffset","getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount","10","strokeWidth","bezierCurveTo","quadTo","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","toSVG","11","Table","tableName","fields","field","optionKeys","k","sizeOf","sizeOfFunction","TABLE","./types","12","equals","parseCFFIndex","start","conversionFn","objectOffset","objects","offsetSize","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","values","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","newDict","parseCFFHeader","header","formatMajor","formatMinor","parseCFFTopDict","TOP_DICT_META","parseCFFPrivateDict","PRIVATE_DICT_META","parseCFFCharset","nGlyphs","sid","parseCFFEncoding","enc","nCodes","nRanges","first","nLeft","newContour","parseStems","hasWidthArg","stack","haveWidth","width","shift","nominalWidthX","nStems","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","c1x","c1y","c2x","c2y","subrsBias","subrs","abs","log","gsubrsBias","gsubrs","defaultWidthX","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDictData","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charStringsIndex","charStrings","charString","encodeString","makeHeader","table","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","_13","_23","dx1","dy1","dx2","dy2","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","fontMatrix","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyphset","../parse","../path","../table","13","parseCmapTable","platformId","encodingId","language","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","addSegment","segments","end","delta","addTerminatorSegment","makeCmapTable","segCountX2","searchRange","pow","floor","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","glyphId","../check","14","parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","numberOfContours","flags","endPointIndices","instructionLength","instructions","numberOfCoordinates","repeatCount","point","onCurve","px","py","isComposite","components","moreComponents","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","curvePt","realFirstPoint","contour","firstPt","lastPt","prevPt","midPt","componentGlyph","transformedPoints","parseGlyfTable","nextOffset","15","parseTaggedListTable","list","parseCoverageTable","coverage","begin","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","value1","value2","coverageOffset","valueFormat1","valueFormat2","sharedPairSets","pairSetCount","pairSet","pairSetOffsets","firstGlyph","pairSetOffset","sharedPairSet","pairValueCount","secondGlyph","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","markFilteringSet","subtables","parseGposTable","tableVersion","lookupListOffset","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset","16","parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable","17","parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable","18","parseHmtxTable","numMetrics","makeHmtxTable","19","parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex","20","parseLocaTable","parseFn","glyphOffsets","glyphOffset","21","parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable","22","parseNameTable","stringOffset","unknownCount","platformID","encodingID","languageID","nameID","property","nameTableNames","codePoints","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types","23","getUnicodeRange","unicodeRanges","range","parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table","24","parsePostTable","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","nameLength","makePostTable","25","log2","computeCheckSum","sum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","r1","r2","metricsForChar","chars","notFoundMetrics","average","vs","fontToSfntTable","firstCharIndex","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","lastCharIndex","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","checkSumAdjusted","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post","26","constant","LIMIT16","LIMIT32","decode","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","REAL","epsilon","ii","nibbles","out","substr","NAME","INDEX","dataSize","OBJECT","encodedOffsets","offsetEncoder","encodedOffset","DICT","OPERAND","OPERATOR","OP","wmm","WeakMap","CHARSTRING","encodingFunction","LITERAL","27","definition","amd","succeed","protocol","protocolRe","httpsRe","twoHundo","handleReadyState","success","_aborted","_timedOut","readyState","onreadystatechange","noop","setHeaders","http","h","headers","defaultHeaders","isAFormData","FormData","requestedWith","contentType","setRequestHeader","setCredentials","withCredentials","generalCallback","lastValue","urlappend","handleJsonp","reqId","uniqid","cbkey","cbval","reqwest","getcallbackPrefix","cbreg","RegExp","script","isIE10","win","src","async","htmlFor","onclick","abort","getRequest","toUpperCase","toQueryString","sendWait","xhr","xDomainRequest","onerror","onprogress","setTimeout","Reqwest","init","setType","complete","resp","clearTimeout","timeout","_completeHandlers","getResponseHeader","filteredResponse","globalSetupOptions","dataFilter","responseText","JSON","eval","responseXML","parseError","errorCode","reason","_responseArgs","_fulfilled","_successHandler","_fulfillmentHandlers","timedOut","msg","_erred","_errorHandlers","serial","el","cb","ch","ra","tagName","optCb","checked","selectedIndex","selected","eachFormElement","serializeSubtags","tags","fa","byTag","serializeQueryString","serializeArray","serializeHash","hash","buildParams","prefix","traditional","add","rbracket","callbackPrefix","xmlHttpRequest","accept","*","xml","json","js","XDomainRequest","ActiveXObject","retry","then","fail","always","catch","arr","serialize","opt","trad","compat","ajaxSetup","28","p5","_globalInit","PHANTOMJS","mocha","setup","./color/creating_reading","./color/p5.Color","./color/setting","./core/2d_primitives","./core/attributes","./core/constants","./core/core","./core/curves","./core/environment","./core/p5.Element","./core/p5.Graphics","./core/p5.Renderer2D","./core/rendering","./core/structure","./core/transform","./core/vertex","./events/acceleration","./events/keyboard","./events/mouse","./events/touch","./image/image","./image/loading_displaying","./image/p5.Image","./image/pixels","./io/files","./io/p5.Table","./io/p5.TableRow","./io/p5.XML","./math/calculation","./math/math","./math/noise","./math/p5.Vector","./math/random","./math/trigonometry","./typography/attributes","./typography/loading_displaying","./typography/p5.Font","./utilities/array_functions","./utilities/conversion","./utilities/string_functions","./utilities/time_date","./webgl/camera","./webgl/interaction","./webgl/light","./webgl/loading","./webgl/material","./webgl/p5.Geometry","./webgl/p5.Matrix","./webgl/p5.RendererGL","./webgl/p5.RendererGL.Immediate","./webgl/p5.RendererGL.Retained","./webgl/primitives","./webgl/shader","29","ColorConversion","_hsbaToHSLA","hsba","hue","sat","li","_hsbaToRGBA","RGBA","red","green","blue","sector","tint1","tint2","tint3","_hslaToHSBA","hsla","_hslaToRGBA","zest","hzvToRGB","_rgbaToHSBA","rgba","chroma","_rgbaToHSLA","../core/core","30","constants","alpha","Color","color","_getAlpha","_getBlue","brightness","_getBrightness","Renderer","_renderer","_getGreen","_getHue","lerpColor","amt","l0","l1","l2","l3","fromArray","toArray","mode","_colorMode","maxes","_colorMaxes","RGB","levels","level","HSB","HSL","_getLightness","lerp","lightness","_getRed","saturation","_getSaturation","../core/constants","./p5.Color","31","color_conversion","renderer","vals","_array","_parseInputs","namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","WHITESPACE","INTEGER","DECIMAL","PERCENT","colorPatterns","HEX3","HEX6","RGB_PERCENT","RGBA_PERCENT","HSLA","HSBA","numArgs","results","idx","./color_conversion","32","background","Image","image","height","clear","colorMode","_setProperty","noFill","noStroke","33","canvas","w","stop","_doStroke","_doFill","_angleMode","DEGREES","radians","TWO_PI","HALF_PI","atan","ellipse","modeAdjust","_ellipseMode","isP3D","quad","rect","_rectMode","triangle","./canvas","./constants","./core","./error_helpers","34","ellipseMode","CORNER","CORNERS","RADIUS","CENTER","noSmooth","rectMode","smooth","strokeCap","cap","ROUND","SQUARE","PROJECT","strokeJoin","BEVEL","MITER","strokeWeight","35","arcModeAdjust","36","P2D","WEBGL","ARROW","CROSS","HAND","MOVE","TEXT","WAIT","QUARTER_PI","TAU","RADIANS","RIGHT","LEFT","TOP","BOTTOM","BASELINE","POINTS","LINES","LINE_STRIP","LINE_LOOP","TRIANGLES","TRIANGLE_FAN","TRIANGLE_STRIP","QUADS","QUAD_STRIP","CLOSE","OPEN","CHORD","PIE","AUTO","ALT","BACKSPACE","CONTROL","DELETE","DOWN_ARROW","ENTER","ESCAPE","LEFT_ARROW","OPTION","RETURN","RIGHT_ARROW","SHIFT","TAB","UP_ARROW","BLEND","ADD","DARKEST","LIGHTEST","DIFFERENCE","EXCLUSION","MULTIPLY","SCREEN","REPLACE","OVERLAY","HARD_LIGHT","SOFT_LIGHT","DODGE","BURN","THRESHOLD","GRAY","OPAQUE","INVERT","POSTERIZE","DILATE","ERODE","BLUR","NORMAL","ITALIC","BOLD","_DEFAULT_TEXT_FILL","_DEFAULT_LEADMULT","_CTX_MIDDLE","LINEAR","QUADRATIC","BEZIER","CURVE","_DEFAULT_STROKE","_DEFAULT_FILL","37","sketch","sync","_setupDone","_pixelDensity","ceil","devicePixelRatio","_userNode","_curElement","_elements","_requestAnimId","_preloadCount","_isGlobal","_loop","_styles","_defaultCanvasSize","_events","mousemove","mousedown","mouseup","dragend","dragover","click","mouseover","mouseout","keydown","keyup","keypress","touchstart","touchmove","touchend","resize","blur","wheel","_loadingScreenId","DeviceOrientationEvent","deviceorientation","DeviceMotionEvent","_isNodeWebkit","devicemotion","_start","getElementById","createCanvas","userPreload","preload","loadingScreen","style","body","_preloadMethods","_registeredPreloadMethods","_wrapPreload","_runIfPreloadsAreDone","_setup","_runFrames","_draw","_decrementPreload","fnName","_incrementPreload","canvases","getElementsByTagName","dataset","hidden","visibility","performance","time_since_last","_lastFrameTime","target_time_between_frames","_targetFrameRate","frameCount","redraw","_updateMouseCoords","_updateTouchCoords","_frameRate","requestAnimationFrame","_updateInterval","clearInterval","prop","cancelAnimationFrame","removeEventListener","elt","elt_ev","_registeredMethods","p2","friendlyBindGlobal","_createFriendlyGlobalFunctionBinder","focusHandler","blurHandler","registerMethod","disableFriendlyErrors","loadJSON","loadImage","loadStrings","loadXML","loadShape","loadTable","loadFont","loadModel","pre","registerPreloadMethod","fnString","globalObject","propsToForciblyOverwrite","print","enumerable","newValue","writable","./shim","38","bezierDetail","curveDetail","bezier","_validateParameters","bezierPoint","adjustedT","bezierTangent","curve","curveTightness","_curveTightness","curvePoint","t3","t2","f1","f2","f3","f4","curveTangent","39","getWindowWidth","innerWidth","documentElement","clientWidth","getWindowHeight","innerHeight","clientHeight","launchFullscreen","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","C","standardCursors","_windowPrint","newArgs","stringify","focused","hasFocus","cursor","coords","frameRate","fps","getFrameRate","setFrameRate","noCursor","displayWidth","displayHeight","windowWidth","windowHeight","_onresize","executeDefault","windowResized","fullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","pixelDensity","resizeCanvas","displayDensity","getURL","getURLPath","pathname","filter","getURLParams","re","search","40","typeMatches","defType","argType","parts","numberTypes","isNumeric","report","func","doFriendlyWelcome","friendlyWelcome","getType","typeColors","astrixBgColor","astrixTxtColor","welcomeBgColor","welcomeTextColor","defineMisusedAtTopLevelCode","uniqueNamesFound","getSymbols","misusedAtTopLevelCode","helpForMisusedAtTopLevelCode","some","symbol","FAQ_URL","class2type","PARAM_COUNT","EMPTY_VAR","WRONG_TYPE","FILE_LOAD","types","diff","tindex","errorCases","0","fileType","_friendlyFileLoadError","errorType","filePath","errorInfo","_helpForMisusedAtTopLevelCode","41","attachListener","fxn","Element","pInst","_pInst","offsetWidth","offsetHeight","parent","class","className","mousePressed","mouseWheel","mouseReleased","mouseClicked","mouseMoved","mouseOver","changed","input","mouseOut","touchStarted","touchMoved","touchEnded","dragOver","dragLeave","drop","makeLoader","theFile","p5file","File","result","FileReader","FileList","evt","files","dataTransfer","reader","readAsText","readAsDataURL","42","Graphics","RendererGL","Renderer2D","_applyDefaults","43","calculateOffset","currentLeft","currentTop","offsetParent","offsetLeft","offsetTop","isMainCanvas","_isMainCanvas","display","_textSize","_textLeading","_textFont","_textStyle","_textAscent","_textDescent","_imageMode","_tint","_strokeSet","_fillSet","rgb","hsb","hsl","textLeading","textSize","_applyTextProperties","textStyle","textAscent","_updateTextMetrics","textDescent","_isOpenType","block","container","overflow","verticalAlign","blockOffset","textOffset","ascent","descent","44","filters","styleEmpty","drawingContext","getContext","lineCap","save","setTransform","curFill","newFill","fillRect","restore","clearRect","img","sx","sy","sWidth","sHeight","dWidth","dHeight","cnv","MediaElement","loadPixels","_getTintedImageCanvas","drawImage","pixels","_toPixels","tmpCanvas","tmpCtx","createImageData","newPixels","g","putImageData","blendMode","globalCompositeOperation","blend","currBlend","copyArgs","copy","srcImage","sw","sh","dw","dh","_copyHelper","pd","imageData","getImageData","region","imgOrCol","updatePixels","_acuteArcToBezier","cos_alpha","cos","sin_alpha","sin","cot_alpha","phi","cos_phi","sin_phi","lambda","mu","ax","ay","bx","by","cx","cy","rx","ry","arcToDraw","curves","doFill","doStroke","kappa","ox","oy","xe","ye","xm","ym","translate","x3","y3","x4","y4","tl","tr","br","bl","hw","hh","arcTo","endShape","vertices","isCurve","isBezier","isQuadratic","isContour","shapeKind","closeShape","numVerts","POLYGON","_doFillStrokeClose","isVert","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","lineJoin","_getFill","_getStroke","beginShape","vertex","bezierVertex","curveVertex","applyMatrix","n00","n01","n02","n10","n11","n12","resetMatrix","rotate","shearX","angle","degrees","shearY","maxWidth","maxHeight","cars","jj","testLine","testWidth","words","totalHeight","baselineHacked","finalMaxHeight","Number","MAX_VALUE","textWidth","textAlign","textBaseline","_renderText","vAlign","vertical","maxY","_renderPath","strokeText","fillText","_textWidth","measureText","valign","horizontal","../image/filters","./p5.Renderer","45","defaultId","isDefault","_isdefaultGraphics","noRedraw","savedKey","noCanvas","createGraphics","../webgl/p5.RendererGL","./p5.Graphics","./p5.Renderer2D","46","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","load_date","mozNow","msNow","oNow","webkitNow","Uint8ClampedArray","47","exit","noLoop","loop","lastS","pushStyle","popStyle","_update","numberOfRedraws","userSetup","userDraw","callMethod","idxRedraw","48","popMatrix","printMatrix","pushMatrix","rotateX","rad","rotateY","rotateZ","z","Vector","49","contourVertices","isFirstContour","beginContour","kind","vert","endContour","quadraticVertex","_contourInited","_contourVertices","50","deviceOrientation","accelerationX","accelerationY","accelerationZ","pAccelerationX","pAccelerationY","pAccelerationZ","_updatePAccelerations","rotationX","rotationY","rotationZ","pRotationX","pRotationY","pRotationZ","pRotateDirectionX","pRotateDirectionY","pRotateDirectionZ","startAngleX","startAngleY","startAngleZ","rotateDirectionX","rotateDirectionY","rotateDirectionZ","_updatePRotations","turnAxis","move_threshold","shake_threshold","setMoveThreshold","setShakeThreshold","_ondeviceorientation","beta","gamma","_handleMotion","_ondevicemotion","acceleration","orientation","deviceMoved","deviceTurned","wRX","wPRX","wSAX","wRY","wPRY","wSAY","deviceShaken","accelerationChangeX","accelerationChangeY","51","downKeys","isKeyPressed","keyIsPressed","keyCode","_onkeydown","which","keyPressed","charCode","_onkeyup","keyReleased","_onkeypress","_lastKeyCodeTyped","keyTyped","_onblur","keyIsDown","52","getMousePos","getBoundingClientRect","left","top","winX","winY","_hasMouseInteracted","mouseX","mouseY","pmouseX","pmouseY","winMouseX","winMouseY","pwinMouseX","pwinMouseY","mouseButton","mouseIsPressed","isMousePressed","_updateNextMouseCoords","touches","touchX","touchY","winTouchX","winTouchY","mousePos","_setMouseButton","_onmousemove","_updateNextTouchCoords","mouseDragged","_onmousedown","_onmouseup","_ondragend","_ondragover","_onclick","_onwheel","deltaY","53","getTouchInfo","touch","changedTouches","identifier","_hasTouchInteracted","ptouchX","ptouchY","pwinTouchX","pwinTouchY","touchIsDown","touchInfo","_ontouchstart","_ontouchmove","_ontouchend","54","buildBlurKernel","radius","blurRadius","blurKernelSize","blurKernel","Int32Array","blurMult","bk","bki","bm","bmi","radiusi","blurARGB","Filters","numPackedPixels","argb","_getARGB","cr","cg","ca","read","ri","ymi","bk0","g2","yi","_setPixels","ImageData","al","_toImageData","_createImageData","_tmpCanvas","_tmpCtx","filterParam","newImageData","threshold","thresh","opaque","invert","posterize","levels1","rlevel","glevel","blevel","dilate","currRowIdx","maxRowIdx","colOrig","colOut","currLum","idxRight","idxLeft","idxUp","idxDown","colRight","colLeft","colUp","colDown","lumRight","lumLeft","lumUp","lumDown","currIdx","maxIdx","erode","55","frames","createImage","saveCanvas","filename","extension","HTMLCanvasElement","_checkFileExtension","_isSafari","aText","alert","toDataURL","mimeType","downloadMime","downloadFile","saveFrames","fName","ext","_duration","_fps","duration","constrain","makeFrame","_makeFrame","frameFactory","setInterval","_cnv","thisFrame","56","_sAssign","sVal","iVal","successCallback","failureCallback","pImg","decrementPreload","_getDecrementPreload","crossOrigin","videoWidth","actualW","actualH","videoHeight","tint","noTint","imageMode","../core/canvas","../core/error_helpers","./filters","57","isTexture","tempCanvas","mask","p5Image","scaleFactor","operation","58","../color/p5.Color","59","makeObject","row","escapeHelper","content","destroyClickedElement","opentype","onSuccess","onError","p5Font","newStyle","validFontTypes","fileNoPath","lastDotIdx","lastIndexOf","fileExt","createTextNode","createInput","createReader","loadBytes","errorCallback","req","sep","separatorSet","currentChar","state","PRE_TOKEN","MID_TOKEN","POST_TOKEN","POST_RECORD","QUOTE","CR","LF","currentRecord","recordBegin","escaped","tokenBegin","recordEnd","currentState","token","tokenEnd","columns","TableRow","addRow","parseXML","two","one","XML","addChild","setName","_setCont","textContent","_setAttributes","selectFolder","selectInput","httpGet","httpDo","httpPost","URL","webkitURL","_pWriters","beginRaw","beginRecord","createOutput","newPW","PrintWriter","millis","endRaw","endRecord","flush","writeFile","saveBytes","_filename","_options","saveJSON","saveStrings","saveTable","SoundFile","saveSound","saveJSONObject","saveJSONArray","saveStream","pWriter","saveXML","selectOutput","rows","col","getString","htmlEntry","dataToDownload","createObjectURL","fx","HTMLElement","opentype.js","60","removeRow","chunk","getRow","getRows","findRow","column","findRows","matchRow","regexp","matchRows","getColumn","clearRows","addColumn","title","getColumnCount","getRowCount","removeTokens","charArray","charAt","regex","removeColumn","cString","cNumber","tempR","chip","setNum","setString","getNum","getObject","headerColumn","cPos","tableObject","getArray","tableArray","61","separator","cTitle","floatVal","stringVal","62","attributes","getParent","hasChildren","listChildren","getChildren","param","getChild","find","ind","getAttributeCount","listAttributes","hasAttribute","getNumber","defaultValue","setAttribute","getContent","setContent","att","63","low","high","dist","z1","z2","sqrt","exp","mag","start1","stop1","start2","stop2","norm","sq","64","createVector","65","perlin","PERLIN_YWRAPB","PERLIN_YWRAP","PERLIN_ZWRAPB","PERLIN_ZWRAP","PERLIN_SIZE","perlin_octaves","perlin_amp_falloff","scaled_cosine","noise","rxf","ryf","n3","xi","zi","xf","yf","zf","ampl","of","noiseDetail","lod","falloff","noiseSeed","seed","lcg","setSeed","getSeed","rand","66","polarGeometry","sub","mult","div","magSq","dot","cross","limit","mSq","setMag","heading","atan2","radiansToDegrees","degreesToRadians","newHeading","array","fromAngle","random2D","random3D","vz","vx","vy","v1","v2","angleBetween","acos","vecT","./polargeometry","67","68","seeded","randomSeed","tmp","previous","randomGaussian","mean","sd","69","ratio","asin","angleMode","70","horizAlign","vertAlign","theLeading","theSize","theStyle","theText","71","textFont","theFont","72","pathToPoints","cmds","opts","parseOpts","sampleFactor","simplifyThreshold","pointAtLength","pts","simplify","num","collinear","at","splitPaths","paths","cmdToArr","defaults","thresholdAngle","areaTriangle","tmpPoint1","tmpPoint2","ab","bc","magA","magB","findDotsAtSegment","p1x","p1y","p2x","p2y","t1","t13","t12","mx","my","nx","ny","getPointAtSegmentLength","bezlen","getTatLen","istotal","path2curve","sp","subpaths","pathToAbsolute","pathArray","res","dots","pa","crz","catmullRom2bezier","kk","path2","X","Y","qx","qy","attrs2","processPath","pcom","tq","T","Q","a2c","q2c","l2c","fixArc","pp","pi","pcoms1","pcoms2","fixM","path1","pfirst","seg","seg2","seglen","seg2len","lac","sweep_flag","recursive","xy","_120","rx2","ry2","df","f2old","x2old","y2old","s1","s2","hx","hy","m1","m2","m3","m4","newres","crp","iLen","Tvalues","Cvalues","ct","xbase","base3","ybase","comb","ll","step","p1","p3","p4","cacheKey","cache","textBounds","alignment","baseline","minX","minY","maxX","_scale","gm","advance","_handleAlignment","textToPoints","txt","xoff","_getGlyphs","gpath","_getPath","_getPathData","decimals","_getSVG","pdata","pg","bounds","73","append","arrayCopy","srcPosition","dst","dstPosition","list0","list1","reverse","shorten","shuffle","bool","isView","rnd","rest","subset","74","float","int","radix","boolean","nn","char","unchar","hex","digits","unhex","75","doNf","neg","decimalInd","intPart","decPart","doNfc","dec","rem","addNfp","addNfs","reg","matchAll","matches","nf","typeOfFirst","nfc","nfp","nfRes","nfs","delim","splitTokens","sqo","sqc","76","day","getDate","hour","getHours","minute","getMinutes","month","getMonth","second","getSeconds","year","getFullYear","77","camera","perspective","fovy","aspect","near","far","uPMatrix","Matrix","identity","_curCamera","ortho","right","bottom","78","orbitControl","79","ambientLight","v3","gl","GL","shaderProgram","_getShader","useProgram","uAmbientColor","getUniformLocation","ambientLightCount","colors","uniform3f","uMaterialColor","uniform4f","uAmbientLightCount","uniform1i","directionalLight","uDirectionalColor","directionalLightCount","_x","_y","_z","uLightingDirection","uDirectionalLightCount","pointLight","uPointLightColor","pointLightCount","uPointLightLocation","uPointLightCount","80","parseObj","model","lines","loadedVerts","vt","vn","indexedVerts","tokens","texVertex","tri","face","vertexTokens","tokenInd","vertString","vertIndex","vertParts","uvs","vertexNormals","faces","computeNormals","Geometry","geometryInHash","createBuffers","drawBuffers","./p5.Geometry","81","normalMaterial","texture","textureData","_bind","tex","loadedmetadata","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","ambientMaterial","_applyColorBlend","uSpecular","specularMaterial","depthMask","enable","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","disable","82","detailX","detailY","Function","computeFaces","sliceCount","_getFaceNormal","faceId","vertId","vA","vB","vC","sinAlpha","normal","averageNormals","temp","averagePoleNormals","maxPosition","minPosition","center","longestDist","83","GLMAT_ARRAY_TYPE","Float32Array","mat3","mat4","inMatrix","copied","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","invert3x3","b21","transpose3x3","inverseTranspose","matrix","determinant","d00","d01","d02","d03","d04","d05","d06","d07","d08","d09","d10","d11","multMatrix","_dest","_src","axis","_a","sA","cA","tA","b12","b20","b22","lr","bt","../math/polargeometry","84","immediateMode","shapeMode","vertexPositions","vertexColors","vertexBuffer","createBuffer","colorBuffer","isImmediateDrawing","vertexColor","curFillColor","_bindImmediateBuffers","drawMode","drawArrays","_setDefaultCamera","shaderKey","_getCurShaderId","mHash","vertexPositionAttribute","getAttribLocation","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","vertexAttribPointer","FLOAT","vertexColorAttribute","_setMatrixUniforms","_getColorVertexShader","mId","materialInHash","_initShaders","85","flatten","reduce","vToNArray","item","hashCount","_initBufferDefaults","gId","gHash","normalBuffer","uvBuffer","indexBuffer","numberOfItems","STATIC_DRAW","vertexNormalAttribute","textureCoordAttribute","ELEMENT_ARRAY_BUFFER","Uint16Array","drawElements","UNSIGNED_SHORT","86","shader","uMVMatrixStack","RESOLUTION","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","_initContext","uMVMatrix","uNMatrix","curStrokeColor","pointSize","DEPTH_TEST","depthFunc","LEQUAL","viewport","drawingBufferWidth","drawingBufferHeight","er","_w","_h","_col","_r","_g","_b","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","fragId","isImmediateMode","_vertShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","_fragShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","_getLocation","uResolution","uniform1f","uPMatrixUniform","uMVMatrixUniform","uNMatrixUniform","samplerUniform","_setUniform1f","uniform","uniformMatrix4fv","uniformMatrix3fv","curShaderId","colorNormalized","_strokeCheck","../core/p5.Renderer","./p5.Matrix","./shader","87","plane","_plane","planeGeom","box","_box","cubeIndices","cubeIndex","octant","boxGeom","sphere","_sphere","theta","sphereGeom","_truncatedCone","bottomRadius","topRadius","topCap","bottomCap","yy","extra","vertsAroundEdge","slant","ringRadius","cylinder","cylinderGeom","cone","baseRadius","coneGeom","ellipsoid","radiusX","radiusY","radiusZ","_ellipsoid","ellipsoidGeom","torus","tubeRadius","_torus","torusGeom","_triangle","triGeom","_ellipse","centerX","centerY","ellipseGeom","_rect","rectGeom","_quad","quadGeom","coeff","88","immediateVert","vertexColorVert","vertexColorFrag","normalVert","normalFrag","basicFrag","lightVert","lightTextureFrag","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","run","Item","process","nextTick","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","getNodeAfter","insertLazyTreeChildAt","moveChild","moveDelimitedText","insertChildAt","closingComment","removeDelimitedText","openingComment","nextNode","startNode","replaceDelimitedText","stringText","nodeAfterComment","Danger","ReactMultiChildUpdateTypes","dangerouslyReplaceNodeWithMarkup","DOMChildrenOperations","processUpdates","updates","update","INSERT_MARKUP","afterNode","MOVE_EXISTING","fromNode","SET_MARKUP","TEXT_CONTENT","REMOVE_NODE","mathml","recomputePluginOrdering","EventPluginOrder","pluginName","namesToPlugins","pluginIndex","publishedEvents","eventTypes","eventName","publishEventForPlugin","eventNameDispatchConfigs","phaseName","phasedRegistrationName","publishRegistrationName","possibleRegistrationNames","InjectedEventPluginOrder","injectedNamesToPlugins","isOrderingDirty","getPluginModuleForEvent","_resetEventPlugins","isEndish","isMoveish","isStartish","executeDispatch","invokeGuardedCallbackWithCatch","invokeGuardedCallback","dispatchListeners","dispatchInstances","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","executeDirectDispatch","dispatchListener","dispatchInstance","hasDispatches","ComponentTree","TreeTraversal","injectComponentTree","Injected","injectTreeTraversal","isAncestor","getLowestCommonAncestor","argFrom","argTo","escapeRegex","escaperLookup","=",":","escapedString","unescape","unescapeRegex","unescaperLookup","=0","=2","keySubstring","KeyEscapeUtils","_assertSingleLink","inputProps","checkedLink","valueLink","_assertValueLink","onChange","_assertCheckedLink","getDeclarationErrorAddendum","ReactPropTypes","ReactPropTypeLocations","ReactPropTypesSecret","hasReadOnlyValue","checkbox","radio","submit","propTypes","componentName","readOnly","loggedTypeFailures","LinkedValueUtils","checkPropTypes","getValue","getChecked","executeOnChange","requestChange","ReactComponent","updater","refs","ReactNoopUpdateQueue","isReactComponent","setState","partialState","enqueueSetState","enqueueCallback","forceUpdate","enqueueForceUpdate","injected","ReactComponentEnvironment","replaceNodeWithMarkup","processChildrenUpdates","injectEnvironment","environment","isNative","funcToString","reIsNative","getKeyFromID","getIDFromKey","canUseCollections","itemMap","itemByKey","parentID","childIDs","isMounted","updateCount","addRoot","rootIDSet","rootByKey","removeRoot","getRegisteredIDs","getRootIDs","purgeDeep","describeComponentFrame","ownerName","lineNumber","getDisplayName","displayName","describeID","ReactComponentTreeHook","getElement","ownerID","getOwnerID","Map","Set","unmountedIDs","onSetChildren","nextChildIDs","nextChildID","nextChild","onBeforeMountComponent","onBeforeUpdateComponent","onMountComponent","isRoot","onUpdateComponent","onUnmountComponent","purgeUnmountedComponents","_preventPurging","getCurrentStackAddendum","topElement","info","currentOwner","_debugID","getStackAddendumByID","getParentID","getChildIDs","getSource","getText","getUpdateCount","caughtError","warnNoop","publicInstance","callerName","enqueueReplaceState","completeState","ReactPropTypeLocationNames","childContext","formatUnexpectedArgument","getInternalInstanceReadyForUpdate","ReactUpdateQueue","validateCallback","enqueueCallbackInternal","_pendingForceUpdate","_pendingStateQueue","_pendingReplaceState","enqueueElementInternal","nextContext","_pendingElement","MSApp","execUnsafeLocalFunction","arg0","arg1","arg2","arg3","getEventCharCode","modifierStateGetter","keyArg","syntheticEvent","keyProp","modifierKeyToProp","Alt","Control","Meta","Shift","correspondingUseElement","eventNameSuffix","capture","isSupported","useHasFeature","implementation","hasFeature","shouldUpdateReactComponent","prevEmpty","nextEmpty","prevType","nextType","getComponentKey","traverseAllChildrenImpl","nameSoFar","traverseContext","SEPARATOR","child","nextName","subtreeCount","nextNamePrefix","SUBSEPARATOR","iteratorFn","getIteratorFn","iterator","next","done","addendum","childrenString","traverseAllChildren","validateDOMNesting","is","shallowEqual","objA","objB","keysA","keysB","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","Promise","_45","_81","_65","_54","doResolve","safeThen","onFulfilled","onRejected","resolve","reject","Handler","deferred","_10","handleResolved","promise","finale","_97","_61","prefixKey","isUnitlessNumber","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridColumn","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","prefixes","shorthandPropertyExpansions","backgroundAttachment","backgroundColor","backgroundImage","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundPosition","border","borderWidth","borderStyle","borderColor","borderBottom","borderBottomWidth","borderBottomStyle","borderBottomColor","borderLeft","borderLeftWidth","borderLeftStyle","borderLeftColor","borderRight","borderRightWidth","borderRightStyle","borderRightColor","borderTop","borderTopWidth","borderTopStyle","borderTopColor","fontStyle","fontVariant","outline","outlineWidth","outlineStyle","outlineColor","CSSProperty","_callbacks","_contexts","contexts","checkpoint","rollback","isAttributeNameSafe","validatedAttributeNameCache","illegalAttributeNameCache","VALID_ATTRIBUTE_NAME_REGEX","shouldIgnoreValue","quoteAttributeValueForBrowser","DOMPropertyOperations","createMarkupForID","setAttributeForID","createMarkupForRoot","setAttributeForRoot","createMarkupForProperty","createMarkupForCustomAttribute","setValueForProperty","deleteValueForProperty","namespace","setAttributeNS","setValueForAttribute","removeAttribute","deleteValueForAttribute","escapeUserProvidedKey","userProvidedKeyEscapeRegex","ForEachBookKeeping","forEachFunction","forEachContext","forEachSingleChild","bookKeeping","forEachChildren","forEachFunc","MapBookKeeping","mapResult","keyPrefix","mapFunction","mapContext","mapSingleChildIntoContext","childKey","mappedChild","mapIntoWithKeyPrefixInternal","escapedPrefix","mapChildren","forEachSingleChildDummy","countChildren","ReactChildren","validateMethodOverride","isAlreadyDefined","specPolicy","ReactClassInterface","ReactClassMixin","SpecPolicy","OVERRIDE_BASE","DEFINE_MANY","DEFINE_MANY_MERGED","mixSpecIntoComponent","Constructor","spec","proto","autoBindPairs","__reactAutoBindPairs","MIXINS_KEY","RESERVED_SPEC_KEYS","mixins","isReactClassMethod","isFunction","shouldAutoBind","autobind","createMergedResultFunction","createChainedFunction","mixStaticSpecIntoComponent","statics","isReserved","isInherited","mergeIntoWithNoDuplicateKeys","bindAutoBindMethod","boundMethod","bindAutoBindMethods","autoBindKey","DEFINE_ONCE","injectedMixins","contextTypes","childContextTypes","getDefaultProps","getInitialState","getChildContext","render","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","updateComponent","replaceState","newState","ReactClassComponent","ReactClass","createClass","initialState","methodName","injectMixin","mixin","updateOptionsIfPendingUpdateAndMounted","_wrapperState","pendingUpdate","updateOptions","Boolean","multiple","propValue","selectedValue","_handleChange","didWarnValueDefaultValue","ReactDOMSelect","mountWrapper","initialValue","listeners","wasMultiple","getSelectValueContext","postUpdateWrapper","emptyComponentFactory","ReactEmptyComponentInjection","injectEmptyComponentFactory","ReactEmptyComponent","instantiate","createInternalComponent","genericComponentClass","createInstanceForText","textComponentClass","isTextComponent","tagToComponentClass","ReactHostComponentInjection","injectGenericComponentClass","componentClass","injectTextComponentClass","injectComponentClasses","componentClasses","ReactHostComponent","isInDocument","containsNode","ReactDOMSelection","focusNode","getActiveElement","ReactInputSelection","hasSelectionCapabilities","elem","contentEditable","getSelectionInformation","focusedElem","selectionRange","getSelection","restoreSelection","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","setSelection","selection","selectionStart","selectionEnd","createRange","parentElement","moveStart","moveEnd","getOffsets","createTextRange","collapse","select","setOffsets","firstDifferenceIndex","string1","string2","minLen","getReactRootElementInContainer","DOC_NODE_TYPE","internalGetID","mountComponentIntoNode","wrapperInstance","shouldReuseMarkup","wrappedElement","ReactDOMContainerInfo","_topLevelWrapper","ReactMount","_mountImageIntoNode","batchedMountComponentIntoNode","componentInstance","ReactDOMFeatureFlags","useCreateElement","unmountComponentFromNode","lastChild","hasNonRootReactChild","rootEl","isValidContainer","getHostRootInstanceInContainer","prevHostInstance","getTopLevelWrapperInContainer","_hostContainerInfo","ReactMarkupChecksum","instantiateReactComponent","ROOT_ATTR_NAME","instancesByReactRootID","topLevelRootCounter","TopLevelWrapper","rootID","_instancesByReactRootID","scrollMonitor","renderCallback","_updateRootComponent","prevComponent","_renderNewRootComponent","wrapperID","_instance","renderSubtreeIntoContainer","parentComponent","_renderSubtreeIntoContainer","nextWrappedElement","_processChildContext","prevWrappedElement","publicInst","updatedCallback","unmountComponentAtNode","reactRootElement","containerHasReactMarkup","containerHasNonRootReactChild","rootElement","canReuseMarkup","checksum","CHECKSUM_ATTR_NAME","rootMarkup","outerHTML","normalizedMarkup","diffIndex","difference","ReactNodeTypes","HOST","COMPOSITE","EMPTY","PropTypeError","createChainableTypeChecker","checkType","isRequired","propFullName","secret","ANONYMOUS","locationName","chainedCheckType","createPrimitiveTypeChecker","expectedType","propType","getPropType","preciseType","getPreciseType","createAnyTypeChecker","createArrayOfTypeChecker","typeChecker","createElementTypeChecker","createInstanceTypeChecker","expectedClass","expectedClassName","actualClassName","getClassName","createEnumTypeChecker","expectedValues","valuesString","createObjectOfTypeChecker","createUnionTypeChecker","arrayOfTypeCheckers","checker","createNodeChecker","createShapeTypeChecker","shapeTypes","every","isSymbol","number","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","shape","scrollPosition","canDefineProperty","getHostComponentFromComposite","_renderedNodeType","maybeIterable","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","getTextContentAccessor","contentKey","isInternalComponentType","shouldHaveDebugID","getNativeNode","ReactCompositeComponentWrapper","_mountIndex","_mountImage","ReactCompositeComponent","construct","_instantiateReactComponent","isTextInputElement","supportedInputTypes","date","datetime","datetime-local","email","password","tel","week","EventListener","listen","eventType","detachEvent","registerDefault","focus","activeElement","global","rawAsap","task","requestFlush","flushing","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","toggle","observer","BrowserMutationObserver","observe","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","intervalHandle","MutationObserver","WebKitMutationObserver","_interopRequireDefault","__esModule","default","_classCallCheck","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_p","_p2","_gravitron","_gravitron2","_otherSketch","_otherSketch2","App","_Component","getPrototypeOf","sketchList","gravitron","otherSketch","urlParam","queriedSketch","currentSketch","changeSketch","_this2","Component","_reactDom","_reactDom2","_App","_App2","Indicator","MIN_SIZE","growthRate","GROWTH_RATE","randomColor","colorPalette","MAX_SIZE","planet","Planet","planetArray","force","applyForce","velocity","mass","attract","otherPlanet","vectorBetween","G","direction","forceVector","centerPlanet","indicator","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","remaining","race","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","warn","_72","errStr","cls","RangeError","normalizeName","normalizeValue","iteratorFor","items","support","iterable","Headers","consumed","bodyUsed","fileReaderReady","readBlobAsArrayBuffer","readAsArrayBuffer","readBlobAsText","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","formData","_bodyFormData","searchParams","URLSearchParams","rejected","normalizeMethod","upcased","methods","Request","credentials","referrer","form","decodeURIComponent","getAllResponseHeaders","Response","bodyInit","ok","fetch","getAll","thisArg","clone","redirectStatuses","redirect","responseURL","ontimeout","polyfill","AutoFocusUtils","focusDOMComponent","isPresto","opera","isKeypressCommand","getCompositionEventType","compositionStart","compositionEnd","compositionUpdate","isFallbackCompositionStart","START_KEYCODE","isFallbackCompositionEnd","END_KEYCODES","getDataFromCustomEvent","extractCompositionEvent","fallbackData","canUseCompositionEvent","currentComposition","useFallbackCompositionData","getData","FallbackCompositionState","SyntheticCompositionEvent","customData","getNativeBeforeInputChars","SPACEBAR_CODE","hasSpaceKeypress","SPACEBAR_CHAR","getFallbackBeforeInputChars","extractBeforeInputEvent","canUseTextInputEvent","SyntheticInputEvent","beforeInput","onBeforeInput","onBeforeInputCapture","onCompositionEnd","onCompositionEndCapture","onCompositionStart","onCompositionStartCapture","onCompositionUpdate","onCompositionUpdateCapture","BeforeInputEventPlugin","dangerousStyleValue","hyphenateStyleName","memoizeStringOnly","processStyleName","hasShorthandPropertyBug","styleFloatAccessor","tempStyle","cssFloat","CSSPropertyOperations","createMarkupForStyles","styles","serialized","styleValue","setValueForStyles","expansion","individualStyleName","shouldUseChangeEvent","manualDispatchChangeEvent","change","activeElementInst","runEventInBatch","startWatchingForChangeEventIE8","stopWatchingForChangeEventIE8","getTargetInstForChangeEvent","handleEventsForChangeEventIE8","startWatchingForValueChange","activeElementValue","activeElementValueProp","getOwnPropertyDescriptor","newValueProp","handlePropertyChange","stopWatchingForValueChange","getTargetInstForInputEvent","handleEventsForInputEventIE","getTargetInstForInputEventIE","shouldUseClickEvent","getTargetInstForClickEvent","onChangeCapture","doesChangeEventBubble","isInputEventSupported","ChangeEventPlugin","getTargetInstFunc","handleEventFunc","targetNode","createNodesFromMarkup","oldChild","newChild","DefaultEventPluginOrder","ResponderEventPlugin","SimpleEventPlugin","TapEventPlugin","EnterLeaveEventPlugin","SelectEventPlugin","mouseEnter","onMouseEnter","mouseLeave","onMouseLeave","related","toNode","_root","_startText","_fallbackText","startValue","startLength","endValue","endLength","minEnd","sliceTail","HTMLDOMPropertyConfig","acceptCharset","accessKey","action","allowFullScreen","allowTransparency","alt","as","autoComplete","autoPlay","cellPadding","cellSpacing","charSet","challenge","cite","classID","cols","colSpan","contextMenu","controls","dateTime","defer","draggable","encType","formAction","formEncType","formMethod","formNoValidate","formTarget","frameBorder","hrefLang","httpEquiv","icon","inputMode","integrity","keyParams","keyType","label","lang","manifest","marginHeight","marginWidth","maxLength","media","mediaGroup","minLength","muted","nonce","noValidate","optimum","pattern","placeholder","playsInline","poster","profile","radioGroup","referrerPolicy","rel","required","reversed","role","rowSpan","sandbox","scoped","scrolling","seamless","sizes","span","spellCheck","srcDoc","srcLang","srcSet","summary","tabIndex","useMap","wmode","wrap","about","datatype","inlist","resource","typeof","vocab","autoCapitalize","autoCorrect","autoSave","itemProp","itemScope","itemType","itemID","itemRef","security","unselectable","ReactPureComponent","ReactDOMFactories","ReactVersion","onlyChild","__spread","React","Children","only","PureComponent","PropTypes","createMixin","DOM","instantiateChild","childInstances","selfDebugID","keyUnique","ReactChildReconciler","instantiateChildren","nestedChildNodes","updateChildren","prevChildren","nextChildren","mountImages","removedNodes","prevChild","nextChildInstance","nextChildMountImage","unmountChildren","renderedChildren","renderedChild","ReactDOMIDOperations","ReactComponentBrowserEnvironment","dangerouslyProcessChildrenUpdates","StatelessComponent","warnIfInvalidElement","shouldConstruct","isPureComponent","isPureReactComponent","checkReactTypeSpec","CompositeTypes","ImpureClass","PureClass","StatelessFunctional","nextMountID","ReactCompositeComponentMixin","_compositeType","_calledComponentWillUnmount","renderedElement","publicProps","publicContext","_processContext","updateQueue","getUpdateQueue","doConstruct","_constructComponent","unstable_handleError","performInitialMountWithErrorHandling","performInitialMount","_constructComponentWithoutOwner","_processPendingState","debugID","_renderValidatedComponent","_maskContext","maskedContext","contextName","currentContext","_checkContextTypes","typeSpecs","prevContext","prevParentElement","nextParentElement","prevUnmaskedContext","nextUnmaskedContext","willReceive","prevProps","nextProps","nextState","shouldUpdate","_performComponentUpdate","partial","unmaskedContext","prevState","hasComponentDidUpdate","_updateRenderedComponent","prevComponentInstance","prevRenderedElement","nextRenderedElement","oldHostNode","nextMarkup","_replaceNodeWithMarkup","prevInstance","_renderValidatedComponentWithoutOwnerOrContext","renderedComponent","attachRef","publicComponentInstance","detachRef","ReactDefaultInjection","findDOMNode","inject","ReactDOM","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","__REACT_DEVTOOLS_GLOBAL_HOOK__","Mount","Reconciler","ReactDOMButton","assertValidProps","voidElementTags","_tag","dangerouslySetInnerHTML","HTML","enqueuePutListener","ReactServerRenderingTransaction","containerInfo","isDocumentFragment","_node","DOC_FRAGMENT_TYPE","_ownerDocument","listenerToPut","inputPostMount","ReactDOMInput","postMountWrapper","textareaPostMount","ReactDOMTextarea","optionPostMount","ReactDOMOption","trapBubbledEventsLocal","getNode","mediaEvents","postUpdateSelectWrapper","validateDangerousTag","validatedTagCache","VALID_TAG_REGEX","isCustomComponent","ReactDOMComponent","_namespaceURI","_previousStyle","_previousStyleCopy","ReactMultiChild","CONTENT_TYPES","STYLE","__html","suppressContentEditableWarning","omittedCloseTags","area","base","embed","hr","keygen","link","track","wbr","newlineEatingTags","listing","textarea","menuitem","globalIdCounter","_idCounter","parentTag","mountImage","createElementNS","_updateDOMProperties","lazyTree","_createInitialChildren","tagOpen","_createOpenTagMarkupAndPutListeners","tagContent","_createContentMarkup","autoFocus","propKey","renderToStaticMarkup","contentToUse","childrenToUse","mountChildren","lastProps","_updateDOMChildren","updateWrapper","styleUpdates","lastStyle","nextProp","lastProp","lastContent","nextContent","lastHtml","nextHtml","lastChildren","lastHasContentOrHtml","nextHasContentOrHtml","updateTextContent","updateMarkup","topLevelWrapper","ReactDOMEmptyComponent","domID","createComment","createDOMFactory","abbr","address","article","aside","audio","bdi","bdo","big","blockquote","caption","colgroup","datalist","dd","del","details","dfn","dialog","dl","dt","em","fieldset","figcaption","figure","footer","h1","h2","h3","h4","h5","h6","hgroup","iframe","ins","kbd","legend","main","mark","menu","meter","nav","noscript","ol","optgroup","option","output","picture","progress","q","rp","rt","ruby","samp","section","small","strong","sup","tbody","td","tfoot","th","thead","ul","var","video","circle","clipPath","defs","linearGradient","polygon","polyline","radialGradient","tspan","forceUpdateIfMounted","rootNode","queryRoot","group","querySelectorAll","otherNode","otherInstance","defaultChecked","initialChecked","flattenChildren","didWarnInvalidOptionChildren","selectValue","selectParent","isCollapsed","anchorNode","anchorOffset","focusOffset","getIEOffsets","selectedRange","selectedLength","fromStart","duplicate","moveToElementText","setEndPoint","getModernOffsets","currentRange","getRangeAt","startContainer","endContainer","isSelectionCollapsed","rangeLength","tempRange","cloneRange","selectNodeContents","setEnd","isTempRangeCollapsed","detectionRange","setStart","isBackward","collapsed","setIEOffsets","setModernOffsets","startMarker","getNodeForCharacterOffset","endMarker","removeAllRanges","addRange","useIEOffsets","ReactDOMTextComponent","_stringText","_closingComment","_commentNodes","openingValue","closingValue","createDocumentFragment","escapedText","nextText","nextStringText","commentNodes","hostNode","instA","instB","depthA","tempA","depthB","tempB","common","pathFrom","pathTo","ReactDefaultBatchingStrategyTransaction","RESET_BATCHED_UPDATES","ReactDefaultBatchingStrategy","FLUSH_BATCHED_UPDATES","alreadyBatchingUpdates","alreadyInjected","ReactInjection","EventEmitter","ReactDOMTreeTraversal","HostComponent","SVGDOMPropertyConfig","EmptyComponent","Updates","runEventQueueInBatch","findParent","TopLevelCallbackBookKeeping","ancestors","handleTopLevelImpl","ancestor","_handleTopLevel","scrollValueMonitor","getUnboundedScrollPosition","_enabled","dispatchEvent","adler32","TAG_END","COMMENT_START","addChecksumToMarkup","existingChecksum","markupChecksum","makeInsertMarkup","toIndex","fromIndex","makeMove","makeRemove","makeSetMarkup","makeTextContent","processQueue","_reconcilerInstantiateChildren","nestedChildren","_reconcilerUpdateChildren","nextNestedChildrenElements","_updateChildren","nextIndex","nextMountIndex","lastPlacedNode","_mountChildAtIndex","_unmountChild","createChild","ReactOwner","isValidOwner","addComponentAsRefTo","removeComponentAsRefFrom","ownerPublicInstance","ComponentDummy","reactMountReady","SELECTION_RESTORATION","EVENT_SUPPRESSION","currentlyEnabled","previouslyEnabled","ON_DOM_READY_QUEUEING","ReactServerUpdateQueue","noopCallbackQueue","NS","xlink","ATTRS","accentHeight","accumulate","additive","alignmentBaseline","allowReorder","alphabetic","amplitude","arabicForm","attributeType","autoReverse","azimuth","baseFrequency","baseProfile","baselineShift","bbox","calcMode","capHeight","clip","clipRule","clipPathUnits","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","contentScriptType","contentStyleType","decelerate","diffuseConstant","divisor","dominantBaseline","dur","edgeMode","elevation","enableBackground","exponent","externalResourcesRequired","fillRule","filterRes","filterUnits","floodColor","focusable","fontSizeAdjust","fontStretch","fy","g1","glyphOrientationHorizontal","glyphOrientationVertical","glyphRef","gradientTransform","gradientUnits","hanging","horizAdvX","horizOriginX","ideographic","imageRendering","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","lengthAdjust","letterSpacing","lightingColor","limitingConeAngle","local","markerEnd","markerMid","markerStart","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","numOctaves","operator","orient","origin","overlinePosition","overlineThickness","paintOrder","panose1","pathLength","patternContentUnits","patternTransform","patternUnits","pointerEvents","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","refX","refY","renderingIntent","repeatDur","requiredExtensions","requiredFeatures","restart","shapeRendering","slope","spacing","specularConstant","specularExponent","speed","spreadMethod","stdDeviation","stemh","stemv","stitchTiles","stopColor","strikethroughPosition","strikethroughThickness","strokeLinecap","strokeLinejoin","surfaceScale","systemLanguage","tableValues","targetX","targetY","textAnchor","textDecoration","textRendering","textLength","u1","u2","unicodeBidi","unicodeRange","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","viewBox","viewTarget","widths","wordSpacing","writingMode","xHeight","xChannelSelector","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlns","xmlnsXlink","xmlLang","xmlSpace","yChannelSelector","zoomAndPan","boundingTop","boundingLeft","constructSelectEvent","mouseDown","currentSelection","lastSelection","skipSelectionChangeEvent","onSelect","onSelectCapture","hasListener","ON_SELECT_KEY","SyntheticAnimationEvent","SyntheticClipboardEvent","SyntheticFocusEvent","SyntheticKeyboardEvent","SyntheticDragEvent","SyntheticTouchEvent","SyntheticTransitionEvent","SyntheticWheelEvent","onAbort","onAbortCapture","animationEnd","onAnimationEnd","onAnimationEndCapture","animationIteration","onAnimationIteration","onAnimationIterationCapture","animationStart","onAnimationStart","onAnimationStartCapture","onBlur","onBlurCapture","canPlay","onCanPlay","onCanPlayCapture","canPlayThrough","onCanPlayThrough","onCanPlayThroughCapture","onContextMenu","onContextMenuCapture","onCopy","onCopyCapture","cut","onCut","onCutCapture","doubleClick","drag","onDrag","onDragCapture","dragEnd","onDragEnd","onDragEndCapture","dragEnter","onDragEnter","onDragEnterCapture","dragExit","onDragExit","onDragExitCapture","onDragLeave","onDragLeaveCapture","onDragOver","onDragOverCapture","dragStart","onDragStart","onDragStartCapture","onDrop","onDropCapture","durationChange","onDurationChange","onDurationChangeCapture","emptied","onEmptied","onEmptiedCapture","encrypted","onEncrypted","onEncryptedCapture","ended","onEnded","onEndedCapture","onErrorCapture","onFocus","onFocusCapture","onInput","onInputCapture","invalid","onInvalid","onInvalidCapture","keyDown","onKeyDown","onKeyDownCapture","keyPress","onKeyPress","onKeyPressCapture","keyUp","onKeyUp","onKeyUpCapture","onLoad","onLoadCapture","loadedData","onLoadedData","onLoadedDataCapture","loadedMetadata","onLoadedMetadata","onLoadedMetadataCapture","loadStart","onLoadStart","onLoadStartCapture","mouseMove","onMouseOut","onMouseOutCapture","onMouseOver","onMouseOverCapture","mouseUp","paste","onPaste","onPasteCapture","pause","onPause","onPauseCapture","play","onPlay","onPlayCapture","playing","onPlaying","onPlayingCapture","onProgress","onProgressCapture","rateChange","onRateChange","onRateChangeCapture","onReset","onResetCapture","scroll","onScroll","onScrollCapture","seeked","onSeeked","onSeekedCapture","seeking","onSeeking","onSeekingCapture","stalled","onStalled","onStalledCapture","onSubmit","onSubmitCapture","suspend","onSuspend","onSuspendCapture","timeUpdate","onTimeUpdate","onTimeUpdateCapture","touchCancel","onTouchCancel","onTouchCancelCapture","touchEnd","onTouchEnd","onTouchEndCapture","touchMove","onTouchMove","onTouchMoveCapture","touchStart","onTouchStart","onTouchStartCapture","transitionEnd","onTransitionEnd","onTransitionEndCapture","volumeChange","onVolumeChange","onVolumeChangeCapture","waiting","onWaiting","onWaitingCapture","onWheel","onWheelCapture","topLevelEventsToDispatchConfig","ON_CLICK_KEY","onClickListeners","EventConstructor","AnimationEventInterface","animationName","elapsedTime","pseudoElement","ClipboardEventInterface","clipboardData","CompositionEventInterface","DragEventInterface","FocusEventInterface","InputEventInterface","getEventKey","KeyboardEventInterface","repeat","locale","TouchEventInterface","targetTouches","TransitionEventInterface","WheelEventInterface","deltaX","wheelDeltaX","wheelDeltaY","wheelDelta","deltaZ","deltaMode","MOD","typeSpecName","isEmpty","isNonNumeric","componentOrElement","flattenSingleChildIntoContext","normalizeKey","translateToKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","getLeafNode","getSiblingNode","nodeStart","nodeEnd","makePrefixMap","styleProp","prefixedEventNames","vendorPrefixes","prefixMap","animationend","animationiteration","animationstart","transitionend","animation","transition","camelize","_hyphenPattern","_","character","camelizeStyleName","msPattern","outerNode","innerNode","isTextNode","contains","compareDocumentPosition","callee","hasArrayNature","createArrayFromMixed","getNodeName","nodeNameMatch","nodeNamePattern","handleScript","dummyNode","getMarkupWrap","wrapDepth","scripts","nodes","childNodes","markupWrap","shouldWrap","selectWrap","tableWrap","trWrap","svgWrap","svgElements","scrollable","pageXOffset","scrollLeft","pageYOffset","scrollTop","hyphenate","_uppercasePattern","Node"],"mappings":"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AAI,gBACAnrB,EAAA,EAAmBA,EAAA+qB,EAAAI,eAAyBnrB,IAC5CW,KAAAsqB,MAAAjrB,GAAAR,EAAA0rB,cAAAlrB,EAAA+qB,EAAAK,eAAAprB,GAGA,MACA,QACAW,KAAAsqB,UAaA,QAAAI,GAAAb,GAKA,OAJAc,GACAC,EAAAf,EAAAgB,OAAAd,KAAAa,cACAE,EAAAxrB,OAAAqD,KAAAioB,GAEAvrB,EAAA,EAAmBA,EAAAyrB,EAAA3pB,OAAsB9B,GAAA,GACzC,GAAAF,GAAA2rB,EAAAzrB,GACA0rB,EAAAH,EAAAzrB,EACAwrB,GAAAd,EAAAmB,OAAA5K,IAAA2K,GACAJ,EAAAM,WAAAC,SAAA/rB,IAGA,IAAAE,EAAA,EAAeA,EAAAwqB,EAAAmB,OAAA7pB,OAAwB9B,GAAA,EACvCsrB,EAAAd,EAAAmB,OAAA5K,IAAA/gB,GACAwqB,EAAAsB,YACAR,EAAA9pB,KAAAgpB,EAAAsB,YAAAjB,QAAA7qB,GAEAsrB,EAAA9pB,KAAAgpB,EAAAuB,WAAAC,iBAAAhsB,GAzNA,GAAAisB,IACA,+FACA,gGACA,gGACA,4FACA,gGACA,4FACA,mGACA,4FACA,sGACA,mGACA,mGACA,6FACA,mGACA,mGACA,gGACA,+FACA,iGACA,4FACA,sGACA,iGACA,iGACA,kGACA,iGACA,uGACA,sGACA,uGACA,yFACA,kGACA,mGACA,mGACA,+FACA,mGACA,sGACA,mGACA,0GACA,uGACA,gGACA,8FACA,uGACA,uGACA,sGACA,wGACA,mGAEAC,GACA,oFACA,iGACA,gGACA,gGACA,4FACA,gGACA,4FACA,4FACA,8EACA,4FACA,+FACA,qGACA,oGACA,+FACA,wFACA,uFACA,qCAEAC,GACA,oFACA,2FACA,yGACA,gGACA,mGACA,kGACA,mGACA,gGACA,qGACA,mGACA,mGACA,kGACA,iFACA,iGACA,sGACA,+FACA,sGACA,4FACA,wGACA,4FACA,8FACA,uGACA,4FACA,yFACA,sGACA,iFAEAjB,GACA,iGACA,uGACA,iGACA,8FACA,qFACA,+FACA,wFACA,2FACA,kGACA,iGACA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OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,MAAA9D,IAAA,QACA8D,MAAA,KAAA9D,IAAA,OACA8D,MAAA,MAAA9D,IAAA,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,SAAA,YACA90F,OAAA,EACA+0F,UAAA,YACAC,YAAA,cACAC,WAAA,cACApoC,aAAA,gBACAqoC,UAAA,EACA5oI,WAAA,cACA1J,SAAA,YACAuyI,eAAA,mBACAC,YAAA,eACApmC,UAAA,aACAC,YAAA,eACA/C,WAAA,cACAr3H,OAAA,EACA4C,KAAA,EACAqyF,GAAA,EACAurE,GAAA,EACAC,GAAA,EACAr3E,GAAA,EACArkD,UAAA,aACA27H,2BAAA,+BACAC,yBAAA,6BACAC,SAAA,WACAC,kBAAA,oBACAC,cAAA,gBACAC,QAAA,EACAC,UAAA,cACAC,aAAA,iBACAC,YAAA,EACAC,eAAA,kBACAC,GAAA,EACAC,IAAA,EACAC,UAAA,EACA1jI,EAAA,EACA2jI,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,aAAA,eACAC,iBAAA,mBACA5zI,QAAA,EACA6zI,UAAA,YACAC,WAAA,aACAC,SAAA,WACAC,aAAA,eACAC,cAAA,iBACAC,cAAA,iBACAC,kBAAA,oBACAC,MAAA,EACAC,UAAA,aACAC,UAAA,aACAC,YAAA,eACAC,aAAA,eACAC,YAAA,cACAC,YAAA,cACA1zE,KAAA,EACA2zE,iBAAA,mBACAC,UAAA,YACAC,aAAA,EACAz2G,KAAA,EACA02G,WAAA,aACA7rI,OAAA,EACAugG,QAAA,EACAurC,SAAA,EACAtrC,MAAA,EACAurC,OAAA,EACArgF,YAAA,EACAsgF,OAAA,EACApwF,SAAA,EACAqwF,iBAAA,oBACAC,kBAAA,qBACAC,WAAA,cACAC,QAAA,WACAC,WAAA,aACAC,oBAAA,sBACAC,iBAAA,mBACAC,aAAA,eACAC,cAAA,iBACA9wI,OAAA,EACA+wI,UAAA,YACAC,UAAA,YACAC,UAAA,YACAC,cAAA,gBACAC,oBAAA,sBACAC,eAAA,iBACA97I,EAAA,EACA2/D,OAAA,EACAo8E,KAAA,OACAC,KAAA,OACAC,gBAAA,mBACAr6H,YAAA,cACAs6H,UAAA,YACAC,mBAAA,qBACAC,iBAAA,mBACAC,QAAA,EACAz0F,OAAA,EACAiL,OAAA,EACAxD,GA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","file":"static/js/main.f02dc7da.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/site/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(89);\n\tmodule.exports = __webpack_require__(92);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  if (false) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  }\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule reactProdInvariant\n\t * \n\t */\n\t'use strict';\n\t\n\t/**\n\t * WARNING: DO NOT manually require this module.\n\t * This is a replacement for `invariant(...)` used by the error code system\n\t * and will _only_ be required by the corresponding babel pass.\n\t * It always throws.\n\t */\n\t\n\tfunction reactProdInvariant(code) {\n\t  var argCount = arguments.length - 1;\n\t\n\t  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\t\n\t  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n\t    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n\t  }\n\t\n\t  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\t\n\t  var error = new Error(message);\n\t  error.name = 'Invariant Violation';\n\t  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\t\n\t  throw error;\n\t}\n\t\n\tmodule.exports = reactProdInvariant;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\t\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\t\n\tvar warning = emptyFunction;\n\t\n\tif (false) {\n\t  (function () {\n\t    var printWarning = function printWarning(format) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      var argIndex = 0;\n\t      var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      });\n\t      if (typeof console !== 'undefined') {\n\t        console.error(message);\n\t      }\n\t      try {\n\t        // --- Welcome to debugging React ---\n\t        // This error was thrown as a convenience so that you can use this stack\n\t        // to find the callsite that caused this warning to fire.\n\t        throw new Error(message);\n\t      } catch (x) {}\n\t    };\n\t\n\t    warning = function warning(condition, format) {\n\t      if (format === undefined) {\n\t        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t      }\n\t\n\t      if (format.indexOf('Failed Composite propType: ') === 0) {\n\t        return; // Ignore CompositeComponent proptype check.\n\t      }\n\t\n\t      if (!condition) {\n\t        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t          args[_key2 - 2] = arguments[_key2];\n\t        }\n\t\n\t        printWarning.apply(undefined, [format].concat(args));\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\tmodule.exports = warning;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (Object.getOwnPropertySymbols) {\n\t\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMComponentTree\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\tvar ReactDOMComponentFlags = __webpack_require__(63);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\n\tvar Flags = ReactDOMComponentFlags;\n\t\n\tvar internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);\n\t\n\t/**\n\t * Drill down (through composites and empty components) until we get a host or\n\t * host text component.\n\t *\n\t * This is pretty polymorphic but unavoidable with the current structure we have\n\t * for `_renderedChildren`.\n\t */\n\tfunction getRenderedHostOrTextFromComponent(component) {\n\t  var rendered;\n\t  while (rendered = component._renderedComponent) {\n\t    component = rendered;\n\t  }\n\t  return component;\n\t}\n\t\n\t/**\n\t * Populate `_hostNode` on the rendered host/text component with the given\n\t * DOM node. The passed `inst` can be a composite.\n\t */\n\tfunction precacheNode(inst, node) {\n\t  var hostInst = getRenderedHostOrTextFromComponent(inst);\n\t  hostInst._hostNode = node;\n\t  node[internalInstanceKey] = hostInst;\n\t}\n\t\n\tfunction uncacheNode(inst) {\n\t  var node = inst._hostNode;\n\t  if (node) {\n\t    delete node[internalInstanceKey];\n\t    inst._hostNode = null;\n\t  }\n\t}\n\t\n\t/**\n\t * Populate `_hostNode` on each child of `inst`, assuming that the children\n\t * match up with the DOM (element) children of `node`.\n\t *\n\t * We cache entire levels at once to avoid an n^2 problem where we access the\n\t * children of a node sequentially and have to walk from the start to our target\n\t * node every time.\n\t *\n\t * Since we update `_renderedChildren` and the actual DOM at (slightly)\n\t * different times, we could race here and see a newer `_renderedChildren` than\n\t * the DOM nodes we see. To avoid this, ReactMultiChild calls\n\t * `prepareToManageChildren` before we change `_renderedChildren`, at which\n\t * time the container's child nodes are always cached (until it unmounts).\n\t */\n\tfunction precacheChildNodes(inst, node) {\n\t  if (inst._flags & Flags.hasCachedChildNodes) {\n\t    return;\n\t  }\n\t  var children = inst._renderedChildren;\n\t  var childNode = node.firstChild;\n\t  outer: for (var name in children) {\n\t    if (!children.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t    var childInst = children[name];\n\t    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;\n\t    if (childID === 0) {\n\t      // We're currently unmounting this child in ReactMultiChild; skip it.\n\t      continue;\n\t    }\n\t    // We assume the child nodes are in the same order as the child instances.\n\t    for (; childNode !== null; childNode = childNode.nextSibling) {\n\t      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {\n\t        precacheNode(childInst, childNode);\n\t        continue outer;\n\t      }\n\t    }\n\t    // We reached the end of the DOM children without finding an ID match.\n\t     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;\n\t  }\n\t  inst._flags |= Flags.hasCachedChildNodes;\n\t}\n\t\n\t/**\n\t * Given a DOM node, return the closest ReactDOMComponent or\n\t * ReactDOMTextComponent instance ancestor.\n\t */\n\tfunction getClosestInstanceFromNode(node) {\n\t  if (node[internalInstanceKey]) {\n\t    return node[internalInstanceKey];\n\t  }\n\t\n\t  // Walk up the tree until we find an ancestor whose instance we have cached.\n\t  var parents = [];\n\t  while (!node[internalInstanceKey]) {\n\t    parents.push(node);\n\t    if (node.parentNode) {\n\t      node = node.parentNode;\n\t    } else {\n\t      // Top of the tree. This node must not be part of a React tree (or is\n\t      // unmounted, potentially).\n\t      return null;\n\t    }\n\t  }\n\t\n\t  var closest;\n\t  var inst;\n\t  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {\n\t    closest = inst;\n\t    if (parents.length) {\n\t      precacheChildNodes(inst, node);\n\t    }\n\t  }\n\t\n\t  return closest;\n\t}\n\t\n\t/**\n\t * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n\t * instance, or null if the node was not rendered by this React.\n\t */\n\tfunction getInstanceFromNode(node) {\n\t  var inst = getClosestInstanceFromNode(node);\n\t  if (inst != null && inst._hostNode === node) {\n\t    return inst;\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n\t * DOM node.\n\t */\n\tfunction getNodeFromInstance(inst) {\n\t  // Without this first invariant, passing a non-DOM-component triggers the next\n\t  // invariant for a missing parent, which is super confusing.\n\t  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\t\n\t  if (inst._hostNode) {\n\t    return inst._hostNode;\n\t  }\n\t\n\t  // Walk up the tree until we find an ancestor whose DOM node we have cached.\n\t  var parents = [];\n\t  while (!inst._hostNode) {\n\t    parents.push(inst);\n\t    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;\n\t    inst = inst._hostParent;\n\t  }\n\t\n\t  // Now parents contains each ancestor that does *not* have a cached native\n\t  // node, and `inst` is the deepest ancestor that does.\n\t  for (; parents.length; inst = parents.pop()) {\n\t    precacheChildNodes(inst, inst._hostNode);\n\t  }\n\t\n\t  return inst._hostNode;\n\t}\n\t\n\tvar ReactDOMComponentTree = {\n\t  getClosestInstanceFromNode: getClosestInstanceFromNode,\n\t  getInstanceFromNode: getInstanceFromNode,\n\t  getNodeFromInstance: getNodeFromInstance,\n\t  precacheChildNodes: precacheChildNodes,\n\t  precacheNode: precacheNode,\n\t  uncacheNode: uncacheNode\n\t};\n\t\n\tmodule.exports = ReactDOMComponentTree;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\t\n\t/**\n\t * Simple, lightweight module assisting with the detection and context of\n\t * Worker. Helps avoid circular dependencies and allows code to reason about\n\t * whether or not they are in a Worker, even if they never include the main\n\t * `ReactWorker` dependency.\n\t */\n\tvar ExecutionEnvironment = {\n\t\n\t  canUseDOM: canUseDOM,\n\t\n\t  canUseWorkers: typeof Worker !== 'undefined',\n\t\n\t  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\t\n\t  canUseViewport: canUseDOM && !!window.screen,\n\t\n\t  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\t\n\t};\n\t\n\tmodule.exports = ExecutionEnvironment;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactInstrumentation\n\t */\n\t\n\t'use strict';\n\t\n\tvar debugTool = null;\n\t\n\tif (false) {\n\t  var ReactDebugTool = require('./ReactDebugTool');\n\t  debugTool = ReactDebugTool;\n\t}\n\t\n\tmodule.exports = { debugTool: debugTool };\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactElement\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(14);\n\t\n\tvar warning = __webpack_require__(3);\n\tvar canDefineProperty = __webpack_require__(76);\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t// The Symbol used to tag the ReactElement type. If there is no native Symbol\n\t// nor polyfill, then a plain number is used for performance.\n\tvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\t\n\tvar RESERVED_PROPS = {\n\t  key: true,\n\t  ref: true,\n\t  __self: true,\n\t  __source: true\n\t};\n\t\n\tvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\t\n\tfunction hasValidRef(config) {\n\t  if (false) {\n\t    if (hasOwnProperty.call(config, 'ref')) {\n\t      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\t      if (getter && getter.isReactWarning) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return config.ref !== undefined;\n\t}\n\t\n\tfunction hasValidKey(config) {\n\t  if (false) {\n\t    if (hasOwnProperty.call(config, 'key')) {\n\t      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\t      if (getter && getter.isReactWarning) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return config.key !== undefined;\n\t}\n\t\n\tfunction defineKeyPropWarningGetter(props, displayName) {\n\t  var warnAboutAccessingKey = function () {\n\t    if (!specialPropKeyWarningShown) {\n\t      specialPropKeyWarningShown = true;\n\t       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n\t    }\n\t  };\n\t  warnAboutAccessingKey.isReactWarning = true;\n\t  Object.defineProperty(props, 'key', {\n\t    get: warnAboutAccessingKey,\n\t    configurable: true\n\t  });\n\t}\n\t\n\tfunction defineRefPropWarningGetter(props, displayName) {\n\t  var warnAboutAccessingRef = function () {\n\t    if (!specialPropRefWarningShown) {\n\t      specialPropRefWarningShown = true;\n\t       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n\t    }\n\t  };\n\t  warnAboutAccessingRef.isReactWarning = true;\n\t  Object.defineProperty(props, 'ref', {\n\t    get: warnAboutAccessingRef,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Factory method to create a new React element. This no longer adheres to\n\t * the class pattern, so do not use new to call it. Also, no instanceof check\n\t * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n\t * if something is a React Element.\n\t *\n\t * @param {*} type\n\t * @param {*} key\n\t * @param {string|object} ref\n\t * @param {*} self A *temporary* helper to detect places where `this` is\n\t * different from the `owner` when React.createElement is called, so that we\n\t * can warn. We want to get rid of owner and replace string `ref`s with arrow\n\t * functions, and as long as `this` and owner are the same, there will be no\n\t * change in behavior.\n\t * @param {*} source An annotation object (added by a transpiler or otherwise)\n\t * indicating filename, line number, and/or other information.\n\t * @param {*} owner\n\t * @param {*} props\n\t * @internal\n\t */\n\tvar ReactElement = function (type, key, ref, self, source, owner, props) {\n\t  var element = {\n\t    // This tag allow us to uniquely identify this as a React Element\n\t    $$typeof: REACT_ELEMENT_TYPE,\n\t\n\t    // Built-in properties that belong on the element\n\t    type: type,\n\t    key: key,\n\t    ref: ref,\n\t    props: props,\n\t\n\t    // Record the component responsible for creating this element.\n\t    _owner: owner\n\t  };\n\t\n\t  if (false) {\n\t    // The validation flag is currently mutative. We put it on\n\t    // an external backing store so that we can freeze the whole object.\n\t    // This can be replaced with a WeakMap once they are implemented in\n\t    // commonly used development environments.\n\t    element._store = {};\n\t    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;\n\t\n\t    // To make comparing ReactElements easier for testing purposes, we make\n\t    // the validation flag non-enumerable (where possible, which should\n\t    // include every environment we run tests in), so the test framework\n\t    // ignores it.\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(element._store, 'validated', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: true,\n\t        value: false\n\t      });\n\t      // self and source are DEV only properties.\n\t      Object.defineProperty(element, '_self', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: self\n\t      });\n\t      Object.defineProperty(element, '_shadowChildren', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: shadowChildren\n\t      });\n\t      // Two elements created in two different places should be considered\n\t      // equal for testing purposes and therefore we hide it from enumeration.\n\t      Object.defineProperty(element, '_source', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: source\n\t      });\n\t    } else {\n\t      element._store.validated = false;\n\t      element._self = self;\n\t      element._shadowChildren = shadowChildren;\n\t      element._source = source;\n\t    }\n\t    if (Object.freeze) {\n\t      Object.freeze(element.props);\n\t      Object.freeze(element);\n\t    }\n\t  }\n\t\n\t  return element;\n\t};\n\t\n\t/**\n\t * Create and return a new ReactElement of the given type.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n\t */\n\tReactElement.createElement = function (type, config, children) {\n\t  var propName;\n\t\n\t  // Reserved names are extracted\n\t  var props = {};\n\t\n\t  var key = null;\n\t  var ref = null;\n\t  var self = null;\n\t  var source = null;\n\t\n\t  if (config != null) {\n\t    if (hasValidRef(config)) {\n\t      ref = config.ref;\n\t    }\n\t    if (hasValidKey(config)) {\n\t      key = '' + config.key;\n\t    }\n\t\n\t    self = config.__self === undefined ? null : config.__self;\n\t    source = config.__source === undefined ? null : config.__source;\n\t    // Remaining properties are added to a new props object\n\t    for (propName in config) {\n\t      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        props[propName] = config[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  // Resolve default props\n\t  if (type && type.defaultProps) {\n\t    var defaultProps = type.defaultProps;\n\t    for (propName in defaultProps) {\n\t      if (props[propName] === undefined) {\n\t        props[propName] = defaultProps[propName];\n\t      }\n\t    }\n\t  }\n\t  if (false) {\n\t    if (key || ref) {\n\t      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n\t        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\t        if (key) {\n\t          defineKeyPropWarningGetter(props, displayName);\n\t        }\n\t        if (ref) {\n\t          defineRefPropWarningGetter(props, displayName);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\t};\n\t\n\t/**\n\t * Return a function that produces ReactElements of a given type.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n\t */\n\tReactElement.createFactory = function (type) {\n\t  var factory = ReactElement.createElement.bind(null, type);\n\t  // Expose the type on the factory and the prototype so that it can be\n\t  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n\t  // This should not be named `constructor` since this may not be the function\n\t  // that created the element, and it may not even be a constructor.\n\t  // Legacy hook TODO: Warn if this is accessed\n\t  factory.type = type;\n\t  return factory;\n\t};\n\t\n\tReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n\t  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\t\n\t  return newElement;\n\t};\n\t\n\t/**\n\t * Clone and return a new ReactElement using element as the starting point.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n\t */\n\tReactElement.cloneElement = function (element, config, children) {\n\t  var propName;\n\t\n\t  // Original props are copied\n\t  var props = _assign({}, element.props);\n\t\n\t  // Reserved names are extracted\n\t  var key = element.key;\n\t  var ref = element.ref;\n\t  // Self is preserved since the owner is preserved.\n\t  var self = element._self;\n\t  // Source is preserved since cloneElement is unlikely to be targeted by a\n\t  // transpiler, and the original source is probably a better indicator of the\n\t  // true owner.\n\t  var source = element._source;\n\t\n\t  // Owner will be preserved, unless ref is overridden\n\t  var owner = element._owner;\n\t\n\t  if (config != null) {\n\t    if (hasValidRef(config)) {\n\t      // Silently steal the ref from the parent.\n\t      ref = config.ref;\n\t      owner = ReactCurrentOwner.current;\n\t    }\n\t    if (hasValidKey(config)) {\n\t      key = '' + config.key;\n\t    }\n\t\n\t    // Remaining properties override existing props\n\t    var defaultProps;\n\t    if (element.type && element.type.defaultProps) {\n\t      defaultProps = element.type.defaultProps;\n\t    }\n\t    for (propName in config) {\n\t      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        if (config[propName] === undefined && defaultProps !== undefined) {\n\t          // Resolve default props\n\t          props[propName] = defaultProps[propName];\n\t        } else {\n\t          props[propName] = config[propName];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  return ReactElement(element.type, key, ref, self, source, owner, props);\n\t};\n\t\n\t/**\n\t * Verifies the object is a ReactElement.\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n\t * @param {?object} object\n\t * @return {boolean} True if `object` is a valid component.\n\t * @final\n\t */\n\tReactElement.isValidElement = function (object) {\n\t  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n\t};\n\t\n\tReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;\n\t\n\tmodule.exports = ReactElement;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactUpdates\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar CallbackQueue = __webpack_require__(59);\n\tvar PooledClass = __webpack_require__(13);\n\tvar ReactFeatureFlags = __webpack_require__(66);\n\tvar ReactReconciler = __webpack_require__(18);\n\tvar Transaction = __webpack_require__(23);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar dirtyComponents = [];\n\tvar updateBatchNumber = 0;\n\tvar asapCallbackQueue = CallbackQueue.getPooled();\n\tvar asapEnqueued = false;\n\t\n\tvar batchingStrategy = null;\n\t\n\tfunction ensureInjected() {\n\t  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;\n\t}\n\t\n\tvar NESTED_UPDATES = {\n\t  initialize: function () {\n\t    this.dirtyComponentsLength = dirtyComponents.length;\n\t  },\n\t  close: function () {\n\t    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n\t      // Additional updates were enqueued by componentDidUpdate handlers or\n\t      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n\t      // these new updates so that if A's componentDidUpdate calls setState on\n\t      // B, B will update before the callback A's updater provided when calling\n\t      // setState.\n\t      dirtyComponents.splice(0, this.dirtyComponentsLength);\n\t      flushBatchedUpdates();\n\t    } else {\n\t      dirtyComponents.length = 0;\n\t    }\n\t  }\n\t};\n\t\n\tvar UPDATE_QUEUEING = {\n\t  initialize: function () {\n\t    this.callbackQueue.reset();\n\t  },\n\t  close: function () {\n\t    this.callbackQueue.notifyAll();\n\t  }\n\t};\n\t\n\tvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\t\n\tfunction ReactUpdatesFlushTransaction() {\n\t  this.reinitializeTransaction();\n\t  this.dirtyComponentsLength = null;\n\t  this.callbackQueue = CallbackQueue.getPooled();\n\t  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n\t  /* useCreateElement */true);\n\t}\n\t\n\t_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  destructor: function () {\n\t    this.dirtyComponentsLength = null;\n\t    CallbackQueue.release(this.callbackQueue);\n\t    this.callbackQueue = null;\n\t    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n\t    this.reconcileTransaction = null;\n\t  },\n\t\n\t  perform: function (method, scope, a) {\n\t    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n\t    // with this transaction's wrappers around it.\n\t    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n\t  }\n\t});\n\t\n\tPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\t\n\tfunction batchedUpdates(callback, a, b, c, d, e) {\n\t  ensureInjected();\n\t  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n\t}\n\t\n\t/**\n\t * Array comparator for ReactComponents by mount ordering.\n\t *\n\t * @param {ReactComponent} c1 first component you're comparing\n\t * @param {ReactComponent} c2 second component you're comparing\n\t * @return {number} Return value usable by Array.prototype.sort().\n\t */\n\tfunction mountOrderComparator(c1, c2) {\n\t  return c1._mountOrder - c2._mountOrder;\n\t}\n\t\n\tfunction runBatchedUpdates(transaction) {\n\t  var len = transaction.dirtyComponentsLength;\n\t  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;\n\t\n\t  // Since reconciling a component higher in the owner hierarchy usually (not\n\t  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n\t  // them before their children by sorting the array.\n\t  dirtyComponents.sort(mountOrderComparator);\n\t\n\t  // Any updates enqueued while reconciling must be performed after this entire\n\t  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and\n\t  // C, B could update twice in a single batch if C's render enqueues an update\n\t  // to B (since B would have already updated, we should skip it, and the only\n\t  // way we can know to do so is by checking the batch counter).\n\t  updateBatchNumber++;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    // If a component is unmounted before pending changes apply, it will still\n\t    // be here, but we assume that it has cleared its _pendingCallbacks and\n\t    // that performUpdateIfNecessary is a noop.\n\t    var component = dirtyComponents[i];\n\t\n\t    // If performUpdateIfNecessary happens to enqueue any new updates, we\n\t    // shouldn't execute the callbacks until the next render happens, so\n\t    // stash the callbacks first\n\t    var callbacks = component._pendingCallbacks;\n\t    component._pendingCallbacks = null;\n\t\n\t    var markerName;\n\t    if (ReactFeatureFlags.logTopLevelRenders) {\n\t      var namedComponent = component;\n\t      // Duck type TopLevelWrapper. This is probably always true.\n\t      if (component._currentElement.props === component._renderedComponent._currentElement) {\n\t        namedComponent = component._renderedComponent;\n\t      }\n\t      markerName = 'React update: ' + namedComponent.getName();\n\t      console.time(markerName);\n\t    }\n\t\n\t    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);\n\t\n\t    if (markerName) {\n\t      console.timeEnd(markerName);\n\t    }\n\t\n\t    if (callbacks) {\n\t      for (var j = 0; j < callbacks.length; j++) {\n\t        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar flushBatchedUpdates = function () {\n\t  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n\t  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n\t  // componentDidUpdate) but we need to check here too in order to catch\n\t  // updates enqueued by setState callbacks and asap calls.\n\t  while (dirtyComponents.length || asapEnqueued) {\n\t    if (dirtyComponents.length) {\n\t      var transaction = ReactUpdatesFlushTransaction.getPooled();\n\t      transaction.perform(runBatchedUpdates, null, transaction);\n\t      ReactUpdatesFlushTransaction.release(transaction);\n\t    }\n\t\n\t    if (asapEnqueued) {\n\t      asapEnqueued = false;\n\t      var queue = asapCallbackQueue;\n\t      asapCallbackQueue = CallbackQueue.getPooled();\n\t      queue.notifyAll();\n\t      CallbackQueue.release(queue);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Mark a component as needing a rerender, adding an optional callback to a\n\t * list of functions which will be executed once the rerender occurs.\n\t */\n\tfunction enqueueUpdate(component) {\n\t  ensureInjected();\n\t\n\t  // Various parts of our code (such as ReactCompositeComponent's\n\t  // _renderValidatedComponent) assume that calls to render aren't nested;\n\t  // verify that that's the case. (This is called by each top-level update\n\t  // function, like setState, forceUpdate, etc.; creation and\n\t  // destruction of top-level components is guarded in ReactMount.)\n\t\n\t  if (!batchingStrategy.isBatchingUpdates) {\n\t    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n\t    return;\n\t  }\n\t\n\t  dirtyComponents.push(component);\n\t  if (component._updateBatchNumber == null) {\n\t    component._updateBatchNumber = updateBatchNumber + 1;\n\t  }\n\t}\n\t\n\t/**\n\t * Enqueue a callback to be run at the end of the current batching cycle. Throws\n\t * if no updates are currently being performed.\n\t */\n\tfunction asap(callback, context) {\n\t  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;\n\t  asapCallbackQueue.enqueue(callback, context);\n\t  asapEnqueued = true;\n\t}\n\t\n\tvar ReactUpdatesInjection = {\n\t  injectReconcileTransaction: function (ReconcileTransaction) {\n\t    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;\n\t    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n\t  },\n\t\n\t  injectBatchingStrategy: function (_batchingStrategy) {\n\t    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;\n\t    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;\n\t    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;\n\t    batchingStrategy = _batchingStrategy;\n\t  }\n\t};\n\t\n\tvar ReactUpdates = {\n\t  /**\n\t   * React references `ReactReconcileTransaction` using this property in order\n\t   * to allow dependency injection.\n\t   *\n\t   * @internal\n\t   */\n\t  ReactReconcileTransaction: null,\n\t\n\t  batchedUpdates: batchedUpdates,\n\t  enqueueUpdate: enqueueUpdate,\n\t  flushBatchedUpdates: flushBatchedUpdates,\n\t  injection: ReactUpdatesInjection,\n\t  asap: asap\n\t};\n\t\n\tmodule.exports = ReactUpdates;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventConstants\n\t */\n\t\n\t'use strict';\n\t\n\tvar keyMirror = __webpack_require__(30);\n\t\n\tvar PropagationPhases = keyMirror({ bubbled: null, captured: null });\n\t\n\t/**\n\t * Types of raw signals from the browser caught at the top level.\n\t */\n\tvar topLevelTypes = keyMirror({\n\t  topAbort: null,\n\t  topAnimationEnd: null,\n\t  topAnimationIteration: null,\n\t  topAnimationStart: null,\n\t  topBlur: null,\n\t  topCanPlay: null,\n\t  topCanPlayThrough: null,\n\t  topChange: null,\n\t  topClick: null,\n\t  topCompositionEnd: null,\n\t  topCompositionStart: null,\n\t  topCompositionUpdate: null,\n\t  topContextMenu: null,\n\t  topCopy: null,\n\t  topCut: null,\n\t  topDoubleClick: null,\n\t  topDrag: null,\n\t  topDragEnd: null,\n\t  topDragEnter: null,\n\t  topDragExit: null,\n\t  topDragLeave: null,\n\t  topDragOver: null,\n\t  topDragStart: null,\n\t  topDrop: null,\n\t  topDurationChange: null,\n\t  topEmptied: null,\n\t  topEncrypted: null,\n\t  topEnded: null,\n\t  topError: null,\n\t  topFocus: null,\n\t  topInput: null,\n\t  topInvalid: null,\n\t  topKeyDown: null,\n\t  topKeyPress: null,\n\t  topKeyUp: null,\n\t  topLoad: null,\n\t  topLoadedData: null,\n\t  topLoadedMetadata: null,\n\t  topLoadStart: null,\n\t  topMouseDown: null,\n\t  topMouseMove: null,\n\t  topMouseOut: null,\n\t  topMouseOver: null,\n\t  topMouseUp: null,\n\t  topPaste: null,\n\t  topPause: null,\n\t  topPlay: null,\n\t  topPlaying: null,\n\t  topProgress: null,\n\t  topRateChange: null,\n\t  topReset: null,\n\t  topScroll: null,\n\t  topSeeked: null,\n\t  topSeeking: null,\n\t  topSelectionChange: null,\n\t  topStalled: null,\n\t  topSubmit: null,\n\t  topSuspend: null,\n\t  topTextInput: null,\n\t  topTimeUpdate: null,\n\t  topTouchCancel: null,\n\t  topTouchEnd: null,\n\t  topTouchMove: null,\n\t  topTouchStart: null,\n\t  topTransitionEnd: null,\n\t  topVolumeChange: null,\n\t  topWaiting: null,\n\t  topWheel: null\n\t});\n\t\n\tvar EventConstants = {\n\t  topLevelTypes: topLevelTypes,\n\t  PropagationPhases: PropagationPhases\n\t};\n\t\n\tmodule.exports = EventConstants;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar PooledClass = __webpack_require__(13);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnForAddedNewProperty = false;\n\tvar isProxySupported = typeof Proxy === 'function';\n\t\n\tvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar EventInterface = {\n\t  type: null,\n\t  target: null,\n\t  // currentTarget is set when dispatching; no use in copying it here\n\t  currentTarget: emptyFunction.thatReturnsNull,\n\t  eventPhase: null,\n\t  bubbles: null,\n\t  cancelable: null,\n\t  timeStamp: function (event) {\n\t    return event.timeStamp || Date.now();\n\t  },\n\t  defaultPrevented: null,\n\t  isTrusted: null\n\t};\n\t\n\t/**\n\t * Synthetic events are dispatched by event plugins, typically in response to a\n\t * top-level event delegation handler.\n\t *\n\t * These systems should generally use pooling to reduce the frequency of garbage\n\t * collection. The system should check `isPersistent` to determine whether the\n\t * event should be released into the pool after being dispatched. Users that\n\t * need a persisted event should invoke `persist`.\n\t *\n\t * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n\t * normalizing browser quirks. Subclasses do not necessarily have to implement a\n\t * DOM interface; custom application-specific events can also subclass this.\n\t *\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {*} targetInst Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @param {DOMEventTarget} nativeEventTarget Target node.\n\t */\n\tfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n\t  if (false) {\n\t    // these have a getter/setter for warnings\n\t    delete this.nativeEvent;\n\t    delete this.preventDefault;\n\t    delete this.stopPropagation;\n\t  }\n\t\n\t  this.dispatchConfig = dispatchConfig;\n\t  this._targetInst = targetInst;\n\t  this.nativeEvent = nativeEvent;\n\t\n\t  var Interface = this.constructor.Interface;\n\t  for (var propName in Interface) {\n\t    if (!Interface.hasOwnProperty(propName)) {\n\t      continue;\n\t    }\n\t    if (false) {\n\t      delete this[propName]; // this has a getter/setter for warnings\n\t    }\n\t    var normalize = Interface[propName];\n\t    if (normalize) {\n\t      this[propName] = normalize(nativeEvent);\n\t    } else {\n\t      if (propName === 'target') {\n\t        this.target = nativeEventTarget;\n\t      } else {\n\t        this[propName] = nativeEvent[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\t  if (defaultPrevented) {\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n\t  } else {\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n\t  }\n\t  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n\t  return this;\n\t}\n\t\n\t_assign(SyntheticEvent.prototype, {\n\t\n\t  preventDefault: function () {\n\t    this.defaultPrevented = true;\n\t    var event = this.nativeEvent;\n\t    if (!event) {\n\t      return;\n\t    }\n\t\n\t    if (event.preventDefault) {\n\t      event.preventDefault();\n\t    } else if (typeof event.returnValue !== 'unknown') {\n\t      // eslint-disable-line valid-typeof\n\t      event.returnValue = false;\n\t    }\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  stopPropagation: function () {\n\t    var event = this.nativeEvent;\n\t    if (!event) {\n\t      return;\n\t    }\n\t\n\t    if (event.stopPropagation) {\n\t      event.stopPropagation();\n\t    } else if (typeof event.cancelBubble !== 'unknown') {\n\t      // eslint-disable-line valid-typeof\n\t      // The ChangeEventPlugin registers a \"propertychange\" event for\n\t      // IE. This event does not support bubbling or cancelling, and\n\t      // any references to cancelBubble throw \"Member not found\".  A\n\t      // typeof check of \"unknown\" circumvents this issue (and is also\n\t      // IE specific).\n\t      event.cancelBubble = true;\n\t    }\n\t\n\t    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  /**\n\t   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n\t   * them back into the pool. This allows a way to hold onto a reference that\n\t   * won't be added back into the pool.\n\t   */\n\t  persist: function () {\n\t    this.isPersistent = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  /**\n\t   * Checks if this event should be released back into the pool.\n\t   *\n\t   * @return {boolean} True if this should not be released, false otherwise.\n\t   */\n\t  isPersistent: emptyFunction.thatReturnsFalse,\n\t\n\t  /**\n\t   * `PooledClass` looks for `destructor` on each instance it releases.\n\t   */\n\t  destructor: function () {\n\t    var Interface = this.constructor.Interface;\n\t    for (var propName in Interface) {\n\t      if (false) {\n\t        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n\t      } else {\n\t        this[propName] = null;\n\t      }\n\t    }\n\t    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n\t      this[shouldBeReleasedProperties[i]] = null;\n\t    }\n\t    if (false) {\n\t      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n\t      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n\t      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n\t    }\n\t  }\n\t\n\t});\n\t\n\tSyntheticEvent.Interface = EventInterface;\n\t\n\tif (false) {\n\t  if (isProxySupported) {\n\t    /*eslint-disable no-func-assign */\n\t    SyntheticEvent = new Proxy(SyntheticEvent, {\n\t      construct: function (target, args) {\n\t        return this.apply(target, Object.create(target.prototype), args);\n\t      },\n\t      apply: function (constructor, that, args) {\n\t        return new Proxy(constructor.apply(that, args), {\n\t          set: function (target, prop, value) {\n\t            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n\t              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;\n\t              didWarnForAddedNewProperty = true;\n\t            }\n\t            target[prop] = value;\n\t            return true;\n\t          }\n\t        });\n\t      }\n\t    });\n\t    /*eslint-enable no-func-assign */\n\t  }\n\t}\n\t/**\n\t * Helper to reduce boilerplate when creating subclasses.\n\t *\n\t * @param {function} Class\n\t * @param {?object} Interface\n\t */\n\tSyntheticEvent.augmentClass = function (Class, Interface) {\n\t  var Super = this;\n\t\n\t  var E = function () {};\n\t  E.prototype = Super.prototype;\n\t  var prototype = new E();\n\t\n\t  _assign(prototype, Class.prototype);\n\t  Class.prototype = prototype;\n\t  Class.prototype.constructor = Class;\n\t\n\t  Class.Interface = _assign({}, Super.Interface, Interface);\n\t  Class.augmentClass = Super.augmentClass;\n\t\n\t  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n\t};\n\t\n\tPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\t\n\tmodule.exports = SyntheticEvent;\n\t\n\t/**\n\t  * Helper to nullify syntheticEvent instance properties when destructing\n\t  *\n\t  * @param {object} SyntheticEvent\n\t  * @param {String} propName\n\t  * @return {object} defineProperty object\n\t  */\n\tfunction getPooledWarningPropertyDefinition(propName, getVal) {\n\t  var isFunction = typeof getVal === 'function';\n\t  return {\n\t    configurable: true,\n\t    set: set,\n\t    get: get\n\t  };\n\t\n\t  function set(val) {\n\t    var action = isFunction ? 'setting the method' : 'setting the property';\n\t    warn(action, 'This is effectively a no-op');\n\t    return val;\n\t  }\n\t\n\t  function get() {\n\t    var action = isFunction ? 'accessing the method' : 'accessing the property';\n\t    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n\t    warn(action, result);\n\t    return getVal;\n\t  }\n\t\n\t  function warn(action, result) {\n\t    var warningCondition = false;\n\t     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\\'re seeing this, ' + 'you\\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n\t  }\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule PooledClass\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Static poolers. Several custom versions for each potential number of\n\t * arguments. A completely generic pooler is easy to implement, but would\n\t * require accessing the `arguments` object. In each of these, `this` refers to\n\t * the Class itself, not an instance. If any others are needed, simply add them\n\t * here, or in their own files.\n\t */\n\tvar oneArgumentPooler = function (copyFieldsFrom) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, copyFieldsFrom);\n\t    return instance;\n\t  } else {\n\t    return new Klass(copyFieldsFrom);\n\t  }\n\t};\n\t\n\tvar twoArgumentPooler = function (a1, a2) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2);\n\t  }\n\t};\n\t\n\tvar threeArgumentPooler = function (a1, a2, a3) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3);\n\t  }\n\t};\n\t\n\tvar fourArgumentPooler = function (a1, a2, a3, a4) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3, a4);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3, a4);\n\t  }\n\t};\n\t\n\tvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3, a4, a5);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3, a4, a5);\n\t  }\n\t};\n\t\n\tvar standardReleaser = function (instance) {\n\t  var Klass = this;\n\t  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n\t  instance.destructor();\n\t  if (Klass.instancePool.length < Klass.poolSize) {\n\t    Klass.instancePool.push(instance);\n\t  }\n\t};\n\t\n\tvar DEFAULT_POOL_SIZE = 10;\n\tvar DEFAULT_POOLER = oneArgumentPooler;\n\t\n\t/**\n\t * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n\t * itself (statically) not adding any prototypical fields. Any CopyConstructor\n\t * you give this may have a `poolSize` property, and will look for a\n\t * prototypical `destructor` on instances.\n\t *\n\t * @param {Function} CopyConstructor Constructor that can be used to reset.\n\t * @param {Function} pooler Customizable pooler.\n\t */\n\tvar addPoolingTo = function (CopyConstructor, pooler) {\n\t  var NewKlass = CopyConstructor;\n\t  NewKlass.instancePool = [];\n\t  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n\t  if (!NewKlass.poolSize) {\n\t    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n\t  }\n\t  NewKlass.release = standardReleaser;\n\t  return NewKlass;\n\t};\n\t\n\tvar PooledClass = {\n\t  addPoolingTo: addPoolingTo,\n\t  oneArgumentPooler: oneArgumentPooler,\n\t  twoArgumentPooler: twoArgumentPooler,\n\t  threeArgumentPooler: threeArgumentPooler,\n\t  fourArgumentPooler: fourArgumentPooler,\n\t  fiveArgumentPooler: fiveArgumentPooler\n\t};\n\t\n\tmodule.exports = PooledClass;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactCurrentOwner\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Keeps track of the current owner.\n\t *\n\t * The current owner is the component who should own any components that are\n\t * currently being constructed.\n\t */\n\t\n\tvar ReactCurrentOwner = {\n\t\n\t  /**\n\t   * @internal\n\t   * @type {ReactComponent}\n\t   */\n\t  current: null\n\t\n\t};\n\t\n\tmodule.exports = ReactCurrentOwner;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/**\n\t * Allows extraction of a minified key. Let's the build system minify keys\n\t * without losing the ability to dynamically use key strings as values\n\t * themselves. Pass in an object with a single key/val pair and it will return\n\t * you the string key of that single record. Suppose you want to grab the\n\t * value for a key 'className' inside of an object. Key/val minification may\n\t * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n\t * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n\t * reuse those resolutions.\n\t */\n\tvar keyOf = function keyOf(oneKeyObj) {\n\t  var key;\n\t  for (key in oneKeyObj) {\n\t    if (!oneKeyObj.hasOwnProperty(key)) {\n\t      continue;\n\t    }\n\t    return key;\n\t  }\n\t  return null;\n\t};\n\t\n\tmodule.exports = keyOf;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMLazyTree\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMNamespaces = __webpack_require__(34);\n\tvar setInnerHTML = __webpack_require__(29);\n\t\n\tvar createMicrosoftUnsafeLocalFunction = __webpack_require__(48);\n\tvar setTextContent = __webpack_require__(83);\n\t\n\tvar ELEMENT_NODE_TYPE = 1;\n\tvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\t\n\t/**\n\t * In IE (8-11) and Edge, appending nodes with no children is dramatically\n\t * faster than appending a full subtree, so we essentially queue up the\n\t * .appendChild calls here and apply them so each node is added to its parent\n\t * before any children are added.\n\t *\n\t * In other browsers, doing so is slower or neutral compared to the other order\n\t * (in Firefox, twice as slow) so we only do this inversion in IE.\n\t *\n\t * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.\n\t */\n\tvar enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\\bEdge\\/\\d/.test(navigator.userAgent);\n\t\n\tfunction insertTreeChildren(tree) {\n\t  if (!enableLazy) {\n\t    return;\n\t  }\n\t  var node = tree.node;\n\t  var children = tree.children;\n\t  if (children.length) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      insertTreeBefore(node, children[i], null);\n\t    }\n\t  } else if (tree.html != null) {\n\t    setInnerHTML(node, tree.html);\n\t  } else if (tree.text != null) {\n\t    setTextContent(node, tree.text);\n\t  }\n\t}\n\t\n\tvar insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {\n\t  // DocumentFragments aren't actually part of the DOM after insertion so\n\t  // appending children won't update the DOM. We need to ensure the fragment\n\t  // is properly populated first, breaking out of our lazy approach for just\n\t  // this level. Also, some <object> plugins (like Flash Player) will read\n\t  // <param> nodes immediately upon insertion into the DOM, so <object>\n\t  // must also be populated prior to insertion into the DOM.\n\t  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {\n\t    insertTreeChildren(tree);\n\t    parentNode.insertBefore(tree.node, referenceNode);\n\t  } else {\n\t    parentNode.insertBefore(tree.node, referenceNode);\n\t    insertTreeChildren(tree);\n\t  }\n\t});\n\t\n\tfunction replaceChildWithTree(oldNode, newTree) {\n\t  oldNode.parentNode.replaceChild(newTree.node, oldNode);\n\t  insertTreeChildren(newTree);\n\t}\n\t\n\tfunction queueChild(parentTree, childTree) {\n\t  if (enableLazy) {\n\t    parentTree.children.push(childTree);\n\t  } else {\n\t    parentTree.node.appendChild(childTree.node);\n\t  }\n\t}\n\t\n\tfunction queueHTML(tree, html) {\n\t  if (enableLazy) {\n\t    tree.html = html;\n\t  } else {\n\t    setInnerHTML(tree.node, html);\n\t  }\n\t}\n\t\n\tfunction queueText(tree, text) {\n\t  if (enableLazy) {\n\t    tree.text = text;\n\t  } else {\n\t    setTextContent(tree.node, text);\n\t  }\n\t}\n\t\n\tfunction toString() {\n\t  return this.node.nodeName;\n\t}\n\t\n\tfunction DOMLazyTree(node) {\n\t  return {\n\t    node: node,\n\t    children: [],\n\t    html: null,\n\t    text: null,\n\t    toString: toString\n\t  };\n\t}\n\t\n\tDOMLazyTree.insertTreeBefore = insertTreeBefore;\n\tDOMLazyTree.replaceChildWithTree = replaceChildWithTree;\n\tDOMLazyTree.queueChild = queueChild;\n\tDOMLazyTree.queueHTML = queueHTML;\n\tDOMLazyTree.queueText = queueText;\n\t\n\tmodule.exports = DOMLazyTree;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMProperty\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tfunction checkMask(value, bitmask) {\n\t  return (value & bitmask) === bitmask;\n\t}\n\t\n\tvar DOMPropertyInjection = {\n\t  /**\n\t   * Mapping from normalized, camelcased property names to a configuration that\n\t   * specifies how the associated DOM property should be accessed or rendered.\n\t   */\n\t  MUST_USE_PROPERTY: 0x1,\n\t  HAS_BOOLEAN_VALUE: 0x4,\n\t  HAS_NUMERIC_VALUE: 0x8,\n\t  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,\n\t  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,\n\t\n\t  /**\n\t   * Inject some specialized knowledge about the DOM. This takes a config object\n\t   * with the following properties:\n\t   *\n\t   * isCustomAttribute: function that given an attribute name will return true\n\t   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n\t   * attributes where it's impossible to enumerate all of the possible\n\t   * attribute names,\n\t   *\n\t   * Properties: object mapping DOM property name to one of the\n\t   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n\t   * it won't get written to the DOM.\n\t   *\n\t   * DOMAttributeNames: object mapping React attribute name to the DOM\n\t   * attribute name. Attribute names not specified use the **lowercase**\n\t   * normalized name.\n\t   *\n\t   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n\t   * attribute namespace URL. (Attribute names not specified use no namespace.)\n\t   *\n\t   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n\t   * Property names not specified use the normalized name.\n\t   *\n\t   * DOMMutationMethods: Properties that require special mutation methods. If\n\t   * `value` is undefined, the mutation method should unset the property.\n\t   *\n\t   * @param {object} domPropertyConfig the config as described above.\n\t   */\n\t  injectDOMPropertyConfig: function (domPropertyConfig) {\n\t    var Injection = DOMPropertyInjection;\n\t    var Properties = domPropertyConfig.Properties || {};\n\t    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n\t    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n\t    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n\t    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\t\n\t    if (domPropertyConfig.isCustomAttribute) {\n\t      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n\t    }\n\t\n\t    for (var propName in Properties) {\n\t      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property \\'%s\\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;\n\t\n\t      var lowerCased = propName.toLowerCase();\n\t      var propConfig = Properties[propName];\n\t\n\t      var propertyInfo = {\n\t        attributeName: lowerCased,\n\t        attributeNamespace: null,\n\t        propertyName: propName,\n\t        mutationMethod: null,\n\t\n\t        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n\t        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n\t        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n\t        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n\t        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n\t      };\n\t      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;\n\t\n\t      if (false) {\n\t        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n\t      }\n\t\n\t      if (DOMAttributeNames.hasOwnProperty(propName)) {\n\t        var attributeName = DOMAttributeNames[propName];\n\t        propertyInfo.attributeName = attributeName;\n\t        if (false) {\n\t          DOMProperty.getPossibleStandardName[attributeName] = propName;\n\t        }\n\t      }\n\t\n\t      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n\t        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n\t      }\n\t\n\t      if (DOMPropertyNames.hasOwnProperty(propName)) {\n\t        propertyInfo.propertyName = DOMPropertyNames[propName];\n\t      }\n\t\n\t      if (DOMMutationMethods.hasOwnProperty(propName)) {\n\t        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n\t      }\n\t\n\t      DOMProperty.properties[propName] = propertyInfo;\n\t    }\n\t  }\n\t};\n\t\n\t/* eslint-disable max-len */\n\tvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n\t/* eslint-enable max-len */\n\t\n\t/**\n\t * DOMProperty exports lookup objects that can be used like functions:\n\t *\n\t *   > DOMProperty.isValid['id']\n\t *   true\n\t *   > DOMProperty.isValid['foobar']\n\t *   undefined\n\t *\n\t * Although this may be confusing, it performs better in general.\n\t *\n\t * @see http://jsperf.com/key-exists\n\t * @see http://jsperf.com/key-missing\n\t */\n\tvar DOMProperty = {\n\t\n\t  ID_ATTRIBUTE_NAME: 'data-reactid',\n\t  ROOT_ATTRIBUTE_NAME: 'data-reactroot',\n\t\n\t  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,\n\t  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040',\n\t\n\t  /**\n\t   * Map from property \"standard name\" to an object with info about how to set\n\t   * the property in the DOM. Each object contains:\n\t   *\n\t   * attributeName:\n\t   *   Used when rendering markup or with `*Attribute()`.\n\t   * attributeNamespace\n\t   * propertyName:\n\t   *   Used on DOM node instances. (This includes properties that mutate due to\n\t   *   external factors.)\n\t   * mutationMethod:\n\t   *   If non-null, used instead of the property or `setAttribute()` after\n\t   *   initial render.\n\t   * mustUseProperty:\n\t   *   Whether the property must be accessed and mutated as an object property.\n\t   * hasBooleanValue:\n\t   *   Whether the property should be removed when set to a falsey value.\n\t   * hasNumericValue:\n\t   *   Whether the property must be numeric or parse as a numeric and should be\n\t   *   removed when set to a falsey value.\n\t   * hasPositiveNumericValue:\n\t   *   Whether the property must be positive numeric or parse as a positive\n\t   *   numeric and should be removed when set to a falsey value.\n\t   * hasOverloadedBooleanValue:\n\t   *   Whether the property can be used as a flag as well as with a value.\n\t   *   Removed when strictly equal to false; present without a value when\n\t   *   strictly equal to true; present with a value otherwise.\n\t   */\n\t  properties: {},\n\t\n\t  /**\n\t   * Mapping from lowercase property names to the properly cased version, used\n\t   * to warn in the case of missing properties. Available only in __DEV__.\n\t   * @type {Object}\n\t   */\n\t  getPossibleStandardName:  false ? {} : null,\n\t\n\t  /**\n\t   * All of the isCustomAttribute() functions that have been injected.\n\t   */\n\t  _isCustomAttributeFunctions: [],\n\t\n\t  /**\n\t   * Checks whether a property name is a custom attribute.\n\t   * @method\n\t   */\n\t  isCustomAttribute: function (attributeName) {\n\t    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n\t      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n\t      if (isCustomAttributeFn(attributeName)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  },\n\t\n\t  injection: DOMPropertyInjection\n\t};\n\t\n\tmodule.exports = DOMProperty;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactReconciler\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactRef = __webpack_require__(138);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\t\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Helper to call ReactRef.attachRefs with this composite component, split out\n\t * to avoid allocations in the transaction mount-ready queue.\n\t */\n\tfunction attachRefs() {\n\t  ReactRef.attachRefs(this, this._currentElement);\n\t}\n\t\n\tvar ReactReconciler = {\n\t\n\t  /**\n\t   * Initializes the component, renders markup, and registers event listeners.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {?object} the containing host component instance\n\t   * @param {?object} info about the host container\n\t   * @return {?string} Rendered markup to be inserted into the DOM.\n\t   * @final\n\t   * @internal\n\t   */\n\t  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots\n\t  ) {\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n\t      }\n\t    }\n\t    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n\t    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n\t      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n\t    }\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t    return markup;\n\t  },\n\t\n\t  /**\n\t   * Returns a value that can be passed to\n\t   * ReactComponentEnvironment.replaceNodeWithMarkup.\n\t   */\n\t  getHostNode: function (internalInstance) {\n\t    return internalInstance.getHostNode();\n\t  },\n\t\n\t  /**\n\t   * Releases any resources allocated by `mountComponent`.\n\t   *\n\t   * @final\n\t   * @internal\n\t   */\n\t  unmountComponent: function (internalInstance, safely) {\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n\t    internalInstance.unmountComponent(safely);\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Update a component using a new element.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactElement} nextElement\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   * @internal\n\t   */\n\t  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n\t    var prevElement = internalInstance._currentElement;\n\t\n\t    if (nextElement === prevElement && context === internalInstance._context) {\n\t      // Since elements are immutable after the owner is rendered,\n\t      // we can do a cheap identity compare here to determine if this is a\n\t      // superfluous reconcile. It's possible for state to be mutable but such\n\t      // change should trigger an update of the owner which would recreate\n\t      // the element. We explicitly check for the existence of an owner since\n\t      // it's possible for an element created outside a composite to be\n\t      // deeply mutated and reused.\n\t\n\t      // TODO: Bailing out early is just a perf optimization right?\n\t      // TODO: Removing the return statement should affect correctness?\n\t      return;\n\t    }\n\t\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n\t      }\n\t    }\n\t\n\t    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\t\n\t    if (refsChanged) {\n\t      ReactRef.detachRefs(internalInstance, prevElement);\n\t    }\n\t\n\t    internalInstance.receiveComponent(nextElement, transaction, context);\n\t\n\t    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n\t      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n\t    }\n\t\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Flush any dirty changes in a component.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n\t    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n\t      // The component's enqueued batch number should always be the current\n\t      // batch or the following one.\n\t       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n\t      return;\n\t    }\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n\t      }\n\t    }\n\t    internalInstance.performUpdateIfNecessary(transaction);\n\t    if (false) {\n\t      if (internalInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactReconciler;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventPluginHub\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar EventPluginRegistry = __webpack_require__(35);\n\tvar EventPluginUtils = __webpack_require__(36);\n\tvar ReactErrorUtils = __webpack_require__(42);\n\t\n\tvar accumulateInto = __webpack_require__(75);\n\tvar forEachAccumulated = __webpack_require__(77);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Internal store for event listeners\n\t */\n\tvar listenerBank = {};\n\t\n\t/**\n\t * Internal queue of events that have accumulated their dispatches and are\n\t * waiting to have their dispatches executed.\n\t */\n\tvar eventQueue = null;\n\t\n\t/**\n\t * Dispatches an event and releases it back into the pool, unless persistent.\n\t *\n\t * @param {?object} event Synthetic event to be dispatched.\n\t * @param {boolean} simulated If the event is simulated (changes exn behavior)\n\t * @private\n\t */\n\tvar executeDispatchesAndRelease = function (event, simulated) {\n\t  if (event) {\n\t    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\t\n\t    if (!event.isPersistent()) {\n\t      event.constructor.release(event);\n\t    }\n\t  }\n\t};\n\tvar executeDispatchesAndReleaseSimulated = function (e) {\n\t  return executeDispatchesAndRelease(e, true);\n\t};\n\tvar executeDispatchesAndReleaseTopLevel = function (e) {\n\t  return executeDispatchesAndRelease(e, false);\n\t};\n\t\n\tvar getDictionaryKey = function (inst) {\n\t  // Prevents V8 performance issue:\n\t  // https://github.com/facebook/react/pull/7232\n\t  return '.' + inst._rootNodeID;\n\t};\n\t\n\t/**\n\t * This is a unified interface for event plugins to be installed and configured.\n\t *\n\t * Event plugins can implement the following properties:\n\t *\n\t *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n\t *     Required. When a top-level event is fired, this method is expected to\n\t *     extract synthetic events that will in turn be queued and dispatched.\n\t *\n\t *   `eventTypes` {object}\n\t *     Optional, plugins that fire events must publish a mapping of registration\n\t *     names that are used to register listeners. Values of this mapping must\n\t *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n\t *\n\t *   `executeDispatch` {function(object, function, string)}\n\t *     Optional, allows plugins to override how an event gets dispatched. By\n\t *     default, the listener is simply invoked.\n\t *\n\t * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n\t *\n\t * @public\n\t */\n\tvar EventPluginHub = {\n\t\n\t  /**\n\t   * Methods for injecting dependencies.\n\t   */\n\t  injection: {\n\t\n\t    /**\n\t     * @param {array} InjectedEventPluginOrder\n\t     * @public\n\t     */\n\t    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\t\n\t    /**\n\t     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n\t     */\n\t    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\t\n\t  },\n\t\n\t  /**\n\t   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n\t   *\n\t   * @param {object} inst The instance, which is the source of events.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @param {function} listener The callback to store.\n\t   */\n\t  putListener: function (inst, registrationName, listener) {\n\t    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\t\n\t    var key = getDictionaryKey(inst);\n\t    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n\t    bankForRegistrationName[key] = listener;\n\t\n\t    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t    if (PluginModule && PluginModule.didPutListener) {\n\t      PluginModule.didPutListener(inst, registrationName, listener);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {object} inst The instance, which is the source of events.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @return {?function} The stored callback.\n\t   */\n\t  getListener: function (inst, registrationName) {\n\t    var bankForRegistrationName = listenerBank[registrationName];\n\t    var key = getDictionaryKey(inst);\n\t    return bankForRegistrationName && bankForRegistrationName[key];\n\t  },\n\t\n\t  /**\n\t   * Deletes a listener from the registration bank.\n\t   *\n\t   * @param {object} inst The instance, which is the source of events.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   */\n\t  deleteListener: function (inst, registrationName) {\n\t    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t    if (PluginModule && PluginModule.willDeleteListener) {\n\t      PluginModule.willDeleteListener(inst, registrationName);\n\t    }\n\t\n\t    var bankForRegistrationName = listenerBank[registrationName];\n\t    // TODO: This should never be null -- when is it?\n\t    if (bankForRegistrationName) {\n\t      var key = getDictionaryKey(inst);\n\t      delete bankForRegistrationName[key];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes all listeners for the DOM element with the supplied ID.\n\t   *\n\t   * @param {object} inst The instance, which is the source of events.\n\t   */\n\t  deleteAllListeners: function (inst) {\n\t    var key = getDictionaryKey(inst);\n\t    for (var registrationName in listenerBank) {\n\t      if (!listenerBank.hasOwnProperty(registrationName)) {\n\t        continue;\n\t      }\n\t\n\t      if (!listenerBank[registrationName][key]) {\n\t        continue;\n\t      }\n\t\n\t      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t      if (PluginModule && PluginModule.willDeleteListener) {\n\t        PluginModule.willDeleteListener(inst, registrationName);\n\t      }\n\t\n\t      delete listenerBank[registrationName][key];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Allows registered plugins an opportunity to extract events from top-level\n\t   * native browser events.\n\t   *\n\t   * @return {*} An accumulation of synthetic events.\n\t   * @internal\n\t   */\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var events;\n\t    var plugins = EventPluginRegistry.plugins;\n\t    for (var i = 0; i < plugins.length; i++) {\n\t      // Not every plugin in the ordering may be loaded at runtime.\n\t      var possiblePlugin = plugins[i];\n\t      if (possiblePlugin) {\n\t        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\t        if (extractedEvents) {\n\t          events = accumulateInto(events, extractedEvents);\n\t        }\n\t      }\n\t    }\n\t    return events;\n\t  },\n\t\n\t  /**\n\t   * Enqueues a synthetic event that should be dispatched when\n\t   * `processEventQueue` is invoked.\n\t   *\n\t   * @param {*} events An accumulation of synthetic events.\n\t   * @internal\n\t   */\n\t  enqueueEvents: function (events) {\n\t    if (events) {\n\t      eventQueue = accumulateInto(eventQueue, events);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Dispatches all synthetic events on the event queue.\n\t   *\n\t   * @internal\n\t   */\n\t  processEventQueue: function (simulated) {\n\t    // Set `eventQueue` to null before processing it so that we can tell if more\n\t    // events get enqueued while processing.\n\t    var processingEventQueue = eventQueue;\n\t    eventQueue = null;\n\t    if (simulated) {\n\t      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n\t    } else {\n\t      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n\t    }\n\t    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n\t    // This would be a good time to rethrow if any of the event handlers threw.\n\t    ReactErrorUtils.rethrowCaughtError();\n\t  },\n\t\n\t  /**\n\t   * These are needed for tests only. Do not use!\n\t   */\n\t  __purge: function () {\n\t    listenerBank = {};\n\t  },\n\t\n\t  __getListenerBank: function () {\n\t    return listenerBank;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EventPluginHub;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventPropagators\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPluginHub = __webpack_require__(19);\n\tvar EventPluginUtils = __webpack_require__(36);\n\t\n\tvar accumulateInto = __webpack_require__(75);\n\tvar forEachAccumulated = __webpack_require__(77);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar PropagationPhases = EventConstants.PropagationPhases;\n\tvar getListener = EventPluginHub.getListener;\n\t\n\t/**\n\t * Some event types have a notion of different registration names for different\n\t * \"phases\" of propagation. This finds listeners by a given phase.\n\t */\n\tfunction listenerAtPhase(inst, event, propagationPhase) {\n\t  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n\t  return getListener(inst, registrationName);\n\t}\n\t\n\t/**\n\t * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n\t * here, allows us to not have to bind or create functions for each event.\n\t * Mutating the event's members allows us to not have to create a wrapping\n\t * \"dispatch\" object that pairs the event with the listener.\n\t */\n\tfunction accumulateDirectionalDispatches(inst, upwards, event) {\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;\n\t  }\n\t  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\n\t  var listener = listenerAtPhase(inst, event, phase);\n\t  if (listener) {\n\t    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n\t    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n\t  }\n\t}\n\t\n\t/**\n\t * Collect dispatches (must be entirely collected before dispatching - see unit\n\t * tests). Lazily allocate the array to conserve memory.  We must loop through\n\t * each event and perform the traversal for each one. We cannot perform a\n\t * single traversal for the entire collection of events because each event may\n\t * have a different target.\n\t */\n\tfunction accumulateTwoPhaseDispatchesSingle(event) {\n\t  if (event && event.dispatchConfig.phasedRegistrationNames) {\n\t    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n\t  }\n\t}\n\t\n\t/**\n\t * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n\t */\n\tfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n\t  if (event && event.dispatchConfig.phasedRegistrationNames) {\n\t    var targetInst = event._targetInst;\n\t    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;\n\t    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n\t  }\n\t}\n\t\n\t/**\n\t * Accumulates without regard to direction, does not look for phased\n\t * registration names. Same as `accumulateDirectDispatchesSingle` but without\n\t * requiring that the `dispatchMarker` be the same as the dispatched ID.\n\t */\n\tfunction accumulateDispatches(inst, ignoredDirection, event) {\n\t  if (event && event.dispatchConfig.registrationName) {\n\t    var registrationName = event.dispatchConfig.registrationName;\n\t    var listener = getListener(inst, registrationName);\n\t    if (listener) {\n\t      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n\t      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Accumulates dispatches on an `SyntheticEvent`, but only for the\n\t * `dispatchMarker`.\n\t * @param {SyntheticEvent} event\n\t */\n\tfunction accumulateDirectDispatchesSingle(event) {\n\t  if (event && event.dispatchConfig.registrationName) {\n\t    accumulateDispatches(event._targetInst, null, event);\n\t  }\n\t}\n\t\n\tfunction accumulateTwoPhaseDispatches(events) {\n\t  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n\t}\n\t\n\tfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n\t  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n\t}\n\t\n\tfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\n\t  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n\t}\n\t\n\tfunction accumulateDirectDispatches(events) {\n\t  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n\t}\n\t\n\t/**\n\t * A small set of propagation patterns, each of which will accept a small amount\n\t * of information, and generate a set of \"dispatch ready event objects\" - which\n\t * are sets of events that have already been annotated with a set of dispatched\n\t * listener functions/ids. The API is designed this way to discourage these\n\t * propagation strategies from actually executing the dispatches, since we\n\t * always want to collect the entire set of dispatches before executing event a\n\t * single one.\n\t *\n\t * @constructor EventPropagators\n\t */\n\tvar EventPropagators = {\n\t  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n\t  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n\t  accumulateDirectDispatches: accumulateDirectDispatches,\n\t  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n\t};\n\t\n\tmodule.exports = EventPropagators;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactInstanceMap\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * `ReactInstanceMap` maintains a mapping from a public facing stateful\n\t * instance (key) and the internal representation (value). This allows public\n\t * methods to accept the user facing instance as an argument and map them back\n\t * to internal methods.\n\t */\n\t\n\t// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\t\n\tvar ReactInstanceMap = {\n\t\n\t  /**\n\t   * This API should be called `delete` but we'd have to make sure to always\n\t   * transform these to strings for IE support. When this transform is fully\n\t   * supported we can rename it.\n\t   */\n\t  remove: function (key) {\n\t    key._reactInternalInstance = undefined;\n\t  },\n\t\n\t  get: function (key) {\n\t    return key._reactInternalInstance;\n\t  },\n\t\n\t  has: function (key) {\n\t    return key._reactInternalInstance !== undefined;\n\t  },\n\t\n\t  set: function (key, value) {\n\t    key._reactInternalInstance = value;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactInstanceMap;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticUIEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\tvar getEventTarget = __webpack_require__(51);\n\t\n\t/**\n\t * @interface UIEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar UIEventInterface = {\n\t  view: function (event) {\n\t    if (event.view) {\n\t      return event.view;\n\t    }\n\t\n\t    var target = getEventTarget(event);\n\t    if (target.window === target) {\n\t      // target is a window object\n\t      return target;\n\t    }\n\t\n\t    var doc = target.ownerDocument;\n\t    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n\t    if (doc) {\n\t      return doc.defaultView || doc.parentWindow;\n\t    } else {\n\t      return window;\n\t    }\n\t  },\n\t  detail: function (event) {\n\t    return event.detail || 0;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\t\n\tmodule.exports = SyntheticUIEvent;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule Transaction\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * `Transaction` creates a black box that is able to wrap any method such that\n\t * certain invariants are maintained before and after the method is invoked\n\t * (Even if an exception is thrown while invoking the wrapped method). Whoever\n\t * instantiates a transaction can provide enforcers of the invariants at\n\t * creation time. The `Transaction` class itself will supply one additional\n\t * automatic invariant for you - the invariant that any transaction instance\n\t * should not be run while it is already being run. You would typically create a\n\t * single instance of a `Transaction` for reuse multiple times, that potentially\n\t * is used to wrap several different methods. Wrappers are extremely simple -\n\t * they only require implementing two methods.\n\t *\n\t * <pre>\n\t *                       wrappers (injected at creation time)\n\t *                                      +        +\n\t *                                      |        |\n\t *                    +-----------------|--------|--------------+\n\t *                    |                 v        |              |\n\t *                    |      +---------------+   |              |\n\t *                    |   +--|    wrapper1   |---|----+         |\n\t *                    |   |  +---------------+   v    |         |\n\t *                    |   |          +-------------+  |         |\n\t *                    |   |     +----|   wrapper2  |--------+   |\n\t *                    |   |     |    +-------------+  |     |   |\n\t *                    |   |     |                     |     |   |\n\t *                    |   v     v                     v     v   | wrapper\n\t *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n\t * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n\t * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | +---+ +---+   +---------+   +---+ +---+ |\n\t *                    |  initialize                    close    |\n\t *                    +-----------------------------------------+\n\t * </pre>\n\t *\n\t * Use cases:\n\t * - Preserving the input selection ranges before/after reconciliation.\n\t *   Restoring selection even in the event of an unexpected error.\n\t * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n\t *   while guaranteeing that afterwards, the event system is reactivated.\n\t * - Flushing a queue of collected DOM mutations to the main UI thread after a\n\t *   reconciliation takes place in a worker thread.\n\t * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n\t *   content.\n\t * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n\t *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n\t * - (Future use case): Layout calculations before and after DOM updates.\n\t *\n\t * Transactional plugin API:\n\t * - A module that has an `initialize` method that returns any precomputation.\n\t * - and a `close` method that accepts the precomputation. `close` is invoked\n\t *   when the wrapped process is completed, or has failed.\n\t *\n\t * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n\t * that implement `initialize` and `close`.\n\t * @return {Transaction} Single transaction for reuse in thread.\n\t *\n\t * @class Transaction\n\t */\n\tvar Mixin = {\n\t  /**\n\t   * Sets up this instance so that it is prepared for collecting metrics. Does\n\t   * so such that this setup method may be used on an instance that is already\n\t   * initialized, in a way that does not consume additional memory upon reuse.\n\t   * That can be useful if you decide to make your subclass of this mixin a\n\t   * \"PooledClass\".\n\t   */\n\t  reinitializeTransaction: function () {\n\t    this.transactionWrappers = this.getTransactionWrappers();\n\t    if (this.wrapperInitData) {\n\t      this.wrapperInitData.length = 0;\n\t    } else {\n\t      this.wrapperInitData = [];\n\t    }\n\t    this._isInTransaction = false;\n\t  },\n\t\n\t  _isInTransaction: false,\n\t\n\t  /**\n\t   * @abstract\n\t   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n\t   */\n\t  getTransactionWrappers: null,\n\t\n\t  isInTransaction: function () {\n\t    return !!this._isInTransaction;\n\t  },\n\t\n\t  /**\n\t   * Executes the function within a safety window. Use this for the top level\n\t   * methods that result in large amounts of computation/mutations that would\n\t   * need to be safety checked. The optional arguments helps prevent the need\n\t   * to bind in many cases.\n\t   *\n\t   * @param {function} method Member of scope to call.\n\t   * @param {Object} scope Scope to invoke from.\n\t   * @param {Object?=} a Argument to pass to the method.\n\t   * @param {Object?=} b Argument to pass to the method.\n\t   * @param {Object?=} c Argument to pass to the method.\n\t   * @param {Object?=} d Argument to pass to the method.\n\t   * @param {Object?=} e Argument to pass to the method.\n\t   * @param {Object?=} f Argument to pass to the method.\n\t   *\n\t   * @return {*} Return value from `method`.\n\t   */\n\t  perform: function (method, scope, a, b, c, d, e, f) {\n\t    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;\n\t    var errorThrown;\n\t    var ret;\n\t    try {\n\t      this._isInTransaction = true;\n\t      // Catching errors makes debugging more difficult, so we start with\n\t      // errorThrown set to true before setting it to false after calling\n\t      // close -- if it's still set to true in the finally block, it means\n\t      // one of these calls threw.\n\t      errorThrown = true;\n\t      this.initializeAll(0);\n\t      ret = method.call(scope, a, b, c, d, e, f);\n\t      errorThrown = false;\n\t    } finally {\n\t      try {\n\t        if (errorThrown) {\n\t          // If `method` throws, prefer to show that stack trace over any thrown\n\t          // by invoking `closeAll`.\n\t          try {\n\t            this.closeAll(0);\n\t          } catch (err) {}\n\t        } else {\n\t          // Since `method` didn't throw, we don't want to silence the exception\n\t          // here.\n\t          this.closeAll(0);\n\t        }\n\t      } finally {\n\t        this._isInTransaction = false;\n\t      }\n\t    }\n\t    return ret;\n\t  },\n\t\n\t  initializeAll: function (startIndex) {\n\t    var transactionWrappers = this.transactionWrappers;\n\t    for (var i = startIndex; i < transactionWrappers.length; i++) {\n\t      var wrapper = transactionWrappers[i];\n\t      try {\n\t        // Catching errors makes debugging more difficult, so we start with the\n\t        // OBSERVED_ERROR state before overwriting it with the real return value\n\t        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n\t        // block, it means wrapper.initialize threw.\n\t        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\n\t        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n\t      } finally {\n\t        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\n\t          // The initializer for wrapper i threw an error; initialize the\n\t          // remaining wrappers but silence any exceptions from them to ensure\n\t          // that the first error is the one to bubble up.\n\t          try {\n\t            this.initializeAll(i + 1);\n\t          } catch (err) {}\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n\t   * them the respective return values of `this.transactionWrappers.init[i]`\n\t   * (`close`rs that correspond to initializers that failed will not be\n\t   * invoked).\n\t   */\n\t  closeAll: function (startIndex) {\n\t    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;\n\t    var transactionWrappers = this.transactionWrappers;\n\t    for (var i = startIndex; i < transactionWrappers.length; i++) {\n\t      var wrapper = transactionWrappers[i];\n\t      var initData = this.wrapperInitData[i];\n\t      var errorThrown;\n\t      try {\n\t        // Catching errors makes debugging more difficult, so we start with\n\t        // errorThrown set to true before setting it to false after calling\n\t        // close -- if it's still set to true in the finally block, it means\n\t        // wrapper.close threw.\n\t        errorThrown = true;\n\t        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\n\t          wrapper.close.call(this, initData);\n\t        }\n\t        errorThrown = false;\n\t      } finally {\n\t        if (errorThrown) {\n\t          // The closer for wrapper i threw an error; close the remaining\n\t          // wrappers but silence any exceptions from them to ensure that the\n\t          // first error is the one to bubble up.\n\t          try {\n\t            this.closeAll(i + 1);\n\t          } catch (e) {}\n\t        }\n\t      }\n\t    }\n\t    this.wrapperInitData.length = 0;\n\t  }\n\t};\n\t\n\tvar Transaction = {\n\t\n\t  Mixin: Mixin,\n\t\n\t  /**\n\t   * Token to look for to determine if an error occurred.\n\t   */\n\t  OBSERVED_ERROR: {}\n\t\n\t};\n\t\n\tmodule.exports = Transaction;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyObject = {};\n\t\n\tif (false) {\n\t  Object.freeze(emptyObject);\n\t}\n\t\n\tmodule.exports = emptyObject;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DisabledInputUtils\n\t */\n\t\n\t'use strict';\n\t\n\tvar disableableMouseListenerNames = {\n\t  onClick: true,\n\t  onDoubleClick: true,\n\t  onMouseDown: true,\n\t  onMouseMove: true,\n\t  onMouseUp: true,\n\t\n\t  onClickCapture: true,\n\t  onDoubleClickCapture: true,\n\t  onMouseDownCapture: true,\n\t  onMouseMoveCapture: true,\n\t  onMouseUpCapture: true\n\t};\n\t\n\t/**\n\t * Implements a host component that does not receive mouse events\n\t * when `disabled` is set.\n\t */\n\tvar DisabledInputUtils = {\n\t  getHostProps: function (inst, props) {\n\t    if (!props.disabled) {\n\t      return props;\n\t    }\n\t\n\t    // Copy the props, except the mouse listeners\n\t    var hostProps = {};\n\t    for (var key in props) {\n\t      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {\n\t        hostProps[key] = props[key];\n\t      }\n\t    }\n\t\n\t    return hostProps;\n\t  }\n\t};\n\t\n\tmodule.exports = DisabledInputUtils;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactBrowserEventEmitter\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPluginRegistry = __webpack_require__(35);\n\tvar ReactEventEmitterMixin = __webpack_require__(130);\n\tvar ViewportMetrics = __webpack_require__(74);\n\t\n\tvar getVendorPrefixedEventName = __webpack_require__(161);\n\tvar isEventSupported = __webpack_require__(52);\n\t\n\t/**\n\t * Summary of `ReactBrowserEventEmitter` event handling:\n\t *\n\t *  - Top-level delegation is used to trap most native browser events. This\n\t *    may only occur in the main thread and is the responsibility of\n\t *    ReactEventListener, which is injected and can therefore support pluggable\n\t *    event sources. This is the only work that occurs in the main thread.\n\t *\n\t *  - We normalize and de-duplicate events to account for browser quirks. This\n\t *    may be done in the worker thread.\n\t *\n\t *  - Forward these native events (with the associated top-level type used to\n\t *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n\t *    to extract any synthetic events.\n\t *\n\t *  - The `EventPluginHub` will then process each event by annotating them with\n\t *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n\t *\n\t *  - The `EventPluginHub` then dispatches the events.\n\t *\n\t * Overview of React and the event system:\n\t *\n\t * +------------+    .\n\t * |    DOM     |    .\n\t * +------------+    .\n\t *       |           .\n\t *       v           .\n\t * +------------+    .\n\t * | ReactEvent |    .\n\t * |  Listener  |    .\n\t * +------------+    .                         +-----------+\n\t *       |           .               +--------+|SimpleEvent|\n\t *       |           .               |         |Plugin     |\n\t * +-----|------+    .               v         +-----------+\n\t * |     |      |    .    +--------------+                    +------------+\n\t * |     +-----------.--->|EventPluginHub|                    |    Event   |\n\t * |            |    .    |              |     +-----------+  | Propagators|\n\t * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n\t * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n\t * |            |    .    |              |     +-----------+  |  utilities |\n\t * |     +-----------.--->|              |                    +------------+\n\t * |     |      |    .    +--------------+\n\t * +-----|------+    .                ^        +-----------+\n\t *       |           .                |        |Enter/Leave|\n\t *       +           .                +-------+|Plugin     |\n\t * +-------------+   .                         +-----------+\n\t * | application |   .\n\t * |-------------|   .\n\t * |             |   .\n\t * |             |   .\n\t * +-------------+   .\n\t *                   .\n\t *    React Core     .  General Purpose Event Plugin System\n\t */\n\t\n\tvar hasEventPageXY;\n\tvar alreadyListeningTo = {};\n\tvar isMonitoringScrollValue = false;\n\tvar reactTopListenersCounter = 0;\n\t\n\t// For events like 'submit' which don't consistently bubble (which we trap at a\n\t// lower node than `document`), binding at `document` would cause duplicate\n\t// events so we don't include them here\n\tvar topEventMapping = {\n\t  topAbort: 'abort',\n\t  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\n\t  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\n\t  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\n\t  topBlur: 'blur',\n\t  topCanPlay: 'canplay',\n\t  topCanPlayThrough: 'canplaythrough',\n\t  topChange: 'change',\n\t  topClick: 'click',\n\t  topCompositionEnd: 'compositionend',\n\t  topCompositionStart: 'compositionstart',\n\t  topCompositionUpdate: 'compositionupdate',\n\t  topContextMenu: 'contextmenu',\n\t  topCopy: 'copy',\n\t  topCut: 'cut',\n\t  topDoubleClick: 'dblclick',\n\t  topDrag: 'drag',\n\t  topDragEnd: 'dragend',\n\t  topDragEnter: 'dragenter',\n\t  topDragExit: 'dragexit',\n\t  topDragLeave: 'dragleave',\n\t  topDragOver: 'dragover',\n\t  topDragStart: 'dragstart',\n\t  topDrop: 'drop',\n\t  topDurationChange: 'durationchange',\n\t  topEmptied: 'emptied',\n\t  topEncrypted: 'encrypted',\n\t  topEnded: 'ended',\n\t  topError: 'error',\n\t  topFocus: 'focus',\n\t  topInput: 'input',\n\t  topKeyDown: 'keydown',\n\t  topKeyPress: 'keypress',\n\t  topKeyUp: 'keyup',\n\t  topLoadedData: 'loadeddata',\n\t  topLoadedMetadata: 'loadedmetadata',\n\t  topLoadStart: 'loadstart',\n\t  topMouseDown: 'mousedown',\n\t  topMouseMove: 'mousemove',\n\t  topMouseOut: 'mouseout',\n\t  topMouseOver: 'mouseover',\n\t  topMouseUp: 'mouseup',\n\t  topPaste: 'paste',\n\t  topPause: 'pause',\n\t  topPlay: 'play',\n\t  topPlaying: 'playing',\n\t  topProgress: 'progress',\n\t  topRateChange: 'ratechange',\n\t  topScroll: 'scroll',\n\t  topSeeked: 'seeked',\n\t  topSeeking: 'seeking',\n\t  topSelectionChange: 'selectionchange',\n\t  topStalled: 'stalled',\n\t  topSuspend: 'suspend',\n\t  topTextInput: 'textInput',\n\t  topTimeUpdate: 'timeupdate',\n\t  topTouchCancel: 'touchcancel',\n\t  topTouchEnd: 'touchend',\n\t  topTouchMove: 'touchmove',\n\t  topTouchStart: 'touchstart',\n\t  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\n\t  topVolumeChange: 'volumechange',\n\t  topWaiting: 'waiting',\n\t  topWheel: 'wheel'\n\t};\n\t\n\t/**\n\t * To ensure no conflicts with other potential React instances on the page\n\t */\n\tvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\t\n\tfunction getListeningForDocument(mountAt) {\n\t  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n\t  // directly.\n\t  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n\t    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n\t    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n\t  }\n\t  return alreadyListeningTo[mountAt[topListenersIDKey]];\n\t}\n\t\n\t/**\n\t * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n\t * example:\n\t *\n\t *   EventPluginHub.putListener('myID', 'onClick', myFunction);\n\t *\n\t * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n\t *\n\t * @internal\n\t */\n\tvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\n\t\n\t  /**\n\t   * Injectable event backend\n\t   */\n\t  ReactEventListener: null,\n\t\n\t  injection: {\n\t    /**\n\t     * @param {object} ReactEventListener\n\t     */\n\t    injectReactEventListener: function (ReactEventListener) {\n\t      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n\t      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets whether or not any created callbacks should be enabled.\n\t   *\n\t   * @param {boolean} enabled True if callbacks should be enabled.\n\t   */\n\t  setEnabled: function (enabled) {\n\t    if (ReactBrowserEventEmitter.ReactEventListener) {\n\t      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @return {boolean} True if callbacks are enabled.\n\t   */\n\t  isEnabled: function () {\n\t    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n\t  },\n\t\n\t  /**\n\t   * We listen for bubbled touch events on the document object.\n\t   *\n\t   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n\t   * mounting `onmousemove` events at some node that was not the document\n\t   * element. The symptoms were that if your mouse is not moving over something\n\t   * contained within that mount point (for example on the background) the\n\t   * top-level listeners for `onmousemove` won't be called. However, if you\n\t   * register the `mousemove` on the document object, then it will of course\n\t   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n\t   * top-level listeners to the document object only, at least for these\n\t   * movement types of events and possibly all events.\n\t   *\n\t   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n\t   *\n\t   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n\t   * they bubble to document.\n\t   *\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @param {object} contentDocumentHandle Document which owns the container\n\t   */\n\t  listenTo: function (registrationName, contentDocumentHandle) {\n\t    var mountAt = contentDocumentHandle;\n\t    var isListening = getListeningForDocument(mountAt);\n\t    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\t\n\t    var topLevelTypes = EventConstants.topLevelTypes;\n\t    for (var i = 0; i < dependencies.length; i++) {\n\t      var dependency = dependencies[i];\n\t      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n\t        if (dependency === topLevelTypes.topWheel) {\n\t          if (isEventSupported('wheel')) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\n\t          } else if (isEventSupported('mousewheel')) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\n\t          } else {\n\t            // Firefox needs to capture a different mouse scroll event.\n\t            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);\n\t          }\n\t        } else if (dependency === topLevelTypes.topScroll) {\n\t\n\t          if (isEventSupported('scroll', true)) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\n\t          } else {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n\t          }\n\t        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {\n\t\n\t          if (isEventSupported('focus', true)) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\n\t          } else if (isEventSupported('focusin')) {\n\t            // IE has `focusin` and `focusout` events which bubble.\n\t            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\n\t          }\n\t\n\t          // to make sure blur and focus event listeners are only attached once\n\t          isListening[topLevelTypes.topBlur] = true;\n\t          isListening[topLevelTypes.topFocus] = true;\n\t        } else if (topEventMapping.hasOwnProperty(dependency)) {\n\t          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n\t        }\n\t\n\t        isListening[dependency] = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n\t    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n\t  },\n\t\n\t  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n\t    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n\t  },\n\t\n\t  /**\n\t   * Protect against document.createEvent() returning null\n\t   * Some popup blocker extensions appear to do this:\n\t   * https://github.com/facebook/react/issues/6887\n\t   */\n\t  supportsEventPageXY: function () {\n\t    if (!document.createEvent) {\n\t      return false;\n\t    }\n\t    var ev = document.createEvent('MouseEvent');\n\t    return ev != null && 'pageX' in ev;\n\t  },\n\t\n\t  /**\n\t   * Listens to window scroll and resize events. We cache scroll values so that\n\t   * application code can access them without triggering reflows.\n\t   *\n\t   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n\t   * pageX/pageY isn't supported (legacy browsers).\n\t   *\n\t   * NOTE: Scroll events do not bubble.\n\t   *\n\t   * @see http://www.quirksmode.org/dom/events/scroll.html\n\t   */\n\t  ensureScrollValueMonitoring: function () {\n\t    if (hasEventPageXY === undefined) {\n\t      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\n\t    }\n\t    if (!hasEventPageXY && !isMonitoringScrollValue) {\n\t      var refresh = ViewportMetrics.refreshScrollValues;\n\t      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n\t      isMonitoringScrollValue = true;\n\t    }\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = ReactBrowserEventEmitter;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticMouseEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(22);\n\tvar ViewportMetrics = __webpack_require__(74);\n\t\n\tvar getEventModifierState = __webpack_require__(50);\n\t\n\t/**\n\t * @interface MouseEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar MouseEventInterface = {\n\t  screenX: null,\n\t  screenY: null,\n\t  clientX: null,\n\t  clientY: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  getModifierState: getEventModifierState,\n\t  button: function (event) {\n\t    // Webkit, Firefox, IE9+\n\t    // which:  1 2 3\n\t    // button: 0 1 2 (standard)\n\t    var button = event.button;\n\t    if ('which' in event) {\n\t      return button;\n\t    }\n\t    // IE<9\n\t    // which:  undefined\n\t    // button: 0 0 0\n\t    // button: 1 4 2 (onmouseup)\n\t    return button === 2 ? 2 : button === 4 ? 1 : 0;\n\t  },\n\t  buttons: null,\n\t  relatedTarget: function (event) {\n\t    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n\t  },\n\t  // \"Proprietary\" Interface.\n\t  pageX: function (event) {\n\t    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n\t  },\n\t  pageY: function (event) {\n\t    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\t\n\tmodule.exports = SyntheticMouseEvent;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * Based on the escape-html library, which is used under the MIT License below:\n\t *\n\t * Copyright (c) 2012-2013 TJ Holowaychuk\n\t * Copyright (c) 2015 Andreas Lubbe\n\t * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining\n\t * a copy of this software and associated documentation files (the\n\t * 'Software'), to deal in the Software without restriction, including\n\t * without limitation the rights to use, copy, modify, merge, publish,\n\t * distribute, sublicense, and/or sell copies of the Software, and to\n\t * permit persons to whom the Software is furnished to do so, subject to\n\t * the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be\n\t * included in all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n\t * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\t * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\t * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\t * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\t * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t *\n\t * @providesModule escapeTextContentForBrowser\n\t */\n\t\n\t'use strict';\n\t\n\t// code copied and modified from escape-html\n\t/**\n\t * Module variables.\n\t * @private\n\t */\n\t\n\tvar matchHtmlRegExp = /[\"'&<>]/;\n\t\n\t/**\n\t * Escape special characters in the given string of html.\n\t *\n\t * @param  {string} string The string to escape for inserting into HTML\n\t * @return {string}\n\t * @public\n\t */\n\t\n\tfunction escapeHtml(string) {\n\t  var str = '' + string;\n\t  var match = matchHtmlRegExp.exec(str);\n\t\n\t  if (!match) {\n\t    return str;\n\t  }\n\t\n\t  var escape;\n\t  var html = '';\n\t  var index = 0;\n\t  var lastIndex = 0;\n\t\n\t  for (index = match.index; index < str.length; index++) {\n\t    switch (str.charCodeAt(index)) {\n\t      case 34:\n\t        // \"\n\t        escape = '&quot;';\n\t        break;\n\t      case 38:\n\t        // &\n\t        escape = '&amp;';\n\t        break;\n\t      case 39:\n\t        // '\n\t        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n\t        break;\n\t      case 60:\n\t        // <\n\t        escape = '&lt;';\n\t        break;\n\t      case 62:\n\t        // >\n\t        escape = '&gt;';\n\t        break;\n\t      default:\n\t        continue;\n\t    }\n\t\n\t    if (lastIndex !== index) {\n\t      html += str.substring(lastIndex, index);\n\t    }\n\t\n\t    lastIndex = index + 1;\n\t    html += escape;\n\t  }\n\t\n\t  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n\t}\n\t// end code copied and modified from escape-html\n\t\n\t\n\t/**\n\t * Escapes text to prevent scripting attacks.\n\t *\n\t * @param {*} text Text value to escape.\n\t * @return {string} An escaped string.\n\t */\n\tfunction escapeTextContentForBrowser(text) {\n\t  if (typeof text === 'boolean' || typeof text === 'number') {\n\t    // this shortcircuit helps perf for types that we know will never have\n\t    // special characters, especially given that this function is used often\n\t    // for numeric dom ids.\n\t    return '' + text;\n\t  }\n\t  return escapeHtml(text);\n\t}\n\t\n\tmodule.exports = escapeTextContentForBrowser;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule setInnerHTML\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar DOMNamespaces = __webpack_require__(34);\n\t\n\tvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\n\tvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\t\n\tvar createMicrosoftUnsafeLocalFunction = __webpack_require__(48);\n\t\n\t// SVG temp container for IE lacking innerHTML\n\tvar reusableSVGContainer;\n\t\n\t/**\n\t * Set the innerHTML property of a node, ensuring that whitespace is preserved\n\t * even in IE8.\n\t *\n\t * @param {DOMElement} node\n\t * @param {string} html\n\t * @internal\n\t */\n\tvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n\t  // IE does not have innerHTML for SVG nodes, so instead we inject the\n\t  // new markup in a temp node and then move the child nodes across into\n\t  // the target node\n\t  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {\n\t    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n\t    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n\t    var svgNode = reusableSVGContainer.firstChild;\n\t    while (svgNode.firstChild) {\n\t      node.appendChild(svgNode.firstChild);\n\t    }\n\t  } else {\n\t    node.innerHTML = html;\n\t  }\n\t});\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // IE8: When updating a just created node with innerHTML only leading\n\t  // whitespace is removed. When updating an existing node with innerHTML\n\t  // whitespace in root TextNodes is also collapsed.\n\t  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\t\n\t  // Feature detection; only IE8 is known to behave improperly like this.\n\t  var testElement = document.createElement('div');\n\t  testElement.innerHTML = ' ';\n\t  if (testElement.innerHTML === '') {\n\t    setInnerHTML = function (node, html) {\n\t      // Magic theory: IE8 supposedly differentiates between added and updated\n\t      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n\t      // from worse whitespace behavior. Re-adding a node like this triggers\n\t      // the initial and more favorable whitespace behavior.\n\t      // TODO: What to do on a detached node?\n\t      if (node.parentNode) {\n\t        node.parentNode.replaceChild(node, node);\n\t      }\n\t\n\t      // We also implement a workaround for non-visible tags disappearing into\n\t      // thin air on IE8, this only happens if there is no visible text\n\t      // in-front of the non-visible tags. Piggyback on the whitespace fix\n\t      // and simply check if any non-visible tags appear in the source.\n\t      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n\t        // Recover leading whitespace by temporarily prepending any character.\n\t        // \\uFEFF has the potential advantage of being zero-width/invisible.\n\t        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n\t        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n\t        // the actual Unicode character (by Babel, for example).\n\t        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n\t        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\t\n\t        // deleteData leaves an empty `TextNode` which offsets the index of all\n\t        // children. Definitely want to avoid this.\n\t        var textNode = node.firstChild;\n\t        if (textNode.data.length === 1) {\n\t          node.removeChild(textNode);\n\t        } else {\n\t          textNode.deleteData(0, 1);\n\t        }\n\t      } else {\n\t        node.innerHTML = html;\n\t      }\n\t    };\n\t  }\n\t  testElement = null;\n\t}\n\t\n\tmodule.exports = setInnerHTML;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Constructs an enumeration with keys equal to their value.\n\t *\n\t * For example:\n\t *\n\t *   var COLORS = keyMirror({blue: null, red: null});\n\t *   var myColor = COLORS.blue;\n\t *   var isColorValid = !!COLORS[myColor];\n\t *\n\t * The last line could not be performed if the values of the generated enum were\n\t * not equal to their keys.\n\t *\n\t *   Input:  {key1: val1, key2: val2}\n\t *   Output: {key1: key1, key2: key2}\n\t *\n\t * @param {object} obj\n\t * @return {object}\n\t */\n\tvar keyMirror = function keyMirror(obj) {\n\t  var ret = {};\n\t  var key;\n\t  !(obj instanceof Object && !Array.isArray(obj)) ?  false ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;\n\t  for (key in obj) {\n\t    if (!obj.hasOwnProperty(key)) {\n\t      continue;\n\t    }\n\t    ret[key] = key;\n\t  }\n\t  return ret;\n\t};\n\t\n\tmodule.exports = keyMirror;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var require;/*! p5.js v0.5.4 October 01, 2016 */\n\t(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.p5 = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\t\n\t},{}],2:[function(_dereq_,module,exports){\n\t// Run-time checking of preconditions.\n\t\n\t'use strict';\n\t\n\t// Precondition function that checks if the given predicate is true.\n\t// If not, it will throw an error.\n\texports.argument = function(predicate, message) {\n\t    if (!predicate) {\n\t        throw new Error(message);\n\t    }\n\t};\n\t\n\t// Precondition function that checks if the given assertion is true.\n\t// If not, it will throw an error.\n\texports.assert = exports.argument;\n\t\n\t},{}],3:[function(_dereq_,module,exports){\n\t// Drawing utility functions.\n\t\n\t'use strict';\n\t\n\t// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\n\tfunction line(ctx, x1, y1, x2, y2) {\n\t    ctx.beginPath();\n\t    ctx.moveTo(x1, y1);\n\t    ctx.lineTo(x2, y2);\n\t    ctx.stroke();\n\t}\n\t\n\texports.line = line;\n\t\n\t},{}],4:[function(_dereq_,module,exports){\n\t// Glyph encoding\n\t\n\t'use strict';\n\t\n\tvar cffStandardStrings = [\n\t    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n\t    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n\t    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n\t    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n\t    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n\t    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n\t    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n\t    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n\t    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n\t    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n\t    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n\t    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n\t    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n\t    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n\t    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n\t    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n\t    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n\t    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n\t    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n\t    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n\t    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n\t    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n\t    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n\t    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n\t    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n\t    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n\t    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n\t    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n\t    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n\t    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n\t    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n\t    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n\t    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n\t    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n\t    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n\t    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n\t    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n\t    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n\t    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n\t    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n\t    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n\t    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n\t    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\t\n\tvar cffStandardEncoding = [\n\t    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n\t    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n\t    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n\t    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n\t    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n\t    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n\t    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n\t    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n\t    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n\t    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n\t    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n\t    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n\t    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n\t    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n\t    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n\t    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n\t    'lslash', 'oslash', 'oe', 'germandbls'];\n\t\n\tvar cffExpertEncoding = [\n\t    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n\t    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n\t    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n\t    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n\t    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n\t    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n\t    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n\t    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n\t    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n\t    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n\t    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n\t    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n\t    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n\t    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n\t    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n\t    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n\t    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n\t    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n\t    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n\t    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n\t    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n\t    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n\t    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n\t    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n\t    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n\t    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\t\n\tvar standardNames = [\n\t    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n\t    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n\t    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n\t    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n\t    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n\t    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n\t    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n\t    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n\t    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n\t    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n\t    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n\t    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n\t    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n\t    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n\t    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n\t    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n\t    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n\t    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n\t    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n\t    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n\t    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n\t    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n\t    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n\t    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n\t    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\t\n\t// This is the encoding used for fonts created from scratch.\n\t// It loops through all glyphs and finds the appropriate unicode value.\n\t// Since it's linear time, other encodings will be faster.\n\tfunction DefaultEncoding(font) {\n\t    this.font = font;\n\t}\n\t\n\tDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n\t    var code = c.charCodeAt(0);\n\t    var glyphs = this.font.glyphs;\n\t    if (glyphs) {\n\t        for (var i = 0; i < glyphs.length; i += 1) {\n\t            var glyph = glyphs.get(i);\n\t            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n\t                if (glyph.unicodes[j] === code) {\n\t                    return i;\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        return null;\n\t    }\n\t};\n\t\n\tfunction CmapEncoding(cmap) {\n\t    this.cmap = cmap;\n\t}\n\t\n\tCmapEncoding.prototype.charToGlyphIndex = function(c) {\n\t    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n\t};\n\t\n\tfunction CffEncoding(encoding, charset) {\n\t    this.encoding = encoding;\n\t    this.charset = charset;\n\t}\n\t\n\tCffEncoding.prototype.charToGlyphIndex = function(s) {\n\t    var code = s.charCodeAt(0);\n\t    var charName = this.encoding[code];\n\t    return this.charset.indexOf(charName);\n\t};\n\t\n\tfunction GlyphNames(post) {\n\t    var i;\n\t    switch (post.version) {\n\t    case 1:\n\t        this.names = exports.standardNames.slice();\n\t        break;\n\t    case 2:\n\t        this.names = new Array(post.numberOfGlyphs);\n\t        for (i = 0; i < post.numberOfGlyphs; i++) {\n\t            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n\t                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n\t            } else {\n\t                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n\t            }\n\t        }\n\t\n\t        break;\n\t    case 2.5:\n\t        this.names = new Array(post.numberOfGlyphs);\n\t        for (i = 0; i < post.numberOfGlyphs; i++) {\n\t            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n\t        }\n\t\n\t        break;\n\t    case 3:\n\t        this.names = [];\n\t        break;\n\t    }\n\t}\n\t\n\tGlyphNames.prototype.nameToGlyphIndex = function(name) {\n\t    return this.names.indexOf(name);\n\t};\n\t\n\tGlyphNames.prototype.glyphIndexToName = function(gid) {\n\t    return this.names[gid];\n\t};\n\t\n\tfunction addGlyphNames(font) {\n\t    var glyph;\n\t    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n\t    var charCodes = Object.keys(glyphIndexMap);\n\t\n\t    for (var i = 0; i < charCodes.length; i += 1) {\n\t        var c = charCodes[i];\n\t        var glyphIndex = glyphIndexMap[c];\n\t        glyph = font.glyphs.get(glyphIndex);\n\t        glyph.addUnicode(parseInt(c));\n\t    }\n\t\n\t    for (i = 0; i < font.glyphs.length; i += 1) {\n\t        glyph = font.glyphs.get(i);\n\t        if (font.cffEncoding) {\n\t            glyph.name = font.cffEncoding.charset[i];\n\t        } else {\n\t            glyph.name = font.glyphNames.glyphIndexToName(i);\n\t        }\n\t    }\n\t}\n\t\n\texports.cffStandardStrings = cffStandardStrings;\n\texports.cffStandardEncoding = cffStandardEncoding;\n\texports.cffExpertEncoding = cffExpertEncoding;\n\texports.standardNames = standardNames;\n\texports.DefaultEncoding = DefaultEncoding;\n\texports.CmapEncoding = CmapEncoding;\n\texports.CffEncoding = CffEncoding;\n\texports.GlyphNames = GlyphNames;\n\texports.addGlyphNames = addGlyphNames;\n\t\n\t},{}],5:[function(_dereq_,module,exports){\n\t// The Font object\n\t\n\t'use strict';\n\t\n\tvar path = _dereq_('./path');\n\tvar sfnt = _dereq_('./tables/sfnt');\n\tvar encoding = _dereq_('./encoding');\n\tvar glyphset = _dereq_('./glyphset');\n\t\n\t// A Font represents a loaded OpenType font file.\n\t// It contains a set of glyphs and methods to draw text on a drawing context,\n\t// or to get a path representing the text.\n\tfunction Font(options) {\n\t    options = options || {};\n\t\n\t    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n\t    this.familyName = options.familyName || ' ';\n\t    this.styleName = options.styleName || ' ';\n\t    this.designer = options.designer || ' ';\n\t    this.designerURL = options.designerURL || ' ';\n\t    this.manufacturer = options.manufacturer || ' ';\n\t    this.manufacturerURL = options.manufacturerURL || ' ';\n\t    this.license = options.license || ' ';\n\t    this.licenseURL = options.licenseURL || ' ';\n\t    this.version = options.version || 'Version 0.1';\n\t    this.description = options.description || ' ';\n\t    this.copyright = options.copyright || ' ';\n\t    this.trademark = options.trademark || ' ';\n\t    this.unitsPerEm = options.unitsPerEm || 1000;\n\t    this.ascender = options.ascender;\n\t    this.descender = options.descender;\n\t    this.supported = true;\n\t    this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n\t    this.encoding = new encoding.DefaultEncoding(this);\n\t    this.tables = {};\n\t}\n\t\n\t// Check if the font has a glyph for the given character.\n\tFont.prototype.hasChar = function(c) {\n\t    return this.encoding.charToGlyphIndex(c) !== null;\n\t};\n\t\n\t// Convert the given character to a single glyph index.\n\t// Note that this function assumes that there is a one-to-one mapping between\n\t// the given character and a glyph; for complex scripts this might not be the case.\n\tFont.prototype.charToGlyphIndex = function(s) {\n\t    return this.encoding.charToGlyphIndex(s);\n\t};\n\t\n\t// Convert the given character to a single Glyph object.\n\t// Note that this function assumes that there is a one-to-one mapping between\n\t// the given character and a glyph; for complex scripts this might not be the case.\n\tFont.prototype.charToGlyph = function(c) {\n\t    var glyphIndex = this.charToGlyphIndex(c);\n\t    var glyph = this.glyphs.get(glyphIndex);\n\t    if (!glyph) {\n\t        // .notdef\n\t        glyph = this.glyphs.get(0);\n\t    }\n\t\n\t    return glyph;\n\t};\n\t\n\t// Convert the given text to a list of Glyph objects.\n\t// Note that there is no strict one-to-one mapping between characters and\n\t// glyphs, so the list of returned glyphs can be larger or smaller than the\n\t// length of the given string.\n\tFont.prototype.stringToGlyphs = function(s) {\n\t    var glyphs = [];\n\t    for (var i = 0; i < s.length; i += 1) {\n\t        var c = s[i];\n\t        glyphs.push(this.charToGlyph(c));\n\t    }\n\t\n\t    return glyphs;\n\t};\n\t\n\tFont.prototype.nameToGlyphIndex = function(name) {\n\t    return this.glyphNames.nameToGlyphIndex(name);\n\t};\n\t\n\tFont.prototype.nameToGlyph = function(name) {\n\t    var glyphIndex = this.nametoGlyphIndex(name);\n\t    var glyph = this.glyphs.get(glyphIndex);\n\t    if (!glyph) {\n\t        // .notdef\n\t        glyph = this.glyphs.get(0);\n\t    }\n\t\n\t    return glyph;\n\t};\n\t\n\tFont.prototype.glyphIndexToName = function(gid) {\n\t    if (!this.glyphNames.glyphIndexToName) {\n\t        return '';\n\t    }\n\t\n\t    return this.glyphNames.glyphIndexToName(gid);\n\t};\n\t\n\t// Retrieve the value of the kerning pair between the left glyph (or its index)\n\t// and the right glyph (or its index). If no kerning pair is found, return 0.\n\t// The kerning value gets added to the advance width when calculating the spacing\n\t// between glyphs.\n\tFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n\t    leftGlyph = leftGlyph.index || leftGlyph;\n\t    rightGlyph = rightGlyph.index || rightGlyph;\n\t    var gposKerning = this.getGposKerningValue;\n\t    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n\t        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n\t};\n\t\n\t// Helper function that invokes the given callback for each glyph in the given text.\n\t// The callback gets `(glyph, x, y, fontSize, options)`.\n\tFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n\t    if (!this.supported) {\n\t        return;\n\t    }\n\t\n\t    x = x !== undefined ? x : 0;\n\t    y = y !== undefined ? y : 0;\n\t    fontSize = fontSize !== undefined ? fontSize : 72;\n\t    options = options || {};\n\t    var kerning = options.kerning === undefined ? true : options.kerning;\n\t    var fontScale = 1 / this.unitsPerEm * fontSize;\n\t    var glyphs = this.stringToGlyphs(text);\n\t    for (var i = 0; i < glyphs.length; i += 1) {\n\t        var glyph = glyphs[i];\n\t        callback(glyph, x, y, fontSize, options);\n\t        if (glyph.advanceWidth) {\n\t            x += glyph.advanceWidth * fontScale;\n\t        }\n\t\n\t        if (kerning && i < glyphs.length - 1) {\n\t            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n\t            x += kerningValue * fontScale;\n\t        }\n\t    }\n\t};\n\t\n\t// Create a Path object that represents the given text.\n\t//\n\t// text - The text to create.\n\t// x - Horizontal position of the beginning of the text. (default: 0)\n\t// y - Vertical position of the *baseline* of the text. (default: 0)\n\t// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n\t// Options is an optional object that contains:\n\t// - kerning - Whether to take kerning information into account. (default: true)\n\t//\n\t// Returns a Path object.\n\tFont.prototype.getPath = function(text, x, y, fontSize, options) {\n\t    var fullPath = new path.Path();\n\t    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n\t        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n\t        fullPath.extend(glyphPath);\n\t    });\n\t\n\t    return fullPath;\n\t};\n\t\n\t// Draw the text on the given drawing context.\n\t//\n\t// ctx - A 2D drawing context, like Canvas.\n\t// text - The text to create.\n\t// x - Horizontal position of the beginning of the text. (default: 0)\n\t// y - Vertical position of the *baseline* of the text. (default: 0)\n\t// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n\t// Options is an optional object that contains:\n\t// - kerning - Whether to take kerning information into account. (default: true)\n\tFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n\t    this.getPath(text, x, y, fontSize, options).draw(ctx);\n\t};\n\t\n\t// Draw the points of all glyphs in the text.\n\t// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n\t//\n\t// ctx - A 2D drawing context, like Canvas.\n\t// text - The text to create.\n\t// x - Horizontal position of the beginning of the text. (default: 0)\n\t// y - Vertical position of the *baseline* of the text. (default: 0)\n\t// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n\t// Options is an optional object that contains:\n\t// - kerning - Whether to take kerning information into account. (default: true)\n\tFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n\t    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n\t        glyph.drawPoints(ctx, gX, gY, gFontSize);\n\t    });\n\t};\n\t\n\t// Draw lines indicating important font measurements for all glyphs in the text.\n\t// Black lines indicate the origin of the coordinate system (point 0,0).\n\t// Blue lines indicate the glyph bounding box.\n\t// Green line indicates the advance width of the glyph.\n\t//\n\t// ctx - A 2D drawing context, like Canvas.\n\t// text - The text to create.\n\t// x - Horizontal position of the beginning of the text. (default: 0)\n\t// y - Vertical position of the *baseline* of the text. (default: 0)\n\t// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n\t// Options is an optional object that contains:\n\t// - kerning - Whether to take kerning information into account. (default: true)\n\tFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n\t    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n\t        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n\t    });\n\t};\n\t\n\t// Validate\n\tFont.prototype.validate = function() {\n\t    var warnings = [];\n\t    var _this = this;\n\t\n\t    function assert(predicate, message) {\n\t        if (!predicate) {\n\t            warnings.push(message);\n\t        }\n\t    }\n\t\n\t    function assertStringAttribute(attrName) {\n\t        assert(_this[attrName] && _this[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n\t    }\n\t\n\t    // Identification information\n\t    assertStringAttribute('familyName');\n\t    assertStringAttribute('weightName');\n\t    assertStringAttribute('manufacturer');\n\t    assertStringAttribute('copyright');\n\t    assertStringAttribute('version');\n\t\n\t    // Dimension information\n\t    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n\t};\n\t\n\t// Convert the font object to a SFNT data structure.\n\t// This structure contains all the necessary tables and metadata to create a binary OTF file.\n\tFont.prototype.toTables = function() {\n\t    return sfnt.fontToTable(this);\n\t};\n\t\n\tFont.prototype.toBuffer = function() {\n\t    var sfntTable = this.toTables();\n\t    var bytes = sfntTable.encode();\n\t    var buffer = new ArrayBuffer(bytes.length);\n\t    var intArray = new Uint8Array(buffer);\n\t    for (var i = 0; i < bytes.length; i++) {\n\t        intArray[i] = bytes[i];\n\t    }\n\t\n\t    return buffer;\n\t};\n\t\n\t// Initiate a download of the OpenType font.\n\tFont.prototype.download = function() {\n\t    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n\t    var buffer = this.toBuffer();\n\t\n\t    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n\t    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function(fs) {\n\t        fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n\t            fileEntry.createWriter(function(writer) {\n\t                var dataView = new DataView(buffer);\n\t                var blob = new Blob([dataView], {type: 'font/opentype'});\n\t                writer.write(blob);\n\t\n\t                writer.addEventListener('writeend', function() {\n\t                    // Navigating to the file will download it.\n\t                    location.href = fileEntry.toURL();\n\t                }, false);\n\t            });\n\t        });\n\t    },\n\t\n\t    function(err) {\n\t        throw err;\n\t    });\n\t};\n\t\n\texports.Font = Font;\n\t\n\t},{\"./encoding\":4,\"./glyphset\":7,\"./path\":10,\"./tables/sfnt\":25}],6:[function(_dereq_,module,exports){\n\t// The Glyph object\n\t\n\t'use strict';\n\t\n\tvar check = _dereq_('./check');\n\tvar draw = _dereq_('./draw');\n\tvar path = _dereq_('./path');\n\t\n\tfunction getPathDefinition(glyph, path) {\n\t    var _path = path || { commands: [] };\n\t    return {\n\t        configurable: true,\n\t\n\t        get: function() {\n\t            if (typeof _path === 'function') {\n\t                _path = _path();\n\t            }\n\t\n\t            return _path;\n\t        },\n\t\n\t        set: function(p) {\n\t            _path = p;\n\t        }\n\t    };\n\t}\n\t\n\t// A Glyph is an individual mark that often corresponds to a character.\n\t// Some glyphs, such as ligatures, are a combination of many characters.\n\t// Glyphs are the basic building blocks of a font.\n\t//\n\t// The `Glyph` class contains utility methods for drawing the path and its points.\n\tfunction Glyph(options) {\n\t    // By putting all the code on a prototype function (which is only declared once)\n\t    // we reduce the memory requirements for larger fonts by some 2%\n\t    this.bindConstructorValues(options);\n\t}\n\t\n\tGlyph.prototype.bindConstructorValues = function(options) {\n\t    this.index = options.index || 0;\n\t\n\t    // These three values cannnot be deferred for memory optimization:\n\t    this.name = options.name || null;\n\t    this.unicode = options.unicode || undefined;\n\t    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n\t\n\t    // But by binding these values only when necessary, we reduce can\n\t    // the memory requirements by almost 3% for larger fonts.\n\t    if (options.xMin) {\n\t        this.xMin = options.xMin;\n\t    }\n\t\n\t    if (options.yMin) {\n\t        this.yMin = options.yMin;\n\t    }\n\t\n\t    if (options.xMax) {\n\t        this.xMax = options.xMax;\n\t    }\n\t\n\t    if (options.yMax) {\n\t        this.yMax = options.yMax;\n\t    }\n\t\n\t    if (options.advanceWidth) {\n\t        this.advanceWidth = options.advanceWidth;\n\t    }\n\t\n\t    // The path for a glyph is the most memory intensive, and is bound as a value\n\t    // with a getter/setter to ensure we actually do path parsing only once the\n\t    // path is actually needed by anything.\n\t    Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n\t};\n\t\n\tGlyph.prototype.addUnicode = function(unicode) {\n\t    if (this.unicodes.length === 0) {\n\t        this.unicode = unicode;\n\t    }\n\t\n\t    this.unicodes.push(unicode);\n\t};\n\t\n\t// Convert the glyph to a Path we can draw on a drawing context.\n\t//\n\t// x - Horizontal position of the glyph. (default: 0)\n\t// y - Vertical position of the *baseline* of the glyph. (default: 0)\n\t// fontSize - Font size, in pixels (default: 72).\n\tGlyph.prototype.getPath = function(x, y, fontSize) {\n\t    x = x !== undefined ? x : 0;\n\t    y = y !== undefined ? y : 0;\n\t    fontSize = fontSize !== undefined ? fontSize : 72;\n\t    var scale = 1 / this.path.unitsPerEm * fontSize;\n\t    var p = new path.Path();\n\t    var commands = this.path.commands;\n\t    for (var i = 0; i < commands.length; i += 1) {\n\t        var cmd = commands[i];\n\t        if (cmd.type === 'M') {\n\t            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n\t        } else if (cmd.type === 'L') {\n\t            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n\t        } else if (cmd.type === 'Q') {\n\t            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n\t                               x + (cmd.x * scale), y + (-cmd.y * scale));\n\t        } else if (cmd.type === 'C') {\n\t            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n\t                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n\t                      x + (cmd.x * scale), y + (-cmd.y * scale));\n\t        } else if (cmd.type === 'Z') {\n\t            p.closePath();\n\t        }\n\t    }\n\t\n\t    return p;\n\t};\n\t\n\t// Split the glyph into contours.\n\t// This function is here for backwards compatibility, and to\n\t// provide raw access to the TrueType glyph outlines.\n\tGlyph.prototype.getContours = function() {\n\t    if (this.points === undefined) {\n\t        return [];\n\t    }\n\t\n\t    var contours = [];\n\t    var currentContour = [];\n\t    for (var i = 0; i < this.points.length; i += 1) {\n\t        var pt = this.points[i];\n\t        currentContour.push(pt);\n\t        if (pt.lastPointOfContour) {\n\t            contours.push(currentContour);\n\t            currentContour = [];\n\t        }\n\t    }\n\t\n\t    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n\t    return contours;\n\t};\n\t\n\t// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\n\tGlyph.prototype.getMetrics = function() {\n\t    var commands = this.path.commands;\n\t    var xCoords = [];\n\t    var yCoords = [];\n\t    for (var i = 0; i < commands.length; i += 1) {\n\t        var cmd = commands[i];\n\t        if (cmd.type !== 'Z') {\n\t            xCoords.push(cmd.x);\n\t            yCoords.push(cmd.y);\n\t        }\n\t\n\t        if (cmd.type === 'Q' || cmd.type === 'C') {\n\t            xCoords.push(cmd.x1);\n\t            yCoords.push(cmd.y1);\n\t        }\n\t\n\t        if (cmd.type === 'C') {\n\t            xCoords.push(cmd.x2);\n\t            yCoords.push(cmd.y2);\n\t        }\n\t    }\n\t\n\t    var metrics = {\n\t        xMin: Math.min.apply(null, xCoords),\n\t        yMin: Math.min.apply(null, yCoords),\n\t        xMax: Math.max.apply(null, xCoords),\n\t        yMax: Math.max.apply(null, yCoords),\n\t        leftSideBearing: 0\n\t    };\n\t    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n\t    return metrics;\n\t};\n\t\n\t// Draw the glyph on the given context.\n\t//\n\t// ctx - The drawing context.\n\t// x - Horizontal position of the glyph. (default: 0)\n\t// y - Vertical position of the *baseline* of the glyph. (default: 0)\n\t// fontSize - Font size, in pixels (default: 72).\n\tGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n\t    this.getPath(x, y, fontSize).draw(ctx);\n\t};\n\t\n\t// Draw the points of the glyph.\n\t// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n\t//\n\t// ctx - The drawing context.\n\t// x - Horizontal position of the glyph. (default: 0)\n\t// y - Vertical position of the *baseline* of the glyph. (default: 0)\n\t// fontSize - Font size, in pixels (default: 72).\n\tGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\t\n\t    function drawCircles(l, x, y, scale) {\n\t        var PI_SQ = Math.PI * 2;\n\t        ctx.beginPath();\n\t        for (var j = 0; j < l.length; j += 1) {\n\t            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n\t            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n\t        }\n\t\n\t        ctx.closePath();\n\t        ctx.fill();\n\t    }\n\t\n\t    x = x !== undefined ? x : 0;\n\t    y = y !== undefined ? y : 0;\n\t    fontSize = fontSize !== undefined ? fontSize : 24;\n\t    var scale = 1 / this.path.unitsPerEm * fontSize;\n\t\n\t    var blueCircles = [];\n\t    var redCircles = [];\n\t    var path = this.path;\n\t    for (var i = 0; i < path.commands.length; i += 1) {\n\t        var cmd = path.commands[i];\n\t        if (cmd.x !== undefined) {\n\t            blueCircles.push({x: cmd.x, y: -cmd.y});\n\t        }\n\t\n\t        if (cmd.x1 !== undefined) {\n\t            redCircles.push({x: cmd.x1, y: -cmd.y1});\n\t        }\n\t\n\t        if (cmd.x2 !== undefined) {\n\t            redCircles.push({x: cmd.x2, y: -cmd.y2});\n\t        }\n\t    }\n\t\n\t    ctx.fillStyle = 'blue';\n\t    drawCircles(blueCircles, x, y, scale);\n\t    ctx.fillStyle = 'red';\n\t    drawCircles(redCircles, x, y, scale);\n\t};\n\t\n\t// Draw lines indicating important font measurements.\n\t// Black lines indicate the origin of the coordinate system (point 0,0).\n\t// Blue lines indicate the glyph bounding box.\n\t// Green line indicates the advance width of the glyph.\n\t//\n\t// ctx - The drawing context.\n\t// x - Horizontal position of the glyph. (default: 0)\n\t// y - Vertical position of the *baseline* of the glyph. (default: 0)\n\t// fontSize - Font size, in pixels (default: 72).\n\tGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n\t    var scale;\n\t    x = x !== undefined ? x : 0;\n\t    y = y !== undefined ? y : 0;\n\t    fontSize = fontSize !== undefined ? fontSize : 24;\n\t    scale = 1 / this.path.unitsPerEm * fontSize;\n\t    ctx.lineWidth = 1;\n\t\n\t    // Draw the origin\n\t    ctx.strokeStyle = 'black';\n\t    draw.line(ctx, x, -10000, x, 10000);\n\t    draw.line(ctx, -10000, y, 10000, y);\n\t\n\t    // This code is here due to memory optimization: by not using\n\t    // defaults in the constructor, we save a notable amount of memory.\n\t    var xMin = this.xMin || 0;\n\t    var yMin = this.yMin || 0;\n\t    var xMax = this.xMax || 0;\n\t    var yMax = this.yMax || 0;\n\t    var advanceWidth = this.advanceWidth || 0;\n\t\n\t    // Draw the glyph box\n\t    ctx.strokeStyle = 'blue';\n\t    draw.line(ctx, x + (xMin * scale), -10000, x + (xMin * scale), 10000);\n\t    draw.line(ctx, x + (xMax * scale), -10000, x + (xMax * scale), 10000);\n\t    draw.line(ctx, -10000, y + (-yMin * scale), 10000, y + (-yMin * scale));\n\t    draw.line(ctx, -10000, y + (-yMax * scale), 10000, y + (-yMax * scale));\n\t\n\t    // Draw the advance width\n\t    ctx.strokeStyle = 'green';\n\t    draw.line(ctx, x + (advanceWidth * scale), -10000, x + (advanceWidth * scale), 10000);\n\t};\n\t\n\texports.Glyph = Glyph;\n\t\n\t},{\"./check\":2,\"./draw\":3,\"./path\":10}],7:[function(_dereq_,module,exports){\n\t// The GlyphSet object\n\t\n\t'use strict';\n\t\n\tvar _glyph = _dereq_('./glyph');\n\t\n\t// A GlyphSet represents all glyphs available in the font, but modelled using\n\t// a deferred glyph loader, for retrieving glyphs only once they are absolutely\n\t// necessary, to keep the memory footprint down.\n\tfunction GlyphSet(font, glyphs) {\n\t    this.font = font;\n\t    this.glyphs = {};\n\t    if (Array.isArray(glyphs)) {\n\t        for (var i = 0; i < glyphs.length; i++) {\n\t            this.glyphs[i] = glyphs[i];\n\t        }\n\t    }\n\t\n\t    this.length = (glyphs && glyphs.length) || 0;\n\t}\n\t\n\tGlyphSet.prototype.get = function(index) {\n\t    if (typeof this.glyphs[index] === 'function') {\n\t        this.glyphs[index] = this.glyphs[index]();\n\t    }\n\t\n\t    return this.glyphs[index];\n\t};\n\t\n\tGlyphSet.prototype.push = function(index, loader) {\n\t    this.glyphs[index] = loader;\n\t    this.length++;\n\t};\n\t\n\tfunction glyphLoader(font, index) {\n\t    return new _glyph.Glyph({index: index, font: font});\n\t}\n\t\n\t/**\n\t * Generate a stub glyph that can be filled with all metadata *except*\n\t * the \"points\" and \"path\" properties, which must be loaded only once\n\t * the glyph's path is actually requested for text shaping.\n\t */\n\t\n\tfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n\t    return function() {\n\t        var glyph = new _glyph.Glyph({index: index, font: font});\n\t\n\t        glyph.path = function() {\n\t            parseGlyph(glyph, data, position);\n\t            var path = buildPath(font.glyphs, glyph);\n\t            path.unitsPerEm = font.unitsPerEm;\n\t            return path;\n\t        };\n\t\n\t        return glyph;\n\t    };\n\t}\n\t\n\tfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n\t    return function() {\n\t        var glyph = new _glyph.Glyph({index: index, font: font});\n\t\n\t        glyph.path = function() {\n\t            var path = parseCFFCharstring(font, glyph, charstring);\n\t            path.unitsPerEm = font.unitsPerEm;\n\t            return path;\n\t        };\n\t\n\t        return glyph;\n\t    };\n\t}\n\t\n\texports.GlyphSet = GlyphSet;\n\texports.glyphLoader = glyphLoader;\n\texports.ttfGlyphLoader = ttfGlyphLoader;\n\texports.cffGlyphLoader = cffGlyphLoader;\n\t\n\t},{\"./glyph\":6}],8:[function(_dereq_,module,exports){\n\t// opentype.js\n\t// https://github.com/nodebox/opentype.js\n\t// (c) 2015 Frederik De Bleser\n\t// opentype.js may be freely distributed under the MIT license.\n\t\n\t/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\t\n\t'use strict';\n\t\n\tvar encoding = _dereq_('./encoding');\n\tvar _font = _dereq_('./font');\n\tvar glyph = _dereq_('./glyph');\n\tvar parse = _dereq_('./parse');\n\tvar path = _dereq_('./path');\n\t\n\tvar cmap = _dereq_('./tables/cmap');\n\tvar cff = _dereq_('./tables/cff');\n\tvar glyf = _dereq_('./tables/glyf');\n\tvar gpos = _dereq_('./tables/gpos');\n\tvar head = _dereq_('./tables/head');\n\tvar hhea = _dereq_('./tables/hhea');\n\tvar hmtx = _dereq_('./tables/hmtx');\n\tvar kern = _dereq_('./tables/kern');\n\tvar loca = _dereq_('./tables/loca');\n\tvar maxp = _dereq_('./tables/maxp');\n\tvar _name = _dereq_('./tables/name');\n\tvar os2 = _dereq_('./tables/os2');\n\tvar post = _dereq_('./tables/post');\n\t\n\t// File loaders /////////////////////////////////////////////////////////\n\t\n\t// Convert a Node.js Buffer to an ArrayBuffer\n\tfunction toArrayBuffer(buffer) {\n\t    var arrayBuffer = new ArrayBuffer(buffer.length);\n\t    var data = new Uint8Array(arrayBuffer);\n\t    for (var i = 0; i < buffer.length; i += 1) {\n\t        data[i] = buffer[i];\n\t    }\n\t\n\t    return arrayBuffer;\n\t}\n\t\n\tfunction loadFromFile(path, callback) {\n\t    var fs = _dereq_('fs');\n\t    fs.readFile(path, function(err, buffer) {\n\t        if (err) {\n\t            return callback(err.message);\n\t        }\n\t\n\t        callback(null, toArrayBuffer(buffer));\n\t    });\n\t}\n\t\n\tfunction loadFromUrl(url, callback) {\n\t    var request = new XMLHttpRequest();\n\t    request.open('get', url, true);\n\t    request.responseType = 'arraybuffer';\n\t    request.onload = function() {\n\t        if (request.status !== 200) {\n\t            return callback('Font could not be loaded: ' + request.statusText);\n\t        }\n\t\n\t        return callback(null, request.response);\n\t    };\n\t\n\t    request.send();\n\t}\n\t\n\t// Public API ///////////////////////////////////////////////////////////\n\t\n\t// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n\t// If the file could not be parsed (most likely because it contains Postscript outlines)\n\t// we return an empty Font object with the `supported` flag set to `false`.\n\tfunction parseBuffer(buffer) {\n\t    var indexToLocFormat;\n\t    var hmtxOffset;\n\t    var glyfOffset;\n\t    var locaOffset;\n\t    var cffOffset;\n\t    var kernOffset;\n\t    var gposOffset;\n\t\n\t    // OpenType fonts use big endian byte ordering.\n\t    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n\t    // Instead we use DataViews where we can specify endianness.\n\t\n\t    var font = new _font.Font();\n\t    var data = new DataView(buffer, 0);\n\t\n\t    var version = parse.getFixed(data, 0);\n\t    if (version === 1.0) {\n\t        font.outlinesFormat = 'truetype';\n\t    } else {\n\t        version = parse.getTag(data, 0);\n\t        if (version === 'OTTO') {\n\t            font.outlinesFormat = 'cff';\n\t        } else {\n\t            throw new Error('Unsupported OpenType version ' + version);\n\t        }\n\t    }\n\t\n\t    var numTables = parse.getUShort(data, 4);\n\t\n\t    // Offset into the table records.\n\t    var p = 12;\n\t    for (var i = 0; i < numTables; i += 1) {\n\t        var tag = parse.getTag(data, p);\n\t        var offset = parse.getULong(data, p + 8);\n\t        switch (tag) {\n\t        case 'cmap':\n\t            font.tables.cmap = cmap.parse(data, offset);\n\t            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n\t            if (!font.encoding) {\n\t                font.supported = false;\n\t            }\n\t\n\t            break;\n\t        case 'head':\n\t            font.tables.head = head.parse(data, offset);\n\t            font.unitsPerEm = font.tables.head.unitsPerEm;\n\t            indexToLocFormat = font.tables.head.indexToLocFormat;\n\t            break;\n\t        case 'hhea':\n\t            font.tables.hhea = hhea.parse(data, offset);\n\t            font.ascender = font.tables.hhea.ascender;\n\t            font.descender = font.tables.hhea.descender;\n\t            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n\t            break;\n\t        case 'hmtx':\n\t            hmtxOffset = offset;\n\t            break;\n\t        case 'maxp':\n\t            font.tables.maxp = maxp.parse(data, offset);\n\t            font.numGlyphs = font.tables.maxp.numGlyphs;\n\t            break;\n\t        case 'name':\n\t            font.tables.name = _name.parse(data, offset);\n\t            font.familyName = font.tables.name.fontFamily;\n\t            font.styleName = font.tables.name.fontSubfamily;\n\t            break;\n\t        case 'OS/2':\n\t            font.tables.os2 = os2.parse(data, offset);\n\t            break;\n\t        case 'post':\n\t            font.tables.post = post.parse(data, offset);\n\t            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n\t            break;\n\t        case 'glyf':\n\t            glyfOffset = offset;\n\t            break;\n\t        case 'loca':\n\t            locaOffset = offset;\n\t            break;\n\t        case 'CFF ':\n\t            cffOffset = offset;\n\t            break;\n\t        case 'kern':\n\t            kernOffset = offset;\n\t            break;\n\t        case 'GPOS':\n\t            gposOffset = offset;\n\t            break;\n\t        }\n\t        p += 16;\n\t    }\n\t\n\t    if (glyfOffset && locaOffset) {\n\t        var shortVersion = indexToLocFormat === 0;\n\t        var locaTable = loca.parse(data, locaOffset, font.numGlyphs, shortVersion);\n\t        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n\t        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n\t        encoding.addGlyphNames(font);\n\t    } else if (cffOffset) {\n\t        cff.parse(data, cffOffset, font);\n\t        encoding.addGlyphNames(font);\n\t    } else {\n\t        font.supported = false;\n\t    }\n\t\n\t    if (font.supported) {\n\t        if (kernOffset) {\n\t            font.kerningPairs = kern.parse(data, kernOffset);\n\t        } else {\n\t            font.kerningPairs = {};\n\t        }\n\t\n\t        if (gposOffset) {\n\t            gpos.parse(data, gposOffset, font);\n\t        }\n\t    }\n\t\n\t    return font;\n\t}\n\t\n\t// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n\t// with two arguments `(err, font)`. The `err` will be null on success,\n\t// the `font` is a Font object.\n\t//\n\t// We use the node.js callback convention so that\n\t// opentype.js can integrate with frameworks like async.js.\n\tfunction load(url, callback) {\n\t    var isNode = typeof window === 'undefined';\n\t    var loadFn = isNode ? loadFromFile : loadFromUrl;\n\t    loadFn(url, function(err, arrayBuffer) {\n\t        if (err) {\n\t            return callback(err);\n\t        }\n\t\n\t        var font = parseBuffer(arrayBuffer);\n\t        if (!font.supported) {\n\t            return callback('Font is not supported (is this a Postscript font?)');\n\t        }\n\t\n\t        return callback(null, font);\n\t    });\n\t}\n\t\n\texports._parse = parse;\n\texports.Font = _font.Font;\n\texports.Glyph = glyph.Glyph;\n\texports.Path = path.Path;\n\texports.parse = parseBuffer;\n\texports.load = load;\n\t\n\t},{\"./encoding\":4,\"./font\":5,\"./glyph\":6,\"./parse\":9,\"./path\":10,\"./tables/cff\":12,\"./tables/cmap\":13,\"./tables/glyf\":14,\"./tables/gpos\":15,\"./tables/head\":16,\"./tables/hhea\":17,\"./tables/hmtx\":18,\"./tables/kern\":19,\"./tables/loca\":20,\"./tables/maxp\":21,\"./tables/name\":22,\"./tables/os2\":23,\"./tables/post\":24,\"fs\":1}],9:[function(_dereq_,module,exports){\n\t// Parsing utility functions\n\t\n\t'use strict';\n\t\n\t// Retrieve an unsigned byte from the DataView.\n\texports.getByte = function getByte(dataView, offset) {\n\t    return dataView.getUint8(offset);\n\t};\n\t\n\texports.getCard8 = exports.getByte;\n\t\n\t// Retrieve an unsigned 16-bit short from the DataView.\n\t// The value is stored in big endian.\n\texports.getUShort = function(dataView, offset) {\n\t    return dataView.getUint16(offset, false);\n\t};\n\t\n\texports.getCard16 = exports.getUShort;\n\t\n\t// Retrieve a signed 16-bit short from the DataView.\n\t// The value is stored in big endian.\n\texports.getShort = function(dataView, offset) {\n\t    return dataView.getInt16(offset, false);\n\t};\n\t\n\t// Retrieve an unsigned 32-bit long from the DataView.\n\t// The value is stored in big endian.\n\texports.getULong = function(dataView, offset) {\n\t    return dataView.getUint32(offset, false);\n\t};\n\t\n\t// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n\t// The value is stored in big endian.\n\texports.getFixed = function(dataView, offset) {\n\t    var decimal = dataView.getInt16(offset, false);\n\t    var fraction = dataView.getUint16(offset + 2, false);\n\t    return decimal + fraction / 65535;\n\t};\n\t\n\t// Retrieve a 4-character tag from the DataView.\n\t// Tags are used to identify tables.\n\texports.getTag = function(dataView, offset) {\n\t    var tag = '';\n\t    for (var i = offset; i < offset + 4; i += 1) {\n\t        tag += String.fromCharCode(dataView.getInt8(i));\n\t    }\n\t\n\t    return tag;\n\t};\n\t\n\t// Retrieve an offset from the DataView.\n\t// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\n\texports.getOffset = function(dataView, offset, offSize) {\n\t    var v = 0;\n\t    for (var i = 0; i < offSize; i += 1) {\n\t        v <<= 8;\n\t        v += dataView.getUint8(offset + i);\n\t    }\n\t\n\t    return v;\n\t};\n\t\n\t// Retrieve a number of bytes from start offset to the end offset from the DataView.\n\texports.getBytes = function(dataView, startOffset, endOffset) {\n\t    var bytes = [];\n\t    for (var i = startOffset; i < endOffset; i += 1) {\n\t        bytes.push(dataView.getUint8(i));\n\t    }\n\t\n\t    return bytes;\n\t};\n\t\n\t// Convert the list of bytes to a string.\n\texports.bytesToString = function(bytes) {\n\t    var s = '';\n\t    for (var i = 0; i < bytes.length; i += 1) {\n\t        s += String.fromCharCode(bytes[i]);\n\t    }\n\t\n\t    return s;\n\t};\n\t\n\tvar typeOffsets = {\n\t    byte: 1,\n\t    uShort: 2,\n\t    short: 2,\n\t    uLong: 4,\n\t    fixed: 4,\n\t    longDateTime: 8,\n\t    tag: 4\n\t};\n\t\n\t// A stateful parser that changes the offset whenever a value is retrieved.\n\t// The data is a DataView.\n\tfunction Parser(data, offset) {\n\t    this.data = data;\n\t    this.offset = offset;\n\t    this.relativeOffset = 0;\n\t}\n\t\n\tParser.prototype.parseByte = function() {\n\t    var v = this.data.getUint8(this.offset + this.relativeOffset);\n\t    this.relativeOffset += 1;\n\t    return v;\n\t};\n\t\n\tParser.prototype.parseChar = function() {\n\t    var v = this.data.getInt8(this.offset + this.relativeOffset);\n\t    this.relativeOffset += 1;\n\t    return v;\n\t};\n\t\n\tParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\t\n\tParser.prototype.parseUShort = function() {\n\t    var v = this.data.getUint16(this.offset + this.relativeOffset);\n\t    this.relativeOffset += 2;\n\t    return v;\n\t};\n\t\n\tParser.prototype.parseCard16 = Parser.prototype.parseUShort;\n\tParser.prototype.parseSID = Parser.prototype.parseUShort;\n\tParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\t\n\tParser.prototype.parseShort = function() {\n\t    var v = this.data.getInt16(this.offset + this.relativeOffset);\n\t    this.relativeOffset += 2;\n\t    return v;\n\t};\n\t\n\tParser.prototype.parseF2Dot14 = function() {\n\t    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n\t    this.relativeOffset += 2;\n\t    return v;\n\t};\n\t\n\tParser.prototype.parseULong = function() {\n\t    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n\t    this.relativeOffset += 4;\n\t    return v;\n\t};\n\t\n\tParser.prototype.parseFixed = function() {\n\t    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n\t    this.relativeOffset += 4;\n\t    return v;\n\t};\n\t\n\tParser.prototype.parseOffset16List =\n\tParser.prototype.parseUShortList = function(count) {\n\t    var offsets = new Array(count);\n\t    var dataView = this.data;\n\t    var offset = this.offset + this.relativeOffset;\n\t    for (var i = 0; i < count; i++) {\n\t        offsets[i] = exports.getUShort(dataView, offset);\n\t        offset += 2;\n\t    }\n\t\n\t    this.relativeOffset += count * 2;\n\t    return offsets;\n\t};\n\t\n\tParser.prototype.parseString = function(length) {\n\t    var dataView = this.data;\n\t    var offset = this.offset + this.relativeOffset;\n\t    var string = '';\n\t    this.relativeOffset += length;\n\t    for (var i = 0; i < length; i++) {\n\t        string += String.fromCharCode(dataView.getUint8(offset + i));\n\t    }\n\t\n\t    return string;\n\t};\n\t\n\tParser.prototype.parseTag = function() {\n\t    return this.parseString(4);\n\t};\n\t\n\t// LONGDATETIME is a 64-bit integer.\n\t// JavaScript and unix timestamps traditionally use 32 bits, so we\n\t// only take the last 32 bits.\n\tParser.prototype.parseLongDateTime = function() {\n\t    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n\t    this.relativeOffset += 8;\n\t    return v;\n\t};\n\t\n\tParser.prototype.parseFixed = function() {\n\t    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n\t    this.relativeOffset += 4;\n\t    return v / 65536;\n\t};\n\t\n\tParser.prototype.parseVersion = function() {\n\t    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\t\n\t    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n\t    // This returns the correct number if minor = 0xN000 where N is 0-9\n\t    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n\t    this.relativeOffset += 4;\n\t    return major + minor / 0x1000 / 10;\n\t};\n\t\n\tParser.prototype.skip = function(type, amount) {\n\t    if (amount === undefined) {\n\t        amount = 1;\n\t    }\n\t\n\t    this.relativeOffset += typeOffsets[type] * amount;\n\t};\n\t\n\texports.Parser = Parser;\n\t\n\t},{}],10:[function(_dereq_,module,exports){\n\t// Geometric objects\n\t\n\t'use strict';\n\t\n\t// A bézier path containing a set of path commands similar to a SVG path.\n\t// Paths can be drawn on a context using `draw`.\n\tfunction Path() {\n\t    this.commands = [];\n\t    this.fill = 'black';\n\t    this.stroke = null;\n\t    this.strokeWidth = 1;\n\t}\n\t\n\tPath.prototype.moveTo = function(x, y) {\n\t    this.commands.push({\n\t        type: 'M',\n\t        x: x,\n\t        y: y\n\t    });\n\t};\n\t\n\tPath.prototype.lineTo = function(x, y) {\n\t    this.commands.push({\n\t        type: 'L',\n\t        x: x,\n\t        y: y\n\t    });\n\t};\n\t\n\tPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n\t    this.commands.push({\n\t        type: 'C',\n\t        x1: x1,\n\t        y1: y1,\n\t        x2: x2,\n\t        y2: y2,\n\t        x: x,\n\t        y: y\n\t    });\n\t};\n\t\n\tPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n\t    this.commands.push({\n\t        type: 'Q',\n\t        x1: x1,\n\t        y1: y1,\n\t        x: x,\n\t        y: y\n\t    });\n\t};\n\t\n\tPath.prototype.close = Path.prototype.closePath = function() {\n\t    this.commands.push({\n\t        type: 'Z'\n\t    });\n\t};\n\t\n\t// Add the given path or list of commands to the commands of this path.\n\tPath.prototype.extend = function(pathOrCommands) {\n\t    if (pathOrCommands.commands) {\n\t        pathOrCommands = pathOrCommands.commands;\n\t    }\n\t\n\t    Array.prototype.push.apply(this.commands, pathOrCommands);\n\t};\n\t\n\t// Draw the path to a 2D context.\n\tPath.prototype.draw = function(ctx) {\n\t    ctx.beginPath();\n\t    for (var i = 0; i < this.commands.length; i += 1) {\n\t        var cmd = this.commands[i];\n\t        if (cmd.type === 'M') {\n\t            ctx.moveTo(cmd.x, cmd.y);\n\t        } else if (cmd.type === 'L') {\n\t            ctx.lineTo(cmd.x, cmd.y);\n\t        } else if (cmd.type === 'C') {\n\t            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n\t        } else if (cmd.type === 'Q') {\n\t            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n\t        } else if (cmd.type === 'Z') {\n\t            ctx.closePath();\n\t        }\n\t    }\n\t\n\t    if (this.fill) {\n\t        ctx.fillStyle = this.fill;\n\t        ctx.fill();\n\t    }\n\t\n\t    if (this.stroke) {\n\t        ctx.strokeStyle = this.stroke;\n\t        ctx.lineWidth = this.strokeWidth;\n\t        ctx.stroke();\n\t    }\n\t};\n\t\n\t// Convert the Path to a string of path data instructions\n\t// See http://www.w3.org/TR/SVG/paths.html#PathData\n\t// Parameters:\n\t// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\n\tPath.prototype.toPathData = function(decimalPlaces) {\n\t    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\t\n\t    function floatToString(v) {\n\t        if (Math.round(v) === v) {\n\t            return '' + Math.round(v);\n\t        } else {\n\t            return v.toFixed(decimalPlaces);\n\t        }\n\t    }\n\t\n\t    function packValues() {\n\t        var s = '';\n\t        for (var i = 0; i < arguments.length; i += 1) {\n\t            var v = arguments[i];\n\t            if (v >= 0 && i > 0) {\n\t                s += ' ';\n\t            }\n\t\n\t            s += floatToString(v);\n\t        }\n\t\n\t        return s;\n\t    }\n\t\n\t    var d = '';\n\t    for (var i = 0; i < this.commands.length; i += 1) {\n\t        var cmd = this.commands[i];\n\t        if (cmd.type === 'M') {\n\t            d += 'M' + packValues(cmd.x, cmd.y);\n\t        } else if (cmd.type === 'L') {\n\t            d += 'L' + packValues(cmd.x, cmd.y);\n\t        } else if (cmd.type === 'C') {\n\t            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n\t        } else if (cmd.type === 'Q') {\n\t            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n\t        } else if (cmd.type === 'Z') {\n\t            d += 'Z';\n\t        }\n\t    }\n\t\n\t    return d;\n\t};\n\t\n\t// Convert the path to a SVG <path> element, as a string.\n\t// Parameters:\n\t// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\n\tPath.prototype.toSVG = function(decimalPlaces) {\n\t    var svg = '<path d=\"';\n\t    svg += this.toPathData(decimalPlaces);\n\t    svg += '\"';\n\t    if (this.fill & this.fill !== 'black') {\n\t        if (this.fill === null) {\n\t            svg += ' fill=\"none\"';\n\t        } else {\n\t            svg += ' fill=\"' + this.fill + '\"';\n\t        }\n\t    }\n\t\n\t    if (this.stroke) {\n\t        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n\t    }\n\t\n\t    svg += '/>';\n\t    return svg;\n\t};\n\t\n\texports.Path = Path;\n\t\n\t},{}],11:[function(_dereq_,module,exports){\n\t// Table metadata\n\t\n\t'use strict';\n\t\n\tvar check = _dereq_('./check');\n\tvar encode = _dereq_('./types').encode;\n\tvar sizeOf = _dereq_('./types').sizeOf;\n\t\n\tfunction Table(tableName, fields, options) {\n\t    var i;\n\t    for (i = 0; i < fields.length; i += 1) {\n\t        var field = fields[i];\n\t        this[field.name] = field.value;\n\t    }\n\t\n\t    this.tableName = tableName;\n\t    this.fields = fields;\n\t    if (options) {\n\t        var optionKeys = Object.keys(options);\n\t        for (i = 0; i < optionKeys.length; i += 1) {\n\t            var k = optionKeys[i];\n\t            var v = options[k];\n\t            if (this[k] !== undefined) {\n\t                this[k] = v;\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\tTable.prototype.sizeOf = function() {\n\t    var v = 0;\n\t    for (var i = 0; i < this.fields.length; i += 1) {\n\t        var field = this.fields[i];\n\t        var value = this[field.name];\n\t        if (value === undefined) {\n\t            value = field.value;\n\t        }\n\t\n\t        if (typeof value.sizeOf === 'function') {\n\t            v += value.sizeOf();\n\t        } else {\n\t            var sizeOfFunction = sizeOf[field.type];\n\t            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n\t            v += sizeOfFunction(value);\n\t        }\n\t    }\n\t\n\t    return v;\n\t};\n\t\n\tTable.prototype.encode = function() {\n\t    return encode.TABLE(this);\n\t};\n\t\n\texports.Table = Table;\n\t\n\t},{\"./check\":2,\"./types\":26}],12:[function(_dereq_,module,exports){\n\t// The `CFF` table contains the glyph outlines in PostScript format.\n\t// https://www.microsoft.com/typography/OTSPEC/cff.htm\n\t// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n\t// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\t\n\t'use strict';\n\t\n\tvar encoding = _dereq_('../encoding');\n\tvar glyphset = _dereq_('../glyphset');\n\tvar parse = _dereq_('../parse');\n\tvar path = _dereq_('../path');\n\tvar table = _dereq_('../table');\n\t\n\t// Custom equals function that can also check lists.\n\tfunction equals(a, b) {\n\t    if (a === b) {\n\t        return true;\n\t    } else if (Array.isArray(a) && Array.isArray(b)) {\n\t        if (a.length !== b.length) {\n\t            return false;\n\t        }\n\t\n\t        for (var i = 0; i < a.length; i += 1) {\n\t            if (!equals(a[i], b[i])) {\n\t                return false;\n\t            }\n\t        }\n\t\n\t        return true;\n\t    } else {\n\t        return false;\n\t    }\n\t}\n\t\n\t// Parse a `CFF` INDEX array.\n\t// An index array consists of a list of offsets, then a list of objects at those offsets.\n\tfunction parseCFFIndex(data, start, conversionFn) {\n\t    //var i, objectOffset, endOffset;\n\t    var offsets = [];\n\t    var objects = [];\n\t    var count = parse.getCard16(data, start);\n\t    var i;\n\t    var objectOffset;\n\t    var endOffset;\n\t    if (count !== 0) {\n\t        var offsetSize = parse.getByte(data, start + 2);\n\t        objectOffset = start + ((count + 1) * offsetSize) + 2;\n\t        var pos = start + 3;\n\t        for (i = 0; i < count + 1; i += 1) {\n\t            offsets.push(parse.getOffset(data, pos, offsetSize));\n\t            pos += offsetSize;\n\t        }\n\t\n\t        // The total size of the index array is 4 header bytes + the value of the last offset.\n\t        endOffset = objectOffset + offsets[count];\n\t    } else {\n\t        endOffset = start + 2;\n\t    }\n\t\n\t    for (i = 0; i < offsets.length - 1; i += 1) {\n\t        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n\t        if (conversionFn) {\n\t            value = conversionFn(value);\n\t        }\n\t\n\t        objects.push(value);\n\t    }\n\t\n\t    return {objects: objects, startOffset: start, endOffset: endOffset};\n\t}\n\t\n\t// Parse a `CFF` DICT real value.\n\tfunction parseFloatOperand(parser) {\n\t    var s = '';\n\t    var eof = 15;\n\t    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n\t    while (true) {\n\t        var b = parser.parseByte();\n\t        var n1 = b >> 4;\n\t        var n2 = b & 15;\n\t\n\t        if (n1 === eof) {\n\t            break;\n\t        }\n\t\n\t        s += lookup[n1];\n\t\n\t        if (n2 === eof) {\n\t            break;\n\t        }\n\t\n\t        s += lookup[n2];\n\t    }\n\t\n\t    return parseFloat(s);\n\t}\n\t\n\t// Parse a `CFF` DICT operand.\n\tfunction parseOperand(parser, b0) {\n\t    var b1;\n\t    var b2;\n\t    var b3;\n\t    var b4;\n\t    if (b0 === 28) {\n\t        b1 = parser.parseByte();\n\t        b2 = parser.parseByte();\n\t        return b1 << 8 | b2;\n\t    }\n\t\n\t    if (b0 === 29) {\n\t        b1 = parser.parseByte();\n\t        b2 = parser.parseByte();\n\t        b3 = parser.parseByte();\n\t        b4 = parser.parseByte();\n\t        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n\t    }\n\t\n\t    if (b0 === 30) {\n\t        return parseFloatOperand(parser);\n\t    }\n\t\n\t    if (b0 >= 32 && b0 <= 246) {\n\t        return b0 - 139;\n\t    }\n\t\n\t    if (b0 >= 247 && b0 <= 250) {\n\t        b1 = parser.parseByte();\n\t        return (b0 - 247) * 256 + b1 + 108;\n\t    }\n\t\n\t    if (b0 >= 251 && b0 <= 254) {\n\t        b1 = parser.parseByte();\n\t        return -(b0 - 251) * 256 - b1 - 108;\n\t    }\n\t\n\t    throw new Error('Invalid b0 ' + b0);\n\t}\n\t\n\t// Convert the entries returned by `parseDict` to a proper dictionary.\n\t// If a value is a list of one, it is unpacked.\n\tfunction entriesToObject(entries) {\n\t    var o = {};\n\t    for (var i = 0; i < entries.length; i += 1) {\n\t        var key = entries[i][0];\n\t        var values = entries[i][1];\n\t        var value;\n\t        if (values.length === 1) {\n\t            value = values[0];\n\t        } else {\n\t            value = values;\n\t        }\n\t\n\t        if (o.hasOwnProperty(key)) {\n\t            throw new Error('Object ' + o + ' already has key ' + key);\n\t        }\n\t\n\t        o[key] = value;\n\t    }\n\t\n\t    return o;\n\t}\n\t\n\t// Parse a `CFF` DICT object.\n\t// A dictionary contains key-value pairs in a compact tokenized format.\n\tfunction parseCFFDict(data, start, size) {\n\t    start = start !== undefined ? start : 0;\n\t    var parser = new parse.Parser(data, start);\n\t    var entries = [];\n\t    var operands = [];\n\t    size = size !== undefined ? size : data.length;\n\t\n\t    while (parser.relativeOffset < size) {\n\t        var op = parser.parseByte();\n\t\n\t        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n\t        // Values <= 21 are operators.\n\t        if (op <= 21) {\n\t            // Two-byte operators have an initial escape byte of 12.\n\t            if (op === 12) {\n\t                op = 1200 + parser.parseByte();\n\t            }\n\t\n\t            entries.push([op, operands]);\n\t            operands = [];\n\t        } else {\n\t            // Since the operands (values) come before the operators (keys), we store all operands in a list\n\t            // until we encounter an operator.\n\t            operands.push(parseOperand(parser, op));\n\t        }\n\t    }\n\t\n\t    return entriesToObject(entries);\n\t}\n\t\n\t// Given a String Index (SID), return the value of the string.\n\t// Strings below index 392 are standard CFF strings and are not encoded in the font.\n\tfunction getCFFString(strings, index) {\n\t    if (index <= 390) {\n\t        index = encoding.cffStandardStrings[index];\n\t    } else {\n\t        index = strings[index - 391];\n\t    }\n\t\n\t    return index;\n\t}\n\t\n\t// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n\t// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\n\tfunction interpretDict(dict, meta, strings) {\n\t    var newDict = {};\n\t\n\t    // Because we also want to include missing values, we start out from the meta list\n\t    // and lookup values in the dict.\n\t    for (var i = 0; i < meta.length; i += 1) {\n\t        var m = meta[i];\n\t        var value = dict[m.op];\n\t        if (value === undefined) {\n\t            value = m.value !== undefined ? m.value : null;\n\t        }\n\t\n\t        if (m.type === 'SID') {\n\t            value = getCFFString(strings, value);\n\t        }\n\t\n\t        newDict[m.name] = value;\n\t    }\n\t\n\t    return newDict;\n\t}\n\t\n\t// Parse the CFF header.\n\tfunction parseCFFHeader(data, start) {\n\t    var header = {};\n\t    header.formatMajor = parse.getCard8(data, start);\n\t    header.formatMinor = parse.getCard8(data, start + 1);\n\t    header.size = parse.getCard8(data, start + 2);\n\t    header.offsetSize = parse.getCard8(data, start + 3);\n\t    header.startOffset = start;\n\t    header.endOffset = start + 4;\n\t    return header;\n\t}\n\t\n\tvar TOP_DICT_META = [\n\t    {name: 'version', op: 0, type: 'SID'},\n\t    {name: 'notice', op: 1, type: 'SID'},\n\t    {name: 'copyright', op: 1200, type: 'SID'},\n\t    {name: 'fullName', op: 2, type: 'SID'},\n\t    {name: 'familyName', op: 3, type: 'SID'},\n\t    {name: 'weight', op: 4, type: 'SID'},\n\t    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n\t    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n\t    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n\t    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n\t    {name: 'paintType', op: 1205, type: 'number', value: 0},\n\t    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n\t    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n\t    {name: 'uniqueId', op: 13, type: 'number'},\n\t    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n\t    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n\t    {name: 'xuid', op: 14, type: [], value: null},\n\t    {name: 'charset', op: 15, type: 'offset', value: 0},\n\t    {name: 'encoding', op: 16, type: 'offset', value: 0},\n\t    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n\t    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n\t];\n\t\n\tvar PRIVATE_DICT_META = [\n\t    {name: 'subrs', op: 19, type: 'offset', value: 0},\n\t    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n\t    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n\t];\n\t\n\t// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n\t// The top dictionary contains the essential metadata for the font, together with the private dictionary.\n\tfunction parseCFFTopDict(data, strings) {\n\t    var dict = parseCFFDict(data, 0, data.byteLength);\n\t    return interpretDict(dict, TOP_DICT_META, strings);\n\t}\n\t\n\t// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\n\tfunction parseCFFPrivateDict(data, start, size, strings) {\n\t    var dict = parseCFFDict(data, start, size);\n\t    return interpretDict(dict, PRIVATE_DICT_META, strings);\n\t}\n\t\n\t// Parse the CFF charset table, which contains internal names for all the glyphs.\n\t// This function will return a list of glyph names.\n\t// See Adobe TN #5176 chapter 13, \"Charsets\".\n\tfunction parseCFFCharset(data, start, nGlyphs, strings) {\n\t    var i;\n\t    var sid;\n\t    var count;\n\t    var parser = new parse.Parser(data, start);\n\t\n\t    // The .notdef glyph is not included, so subtract 1.\n\t    nGlyphs -= 1;\n\t    var charset = ['.notdef'];\n\t\n\t    var format = parser.parseCard8();\n\t    if (format === 0) {\n\t        for (i = 0; i < nGlyphs; i += 1) {\n\t            sid = parser.parseSID();\n\t            charset.push(getCFFString(strings, sid));\n\t        }\n\t    } else if (format === 1) {\n\t        while (charset.length <= nGlyphs) {\n\t            sid = parser.parseSID();\n\t            count = parser.parseCard8();\n\t            for (i = 0; i <= count; i += 1) {\n\t                charset.push(getCFFString(strings, sid));\n\t                sid += 1;\n\t            }\n\t        }\n\t    } else if (format === 2) {\n\t        while (charset.length <= nGlyphs) {\n\t            sid = parser.parseSID();\n\t            count = parser.parseCard16();\n\t            for (i = 0; i <= count; i += 1) {\n\t                charset.push(getCFFString(strings, sid));\n\t                sid += 1;\n\t            }\n\t        }\n\t    } else {\n\t        throw new Error('Unknown charset format ' + format);\n\t    }\n\t\n\t    return charset;\n\t}\n\t\n\t// Parse the CFF encoding data. Only one encoding can be specified per font.\n\t// See Adobe TN #5176 chapter 12, \"Encodings\".\n\tfunction parseCFFEncoding(data, start, charset) {\n\t    var i;\n\t    var code;\n\t    var enc = {};\n\t    var parser = new parse.Parser(data, start);\n\t    var format = parser.parseCard8();\n\t    if (format === 0) {\n\t        var nCodes = parser.parseCard8();\n\t        for (i = 0; i < nCodes; i += 1) {\n\t            code = parser.parseCard8();\n\t            enc[code] = i;\n\t        }\n\t    } else if (format === 1) {\n\t        var nRanges = parser.parseCard8();\n\t        code = 1;\n\t        for (i = 0; i < nRanges; i += 1) {\n\t            var first = parser.parseCard8();\n\t            var nLeft = parser.parseCard8();\n\t            for (var j = first; j <= first + nLeft; j += 1) {\n\t                enc[j] = code;\n\t                code += 1;\n\t            }\n\t        }\n\t    } else {\n\t        throw new Error('Unknown encoding format ' + format);\n\t    }\n\t\n\t    return new encoding.CffEncoding(enc, charset);\n\t}\n\t\n\t// Take in charstring code and return a Glyph object.\n\t// The encoding is described in the Type 2 Charstring Format\n\t// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\n\tfunction parseCFFCharstring(font, glyph, code) {\n\t    var c1x;\n\t    var c1y;\n\t    var c2x;\n\t    var c2y;\n\t    var p = new path.Path();\n\t    var stack = [];\n\t    var nStems = 0;\n\t    var haveWidth = false;\n\t    var width = font.defaultWidthX;\n\t    var open = false;\n\t    var x = 0;\n\t    var y = 0;\n\t\n\t    function newContour(x, y) {\n\t        if (open) {\n\t            p.closePath();\n\t        }\n\t\n\t        p.moveTo(x, y);\n\t        open = true;\n\t    }\n\t\n\t    function parseStems() {\n\t        var hasWidthArg;\n\t\n\t        // The number of stem operators on the stack is always even.\n\t        // If the value is uneven, that means a width is specified.\n\t        hasWidthArg = stack.length % 2 !== 0;\n\t        if (hasWidthArg && !haveWidth) {\n\t            width = stack.shift() + font.nominalWidthX;\n\t        }\n\t\n\t        nStems += stack.length >> 1;\n\t        stack.length = 0;\n\t        haveWidth = true;\n\t    }\n\t\n\t    function parse(code) {\n\t        var b1;\n\t        var b2;\n\t        var b3;\n\t        var b4;\n\t        var codeIndex;\n\t        var subrCode;\n\t        var jpx;\n\t        var jpy;\n\t        var c3x;\n\t        var c3y;\n\t        var c4x;\n\t        var c4y;\n\t\n\t        var i = 0;\n\t        while (i < code.length) {\n\t            var v = code[i];\n\t            i += 1;\n\t            switch (v) {\n\t            case 1: // hstem\n\t                parseStems();\n\t                break;\n\t            case 3: // vstem\n\t                parseStems();\n\t                break;\n\t            case 4: // vmoveto\n\t                if (stack.length > 1 && !haveWidth) {\n\t                    width = stack.shift() + font.nominalWidthX;\n\t                    haveWidth = true;\n\t                }\n\t\n\t                y += stack.pop();\n\t                newContour(x, y);\n\t                break;\n\t            case 5: // rlineto\n\t                while (stack.length > 0) {\n\t                    x += stack.shift();\n\t                    y += stack.shift();\n\t                    p.lineTo(x, y);\n\t                }\n\t\n\t                break;\n\t            case 6: // hlineto\n\t                while (stack.length > 0) {\n\t                    x += stack.shift();\n\t                    p.lineTo(x, y);\n\t                    if (stack.length === 0) {\n\t                        break;\n\t                    }\n\t\n\t                    y += stack.shift();\n\t                    p.lineTo(x, y);\n\t                }\n\t\n\t                break;\n\t            case 7: // vlineto\n\t                while (stack.length > 0) {\n\t                    y += stack.shift();\n\t                    p.lineTo(x, y);\n\t                    if (stack.length === 0) {\n\t                        break;\n\t                    }\n\t\n\t                    x += stack.shift();\n\t                    p.lineTo(x, y);\n\t                }\n\t\n\t                break;\n\t            case 8: // rrcurveto\n\t                while (stack.length > 0) {\n\t                    c1x = x + stack.shift();\n\t                    c1y = y + stack.shift();\n\t                    c2x = c1x + stack.shift();\n\t                    c2y = c1y + stack.shift();\n\t                    x = c2x + stack.shift();\n\t                    y = c2y + stack.shift();\n\t                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n\t                }\n\t\n\t                break;\n\t            case 10: // callsubr\n\t                codeIndex = stack.pop() + font.subrsBias;\n\t                subrCode = font.subrs[codeIndex];\n\t                if (subrCode) {\n\t                    parse(subrCode);\n\t                }\n\t\n\t                break;\n\t            case 11: // return\n\t                return;\n\t            case 12: // flex operators\n\t                v = code[i];\n\t                i += 1;\n\t                switch (v) {\n\t                case 35: // flex\n\t                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n\t                    c1x = x   + stack.shift();    // dx1\n\t                    c1y = y   + stack.shift();    // dy1\n\t                    c2x = c1x + stack.shift();    // dx2\n\t                    c2y = c1y + stack.shift();    // dy2\n\t                    jpx = c2x + stack.shift();    // dx3\n\t                    jpy = c2y + stack.shift();    // dy3\n\t                    c3x = jpx + stack.shift();    // dx4\n\t                    c3y = jpy + stack.shift();    // dy4\n\t                    c4x = c3x + stack.shift();    // dx5\n\t                    c4y = c3y + stack.shift();    // dy5\n\t                    x = c4x + stack.shift();      // dx6\n\t                    y = c4y + stack.shift();      // dy6\n\t                    stack.shift();                // flex depth\n\t                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n\t                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n\t                    break;\n\t                case 34: // hflex\n\t                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n\t                    c1x = x   + stack.shift();    // dx1\n\t                    c1y = y;                      // dy1\n\t                    c2x = c1x + stack.shift();    // dx2\n\t                    c2y = c1y + stack.shift();    // dy2\n\t                    jpx = c2x + stack.shift();    // dx3\n\t                    jpy = c2y;                    // dy3\n\t                    c3x = jpx + stack.shift();    // dx4\n\t                    c3y = c2y;                    // dy4\n\t                    c4x = c3x + stack.shift();    // dx5\n\t                    c4y = y;                      // dy5\n\t                    x = c4x + stack.shift();      // dx6\n\t                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n\t                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n\t                    break;\n\t                case 36: // hflex1\n\t                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n\t                    c1x = x   + stack.shift();    // dx1\n\t                    c1y = y   + stack.shift();    // dy1\n\t                    c2x = c1x + stack.shift();    // dx2\n\t                    c2y = c1y + stack.shift();    // dy2\n\t                    jpx = c2x + stack.shift();    // dx3\n\t                    jpy = c2y;                    // dy3\n\t                    c3x = jpx + stack.shift();    // dx4\n\t                    c3y = c2y;                    // dy4\n\t                    c4x = c3x + stack.shift();    // dx5\n\t                    c4y = c3y + stack.shift();    // dy5\n\t                    x = c4x + stack.shift();      // dx6\n\t                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n\t                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n\t                    break;\n\t                case 37: // flex1\n\t                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n\t                    c1x = x   + stack.shift();    // dx1\n\t                    c1y = y   + stack.shift();    // dy1\n\t                    c2x = c1x + stack.shift();    // dx2\n\t                    c2y = c1y + stack.shift();    // dy2\n\t                    jpx = c2x + stack.shift();    // dx3\n\t                    jpy = c2y + stack.shift();    // dy3\n\t                    c3x = jpx + stack.shift();    // dx4\n\t                    c3y = jpy + stack.shift();    // dy4\n\t                    c4x = c3x + stack.shift();    // dx5\n\t                    c4y = c3y + stack.shift();    // dy5\n\t                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n\t                        x = c4x + stack.shift();\n\t                    } else {\n\t                        y = c4y + stack.shift();\n\t                    }\n\t\n\t                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n\t                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n\t                    break;\n\t                default:\n\t                    console.log('Glyph ' + glyph.index + ': unknown operator ' + 1200 + v);\n\t                    stack.length = 0;\n\t                }\n\t                break;\n\t            case 14: // endchar\n\t                if (stack.length > 0 && !haveWidth) {\n\t                    width = stack.shift() + font.nominalWidthX;\n\t                    haveWidth = true;\n\t                }\n\t\n\t                if (open) {\n\t                    p.closePath();\n\t                    open = false;\n\t                }\n\t\n\t                break;\n\t            case 18: // hstemhm\n\t                parseStems();\n\t                break;\n\t            case 19: // hintmask\n\t            case 20: // cntrmask\n\t                parseStems();\n\t                i += (nStems + 7) >> 3;\n\t                break;\n\t            case 21: // rmoveto\n\t                if (stack.length > 2 && !haveWidth) {\n\t                    width = stack.shift() + font.nominalWidthX;\n\t                    haveWidth = true;\n\t                }\n\t\n\t                y += stack.pop();\n\t                x += stack.pop();\n\t                newContour(x, y);\n\t                break;\n\t            case 22: // hmoveto\n\t                if (stack.length > 1 && !haveWidth) {\n\t                    width = stack.shift() + font.nominalWidthX;\n\t                    haveWidth = true;\n\t                }\n\t\n\t                x += stack.pop();\n\t                newContour(x, y);\n\t                break;\n\t            case 23: // vstemhm\n\t                parseStems();\n\t                break;\n\t            case 24: // rcurveline\n\t                while (stack.length > 2) {\n\t                    c1x = x + stack.shift();\n\t                    c1y = y + stack.shift();\n\t                    c2x = c1x + stack.shift();\n\t                    c2y = c1y + stack.shift();\n\t                    x = c2x + stack.shift();\n\t                    y = c2y + stack.shift();\n\t                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n\t                }\n\t\n\t                x += stack.shift();\n\t                y += stack.shift();\n\t                p.lineTo(x, y);\n\t                break;\n\t            case 25: // rlinecurve\n\t                while (stack.length > 6) {\n\t                    x += stack.shift();\n\t                    y += stack.shift();\n\t                    p.lineTo(x, y);\n\t                }\n\t\n\t                c1x = x + stack.shift();\n\t                c1y = y + stack.shift();\n\t                c2x = c1x + stack.shift();\n\t                c2y = c1y + stack.shift();\n\t                x = c2x + stack.shift();\n\t                y = c2y + stack.shift();\n\t                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n\t                break;\n\t            case 26: // vvcurveto\n\t                if (stack.length % 2) {\n\t                    x += stack.shift();\n\t                }\n\t\n\t                while (stack.length > 0) {\n\t                    c1x = x;\n\t                    c1y = y + stack.shift();\n\t                    c2x = c1x + stack.shift();\n\t                    c2y = c1y + stack.shift();\n\t                    x = c2x;\n\t                    y = c2y + stack.shift();\n\t                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n\t                }\n\t\n\t                break;\n\t            case 27: // hhcurveto\n\t                if (stack.length % 2) {\n\t                    y += stack.shift();\n\t                }\n\t\n\t                while (stack.length > 0) {\n\t                    c1x = x + stack.shift();\n\t                    c1y = y;\n\t                    c2x = c1x + stack.shift();\n\t                    c2y = c1y + stack.shift();\n\t                    x = c2x + stack.shift();\n\t                    y = c2y;\n\t                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n\t                }\n\t\n\t                break;\n\t            case 28: // shortint\n\t                b1 = code[i];\n\t                b2 = code[i + 1];\n\t                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n\t                i += 2;\n\t                break;\n\t            case 29: // callgsubr\n\t                codeIndex = stack.pop() + font.gsubrsBias;\n\t                subrCode = font.gsubrs[codeIndex];\n\t                if (subrCode) {\n\t                    parse(subrCode);\n\t                }\n\t\n\t                break;\n\t            case 30: // vhcurveto\n\t                while (stack.length > 0) {\n\t                    c1x = x;\n\t                    c1y = y + stack.shift();\n\t                    c2x = c1x + stack.shift();\n\t                    c2y = c1y + stack.shift();\n\t                    x = c2x + stack.shift();\n\t                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n\t                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n\t                    if (stack.length === 0) {\n\t                        break;\n\t                    }\n\t\n\t                    c1x = x + stack.shift();\n\t                    c1y = y;\n\t                    c2x = c1x + stack.shift();\n\t                    c2y = c1y + stack.shift();\n\t                    y = c2y + stack.shift();\n\t                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n\t                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n\t                }\n\t\n\t                break;\n\t            case 31: // hvcurveto\n\t                while (stack.length > 0) {\n\t                    c1x = x + stack.shift();\n\t                    c1y = y;\n\t                    c2x = c1x + stack.shift();\n\t                    c2y = c1y + stack.shift();\n\t                    y = c2y + stack.shift();\n\t                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n\t                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n\t                    if (stack.length === 0) {\n\t                        break;\n\t                    }\n\t\n\t                    c1x = x;\n\t                    c1y = y + stack.shift();\n\t                    c2x = c1x + stack.shift();\n\t                    c2y = c1y + stack.shift();\n\t                    x = c2x + stack.shift();\n\t                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n\t                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n\t                }\n\t\n\t                break;\n\t            default:\n\t                if (v < 32) {\n\t                    console.log('Glyph ' + glyph.index + ': unknown operator ' + v);\n\t                } else if (v < 247) {\n\t                    stack.push(v - 139);\n\t                } else if (v < 251) {\n\t                    b1 = code[i];\n\t                    i += 1;\n\t                    stack.push((v - 247) * 256 + b1 + 108);\n\t                } else if (v < 255) {\n\t                    b1 = code[i];\n\t                    i += 1;\n\t                    stack.push(-(v - 251) * 256 - b1 - 108);\n\t                } else {\n\t                    b1 = code[i];\n\t                    b2 = code[i + 1];\n\t                    b3 = code[i + 2];\n\t                    b4 = code[i + 3];\n\t                    i += 4;\n\t                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    parse(code);\n\t\n\t    glyph.advanceWidth = width;\n\t    return p;\n\t}\n\t\n\t// Subroutines are encoded using the negative half of the number space.\n\t// See type 2 chapter 4.7 \"Subroutine operators\".\n\tfunction calcCFFSubroutineBias(subrs) {\n\t    var bias;\n\t    if (subrs.length < 1240) {\n\t        bias = 107;\n\t    } else if (subrs.length < 33900) {\n\t        bias = 1131;\n\t    } else {\n\t        bias = 32768;\n\t    }\n\t\n\t    return bias;\n\t}\n\t\n\t// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\n\tfunction parseCFFTable(data, start, font) {\n\t    font.tables.cff = {};\n\t    var header = parseCFFHeader(data, start);\n\t    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n\t    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n\t    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n\t    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n\t    font.gsubrs = globalSubrIndex.objects;\n\t    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\t\n\t    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n\t    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n\t    font.tables.cff.topDict = topDict;\n\t\n\t    var privateDictOffset = start + topDict['private'][1];\n\t    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n\t    font.defaultWidthX = privateDict.defaultWidthX;\n\t    font.nominalWidthX = privateDict.nominalWidthX;\n\t\n\t    if (privateDict.subrs !== 0) {\n\t        var subrOffset = privateDictOffset + privateDict.subrs;\n\t        var subrIndex = parseCFFIndex(data, subrOffset);\n\t        font.subrs = subrIndex.objects;\n\t        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n\t    } else {\n\t        font.subrs = [];\n\t        font.subrsBias = 0;\n\t    }\n\t\n\t    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n\t    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n\t    font.nGlyphs = charStringsIndex.objects.length;\n\t\n\t    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n\t    if (topDict.encoding === 0) { // Standard encoding\n\t        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n\t    } else if (topDict.encoding === 1) { // Expert encoding\n\t        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n\t    } else {\n\t        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n\t    }\n\t\n\t    // Prefer the CMAP encoding to the CFF encoding.\n\t    font.encoding = font.encoding || font.cffEncoding;\n\t\n\t    font.glyphs = new glyphset.GlyphSet(font);\n\t    for (var i = 0; i < font.nGlyphs; i += 1) {\n\t        var charString = charStringsIndex.objects[i];\n\t        font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n\t    }\n\t}\n\t\n\t// Convert a string to a String ID (SID).\n\t// The list of strings is modified in place.\n\tfunction encodeString(s, strings) {\n\t    var sid;\n\t\n\t    // Is the string in the CFF standard strings?\n\t    var i = encoding.cffStandardStrings.indexOf(s);\n\t    if (i >= 0) {\n\t        sid = i;\n\t    }\n\t\n\t    // Is the string already in the string index?\n\t    i = strings.indexOf(s);\n\t    if (i >= 0) {\n\t        sid = i + encoding.cffStandardStrings.length;\n\t    } else {\n\t        sid = encoding.cffStandardStrings.length + strings.length;\n\t        strings.push(s);\n\t    }\n\t\n\t    return sid;\n\t}\n\t\n\tfunction makeHeader() {\n\t    return new table.Table('Header', [\n\t        {name: 'major', type: 'Card8', value: 1},\n\t        {name: 'minor', type: 'Card8', value: 0},\n\t        {name: 'hdrSize', type: 'Card8', value: 4},\n\t        {name: 'major', type: 'Card8', value: 1}\n\t    ]);\n\t}\n\t\n\tfunction makeNameIndex(fontNames) {\n\t    var t = new table.Table('Name INDEX', [\n\t        {name: 'names', type: 'INDEX', value: []}\n\t    ]);\n\t    t.names = [];\n\t    for (var i = 0; i < fontNames.length; i += 1) {\n\t        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n\t    }\n\t\n\t    return t;\n\t}\n\t\n\t// Given a dictionary's metadata, create a DICT structure.\n\tfunction makeDict(meta, attrs, strings) {\n\t    var m = {};\n\t    for (var i = 0; i < meta.length; i += 1) {\n\t        var entry = meta[i];\n\t        var value = attrs[entry.name];\n\t        if (value !== undefined && !equals(value, entry.value)) {\n\t            if (entry.type === 'SID') {\n\t                value = encodeString(value, strings);\n\t            }\n\t\n\t            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n\t        }\n\t    }\n\t\n\t    return m;\n\t}\n\t\n\t// The Top DICT houses the global font attributes.\n\tfunction makeTopDict(attrs, strings) {\n\t    var t = new table.Table('Top DICT', [\n\t        {name: 'dict', type: 'DICT', value: {}}\n\t    ]);\n\t    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n\t    return t;\n\t}\n\t\n\tfunction makeTopDictIndex(topDict) {\n\t    var t = new table.Table('Top DICT INDEX', [\n\t        {name: 'topDicts', type: 'INDEX', value: []}\n\t    ]);\n\t    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n\t    return t;\n\t}\n\t\n\tfunction makeStringIndex(strings) {\n\t    var t = new table.Table('String INDEX', [\n\t        {name: 'strings', type: 'INDEX', value: []}\n\t    ]);\n\t    t.strings = [];\n\t    for (var i = 0; i < strings.length; i += 1) {\n\t        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n\t    }\n\t\n\t    return t;\n\t}\n\t\n\tfunction makeGlobalSubrIndex() {\n\t    // Currently we don't use subroutines.\n\t    return new table.Table('Global Subr INDEX', [\n\t        {name: 'subrs', type: 'INDEX', value: []}\n\t    ]);\n\t}\n\t\n\tfunction makeCharsets(glyphNames, strings) {\n\t    var t = new table.Table('Charsets', [\n\t        {name: 'format', type: 'Card8', value: 0}\n\t    ]);\n\t    for (var i = 0; i < glyphNames.length; i += 1) {\n\t        var glyphName = glyphNames[i];\n\t        var glyphSID = encodeString(glyphName, strings);\n\t        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n\t    }\n\t\n\t    return t;\n\t}\n\t\n\tfunction glyphToOps(glyph) {\n\t    var ops = [];\n\t    var path = glyph.path;\n\t    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n\t    var x = 0;\n\t    var y = 0;\n\t    for (var i = 0; i < path.commands.length; i += 1) {\n\t        var dx;\n\t        var dy;\n\t        var cmd = path.commands[i];\n\t        if (cmd.type === 'Q') {\n\t            // CFF only supports bézier curves, so convert the quad to a bézier.\n\t            var _13 = 1 / 3;\n\t            var _23 = 2 / 3;\n\t\n\t            // We're going to create a new command so we don't change the original path.\n\t            cmd = {\n\t                type: 'C',\n\t                x: cmd.x,\n\t                y: cmd.y,\n\t                x1: _13 * x + _23 * cmd.x1,\n\t                y1: _13 * y + _23 * cmd.y1,\n\t                x2: _13 * cmd.x + _23 * cmd.x1,\n\t                y2: _13 * cmd.y + _23 * cmd.y1\n\t            };\n\t        }\n\t\n\t        if (cmd.type === 'M') {\n\t            dx = Math.round(cmd.x - x);\n\t            dy = Math.round(cmd.y - y);\n\t            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n\t            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n\t            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n\t            x = Math.round(cmd.x);\n\t            y = Math.round(cmd.y);\n\t        } else if (cmd.type === 'L') {\n\t            dx = Math.round(cmd.x - x);\n\t            dy = Math.round(cmd.y - y);\n\t            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n\t            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n\t            ops.push({name: 'rlineto', type: 'OP', value: 5});\n\t            x = Math.round(cmd.x);\n\t            y = Math.round(cmd.y);\n\t        } else if (cmd.type === 'C') {\n\t            var dx1 = Math.round(cmd.x1 - x);\n\t            var dy1 = Math.round(cmd.y1 - y);\n\t            var dx2 = Math.round(cmd.x2 - cmd.x1);\n\t            var dy2 = Math.round(cmd.y2 - cmd.y1);\n\t            dx = Math.round(cmd.x - cmd.x2);\n\t            dy = Math.round(cmd.y - cmd.y2);\n\t            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n\t            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n\t            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n\t            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n\t            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n\t            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n\t            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n\t            x = Math.round(cmd.x);\n\t            y = Math.round(cmd.y);\n\t        }\n\t\n\t        // Contours are closed automatically.\n\t\n\t    }\n\t\n\t    ops.push({name: 'endchar', type: 'OP', value: 14});\n\t    return ops;\n\t}\n\t\n\tfunction makeCharStringsIndex(glyphs) {\n\t    var t = new table.Table('CharStrings INDEX', [\n\t        {name: 'charStrings', type: 'INDEX', value: []}\n\t    ]);\n\t\n\t    for (var i = 0; i < glyphs.length; i += 1) {\n\t        var glyph = glyphs.get(i);\n\t        var ops = glyphToOps(glyph);\n\t        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n\t    }\n\t\n\t    return t;\n\t}\n\t\n\tfunction makePrivateDict(attrs, strings) {\n\t    var t = new table.Table('Private DICT', [\n\t        {name: 'dict', type: 'DICT', value: {}}\n\t    ]);\n\t    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n\t    return t;\n\t}\n\t\n\tfunction makePrivateDictIndex(privateDict) {\n\t    var t = new table.Table('Private DICT INDEX', [\n\t        {name: 'privateDicts', type: 'INDEX', value: []}\n\t    ]);\n\t    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n\t    return t;\n\t}\n\t\n\tfunction makeCFFTable(glyphs, options) {\n\t    var t = new table.Table('CFF ', [\n\t        {name: 'header', type: 'TABLE'},\n\t        {name: 'nameIndex', type: 'TABLE'},\n\t        {name: 'topDictIndex', type: 'TABLE'},\n\t        {name: 'stringIndex', type: 'TABLE'},\n\t        {name: 'globalSubrIndex', type: 'TABLE'},\n\t        {name: 'charsets', type: 'TABLE'},\n\t        {name: 'charStringsIndex', type: 'TABLE'},\n\t        {name: 'privateDictIndex', type: 'TABLE'}\n\t    ]);\n\t\n\t    var fontScale = 1 / options.unitsPerEm;\n\t    // We use non-zero values for the offsets so that the DICT encodes them.\n\t    // This is important because the size of the Top DICT plays a role in offset calculation,\n\t    // and the size shouldn't change after we've written correct offsets.\n\t    var attrs = {\n\t        version: options.version,\n\t        fullName: options.fullName,\n\t        familyName: options.familyName,\n\t        weight: options.weightName,\n\t        fontMatrix: [fontScale, 0, 0, fontScale, 0, 0],\n\t        charset: 999,\n\t        encoding: 0,\n\t        charStrings: 999,\n\t        private: [0, 999]\n\t    };\n\t\n\t    var privateAttrs = {};\n\t\n\t    var glyphNames = [];\n\t    var glyph;\n\t\n\t    // Skip first glyph (.notdef)\n\t    for (var i = 1; i < glyphs.length; i += 1) {\n\t        glyph = glyphs.get(i);\n\t        glyphNames.push(glyph.name);\n\t    }\n\t\n\t    var strings = [];\n\t\n\t    t.header = makeHeader();\n\t    t.nameIndex = makeNameIndex([options.postScriptName]);\n\t    var topDict = makeTopDict(attrs, strings);\n\t    t.topDictIndex = makeTopDictIndex(topDict);\n\t    t.globalSubrIndex = makeGlobalSubrIndex();\n\t    t.charsets = makeCharsets(glyphNames, strings);\n\t    t.charStringsIndex = makeCharStringsIndex(glyphs);\n\t    var privateDict = makePrivateDict(privateAttrs, strings);\n\t    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\t\n\t    // Needs to come at the end, to encode all custom strings used in the font.\n\t    t.stringIndex = makeStringIndex(strings);\n\t\n\t    var startOffset = t.header.sizeOf() +\n\t        t.nameIndex.sizeOf() +\n\t        t.topDictIndex.sizeOf() +\n\t        t.stringIndex.sizeOf() +\n\t        t.globalSubrIndex.sizeOf();\n\t    attrs.charset = startOffset;\n\t\n\t    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n\t    attrs.encoding = 0;\n\t    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n\t    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\t\n\t    // Recreate the Top DICT INDEX with the correct offsets.\n\t    topDict = makeTopDict(attrs, strings);\n\t    t.topDictIndex = makeTopDictIndex(topDict);\n\t\n\t    return t;\n\t}\n\t\n\texports.parse = parseCFFTable;\n\texports.make = makeCFFTable;\n\t\n\t},{\"../encoding\":4,\"../glyphset\":7,\"../parse\":9,\"../path\":10,\"../table\":11}],13:[function(_dereq_,module,exports){\n\t// The `cmap` table stores the mappings from characters to glyphs.\n\t// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\t\n\t'use strict';\n\t\n\tvar check = _dereq_('../check');\n\tvar parse = _dereq_('../parse');\n\tvar table = _dereq_('../table');\n\t\n\t// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n\t// There are many available formats, but we only support the Windows format 4.\n\t// This function returns a `CmapEncoding` object or null if no supported format could be found.\n\tfunction parseCmapTable(data, start) {\n\t    var i;\n\t    var cmap = {};\n\t    cmap.version = parse.getUShort(data, start);\n\t    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\t\n\t    // The cmap table can contain many sub-tables, each with their own format.\n\t    // We're only interested in a \"platform 3\" table. This is a Windows format.\n\t    cmap.numTables = parse.getUShort(data, start + 2);\n\t    var offset = -1;\n\t    for (i = 0; i < cmap.numTables; i += 1) {\n\t        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n\t        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n\t        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n\t            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n\t            break;\n\t        }\n\t    }\n\t\n\t    if (offset === -1) {\n\t        // There is no cmap table in the font that we support, so return null.\n\t        // This font will be marked as unsupported.\n\t        return null;\n\t    }\n\t\n\t    var p = new parse.Parser(data, start + offset);\n\t    cmap.format = p.parseUShort();\n\t    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\t\n\t    // Length in bytes of the sub-tables.\n\t    cmap.length = p.parseUShort();\n\t    cmap.language = p.parseUShort();\n\t\n\t    // segCount is stored x 2.\n\t    var segCount;\n\t    cmap.segCount = segCount = p.parseUShort() >> 1;\n\t\n\t    // Skip searchRange, entrySelector, rangeShift.\n\t    p.skip('uShort', 3);\n\t\n\t    // The \"unrolled\" mapping from character codes to glyph indices.\n\t    cmap.glyphIndexMap = {};\n\t\n\t    var endCountParser = new parse.Parser(data, start + offset + 14);\n\t    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n\t    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n\t    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n\t    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n\t    for (i = 0; i < segCount - 1; i += 1) {\n\t        var glyphIndex;\n\t        var endCount = endCountParser.parseUShort();\n\t        var startCount = startCountParser.parseUShort();\n\t        var idDelta = idDeltaParser.parseShort();\n\t        var idRangeOffset = idRangeOffsetParser.parseUShort();\n\t        for (var c = startCount; c <= endCount; c += 1) {\n\t            if (idRangeOffset !== 0) {\n\t                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n\t                // Take the current offset in the idRangeOffset array.\n\t                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\t\n\t                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n\t                glyphIndexOffset += idRangeOffset;\n\t\n\t                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n\t                glyphIndexOffset += (c - startCount) * 2;\n\t                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n\t                if (glyphIndex !== 0) {\n\t                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n\t                }\n\t            } else {\n\t                glyphIndex = (c + idDelta) & 0xFFFF;\n\t            }\n\t\n\t            cmap.glyphIndexMap[c] = glyphIndex;\n\t        }\n\t    }\n\t\n\t    return cmap;\n\t}\n\t\n\tfunction addSegment(t, code, glyphIndex) {\n\t    t.segments.push({\n\t        end: code,\n\t        start: code,\n\t        delta: -(code - glyphIndex),\n\t        offset: 0\n\t    });\n\t}\n\t\n\tfunction addTerminatorSegment(t) {\n\t    t.segments.push({\n\t        end: 0xFFFF,\n\t        start: 0xFFFF,\n\t        delta: 1,\n\t        offset: 0\n\t    });\n\t}\n\t\n\tfunction makeCmapTable(glyphs) {\n\t    var i;\n\t    var t = new table.Table('cmap', [\n\t        {name: 'version', type: 'USHORT', value: 0},\n\t        {name: 'numTables', type: 'USHORT', value: 1},\n\t        {name: 'platformID', type: 'USHORT', value: 3},\n\t        {name: 'encodingID', type: 'USHORT', value: 1},\n\t        {name: 'offset', type: 'ULONG', value: 12},\n\t        {name: 'format', type: 'USHORT', value: 4},\n\t        {name: 'length', type: 'USHORT', value: 0},\n\t        {name: 'language', type: 'USHORT', value: 0},\n\t        {name: 'segCountX2', type: 'USHORT', value: 0},\n\t        {name: 'searchRange', type: 'USHORT', value: 0},\n\t        {name: 'entrySelector', type: 'USHORT', value: 0},\n\t        {name: 'rangeShift', type: 'USHORT', value: 0}\n\t    ]);\n\t\n\t    t.segments = [];\n\t    for (i = 0; i < glyphs.length; i += 1) {\n\t        var glyph = glyphs.get(i);\n\t        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n\t            addSegment(t, glyph.unicodes[j], i);\n\t        }\n\t\n\t        t.segments = t.segments.sort(function(a, b) {\n\t            return a.start - b.start;\n\t        });\n\t    }\n\t\n\t    addTerminatorSegment(t);\n\t\n\t    var segCount;\n\t    segCount = t.segments.length;\n\t    t.segCountX2 = segCount * 2;\n\t    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n\t    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n\t    t.rangeShift = t.segCountX2 - t.searchRange;\n\t\n\t    // Set up parallel segment arrays.\n\t    var endCounts = [];\n\t    var startCounts = [];\n\t    var idDeltas = [];\n\t    var idRangeOffsets = [];\n\t    var glyphIds = [];\n\t\n\t    for (i = 0; i < segCount; i += 1) {\n\t        var segment = t.segments[i];\n\t        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n\t        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n\t        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n\t        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n\t        if (segment.glyphId !== undefined) {\n\t            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n\t        }\n\t    }\n\t\n\t    t.fields = t.fields.concat(endCounts);\n\t    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n\t    t.fields = t.fields.concat(startCounts);\n\t    t.fields = t.fields.concat(idDeltas);\n\t    t.fields = t.fields.concat(idRangeOffsets);\n\t    t.fields = t.fields.concat(glyphIds);\n\t\n\t    t.length = 14 + // Subtable header\n\t        endCounts.length * 2 +\n\t        2 + // reservedPad\n\t        startCounts.length * 2 +\n\t        idDeltas.length * 2 +\n\t        idRangeOffsets.length * 2 +\n\t        glyphIds.length * 2;\n\t\n\t    return t;\n\t}\n\t\n\texports.parse = parseCmapTable;\n\texports.make = makeCmapTable;\n\t\n\t},{\"../check\":2,\"../parse\":9,\"../table\":11}],14:[function(_dereq_,module,exports){\n\t// The `glyf` table describes the glyphs in TrueType outline format.\n\t// http://www.microsoft.com/typography/otspec/glyf.htm\n\t\n\t'use strict';\n\t\n\tvar check = _dereq_('../check');\n\tvar glyphset = _dereq_('../glyphset');\n\tvar parse = _dereq_('../parse');\n\tvar path = _dereq_('../path');\n\t\n\t// Parse the coordinate data for a glyph.\n\tfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n\t    var v;\n\t    if ((flag & shortVectorBitMask) > 0) {\n\t        // The coordinate is 1 byte long.\n\t        v = p.parseByte();\n\t        // The `same` bit is re-used for short values to signify the sign of the value.\n\t        if ((flag & sameBitMask) === 0) {\n\t            v = -v;\n\t        }\n\t\n\t        v = previousValue + v;\n\t    } else {\n\t        //  The coordinate is 2 bytes long.\n\t        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n\t        if ((flag & sameBitMask) > 0) {\n\t            v = previousValue;\n\t        } else {\n\t            // Parse the coordinate as a signed 16-bit delta value.\n\t            v = previousValue + p.parseShort();\n\t        }\n\t    }\n\t\n\t    return v;\n\t}\n\t\n\t// Parse a TrueType glyph.\n\tfunction parseGlyph(glyph, data, start) {\n\t    var p = new parse.Parser(data, start);\n\t    glyph.numberOfContours = p.parseShort();\n\t    glyph.xMin = p.parseShort();\n\t    glyph.yMin = p.parseShort();\n\t    glyph.xMax = p.parseShort();\n\t    glyph.yMax = p.parseShort();\n\t    var flags;\n\t    var flag;\n\t    if (glyph.numberOfContours > 0) {\n\t        var i;\n\t        // This glyph is not a composite.\n\t        var endPointIndices = glyph.endPointIndices = [];\n\t        for (i = 0; i < glyph.numberOfContours; i += 1) {\n\t            endPointIndices.push(p.parseUShort());\n\t        }\n\t\n\t        glyph.instructionLength = p.parseUShort();\n\t        glyph.instructions = [];\n\t        for (i = 0; i < glyph.instructionLength; i += 1) {\n\t            glyph.instructions.push(p.parseByte());\n\t        }\n\t\n\t        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n\t        flags = [];\n\t        for (i = 0; i < numberOfCoordinates; i += 1) {\n\t            flag = p.parseByte();\n\t            flags.push(flag);\n\t            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n\t            if ((flag & 8) > 0) {\n\t                var repeatCount = p.parseByte();\n\t                for (var j = 0; j < repeatCount; j += 1) {\n\t                    flags.push(flag);\n\t                    i += 1;\n\t                }\n\t            }\n\t        }\n\t\n\t        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\t\n\t        if (endPointIndices.length > 0) {\n\t            var points = [];\n\t            var point;\n\t            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n\t            if (numberOfCoordinates > 0) {\n\t                for (i = 0; i < numberOfCoordinates; i += 1) {\n\t                    flag = flags[i];\n\t                    point = {};\n\t                    point.onCurve = !!(flag & 1);\n\t                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n\t                    points.push(point);\n\t                }\n\t\n\t                var px = 0;\n\t                for (i = 0; i < numberOfCoordinates; i += 1) {\n\t                    flag = flags[i];\n\t                    point = points[i];\n\t                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n\t                    px = point.x;\n\t                }\n\t\n\t                var py = 0;\n\t                for (i = 0; i < numberOfCoordinates; i += 1) {\n\t                    flag = flags[i];\n\t                    point = points[i];\n\t                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n\t                    py = point.y;\n\t                }\n\t            }\n\t\n\t            glyph.points = points;\n\t        } else {\n\t            glyph.points = [];\n\t        }\n\t    } else if (glyph.numberOfContours === 0) {\n\t        glyph.points = [];\n\t    } else {\n\t        glyph.isComposite = true;\n\t        glyph.points = [];\n\t        glyph.components = [];\n\t        var moreComponents = true;\n\t        while (moreComponents) {\n\t            flags = p.parseUShort();\n\t            var component = {\n\t                glyphIndex: p.parseUShort(),\n\t                xScale: 1,\n\t                scale01: 0,\n\t                scale10: 0,\n\t                yScale: 1,\n\t                dx: 0,\n\t                dy: 0\n\t            };\n\t            if ((flags & 1) > 0) {\n\t                // The arguments are words\n\t                component.dx = p.parseShort();\n\t                component.dy = p.parseShort();\n\t            } else {\n\t                // The arguments are bytes\n\t                component.dx = p.parseChar();\n\t                component.dy = p.parseChar();\n\t            }\n\t\n\t            if ((flags & 8) > 0) {\n\t                // We have a scale\n\t                component.xScale = component.yScale = p.parseF2Dot14();\n\t            } else if ((flags & 64) > 0) {\n\t                // We have an X / Y scale\n\t                component.xScale = p.parseF2Dot14();\n\t                component.yScale = p.parseF2Dot14();\n\t            } else if ((flags & 128) > 0) {\n\t                // We have a 2x2 transformation\n\t                component.xScale = p.parseF2Dot14();\n\t                component.scale01 = p.parseF2Dot14();\n\t                component.scale10 = p.parseF2Dot14();\n\t                component.yScale = p.parseF2Dot14();\n\t            }\n\t\n\t            glyph.components.push(component);\n\t            moreComponents = !!(flags & 32);\n\t        }\n\t    }\n\t}\n\t\n\t// Transform an array of points and return a new array.\n\tfunction transformPoints(points, transform) {\n\t    var newPoints = [];\n\t    for (var i = 0; i < points.length; i += 1) {\n\t        var pt = points[i];\n\t        var newPt = {\n\t            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n\t            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n\t            onCurve: pt.onCurve,\n\t            lastPointOfContour: pt.lastPointOfContour\n\t        };\n\t        newPoints.push(newPt);\n\t    }\n\t\n\t    return newPoints;\n\t}\n\t\n\tfunction getContours(points) {\n\t    var contours = [];\n\t    var currentContour = [];\n\t    for (var i = 0; i < points.length; i += 1) {\n\t        var pt = points[i];\n\t        currentContour.push(pt);\n\t        if (pt.lastPointOfContour) {\n\t            contours.push(currentContour);\n\t            currentContour = [];\n\t        }\n\t    }\n\t\n\t    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n\t    return contours;\n\t}\n\t\n\t// Convert the TrueType glyph outline to a Path.\n\tfunction getPath(points) {\n\t    var p = new path.Path();\n\t    if (!points) {\n\t        return p;\n\t    }\n\t\n\t    var contours = getContours(points);\n\t    for (var i = 0; i < contours.length; i += 1) {\n\t        var contour = contours[i];\n\t        var firstPt = contour[0];\n\t        var lastPt = contour[contour.length - 1];\n\t        var curvePt;\n\t        var realFirstPoint;\n\t        if (firstPt.onCurve) {\n\t            curvePt = null;\n\t            // The first point will be consumed by the moveTo command,\n\t            // so skip it in the loop.\n\t            realFirstPoint = true;\n\t        } else {\n\t            if (lastPt.onCurve) {\n\t                // If the first point is off-curve and the last point is on-curve,\n\t                // start at the last point.\n\t                firstPt = lastPt;\n\t            } else {\n\t                // If both first and last points are off-curve, start at their middle.\n\t                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n\t            }\n\t\n\t            curvePt = firstPt;\n\t            // The first point is synthesized, so don't skip the real first point.\n\t            realFirstPoint = false;\n\t        }\n\t\n\t        p.moveTo(firstPt.x, firstPt.y);\n\t\n\t        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n\t            var pt = contour[j];\n\t            var prevPt = j === 0 ? firstPt : contour[j - 1];\n\t            if (prevPt.onCurve && pt.onCurve) {\n\t                // This is a straight line.\n\t                p.lineTo(pt.x, pt.y);\n\t            } else if (prevPt.onCurve && !pt.onCurve) {\n\t                curvePt = pt;\n\t            } else if (!prevPt.onCurve && !pt.onCurve) {\n\t                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n\t                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n\t                curvePt = pt;\n\t            } else if (!prevPt.onCurve && pt.onCurve) {\n\t                // Previous point off-curve, this point on-curve.\n\t                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n\t                curvePt = null;\n\t            } else {\n\t                throw new Error('Invalid state.');\n\t            }\n\t        }\n\t\n\t        if (firstPt !== lastPt) {\n\t            // Connect the last and first points\n\t            if (curvePt) {\n\t                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n\t            } else {\n\t                p.lineTo(firstPt.x, firstPt.y);\n\t            }\n\t        }\n\t    }\n\t\n\t    p.closePath();\n\t    return p;\n\t}\n\t\n\tfunction buildPath(glyphs, glyph) {\n\t    if (glyph.isComposite) {\n\t        for (var j = 0; j < glyph.components.length; j += 1) {\n\t            var component = glyph.components[j];\n\t            var componentGlyph = glyphs.get(component.glyphIndex);\n\t            if (componentGlyph.points) {\n\t                var transformedPoints = transformPoints(componentGlyph.points, component);\n\t                glyph.points = glyph.points.concat(transformedPoints);\n\t            }\n\t        }\n\t    }\n\t\n\t    return getPath(glyph.points);\n\t}\n\t\n\t// Parse all the glyphs according to the offsets from the `loca` table.\n\tfunction parseGlyfTable(data, start, loca, font) {\n\t    var glyphs = new glyphset.GlyphSet(font);\n\t    var i;\n\t\n\t    // The last element of the loca table is invalid.\n\t    for (i = 0; i < loca.length - 1; i += 1) {\n\t        var offset = loca[i];\n\t        var nextOffset = loca[i + 1];\n\t        if (offset !== nextOffset) {\n\t            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n\t        } else {\n\t            glyphs.push(i, glyphset.glyphLoader(font, i));\n\t        }\n\t    }\n\t\n\t    return glyphs;\n\t}\n\t\n\texports.parse = parseGlyfTable;\n\t\n\t},{\"../check\":2,\"../glyphset\":7,\"../parse\":9,\"../path\":10}],15:[function(_dereq_,module,exports){\n\t// The `GPOS` table contains kerning pairs, among other things.\n\t// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\t\n\t'use strict';\n\t\n\tvar check = _dereq_('../check');\n\tvar parse = _dereq_('../parse');\n\t\n\t// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n\t// These lists are unused by now, this function is just the basis for a real parsing.\n\tfunction parseTaggedListTable(data, start) {\n\t    var p = new parse.Parser(data, start);\n\t    var n = p.parseUShort();\n\t    var list = [];\n\t    for (var i = 0; i < n; i++) {\n\t        list[p.parseTag()] = { offset: p.parseUShort() };\n\t    }\n\t\n\t    return list;\n\t}\n\t\n\t// Parse a coverage table in a GSUB, GPOS or GDEF table.\n\t// Format 1 is a simple list of glyph ids,\n\t// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\n\tfunction parseCoverageTable(data, start) {\n\t    var p = new parse.Parser(data, start);\n\t    var format = p.parseUShort();\n\t    var count =  p.parseUShort();\n\t    if (format === 1) {\n\t        return p.parseUShortList(count);\n\t    }\n\t    else if (format === 2) {\n\t        var coverage = [];\n\t        for (; count--;) {\n\t            var begin = p.parseUShort();\n\t            var end = p.parseUShort();\n\t            var index = p.parseUShort();\n\t            for (var i = begin; i <= end; i++) {\n\t                coverage[index++] = i;\n\t            }\n\t        }\n\t\n\t        return coverage;\n\t    }\n\t}\n\t\n\t// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n\t// Returns a function that gets a class value from a glyph ID.\n\tfunction parseClassDefTable(data, start) {\n\t    var p = new parse.Parser(data, start);\n\t    var format = p.parseUShort();\n\t    if (format === 1) {\n\t        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n\t        var startGlyph = p.parseUShort();\n\t        var glyphCount = p.parseUShort();\n\t        var classes = p.parseUShortList(glyphCount);\n\t        return function(glyphID) {\n\t            return classes[glyphID - startGlyph] || 0;\n\t        };\n\t    }\n\t    else if (format === 2) {\n\t        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n\t        var rangeCount = p.parseUShort();\n\t        var startGlyphs = [];\n\t        var endGlyphs = [];\n\t        var classValues = [];\n\t        for (var i = 0; i < rangeCount; i++) {\n\t            startGlyphs[i] = p.parseUShort();\n\t            endGlyphs[i] = p.parseUShort();\n\t            classValues[i] = p.parseUShort();\n\t        }\n\t\n\t        return function(glyphID) {\n\t            var l = 0;\n\t            var r = startGlyphs.length - 1;\n\t            while (l < r) {\n\t                var c = (l + r + 1) >> 1;\n\t                if (glyphID < startGlyphs[c]) {\n\t                    r = c - 1;\n\t                } else {\n\t                    l = c;\n\t                }\n\t            }\n\t\n\t            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n\t                return classValues[l] || 0;\n\t            }\n\t\n\t            return 0;\n\t        };\n\t    }\n\t}\n\t\n\t// Parse a pair adjustment positioning subtable, format 1 or format 2\n\t// The subtable is returned in the form of a lookup function.\n\tfunction parsePairPosSubTable(data, start) {\n\t    var p = new parse.Parser(data, start);\n\t    // This part is common to format 1 and format 2 subtables\n\t    var format = p.parseUShort();\n\t    var coverageOffset = p.parseUShort();\n\t    var coverage = parseCoverageTable(data, start + coverageOffset);\n\t    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n\t    // Only valueFormat1=4 and valueFormat2=0 is supported.\n\t    var valueFormat1 = p.parseUShort();\n\t    var valueFormat2 = p.parseUShort();\n\t    var value1;\n\t    var value2;\n\t    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n\t    var sharedPairSets = {};\n\t    if (format === 1) {\n\t        // Pair Positioning Adjustment: Format 1\n\t        var pairSetCount = p.parseUShort();\n\t        var pairSet = [];\n\t        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n\t        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n\t        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n\t            var pairSetOffset = pairSetOffsets[firstGlyph];\n\t            var sharedPairSet = sharedPairSets[pairSetOffset];\n\t            if (!sharedPairSet) {\n\t                // Parse a pairset table in a pair adjustment subtable format 1\n\t                sharedPairSet = {};\n\t                p.relativeOffset = pairSetOffset;\n\t                var pairValueCount = p.parseUShort();\n\t                for (; pairValueCount--;) {\n\t                    var secondGlyph = p.parseUShort();\n\t                    if (valueFormat1) value1 = p.parseShort();\n\t                    if (valueFormat2) value2 = p.parseShort();\n\t                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n\t                    // so value1 is the XAdvance and value2 is empty.\n\t                    sharedPairSet[secondGlyph] = value1;\n\t                }\n\t            }\n\t\n\t            pairSet[coverage[firstGlyph]] = sharedPairSet;\n\t        }\n\t\n\t        return function(leftGlyph, rightGlyph) {\n\t            var pairs = pairSet[leftGlyph];\n\t            if (pairs) return pairs[rightGlyph];\n\t        };\n\t    }\n\t    else if (format === 2) {\n\t        // Pair Positioning Adjustment: Format 2\n\t        var classDef1Offset = p.parseUShort();\n\t        var classDef2Offset = p.parseUShort();\n\t        var class1Count = p.parseUShort();\n\t        var class2Count = p.parseUShort();\n\t        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n\t        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\t\n\t        // Parse kerning values by class pair.\n\t        var kerningMatrix = [];\n\t        for (var i = 0; i < class1Count; i++) {\n\t            var kerningRow = kerningMatrix[i] = [];\n\t            for (var j = 0; j < class2Count; j++) {\n\t                if (valueFormat1) value1 = p.parseShort();\n\t                if (valueFormat2) value2 = p.parseShort();\n\t                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n\t                // so value1 is the XAdvance and value2 is empty.\n\t                kerningRow[j] = value1;\n\t            }\n\t        }\n\t\n\t        // Convert coverage list to a hash\n\t        var covered = {};\n\t        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\t\n\t        // Get the kerning value for a specific glyph pair.\n\t        return function(leftGlyph, rightGlyph) {\n\t            if (!covered[leftGlyph]) return;\n\t            var class1 = getClass1(leftGlyph);\n\t            var class2 = getClass2(rightGlyph);\n\t            var kerningRow = kerningMatrix[class1];\n\t\n\t            if (kerningRow) {\n\t                return kerningRow[class2];\n\t            }\n\t        };\n\t    }\n\t}\n\t\n\t// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\n\tfunction parseLookupTable(data, start) {\n\t    var p = new parse.Parser(data, start);\n\t    var lookupType = p.parseUShort();\n\t    var lookupFlag = p.parseUShort();\n\t    var useMarkFilteringSet = lookupFlag & 0x10;\n\t    var subTableCount = p.parseUShort();\n\t    var subTableOffsets = p.parseOffset16List(subTableCount);\n\t    var table = {\n\t        lookupType: lookupType,\n\t        lookupFlag: lookupFlag,\n\t        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n\t    };\n\t    // LookupType 2, Pair adjustment\n\t    if (lookupType === 2) {\n\t        var subtables = [];\n\t        for (var i = 0; i < subTableCount; i++) {\n\t            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n\t        }\n\t        // Return a function which finds the kerning values in the subtables.\n\t        table.getKerningValue = function(leftGlyph, rightGlyph) {\n\t            for (var i = subtables.length; i--;) {\n\t                var value = subtables[i](leftGlyph, rightGlyph);\n\t                if (value !== undefined) return value;\n\t            }\n\t\n\t            return 0;\n\t        };\n\t    }\n\t\n\t    return table;\n\t}\n\t\n\t// Parse the `GPOS` table which contains, among other things, kerning pairs.\n\t// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\tfunction parseGposTable(data, start, font) {\n\t    var p = new parse.Parser(data, start);\n\t    var tableVersion = p.parseFixed();\n\t    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\t\n\t    // ScriptList and FeatureList - ignored for now\n\t    parseTaggedListTable(data, start + p.parseUShort());\n\t    // 'kern' is the feature we are looking for.\n\t    parseTaggedListTable(data, start + p.parseUShort());\n\t\n\t    // LookupList\n\t    var lookupListOffset = p.parseUShort();\n\t    p.relativeOffset = lookupListOffset;\n\t    var lookupCount = p.parseUShort();\n\t    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n\t    var lookupListAbsoluteOffset = start + lookupListOffset;\n\t    for (var i = 0; i < lookupCount; i++) {\n\t        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n\t        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n\t    }\n\t}\n\t\n\texports.parse = parseGposTable;\n\t\n\t},{\"../check\":2,\"../parse\":9}],16:[function(_dereq_,module,exports){\n\t// The `head` table contains global information about the font.\n\t// https://www.microsoft.com/typography/OTSPEC/head.htm\n\t\n\t'use strict';\n\t\n\tvar check = _dereq_('../check');\n\tvar parse = _dereq_('../parse');\n\tvar table = _dereq_('../table');\n\t\n\t// Parse the header `head` table\n\tfunction parseHeadTable(data, start) {\n\t    var head = {};\n\t    var p = new parse.Parser(data, start);\n\t    head.version = p.parseVersion();\n\t    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n\t    head.checkSumAdjustment = p.parseULong();\n\t    head.magicNumber = p.parseULong();\n\t    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n\t    head.flags = p.parseUShort();\n\t    head.unitsPerEm = p.parseUShort();\n\t    head.created = p.parseLongDateTime();\n\t    head.modified = p.parseLongDateTime();\n\t    head.xMin = p.parseShort();\n\t    head.yMin = p.parseShort();\n\t    head.xMax = p.parseShort();\n\t    head.yMax = p.parseShort();\n\t    head.macStyle = p.parseUShort();\n\t    head.lowestRecPPEM = p.parseUShort();\n\t    head.fontDirectionHint = p.parseShort();\n\t    head.indexToLocFormat = p.parseShort();     // 50\n\t    head.glyphDataFormat = p.parseShort();\n\t    return head;\n\t}\n\t\n\tfunction makeHeadTable(options) {\n\t    return new table.Table('head', [\n\t        {name: 'version', type: 'FIXED', value: 0x00010000},\n\t        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n\t        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n\t        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n\t        {name: 'flags', type: 'USHORT', value: 0},\n\t        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n\t        {name: 'created', type: 'LONGDATETIME', value: 0},\n\t        {name: 'modified', type: 'LONGDATETIME', value: 0},\n\t        {name: 'xMin', type: 'SHORT', value: 0},\n\t        {name: 'yMin', type: 'SHORT', value: 0},\n\t        {name: 'xMax', type: 'SHORT', value: 0},\n\t        {name: 'yMax', type: 'SHORT', value: 0},\n\t        {name: 'macStyle', type: 'USHORT', value: 0},\n\t        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n\t        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n\t        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n\t        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n\t    ], options);\n\t}\n\t\n\texports.parse = parseHeadTable;\n\texports.make = makeHeadTable;\n\t\n\t},{\"../check\":2,\"../parse\":9,\"../table\":11}],17:[function(_dereq_,module,exports){\n\t// The `hhea` table contains information for horizontal layout.\n\t// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\t\n\t'use strict';\n\t\n\tvar parse = _dereq_('../parse');\n\tvar table = _dereq_('../table');\n\t\n\t// Parse the horizontal header `hhea` table\n\tfunction parseHheaTable(data, start) {\n\t    var hhea = {};\n\t    var p = new parse.Parser(data, start);\n\t    hhea.version = p.parseVersion();\n\t    hhea.ascender = p.parseShort();\n\t    hhea.descender = p.parseShort();\n\t    hhea.lineGap = p.parseShort();\n\t    hhea.advanceWidthMax = p.parseUShort();\n\t    hhea.minLeftSideBearing = p.parseShort();\n\t    hhea.minRightSideBearing = p.parseShort();\n\t    hhea.xMaxExtent = p.parseShort();\n\t    hhea.caretSlopeRise = p.parseShort();\n\t    hhea.caretSlopeRun = p.parseShort();\n\t    hhea.caretOffset = p.parseShort();\n\t    p.relativeOffset += 8;\n\t    hhea.metricDataFormat = p.parseShort();\n\t    hhea.numberOfHMetrics = p.parseUShort();\n\t    return hhea;\n\t}\n\t\n\tfunction makeHheaTable(options) {\n\t    return new table.Table('hhea', [\n\t        {name: 'version', type: 'FIXED', value: 0x00010000},\n\t        {name: 'ascender', type: 'FWORD', value: 0},\n\t        {name: 'descender', type: 'FWORD', value: 0},\n\t        {name: 'lineGap', type: 'FWORD', value: 0},\n\t        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n\t        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n\t        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n\t        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n\t        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n\t        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n\t        {name: 'caretOffset', type: 'SHORT', value: 0},\n\t        {name: 'reserved1', type: 'SHORT', value: 0},\n\t        {name: 'reserved2', type: 'SHORT', value: 0},\n\t        {name: 'reserved3', type: 'SHORT', value: 0},\n\t        {name: 'reserved4', type: 'SHORT', value: 0},\n\t        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n\t        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n\t    ], options);\n\t}\n\t\n\texports.parse = parseHheaTable;\n\texports.make = makeHheaTable;\n\t\n\t},{\"../parse\":9,\"../table\":11}],18:[function(_dereq_,module,exports){\n\t// The `hmtx` table contains the horizontal metrics for all glyphs.\n\t// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\t\n\t'use strict';\n\t\n\tvar parse = _dereq_('../parse');\n\tvar table = _dereq_('../table');\n\t\n\t// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n\t// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\n\tfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n\t    var advanceWidth;\n\t    var leftSideBearing;\n\t    var p = new parse.Parser(data, start);\n\t    for (var i = 0; i < numGlyphs; i += 1) {\n\t        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n\t        if (i < numMetrics) {\n\t            advanceWidth = p.parseUShort();\n\t            leftSideBearing = p.parseShort();\n\t        }\n\t\n\t        var glyph = glyphs.get(i);\n\t        glyph.advanceWidth = advanceWidth;\n\t        glyph.leftSideBearing = leftSideBearing;\n\t    }\n\t}\n\t\n\tfunction makeHmtxTable(glyphs) {\n\t    var t = new table.Table('hmtx', []);\n\t    for (var i = 0; i < glyphs.length; i += 1) {\n\t        var glyph = glyphs.get(i);\n\t        var advanceWidth = glyph.advanceWidth || 0;\n\t        var leftSideBearing = glyph.leftSideBearing || 0;\n\t        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n\t        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n\t    }\n\t\n\t    return t;\n\t}\n\t\n\texports.parse = parseHmtxTable;\n\texports.make = makeHmtxTable;\n\t\n\t},{\"../parse\":9,\"../table\":11}],19:[function(_dereq_,module,exports){\n\t// The `kern` table contains kerning pairs.\n\t// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n\t// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\t\n\t'use strict';\n\t\n\tvar check = _dereq_('../check');\n\tvar parse = _dereq_('../parse');\n\t\n\t// Parse the `kern` table which contains kerning pairs.\n\tfunction parseKernTable(data, start) {\n\t    var pairs = {};\n\t    var p = new parse.Parser(data, start);\n\t    var tableVersion = p.parseUShort();\n\t    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n\t    // Skip nTables.\n\t    p.skip('uShort', 1);\n\t    var subTableVersion = p.parseUShort();\n\t    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n\t    // Skip subTableLength, subTableCoverage\n\t    p.skip('uShort', 2);\n\t    var nPairs = p.parseUShort();\n\t    // Skip searchRange, entrySelector, rangeShift.\n\t    p.skip('uShort', 3);\n\t    for (var i = 0; i < nPairs; i += 1) {\n\t        var leftIndex = p.parseUShort();\n\t        var rightIndex = p.parseUShort();\n\t        var value = p.parseShort();\n\t        pairs[leftIndex + ',' + rightIndex] = value;\n\t    }\n\t\n\t    return pairs;\n\t}\n\t\n\texports.parse = parseKernTable;\n\t\n\t},{\"../check\":2,\"../parse\":9}],20:[function(_dereq_,module,exports){\n\t// The `loca` table stores the offsets to the locations of the glyphs in the font.\n\t// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\t\n\t'use strict';\n\t\n\tvar parse = _dereq_('../parse');\n\t\n\t// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n\t// relative to the beginning of the glyphData table.\n\t// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n\t// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n\t// version where offsets are stored as uLongs. The `head` table specifies which version to use\n\t// (under indexToLocFormat).\n\tfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n\t    var p = new parse.Parser(data, start);\n\t    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n\t    // There is an extra entry after the last index element to compute the length of the last glyph.\n\t    // That's why we use numGlyphs + 1.\n\t    var glyphOffsets = [];\n\t    for (var i = 0; i < numGlyphs + 1; i += 1) {\n\t        var glyphOffset = parseFn.call(p);\n\t        if (shortVersion) {\n\t            // The short table version stores the actual offset divided by 2.\n\t            glyphOffset *= 2;\n\t        }\n\t\n\t        glyphOffsets.push(glyphOffset);\n\t    }\n\t\n\t    return glyphOffsets;\n\t}\n\t\n\texports.parse = parseLocaTable;\n\t\n\t},{\"../parse\":9}],21:[function(_dereq_,module,exports){\n\t// The `maxp` table establishes the memory requirements for the font.\n\t// We need it just to get the number of glyphs in the font.\n\t// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\t\n\t'use strict';\n\t\n\tvar parse = _dereq_('../parse');\n\tvar table = _dereq_('../table');\n\t\n\t// Parse the maximum profile `maxp` table.\n\tfunction parseMaxpTable(data, start) {\n\t    var maxp = {};\n\t    var p = new parse.Parser(data, start);\n\t    maxp.version = p.parseVersion();\n\t    maxp.numGlyphs = p.parseUShort();\n\t    if (maxp.version === 1.0) {\n\t        maxp.maxPoints = p.parseUShort();\n\t        maxp.maxContours = p.parseUShort();\n\t        maxp.maxCompositePoints = p.parseUShort();\n\t        maxp.maxCompositeContours = p.parseUShort();\n\t        maxp.maxZones = p.parseUShort();\n\t        maxp.maxTwilightPoints = p.parseUShort();\n\t        maxp.maxStorage = p.parseUShort();\n\t        maxp.maxFunctionDefs = p.parseUShort();\n\t        maxp.maxInstructionDefs = p.parseUShort();\n\t        maxp.maxStackElements = p.parseUShort();\n\t        maxp.maxSizeOfInstructions = p.parseUShort();\n\t        maxp.maxComponentElements = p.parseUShort();\n\t        maxp.maxComponentDepth = p.parseUShort();\n\t    }\n\t\n\t    return maxp;\n\t}\n\t\n\tfunction makeMaxpTable(numGlyphs) {\n\t    return new table.Table('maxp', [\n\t        {name: 'version', type: 'FIXED', value: 0x00005000},\n\t        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n\t    ]);\n\t}\n\t\n\texports.parse = parseMaxpTable;\n\texports.make = makeMaxpTable;\n\t\n\t},{\"../parse\":9,\"../table\":11}],22:[function(_dereq_,module,exports){\n\t// The `name` naming table.\n\t// https://www.microsoft.com/typography/OTSPEC/name.htm\n\t\n\t'use strict';\n\t\n\tvar encode = _dereq_('../types').encode;\n\tvar parse = _dereq_('../parse');\n\tvar table = _dereq_('../table');\n\t\n\t// NameIDs for the name table.\n\tvar nameTableNames = [\n\t    'copyright',              // 0\n\t    'fontFamily',             // 1\n\t    'fontSubfamily',          // 2\n\t    'uniqueID',               // 3\n\t    'fullName',               // 4\n\t    'version',                // 5\n\t    'postScriptName',         // 6\n\t    'trademark',              // 7\n\t    'manufacturer',           // 8\n\t    'designer',               // 9\n\t    'description',            // 10\n\t    'manufacturerURL',        // 11\n\t    'designerURL',            // 12\n\t    'licence',                // 13\n\t    'licenceURL',             // 14\n\t    'reserved',               // 15\n\t    'preferredFamily',        // 16\n\t    'preferredSubfamily',     // 17\n\t    'compatibleFullName',     // 18\n\t    'sampleText',             // 19\n\t    'postScriptFindFontName', // 20\n\t    'wwsFamily',              // 21\n\t    'wwsSubfamily'            // 22\n\t];\n\t\n\t// Parse the naming `name` table\n\t// Only Windows Unicode English names are supported.\n\t// Format 1 additional fields are not supported\n\tfunction parseNameTable(data, start) {\n\t    var name = {};\n\t    var p = new parse.Parser(data, start);\n\t    name.format = p.parseUShort();\n\t    var count = p.parseUShort();\n\t    var stringOffset = p.offset + p.parseUShort();\n\t    var unknownCount = 0;\n\t    for (var i = 0; i < count; i++) {\n\t        var platformID = p.parseUShort();\n\t        var encodingID = p.parseUShort();\n\t        var languageID = p.parseUShort();\n\t        var nameID = p.parseUShort();\n\t        var property = nameTableNames[nameID];\n\t        var byteLength = p.parseUShort();\n\t        var offset = p.parseUShort();\n\t        // platformID - encodingID - languageID standard combinations :\n\t        // 1 - 0 - 0 : Macintosh, Roman, English\n\t        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n\t        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n\t            var codePoints = [];\n\t            var length = byteLength / 2;\n\t            for (var j = 0; j < length; j++, offset += 2) {\n\t                codePoints[j] = parse.getShort(data, stringOffset + offset);\n\t            }\n\t\n\t            var str = String.fromCharCode.apply(null, codePoints);\n\t            if (property) {\n\t                name[property] = str;\n\t            }\n\t            else {\n\t                unknownCount++;\n\t                name['unknown' + unknownCount] = str;\n\t            }\n\t        }\n\t\n\t    }\n\t\n\t    if (name.format === 1) {\n\t        name.langTagCount = p.parseUShort();\n\t    }\n\t\n\t    return name;\n\t}\n\t\n\tfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n\t    return new table.Table('NameRecord', [\n\t        {name: 'platformID', type: 'USHORT', value: platformID},\n\t        {name: 'encodingID', type: 'USHORT', value: encodingID},\n\t        {name: 'languageID', type: 'USHORT', value: languageID},\n\t        {name: 'nameID', type: 'USHORT', value: nameID},\n\t        {name: 'length', type: 'USHORT', value: length},\n\t        {name: 'offset', type: 'USHORT', value: offset}\n\t    ]);\n\t}\n\t\n\tfunction addMacintoshNameRecord(t, recordID, s, offset) {\n\t    // Macintosh, Roman, English\n\t    var stringBytes = encode.STRING(s);\n\t    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n\t    t.strings.push(stringBytes);\n\t    offset += stringBytes.length;\n\t    return offset;\n\t}\n\t\n\tfunction addWindowsNameRecord(t, recordID, s, offset) {\n\t    // Windows, Unicode BMP (UCS-2), US English\n\t    var utf16Bytes = encode.UTF16(s);\n\t    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n\t    t.strings.push(utf16Bytes);\n\t    offset += utf16Bytes.length;\n\t    return offset;\n\t}\n\t\n\tfunction makeNameTable(options) {\n\t    var t = new table.Table('name', [\n\t        {name: 'format', type: 'USHORT', value: 0},\n\t        {name: 'count', type: 'USHORT', value: 0},\n\t        {name: 'stringOffset', type: 'USHORT', value: 0}\n\t    ]);\n\t    t.records = [];\n\t    t.strings = [];\n\t    var offset = 0;\n\t    var i;\n\t    var s;\n\t    // Add Macintosh records first\n\t    for (i = 0; i < nameTableNames.length; i += 1) {\n\t        if (options[nameTableNames[i]] !== undefined) {\n\t            s = options[nameTableNames[i]];\n\t            offset = addMacintoshNameRecord(t, i, s, offset);\n\t        }\n\t    }\n\t    // Then add Windows records\n\t    for (i = 0; i < nameTableNames.length; i += 1) {\n\t        if (options[nameTableNames[i]] !== undefined) {\n\t            s = options[nameTableNames[i]];\n\t            offset = addWindowsNameRecord(t, i, s, offset);\n\t        }\n\t    }\n\t\n\t    t.count = t.records.length;\n\t    t.stringOffset = 6 + t.count * 12;\n\t    for (i = 0; i < t.records.length; i += 1) {\n\t        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n\t    }\n\t\n\t    for (i = 0; i < t.strings.length; i += 1) {\n\t        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n\t    }\n\t\n\t    return t;\n\t}\n\t\n\texports.parse = parseNameTable;\n\texports.make = makeNameTable;\n\t\n\t},{\"../parse\":9,\"../table\":11,\"../types\":26}],23:[function(_dereq_,module,exports){\n\t// The `OS/2` table contains metrics required in OpenType fonts.\n\t// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\t\n\t'use strict';\n\t\n\tvar parse = _dereq_('../parse');\n\tvar table = _dereq_('../table');\n\t\n\tvar unicodeRanges = [\n\t    {begin: 0x0000, end: 0x007F}, // Basic Latin\n\t    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n\t    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n\t    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n\t    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n\t    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n\t    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n\t    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n\t    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n\t    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n\t    {begin: 0x0530, end: 0x058F}, // Armenian\n\t    {begin: 0x0590, end: 0x05FF}, // Hebrew\n\t    {begin: 0xA500, end: 0xA63F}, // Vai\n\t    {begin: 0x0600, end: 0x06FF}, // Arabic\n\t    {begin: 0x07C0, end: 0x07FF}, // NKo\n\t    {begin: 0x0900, end: 0x097F}, // Devanagari\n\t    {begin: 0x0980, end: 0x09FF}, // Bengali\n\t    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n\t    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n\t    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n\t    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n\t    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n\t    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n\t    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n\t    {begin: 0x0E00, end: 0x0E7F}, // Thai\n\t    {begin: 0x0E80, end: 0x0EFF}, // Lao\n\t    {begin: 0x10A0, end: 0x10FF}, // Georgian\n\t    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n\t    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n\t    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n\t    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n\t    {begin: 0x2000, end: 0x206F}, // General Punctuation\n\t    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n\t    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n\t    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n\t    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n\t    {begin: 0x2150, end: 0x218F}, // Number Forms\n\t    {begin: 0x2190, end: 0x21FF}, // Arrows\n\t    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n\t    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n\t    {begin: 0x2400, end: 0x243F}, // Control Pictures\n\t    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n\t    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n\t    {begin: 0x2500, end: 0x257F}, // Box Drawing\n\t    {begin: 0x2580, end: 0x259F}, // Block Elements\n\t    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n\t    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n\t    {begin: 0x2700, end: 0x27BF}, // Dingbats\n\t    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n\t    {begin: 0x3040, end: 0x309F}, // Hiragana\n\t    {begin: 0x30A0, end: 0x30FF}, // Katakana\n\t    {begin: 0x3100, end: 0x312F}, // Bopomofo\n\t    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n\t    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n\t    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n\t    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n\t    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n\t    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n\t    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n\t    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n\t    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n\t    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n\t    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n\t    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n\t    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n\t    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n\t    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n\t    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n\t    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n\t    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n\t    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n\t    {begin: 0x0700, end: 0x074F}, // Syriac\n\t    {begin: 0x0780, end: 0x07BF}, // Thaana\n\t    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n\t    {begin: 0x1000, end: 0x109F}, // Myanmar\n\t    {begin: 0x1200, end: 0x137F}, // Ethiopic\n\t    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n\t    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n\t    {begin: 0x1680, end: 0x169F}, // Ogham\n\t    {begin: 0x16A0, end: 0x16FF}, // Runic\n\t    {begin: 0x1780, end: 0x17FF}, // Khmer\n\t    {begin: 0x1800, end: 0x18AF}, // Mongolian\n\t    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n\t    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n\t    {begin: 0x1700, end: 0x171F}, // Tagalog\n\t    {begin: 0x10300, end: 0x1032F}, // Old Italic\n\t    {begin: 0x10330, end: 0x1034F}, // Gothic\n\t    {begin: 0x10400, end: 0x1044F}, // Deseret\n\t    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n\t    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n\t    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n\t    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n\t    {begin: 0xE0000, end: 0xE007F}, // Tags\n\t    {begin: 0x1900, end: 0x194F}, // Limbu\n\t    {begin: 0x1950, end: 0x197F}, // Tai Le\n\t    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n\t    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n\t    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n\t    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n\t    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n\t    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n\t    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n\t    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n\t    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n\t    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n\t    {begin: 0x10450, end: 0x1047F}, // Shavian\n\t    {begin: 0x10480, end: 0x104AF}, // Osmanya\n\t    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n\t    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n\t    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n\t    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n\t    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n\t    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n\t    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n\t    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n\t    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n\t    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n\t    {begin: 0xA930, end: 0xA95F}, // Rejang\n\t    {begin: 0xAA00, end: 0xAA5F}, // Cham\n\t    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n\t    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n\t    {begin: 0x102A0, end: 0x102DF}, // Carian\n\t    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n\t];\n\t\n\tfunction getUnicodeRange(unicode) {\n\t    for (var i = 0; i < unicodeRanges.length; i += 1) {\n\t        var range = unicodeRanges[i];\n\t        if (unicode >= range.begin && unicode < range.end) {\n\t            return i;\n\t        }\n\t    }\n\t\n\t    return -1;\n\t}\n\t\n\t// Parse the OS/2 and Windows metrics `OS/2` table\n\tfunction parseOS2Table(data, start) {\n\t    var os2 = {};\n\t    var p = new parse.Parser(data, start);\n\t    os2.version = p.parseUShort();\n\t    os2.xAvgCharWidth = p.parseShort();\n\t    os2.usWeightClass = p.parseUShort();\n\t    os2.usWidthClass = p.parseUShort();\n\t    os2.fsType = p.parseUShort();\n\t    os2.ySubscriptXSize = p.parseShort();\n\t    os2.ySubscriptYSize = p.parseShort();\n\t    os2.ySubscriptXOffset = p.parseShort();\n\t    os2.ySubscriptYOffset = p.parseShort();\n\t    os2.ySuperscriptXSize = p.parseShort();\n\t    os2.ySuperscriptYSize = p.parseShort();\n\t    os2.ySuperscriptXOffset = p.parseShort();\n\t    os2.ySuperscriptYOffset = p.parseShort();\n\t    os2.yStrikeoutSize = p.parseShort();\n\t    os2.yStrikeoutPosition = p.parseShort();\n\t    os2.sFamilyClass = p.parseShort();\n\t    os2.panose = [];\n\t    for (var i = 0; i < 10; i++) {\n\t        os2.panose[i] = p.parseByte();\n\t    }\n\t\n\t    os2.ulUnicodeRange1 = p.parseULong();\n\t    os2.ulUnicodeRange2 = p.parseULong();\n\t    os2.ulUnicodeRange3 = p.parseULong();\n\t    os2.ulUnicodeRange4 = p.parseULong();\n\t    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n\t    os2.fsSelection = p.parseUShort();\n\t    os2.usFirstCharIndex = p.parseUShort();\n\t    os2.usLastCharIndex = p.parseUShort();\n\t    os2.sTypoAscender = p.parseShort();\n\t    os2.sTypoDescender = p.parseShort();\n\t    os2.sTypoLineGap = p.parseShort();\n\t    os2.usWinAscent = p.parseUShort();\n\t    os2.usWinDescent = p.parseUShort();\n\t    if (os2.version >= 1) {\n\t        os2.ulCodePageRange1 = p.parseULong();\n\t        os2.ulCodePageRange2 = p.parseULong();\n\t    }\n\t\n\t    if (os2.version >= 2) {\n\t        os2.sxHeight = p.parseShort();\n\t        os2.sCapHeight = p.parseShort();\n\t        os2.usDefaultChar = p.parseUShort();\n\t        os2.usBreakChar = p.parseUShort();\n\t        os2.usMaxContent = p.parseUShort();\n\t    }\n\t\n\t    return os2;\n\t}\n\t\n\tfunction makeOS2Table(options) {\n\t    return new table.Table('OS/2', [\n\t        {name: 'version', type: 'USHORT', value: 0x0003},\n\t        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n\t        {name: 'usWeightClass', type: 'USHORT', value: 0},\n\t        {name: 'usWidthClass', type: 'USHORT', value: 0},\n\t        {name: 'fsType', type: 'USHORT', value: 0},\n\t        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n\t        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n\t        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n\t        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n\t        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n\t        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n\t        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n\t        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n\t        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n\t        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n\t        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n\t        {name: 'bFamilyType', type: 'BYTE', value: 0},\n\t        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n\t        {name: 'bWeight', type: 'BYTE', value: 0},\n\t        {name: 'bProportion', type: 'BYTE', value: 0},\n\t        {name: 'bContrast', type: 'BYTE', value: 0},\n\t        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n\t        {name: 'bArmStyle', type: 'BYTE', value: 0},\n\t        {name: 'bLetterform', type: 'BYTE', value: 0},\n\t        {name: 'bMidline', type: 'BYTE', value: 0},\n\t        {name: 'bXHeight', type: 'BYTE', value: 0},\n\t        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n\t        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n\t        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n\t        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n\t        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n\t        {name: 'fsSelection', type: 'USHORT', value: 0},\n\t        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n\t        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n\t        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n\t        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n\t        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n\t        {name: 'usWinAscent', type: 'USHORT', value: 0},\n\t        {name: 'usWinDescent', type: 'USHORT', value: 0},\n\t        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n\t        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n\t        {name: 'sxHeight', type: 'SHORT', value: 0},\n\t        {name: 'sCapHeight', type: 'SHORT', value: 0},\n\t        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n\t        {name: 'usBreakChar', type: 'USHORT', value: 0},\n\t        {name: 'usMaxContext', type: 'USHORT', value: 0}\n\t    ], options);\n\t}\n\t\n\texports.unicodeRanges = unicodeRanges;\n\texports.getUnicodeRange = getUnicodeRange;\n\texports.parse = parseOS2Table;\n\texports.make = makeOS2Table;\n\t\n\t},{\"../parse\":9,\"../table\":11}],24:[function(_dereq_,module,exports){\n\t// The `post` table stores additional PostScript information, such as glyph names.\n\t// https://www.microsoft.com/typography/OTSPEC/post.htm\n\t\n\t'use strict';\n\t\n\tvar encoding = _dereq_('../encoding');\n\tvar parse = _dereq_('../parse');\n\tvar table = _dereq_('../table');\n\t\n\t// Parse the PostScript `post` table\n\tfunction parsePostTable(data, start) {\n\t    var post = {};\n\t    var p = new parse.Parser(data, start);\n\t    var i;\n\t    post.version = p.parseVersion();\n\t    post.italicAngle = p.parseFixed();\n\t    post.underlinePosition = p.parseShort();\n\t    post.underlineThickness = p.parseShort();\n\t    post.isFixedPitch = p.parseULong();\n\t    post.minMemType42 = p.parseULong();\n\t    post.maxMemType42 = p.parseULong();\n\t    post.minMemType1 = p.parseULong();\n\t    post.maxMemType1 = p.parseULong();\n\t    switch (post.version) {\n\t    case 1:\n\t        post.names = encoding.standardNames.slice();\n\t        break;\n\t    case 2:\n\t        post.numberOfGlyphs = p.parseUShort();\n\t        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n\t        for (i = 0; i < post.numberOfGlyphs; i++) {\n\t            post.glyphNameIndex[i] = p.parseUShort();\n\t        }\n\t\n\t        post.names = [];\n\t        for (i = 0; i < post.numberOfGlyphs; i++) {\n\t            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n\t                var nameLength = p.parseChar();\n\t                post.names.push(p.parseString(nameLength));\n\t            }\n\t        }\n\t\n\t        break;\n\t    case 2.5:\n\t        post.numberOfGlyphs = p.parseUShort();\n\t        post.offset = new Array(post.numberOfGlyphs);\n\t        for (i = 0; i < post.numberOfGlyphs; i++) {\n\t            post.offset[i] = p.parseChar();\n\t        }\n\t\n\t        break;\n\t    }\n\t    return post;\n\t}\n\t\n\tfunction makePostTable() {\n\t    return new table.Table('post', [\n\t        {name: 'version', type: 'FIXED', value: 0x00030000},\n\t        {name: 'italicAngle', type: 'FIXED', value: 0},\n\t        {name: 'underlinePosition', type: 'FWORD', value: 0},\n\t        {name: 'underlineThickness', type: 'FWORD', value: 0},\n\t        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n\t        {name: 'minMemType42', type: 'ULONG', value: 0},\n\t        {name: 'maxMemType42', type: 'ULONG', value: 0},\n\t        {name: 'minMemType1', type: 'ULONG', value: 0},\n\t        {name: 'maxMemType1', type: 'ULONG', value: 0}\n\t    ]);\n\t}\n\t\n\texports.parse = parsePostTable;\n\texports.make = makePostTable;\n\t\n\t},{\"../encoding\":4,\"../parse\":9,\"../table\":11}],25:[function(_dereq_,module,exports){\n\t// The `sfnt` wrapper provides organization for the tables in the font.\n\t// It is the top-level data structure in a font.\n\t// https://www.microsoft.com/typography/OTSPEC/otff.htm\n\t// Recommendations for creating OpenType Fonts:\n\t// http://www.microsoft.com/typography/otspec140/recom.htm\n\t\n\t'use strict';\n\t\n\tvar check = _dereq_('../check');\n\tvar table = _dereq_('../table');\n\t\n\tvar cmap = _dereq_('./cmap');\n\tvar cff = _dereq_('./cff');\n\tvar head = _dereq_('./head');\n\tvar hhea = _dereq_('./hhea');\n\tvar hmtx = _dereq_('./hmtx');\n\tvar maxp = _dereq_('./maxp');\n\tvar _name = _dereq_('./name');\n\tvar os2 = _dereq_('./os2');\n\tvar post = _dereq_('./post');\n\t\n\tfunction log2(v) {\n\t    return Math.log(v) / Math.log(2) | 0;\n\t}\n\t\n\tfunction computeCheckSum(bytes) {\n\t    while (bytes.length % 4 !== 0) {\n\t        bytes.push(0);\n\t    }\n\t\n\t    var sum = 0;\n\t    for (var i = 0; i < bytes.length; i += 4) {\n\t        sum += (bytes[i] << 24) +\n\t            (bytes[i + 1] << 16) +\n\t            (bytes[i + 2] << 8) +\n\t            (bytes[i + 3]);\n\t    }\n\t\n\t    sum %= Math.pow(2, 32);\n\t    return sum;\n\t}\n\t\n\tfunction makeTableRecord(tag, checkSum, offset, length) {\n\t    return new table.Table('Table Record', [\n\t        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n\t        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n\t        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n\t        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n\t    ]);\n\t}\n\t\n\tfunction makeSfntTable(tables) {\n\t    var sfnt = new table.Table('sfnt', [\n\t        {name: 'version', type: 'TAG', value: 'OTTO'},\n\t        {name: 'numTables', type: 'USHORT', value: 0},\n\t        {name: 'searchRange', type: 'USHORT', value: 0},\n\t        {name: 'entrySelector', type: 'USHORT', value: 0},\n\t        {name: 'rangeShift', type: 'USHORT', value: 0}\n\t    ]);\n\t    sfnt.tables = tables;\n\t    sfnt.numTables = tables.length;\n\t    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n\t    sfnt.searchRange = 16 * highestPowerOf2;\n\t    sfnt.entrySelector = log2(highestPowerOf2);\n\t    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\t\n\t    var recordFields = [];\n\t    var tableFields = [];\n\t\n\t    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n\t    while (offset % 4 !== 0) {\n\t        offset += 1;\n\t        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n\t    }\n\t\n\t    for (var i = 0; i < tables.length; i += 1) {\n\t        var t = tables[i];\n\t        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n\t        var tableLength = t.sizeOf();\n\t        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n\t        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n\t        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n\t        offset += tableLength;\n\t        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n\t        while (offset % 4 !== 0) {\n\t            offset += 1;\n\t            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n\t        }\n\t    }\n\t\n\t    // Table records need to be sorted alphabetically.\n\t    recordFields.sort(function(r1, r2) {\n\t        if (r1.value.tag > r2.value.tag) {\n\t            return 1;\n\t        } else {\n\t            return -1;\n\t        }\n\t    });\n\t\n\t    sfnt.fields = sfnt.fields.concat(recordFields);\n\t    sfnt.fields = sfnt.fields.concat(tableFields);\n\t    return sfnt;\n\t}\n\t\n\t// Get the metrics for a character. If the string has more than one character\n\t// this function returns metrics for the first available character.\n\t// You can provide optional fallback metrics if no characters are available.\n\tfunction metricsForChar(font, chars, notFoundMetrics) {\n\t    for (var i = 0; i < chars.length; i += 1) {\n\t        var glyphIndex = font.charToGlyphIndex(chars[i]);\n\t        if (glyphIndex > 0) {\n\t            var glyph = font.glyphs.get(glyphIndex);\n\t            return glyph.getMetrics();\n\t        }\n\t    }\n\t\n\t    return notFoundMetrics;\n\t}\n\t\n\tfunction average(vs) {\n\t    var sum = 0;\n\t    for (var i = 0; i < vs.length; i += 1) {\n\t        sum += vs[i];\n\t    }\n\t\n\t    return sum / vs.length;\n\t}\n\t\n\t// Convert the font object to a SFNT data structure.\n\t// This structure contains all the necessary tables and metadata to create a binary OTF file.\n\tfunction fontToSfntTable(font) {\n\t    var xMins = [];\n\t    var yMins = [];\n\t    var xMaxs = [];\n\t    var yMaxs = [];\n\t    var advanceWidths = [];\n\t    var leftSideBearings = [];\n\t    var rightSideBearings = [];\n\t    var firstCharIndex;\n\t    var lastCharIndex = 0;\n\t    var ulUnicodeRange1 = 0;\n\t    var ulUnicodeRange2 = 0;\n\t    var ulUnicodeRange3 = 0;\n\t    var ulUnicodeRange4 = 0;\n\t\n\t    for (var i = 0; i < font.glyphs.length; i += 1) {\n\t        var glyph = font.glyphs.get(i);\n\t        var unicode = glyph.unicode | 0;\n\t        if (firstCharIndex > unicode || firstCharIndex === null) {\n\t            firstCharIndex = unicode;\n\t        }\n\t\n\t        if (lastCharIndex < unicode) {\n\t            lastCharIndex = unicode;\n\t        }\n\t\n\t        var position = os2.getUnicodeRange(unicode);\n\t        if (position < 32) {\n\t            ulUnicodeRange1 |= 1 << position;\n\t        } else if (position < 64) {\n\t            ulUnicodeRange2 |= 1 << position - 32;\n\t        } else if (position < 96) {\n\t            ulUnicodeRange3 |= 1 << position - 64;\n\t        } else if (position < 123) {\n\t            ulUnicodeRange4 |= 1 << position - 96;\n\t        } else {\n\t            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n\t        }\n\t        // Skip non-important characters.\n\t        if (glyph.name === '.notdef') continue;\n\t        var metrics = glyph.getMetrics();\n\t        xMins.push(metrics.xMin);\n\t        yMins.push(metrics.yMin);\n\t        xMaxs.push(metrics.xMax);\n\t        yMaxs.push(metrics.yMax);\n\t        leftSideBearings.push(metrics.leftSideBearing);\n\t        rightSideBearings.push(metrics.rightSideBearing);\n\t        advanceWidths.push(glyph.advanceWidth);\n\t    }\n\t\n\t    var globals = {\n\t        xMin: Math.min.apply(null, xMins),\n\t        yMin: Math.min.apply(null, yMins),\n\t        xMax: Math.max.apply(null, xMaxs),\n\t        yMax: Math.max.apply(null, yMaxs),\n\t        advanceWidthMax: Math.max.apply(null, advanceWidths),\n\t        advanceWidthAvg: average(advanceWidths),\n\t        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n\t        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n\t        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n\t    };\n\t    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n\t    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\t\n\t    var headTable = head.make({\n\t        unitsPerEm: font.unitsPerEm,\n\t        xMin: globals.xMin,\n\t        yMin: globals.yMin,\n\t        xMax: globals.xMax,\n\t        yMax: globals.yMax\n\t    });\n\t\n\t    var hheaTable = hhea.make({\n\t        ascender: globals.ascender,\n\t        descender: globals.descender,\n\t        advanceWidthMax: globals.advanceWidthMax,\n\t        minLeftSideBearing: globals.minLeftSideBearing,\n\t        minRightSideBearing: globals.minRightSideBearing,\n\t        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n\t        numberOfHMetrics: font.glyphs.length\n\t    });\n\t\n\t    var maxpTable = maxp.make(font.glyphs.length);\n\t\n\t    var os2Table = os2.make({\n\t        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n\t        usWeightClass: 500, // Medium FIXME Make this configurable\n\t        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n\t        usFirstCharIndex: firstCharIndex,\n\t        usLastCharIndex: lastCharIndex,\n\t        ulUnicodeRange1: ulUnicodeRange1,\n\t        ulUnicodeRange2: ulUnicodeRange2,\n\t        ulUnicodeRange3: ulUnicodeRange3,\n\t        ulUnicodeRange4: ulUnicodeRange4,\n\t        // See http://typophile.com/node/13081 for more info on vertical metrics.\n\t        // We get metrics for typical characters (such as \"x\" for xHeight).\n\t        // We provide some fallback characters if characters are unavailable: their\n\t        // ordering was chosen experimentally.\n\t        sTypoAscender: globals.ascender,\n\t        sTypoDescender: globals.descender,\n\t        sTypoLineGap: 0,\n\t        usWinAscent: globals.ascender,\n\t        usWinDescent: -globals.descender,\n\t        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n\t        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n\t        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n\t    });\n\t\n\t    var hmtxTable = hmtx.make(font.glyphs);\n\t    var cmapTable = cmap.make(font.glyphs);\n\t\n\t    var fullName = font.familyName + ' ' + font.styleName;\n\t    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n\t    var nameTable = _name.make({\n\t        copyright: font.copyright,\n\t        fontFamily: font.familyName,\n\t        fontSubfamily: font.styleName,\n\t        uniqueID: font.manufacturer + ':' + fullName,\n\t        fullName: fullName,\n\t        version: font.version,\n\t        postScriptName: postScriptName,\n\t        trademark: font.trademark,\n\t        manufacturer: font.manufacturer,\n\t        designer: font.designer,\n\t        description: font.description,\n\t        manufacturerURL: font.manufacturerURL,\n\t        designerURL: font.designerURL,\n\t        license: font.license,\n\t        licenseURL: font.licenseURL,\n\t        preferredFamily: font.familyName,\n\t        preferredSubfamily: font.styleName\n\t    });\n\t    var postTable = post.make();\n\t    var cffTable = cff.make(font.glyphs, {\n\t        version: font.version,\n\t        fullName: fullName,\n\t        familyName: font.familyName,\n\t        weightName: font.styleName,\n\t        postScriptName: postScriptName,\n\t        unitsPerEm: font.unitsPerEm\n\t    });\n\t    // Order the tables according to the the OpenType specification 1.4.\n\t    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\t\n\t    var sfntTable = makeSfntTable(tables);\n\t\n\t    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n\t    var bytes = sfntTable.encode();\n\t    var checkSum = computeCheckSum(bytes);\n\t    var tableFields = sfntTable.fields;\n\t    var checkSumAdjusted = false;\n\t    for (i = 0; i < tableFields.length; i += 1) {\n\t        if (tableFields[i].name === 'head table') {\n\t            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n\t            checkSumAdjusted = true;\n\t            break;\n\t        }\n\t    }\n\t\n\t    if (!checkSumAdjusted) {\n\t        throw new Error('Could not find head table with checkSum to adjust.');\n\t    }\n\t\n\t    return sfntTable;\n\t}\n\t\n\texports.computeCheckSum = computeCheckSum;\n\texports.make = makeSfntTable;\n\texports.fontToTable = fontToSfntTable;\n\t\n\t},{\"../check\":2,\"../table\":11,\"./cff\":12,\"./cmap\":13,\"./head\":16,\"./hhea\":17,\"./hmtx\":18,\"./maxp\":21,\"./name\":22,\"./os2\":23,\"./post\":24}],26:[function(_dereq_,module,exports){\n\t// Data types used in the OpenType font file.\n\t// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\t\n\t/* global WeakMap */\n\t\n\t'use strict';\n\t\n\tvar check = _dereq_('./check');\n\t\n\tvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\n\tvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\t\n\tvar decode = {};\n\tvar encode = {};\n\tvar sizeOf = {};\n\t\n\t// Return a function that always returns the same value.\n\tfunction constant(v) {\n\t    return function() {\n\t        return v;\n\t    };\n\t}\n\t\n\t// OpenType data types //////////////////////////////////////////////////////\n\t\n\t// Convert an 8-bit unsigned integer to a list of 1 byte.\n\tencode.BYTE = function(v) {\n\t    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n\t    return [v];\n\t};\n\t\n\tsizeOf.BYTE = constant(1);\n\t\n\t// Convert a 8-bit signed integer to a list of 1 byte.\n\tencode.CHAR = function(v) {\n\t    return [v.charCodeAt(0)];\n\t};\n\t\n\tsizeOf.BYTE = constant(1);\n\t\n\t// Convert an ASCII string to a list of bytes.\n\tencode.CHARARRAY = function(v) {\n\t    var b = [];\n\t    for (var i = 0; i < v.length; i += 1) {\n\t        b.push(v.charCodeAt(i));\n\t    }\n\t\n\t    return b;\n\t};\n\t\n\tsizeOf.CHARARRAY = function(v) {\n\t    return v.length;\n\t};\n\t\n\t// Convert a 16-bit unsigned integer to a list of 2 bytes.\n\tencode.USHORT = function(v) {\n\t    return [(v >> 8) & 0xFF, v & 0xFF];\n\t};\n\t\n\tsizeOf.USHORT = constant(2);\n\t\n\t// Convert a 16-bit signed integer to a list of 2 bytes.\n\tencode.SHORT = function(v) {\n\t    // Two's complement\n\t    if (v >= LIMIT16) {\n\t        v = -(2 * LIMIT16 - v);\n\t    }\n\t\n\t    return [(v >> 8) & 0xFF, v & 0xFF];\n\t};\n\t\n\tsizeOf.SHORT = constant(2);\n\t\n\t// Convert a 24-bit unsigned integer to a list of 3 bytes.\n\tencode.UINT24 = function(v) {\n\t    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n\t};\n\t\n\tsizeOf.UINT24 = constant(3);\n\t\n\t// Convert a 32-bit unsigned integer to a list of 4 bytes.\n\tencode.ULONG = function(v) {\n\t    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n\t};\n\t\n\tsizeOf.ULONG = constant(4);\n\t\n\t// Convert a 32-bit unsigned integer to a list of 4 bytes.\n\tencode.LONG = function(v) {\n\t    // Two's complement\n\t    if (v >= LIMIT32) {\n\t        v = -(2 * LIMIT32 - v);\n\t    }\n\t\n\t    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n\t};\n\t\n\tsizeOf.LONG = constant(4);\n\t\n\tencode.FIXED = encode.ULONG;\n\tsizeOf.FIXED = sizeOf.ULONG;\n\t\n\tencode.FWORD = encode.SHORT;\n\tsizeOf.FWORD = sizeOf.SHORT;\n\t\n\tencode.UFWORD = encode.USHORT;\n\tsizeOf.UFWORD = sizeOf.USHORT;\n\t\n\t// FIXME Implement LONGDATETIME\n\tencode.LONGDATETIME = function() {\n\t    return [0, 0, 0, 0, 0, 0, 0, 0];\n\t};\n\t\n\tsizeOf.LONGDATETIME = constant(8);\n\t\n\t// Convert a 4-char tag to a list of 4 bytes.\n\tencode.TAG = function(v) {\n\t    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n\t    return [v.charCodeAt(0),\n\t            v.charCodeAt(1),\n\t            v.charCodeAt(2),\n\t            v.charCodeAt(3)];\n\t};\n\t\n\tsizeOf.TAG = constant(4);\n\t\n\t// CFF data types ///////////////////////////////////////////////////////////\n\t\n\tencode.Card8 = encode.BYTE;\n\tsizeOf.Card8 = sizeOf.BYTE;\n\t\n\tencode.Card16 = encode.USHORT;\n\tsizeOf.Card16 = sizeOf.USHORT;\n\t\n\tencode.OffSize = encode.BYTE;\n\tsizeOf.OffSize = sizeOf.BYTE;\n\t\n\tencode.SID = encode.USHORT;\n\tsizeOf.SID = sizeOf.USHORT;\n\t\n\t// Convert a numeric operand or charstring number to a variable-size list of bytes.\n\tencode.NUMBER = function(v) {\n\t    if (v >= -107 && v <= 107) {\n\t        return [v + 139];\n\t    } else if (v >= 108 && v <= 1131) {\n\t        v = v - 108;\n\t        return [(v >> 8) + 247, v & 0xFF];\n\t    } else if (v >= -1131 && v <= -108) {\n\t        v = -v - 108;\n\t        return [(v >> 8) + 251, v & 0xFF];\n\t    } else if (v >= -32768 && v <= 32767) {\n\t        return encode.NUMBER16(v);\n\t    } else {\n\t        return encode.NUMBER32(v);\n\t    }\n\t};\n\t\n\tsizeOf.NUMBER = function(v) {\n\t    return encode.NUMBER(v).length;\n\t};\n\t\n\t// Convert a signed number between -32768 and +32767 to a three-byte value.\n\t// This ensures we always use three bytes, but is not the most compact format.\n\tencode.NUMBER16 = function(v) {\n\t    return [28, (v >> 8) & 0xFF, v & 0xFF];\n\t};\n\t\n\tsizeOf.NUMBER16 = constant(2);\n\t\n\t// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n\t// This is useful if you want to be sure you always use four bytes,\n\t// at the expense of wasting a few bytes for smaller numbers.\n\tencode.NUMBER32 = function(v) {\n\t    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n\t};\n\t\n\tsizeOf.NUMBER32 = constant(4);\n\t\n\tencode.REAL = function(v) {\n\t    var value = v.toString();\n\t\n\t    // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n\t    // This code converts it back to a number without the epsilon.\n\t    var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n\t    if (m) {\n\t        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n\t        value = (Math.round(v * epsilon) / epsilon).toString();\n\t    }\n\t\n\t    var nibbles = '';\n\t    var i;\n\t    var ii;\n\t    for (i = 0, ii = value.length; i < ii; i += 1) {\n\t        var c = value[i];\n\t        if (c === 'e') {\n\t            nibbles += value[++i] === '-' ? 'c' : 'b';\n\t        } else if (c === '.') {\n\t            nibbles += 'a';\n\t        } else if (c === '-') {\n\t            nibbles += 'e';\n\t        } else {\n\t            nibbles += c;\n\t        }\n\t    }\n\t\n\t    nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n\t    var out = [30];\n\t    for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n\t        out.push(parseInt(nibbles.substr(i, 2), 16));\n\t    }\n\t\n\t    return out;\n\t};\n\t\n\tsizeOf.REAL = function(v) {\n\t    return encode.REAL(v).length;\n\t};\n\t\n\tencode.NAME = encode.CHARARRAY;\n\tsizeOf.NAME = sizeOf.CHARARRAY;\n\t\n\tencode.STRING = encode.CHARARRAY;\n\tsizeOf.STRING = sizeOf.CHARARRAY;\n\t\n\t// Convert a ASCII string to a list of UTF16 bytes.\n\tencode.UTF16 = function(v) {\n\t    var b = [];\n\t    for (var i = 0; i < v.length; i += 1) {\n\t        b.push(0);\n\t        b.push(v.charCodeAt(i));\n\t    }\n\t\n\t    return b;\n\t};\n\t\n\tsizeOf.UTF16 = function(v) {\n\t    return v.length * 2;\n\t};\n\t\n\t// Convert a list of values to a CFF INDEX structure.\n\t// The values should be objects containing name / type / value.\n\tencode.INDEX = function(l) {\n\t    var i;\n\t    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n\t    //    dataSize, i, v;\n\t    // Because we have to know which data type to use to encode the offsets,\n\t    // we have to go through the values twice: once to encode the data and\n\t    // calculate the offets, then again to encode the offsets using the fitting data type.\n\t    var offset = 1; // First offset is always 1.\n\t    var offsets = [offset];\n\t    var data = [];\n\t    var dataSize = 0;\n\t    for (i = 0; i < l.length; i += 1) {\n\t        var v = encode.OBJECT(l[i]);\n\t        Array.prototype.push.apply(data, v);\n\t        dataSize += v.length;\n\t        offset += v.length;\n\t        offsets.push(offset);\n\t    }\n\t\n\t    if (data.length === 0) {\n\t        return [0, 0];\n\t    }\n\t\n\t    var encodedOffsets = [];\n\t    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n\t    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n\t    for (i = 0; i < offsets.length; i += 1) {\n\t        var encodedOffset = offsetEncoder(offsets[i]);\n\t        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n\t    }\n\t\n\t    return Array.prototype.concat(encode.Card16(l.length),\n\t                           encode.OffSize(offSize),\n\t                           encodedOffsets,\n\t                           data);\n\t};\n\t\n\tsizeOf.INDEX = function(v) {\n\t    return encode.INDEX(v).length;\n\t};\n\t\n\t// Convert an object to a CFF DICT structure.\n\t// The keys should be numeric.\n\t// The values should be objects containing name / type / value.\n\tencode.DICT = function(m) {\n\t    var d = [];\n\t    var keys = Object.keys(m);\n\t    var length = keys.length;\n\t\n\t    for (var i = 0; i < length; i += 1) {\n\t        // Object.keys() return string keys, but our keys are always numeric.\n\t        var k = parseInt(keys[i], 0);\n\t        var v = m[k];\n\t        // Value comes before the key.\n\t        d = d.concat(encode.OPERAND(v.value, v.type));\n\t        d = d.concat(encode.OPERATOR(k));\n\t    }\n\t\n\t    return d;\n\t};\n\t\n\tsizeOf.DICT = function(m) {\n\t    return encode.DICT(m).length;\n\t};\n\t\n\tencode.OPERATOR = function(v) {\n\t    if (v < 1200) {\n\t        return [v];\n\t    } else {\n\t        return [12, v - 1200];\n\t    }\n\t};\n\t\n\tencode.OPERAND = function(v, type) {\n\t    var d = [];\n\t    if (Array.isArray(type)) {\n\t        for (var i = 0; i < type.length; i += 1) {\n\t            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n\t            d = d.concat(encode.OPERAND(v[i], type[i]));\n\t        }\n\t    } else {\n\t        if (type === 'SID') {\n\t            d = d.concat(encode.NUMBER(v));\n\t        } else if (type === 'offset') {\n\t            // We make it easy for ourselves and always encode offsets as\n\t            // 4 bytes. This makes offset calculation for the top dict easier.\n\t            d = d.concat(encode.NUMBER32(v));\n\t        } else if (type === 'number') {\n\t            d = d.concat(encode.NUMBER(v));\n\t        } else if (type === 'real') {\n\t            d = d.concat(encode.REAL(v));\n\t        } else {\n\t            throw new Error('Unknown operand type ' + type);\n\t            // FIXME Add support for booleans\n\t        }\n\t    }\n\t\n\t    return d;\n\t};\n\t\n\tencode.OP = encode.BYTE;\n\tsizeOf.OP = sizeOf.BYTE;\n\t\n\t// memoize charstring encoding using WeakMap if available\n\tvar wmm = typeof WeakMap === 'function' && new WeakMap();\n\t// Convert a list of CharString operations to bytes.\n\tencode.CHARSTRING = function(ops) {\n\t    if (wmm && wmm.has(ops)) {\n\t        return wmm.get(ops);\n\t    }\n\t\n\t    var d = [];\n\t    var length = ops.length;\n\t\n\t    for (var i = 0; i < length; i += 1) {\n\t        var op = ops[i];\n\t        d = d.concat(encode[op.type](op.value));\n\t    }\n\t\n\t    if (wmm) {\n\t        wmm.set(ops, d);\n\t    }\n\t\n\t    return d;\n\t};\n\t\n\tsizeOf.CHARSTRING = function(ops) {\n\t    return encode.CHARSTRING(ops).length;\n\t};\n\t\n\t// Utility functions ////////////////////////////////////////////////////////\n\t\n\t// Convert an object containing name / type / value to bytes.\n\tencode.OBJECT = function(v) {\n\t    var encodingFunction = encode[v.type];\n\t    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n\t    return encodingFunction(v.value);\n\t};\n\t\n\t// Convert a table object to bytes.\n\t// A table contains a list of fields containing the metadata (name, type and default value).\n\t// The table itself has the field values set as attributes.\n\tencode.TABLE = function(table) {\n\t    var d = [];\n\t    var length = table.fields.length;\n\t\n\t    for (var i = 0; i < length; i += 1) {\n\t        var field = table.fields[i];\n\t        var encodingFunction = encode[field.type];\n\t        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n\t        var value = table[field.name];\n\t        if (value === undefined) {\n\t            value = field.value;\n\t        }\n\t\n\t        var bytes = encodingFunction(value);\n\t        d = d.concat(bytes);\n\t    }\n\t\n\t    return d;\n\t};\n\t\n\t// Merge in a list of bytes.\n\tencode.LITERAL = function(v) {\n\t    return v;\n\t};\n\t\n\tsizeOf.LITERAL = function(v) {\n\t    return v.length;\n\t};\n\t\n\texports.decode = decode;\n\texports.encode = encode;\n\texports.sizeOf = sizeOf;\n\t\n\t},{\"./check\":2}],27:[function(_dereq_,module,exports){\n\t/*!\n\t  * Reqwest! A general purpose XHR connection manager\n\t  * license MIT (c) Dustin Diaz 2014\n\t  * https://github.com/ded/reqwest\n\t  */\n\t\n\t!function (name, context, definition) {\n\t  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n\t  else if (typeof define == 'function' && define.amd) define(definition)\n\t  else context[name] = definition()\n\t}('reqwest', this, function () {\n\t\n\t  var win = window\n\t    , doc = document\n\t    , httpsRe = /^http/\n\t    , protocolRe = /(^\\w+):\\/\\//\n\t    , twoHundo = /^(20\\d|1223)$/ //http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t    , byTag = 'getElementsByTagName'\n\t    , readyState = 'readyState'\n\t    , contentType = 'Content-Type'\n\t    , requestedWith = 'X-Requested-With'\n\t    , head = doc[byTag]('head')[0]\n\t    , uniqid = 0\n\t    , callbackPrefix = 'reqwest_' + (+new Date())\n\t    , lastValue // data stored by the most recent JSONP callback\n\t    , xmlHttpRequest = 'XMLHttpRequest'\n\t    , xDomainRequest = 'XDomainRequest'\n\t    , noop = function () {}\n\t\n\t    , isArray = typeof Array.isArray == 'function'\n\t        ? Array.isArray\n\t        : function (a) {\n\t            return a instanceof Array\n\t          }\n\t\n\t    , defaultHeaders = {\n\t          'contentType': 'application/x-www-form-urlencoded'\n\t        , 'requestedWith': xmlHttpRequest\n\t        , 'accept': {\n\t              '*':  'text/javascript, text/html, application/xml, text/xml, */*'\n\t            , 'xml':  'application/xml, text/xml'\n\t            , 'html': 'text/html'\n\t            , 'text': 'text/plain'\n\t            , 'json': 'application/json, text/javascript'\n\t            , 'js':   'application/javascript, text/javascript'\n\t          }\n\t      }\n\t\n\t    , xhr = function(o) {\n\t        // is it x-domain\n\t        if (o['crossOrigin'] === true) {\n\t          var xhr = win[xmlHttpRequest] ? new XMLHttpRequest() : null\n\t          if (xhr && 'withCredentials' in xhr) {\n\t            return xhr\n\t          } else if (win[xDomainRequest]) {\n\t            return new XDomainRequest()\n\t          } else {\n\t            throw new Error('Browser does not support cross-origin requests')\n\t          }\n\t        } else if (win[xmlHttpRequest]) {\n\t          return new XMLHttpRequest()\n\t        } else {\n\t          return new ActiveXObject('Microsoft.XMLHTTP')\n\t        }\n\t      }\n\t    , globalSetupOptions = {\n\t        dataFilter: function (data) {\n\t          return data\n\t        }\n\t      }\n\t\n\t  function succeed(r) {\n\t    var protocol = protocolRe.exec(r.url);\n\t    protocol = (protocol && protocol[1]) || window.location.protocol;\n\t    return httpsRe.test(protocol) ? twoHundo.test(r.request.status) : !!r.request.response;\n\t  }\n\t\n\t  function handleReadyState(r, success, error) {\n\t    return function () {\n\t      // use _aborted to mitigate against IE err c00c023f\n\t      // (can't read props on aborted request objects)\n\t      if (r._aborted) return error(r.request)\n\t      if (r._timedOut) return error(r.request, 'Request is aborted: timeout')\n\t      if (r.request && r.request[readyState] == 4) {\n\t        r.request.onreadystatechange = noop\n\t        if (succeed(r)) success(r.request)\n\t        else\n\t          error(r.request)\n\t      }\n\t    }\n\t  }\n\t\n\t  function setHeaders(http, o) {\n\t    var headers = o['headers'] || {}\n\t      , h\n\t\n\t    headers['Accept'] = headers['Accept']\n\t      || defaultHeaders['accept'][o['type']]\n\t      || defaultHeaders['accept']['*']\n\t\n\t    var isAFormData = typeof FormData === 'function' && (o['data'] instanceof FormData);\n\t    // breaks cross-origin requests with legacy browsers\n\t    if (!o['crossOrigin'] && !headers[requestedWith]) headers[requestedWith] = defaultHeaders['requestedWith']\n\t    if (!headers[contentType] && !isAFormData) headers[contentType] = o['contentType'] || defaultHeaders['contentType']\n\t    for (h in headers)\n\t      headers.hasOwnProperty(h) && 'setRequestHeader' in http && http.setRequestHeader(h, headers[h])\n\t  }\n\t\n\t  function setCredentials(http, o) {\n\t    if (typeof o['withCredentials'] !== 'undefined' && typeof http.withCredentials !== 'undefined') {\n\t      http.withCredentials = !!o['withCredentials']\n\t    }\n\t  }\n\t\n\t  function generalCallback(data) {\n\t    lastValue = data\n\t  }\n\t\n\t  function urlappend (url, s) {\n\t    return url + (/\\?/.test(url) ? '&' : '?') + s\n\t  }\n\t\n\t  function handleJsonp(o, fn, err, url) {\n\t    var reqId = uniqid++\n\t      , cbkey = o['jsonpCallback'] || 'callback' // the 'callback' key\n\t      , cbval = o['jsonpCallbackName'] || reqwest.getcallbackPrefix(reqId)\n\t      , cbreg = new RegExp('((^|\\\\?|&)' + cbkey + ')=([^&]+)')\n\t      , match = url.match(cbreg)\n\t      , script = doc.createElement('script')\n\t      , loaded = 0\n\t      , isIE10 = navigator.userAgent.indexOf('MSIE 10.0') !== -1\n\t\n\t    if (match) {\n\t      if (match[3] === '?') {\n\t        url = url.replace(cbreg, '$1=' + cbval) // wildcard callback func name\n\t      } else {\n\t        cbval = match[3] // provided callback func name\n\t      }\n\t    } else {\n\t      url = urlappend(url, cbkey + '=' + cbval) // no callback details, add 'em\n\t    }\n\t\n\t    win[cbval] = generalCallback\n\t\n\t    script.type = 'text/javascript'\n\t    script.src = url\n\t    script.async = true\n\t    if (typeof script.onreadystatechange !== 'undefined' && !isIE10) {\n\t      // need this for IE due to out-of-order onreadystatechange(), binding script\n\t      // execution to an event listener gives us control over when the script\n\t      // is executed. See http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html\n\t      script.htmlFor = script.id = '_reqwest_' + reqId\n\t    }\n\t\n\t    script.onload = script.onreadystatechange = function () {\n\t      if ((script[readyState] && script[readyState] !== 'complete' && script[readyState] !== 'loaded') || loaded) {\n\t        return false\n\t      }\n\t      script.onload = script.onreadystatechange = null\n\t      script.onclick && script.onclick()\n\t      // Call the user callback with the last value stored and clean up values and scripts.\n\t      fn(lastValue)\n\t      lastValue = undefined\n\t      head.removeChild(script)\n\t      loaded = 1\n\t    }\n\t\n\t    // Add the script to the DOM head\n\t    head.appendChild(script)\n\t\n\t    // Enable JSONP timeout\n\t    return {\n\t      abort: function () {\n\t        script.onload = script.onreadystatechange = null\n\t        err({}, 'Request is aborted: timeout', {})\n\t        lastValue = undefined\n\t        head.removeChild(script)\n\t        loaded = 1\n\t      }\n\t    }\n\t  }\n\t\n\t  function getRequest(fn, err) {\n\t    var o = this.o\n\t      , method = (o['method'] || 'GET').toUpperCase()\n\t      , url = typeof o === 'string' ? o : o['url']\n\t      // convert non-string objects to query-string form unless o['processData'] is false\n\t      , data = (o['processData'] !== false && o['data'] && typeof o['data'] !== 'string')\n\t        ? reqwest.toQueryString(o['data'])\n\t        : (o['data'] || null)\n\t      , http\n\t      , sendWait = false\n\t\n\t    // if we're working on a GET request and we have data then we should append\n\t    // query string to end of URL and not post data\n\t    if ((o['type'] == 'jsonp' || method == 'GET') && data) {\n\t      url = urlappend(url, data)\n\t      data = null\n\t    }\n\t\n\t    if (o['type'] == 'jsonp') return handleJsonp(o, fn, err, url)\n\t\n\t    // get the xhr from the factory if passed\n\t    // if the factory returns null, fall-back to ours\n\t    http = (o.xhr && o.xhr(o)) || xhr(o)\n\t\n\t    http.open(method, url, o['async'] === false ? false : true)\n\t    setHeaders(http, o)\n\t    setCredentials(http, o)\n\t    if (win[xDomainRequest] && http instanceof win[xDomainRequest]) {\n\t        http.onload = fn\n\t        http.onerror = err\n\t        // NOTE: see\n\t        // http://social.msdn.microsoft.com/Forums/en-US/iewebdevelopment/thread/30ef3add-767c-4436-b8a9-f1ca19b4812e\n\t        http.onprogress = function() {}\n\t        sendWait = true\n\t    } else {\n\t      http.onreadystatechange = handleReadyState(this, fn, err)\n\t    }\n\t    o['before'] && o['before'](http)\n\t    if (sendWait) {\n\t      setTimeout(function () {\n\t        http.send(data)\n\t      }, 200)\n\t    } else {\n\t      http.send(data)\n\t    }\n\t    return http\n\t  }\n\t\n\t  function Reqwest(o, fn) {\n\t    this.o = o\n\t    this.fn = fn\n\t\n\t    init.apply(this, arguments)\n\t  }\n\t\n\t  function setType(header) {\n\t    // json, javascript, text/plain, text/html, xml\n\t    if (header.match('json')) return 'json'\n\t    if (header.match('javascript')) return 'js'\n\t    if (header.match('text')) return 'html'\n\t    if (header.match('xml')) return 'xml'\n\t  }\n\t\n\t  function init(o, fn) {\n\t\n\t    this.url = typeof o == 'string' ? o : o['url']\n\t    this.timeout = null\n\t\n\t    // whether request has been fulfilled for purpose\n\t    // of tracking the Promises\n\t    this._fulfilled = false\n\t    // success handlers\n\t    this._successHandler = function(){}\n\t    this._fulfillmentHandlers = []\n\t    // error handlers\n\t    this._errorHandlers = []\n\t    // complete (both success and fail) handlers\n\t    this._completeHandlers = []\n\t    this._erred = false\n\t    this._responseArgs = {}\n\t\n\t    var self = this\n\t\n\t    fn = fn || function () {}\n\t\n\t    if (o['timeout']) {\n\t      this.timeout = setTimeout(function () {\n\t        timedOut()\n\t      }, o['timeout'])\n\t    }\n\t\n\t    if (o['success']) {\n\t      this._successHandler = function () {\n\t        o['success'].apply(o, arguments)\n\t      }\n\t    }\n\t\n\t    if (o['error']) {\n\t      this._errorHandlers.push(function () {\n\t        o['error'].apply(o, arguments)\n\t      })\n\t    }\n\t\n\t    if (o['complete']) {\n\t      this._completeHandlers.push(function () {\n\t        o['complete'].apply(o, arguments)\n\t      })\n\t    }\n\t\n\t    function complete (resp) {\n\t      o['timeout'] && clearTimeout(self.timeout)\n\t      self.timeout = null\n\t      while (self._completeHandlers.length > 0) {\n\t        self._completeHandlers.shift()(resp)\n\t      }\n\t    }\n\t\n\t    function success (resp) {\n\t      var type = o['type'] || resp && setType(resp.getResponseHeader('Content-Type')) // resp can be undefined in IE\n\t      resp = (type !== 'jsonp') ? self.request : resp\n\t      // use global data filter on response text\n\t      var filteredResponse = globalSetupOptions.dataFilter(resp.responseText, type)\n\t        , r = filteredResponse\n\t      try {\n\t        resp.responseText = r\n\t      } catch (e) {\n\t        // can't assign this in IE<=8, just ignore\n\t      }\n\t      if (r) {\n\t        switch (type) {\n\t        case 'json':\n\t          try {\n\t            resp = win.JSON ? win.JSON.parse(r) : eval('(' + r + ')')\n\t          } catch (err) {\n\t            return error(resp, 'Could not parse JSON in response', err)\n\t          }\n\t          break\n\t        case 'js':\n\t          resp = eval(r)\n\t          break\n\t        case 'html':\n\t          resp = r\n\t          break\n\t        case 'xml':\n\t          resp = resp.responseXML\n\t              && resp.responseXML.parseError // IE trololo\n\t              && resp.responseXML.parseError.errorCode\n\t              && resp.responseXML.parseError.reason\n\t            ? null\n\t            : resp.responseXML\n\t          break\n\t        }\n\t      }\n\t\n\t      self._responseArgs.resp = resp\n\t      self._fulfilled = true\n\t      fn(resp)\n\t      self._successHandler(resp)\n\t      while (self._fulfillmentHandlers.length > 0) {\n\t        resp = self._fulfillmentHandlers.shift()(resp)\n\t      }\n\t\n\t      complete(resp)\n\t    }\n\t\n\t    function timedOut() {\n\t      self._timedOut = true\n\t      self.request.abort()      \n\t    }\n\t\n\t    function error(resp, msg, t) {\n\t      resp = self.request\n\t      self._responseArgs.resp = resp\n\t      self._responseArgs.msg = msg\n\t      self._responseArgs.t = t\n\t      self._erred = true\n\t      while (self._errorHandlers.length > 0) {\n\t        self._errorHandlers.shift()(resp, msg, t)\n\t      }\n\t      complete(resp)\n\t    }\n\t\n\t    this.request = getRequest.call(this, success, error)\n\t  }\n\t\n\t  Reqwest.prototype = {\n\t    abort: function () {\n\t      this._aborted = true\n\t      this.request.abort()\n\t    }\n\t\n\t  , retry: function () {\n\t      init.call(this, this.o, this.fn)\n\t    }\n\t\n\t    /**\n\t     * Small deviation from the Promises A CommonJs specification\n\t     * http://wiki.commonjs.org/wiki/Promises/A\n\t     */\n\t\n\t    /**\n\t     * `then` will execute upon successful requests\n\t     */\n\t  , then: function (success, fail) {\n\t      success = success || function () {}\n\t      fail = fail || function () {}\n\t      if (this._fulfilled) {\n\t        this._responseArgs.resp = success(this._responseArgs.resp)\n\t      } else if (this._erred) {\n\t        fail(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t)\n\t      } else {\n\t        this._fulfillmentHandlers.push(success)\n\t        this._errorHandlers.push(fail)\n\t      }\n\t      return this\n\t    }\n\t\n\t    /**\n\t     * `always` will execute whether the request succeeds or fails\n\t     */\n\t  , always: function (fn) {\n\t      if (this._fulfilled || this._erred) {\n\t        fn(this._responseArgs.resp)\n\t      } else {\n\t        this._completeHandlers.push(fn)\n\t      }\n\t      return this\n\t    }\n\t\n\t    /**\n\t     * `fail` will execute when the request fails\n\t     */\n\t  , fail: function (fn) {\n\t      if (this._erred) {\n\t        fn(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t)\n\t      } else {\n\t        this._errorHandlers.push(fn)\n\t      }\n\t      return this\n\t    }\n\t  , 'catch': function (fn) {\n\t      return this.fail(fn)\n\t    }\n\t  }\n\t\n\t  function reqwest(o, fn) {\n\t    return new Reqwest(o, fn)\n\t  }\n\t\n\t  // normalize newline variants according to spec -> CRLF\n\t  function normalize(s) {\n\t    return s ? s.replace(/\\r?\\n/g, '\\r\\n') : ''\n\t  }\n\t\n\t  function serial(el, cb) {\n\t    var n = el.name\n\t      , t = el.tagName.toLowerCase()\n\t      , optCb = function (o) {\n\t          // IE gives value=\"\" even where there is no value attribute\n\t          // 'specified' ref: http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-862529273\n\t          if (o && !o['disabled'])\n\t            cb(n, normalize(o['attributes']['value'] && o['attributes']['value']['specified'] ? o['value'] : o['text']))\n\t        }\n\t      , ch, ra, val, i\n\t\n\t    // don't serialize elements that are disabled or without a name\n\t    if (el.disabled || !n) return\n\t\n\t    switch (t) {\n\t    case 'input':\n\t      if (!/reset|button|image|file/i.test(el.type)) {\n\t        ch = /checkbox/i.test(el.type)\n\t        ra = /radio/i.test(el.type)\n\t        val = el.value\n\t        // WebKit gives us \"\" instead of \"on\" if a checkbox has no value, so correct it here\n\t        ;(!(ch || ra) || el.checked) && cb(n, normalize(ch && val === '' ? 'on' : val))\n\t      }\n\t      break\n\t    case 'textarea':\n\t      cb(n, normalize(el.value))\n\t      break\n\t    case 'select':\n\t      if (el.type.toLowerCase() === 'select-one') {\n\t        optCb(el.selectedIndex >= 0 ? el.options[el.selectedIndex] : null)\n\t      } else {\n\t        for (i = 0; el.length && i < el.length; i++) {\n\t          el.options[i].selected && optCb(el.options[i])\n\t        }\n\t      }\n\t      break\n\t    }\n\t  }\n\t\n\t  // collect up all form elements found from the passed argument elements all\n\t  // the way down to child elements; pass a '<form>' or form fields.\n\t  // called with 'this'=callback to use for serial() on each element\n\t  function eachFormElement() {\n\t    var cb = this\n\t      , e, i\n\t      , serializeSubtags = function (e, tags) {\n\t          var i, j, fa\n\t          for (i = 0; i < tags.length; i++) {\n\t            fa = e[byTag](tags[i])\n\t            for (j = 0; j < fa.length; j++) serial(fa[j], cb)\n\t          }\n\t        }\n\t\n\t    for (i = 0; i < arguments.length; i++) {\n\t      e = arguments[i]\n\t      if (/input|select|textarea/i.test(e.tagName)) serial(e, cb)\n\t      serializeSubtags(e, [ 'input', 'select', 'textarea' ])\n\t    }\n\t  }\n\t\n\t  // standard query string style serialization\n\t  function serializeQueryString() {\n\t    return reqwest.toQueryString(reqwest.serializeArray.apply(null, arguments))\n\t  }\n\t\n\t  // { 'name': 'value', ... } style serialization\n\t  function serializeHash() {\n\t    var hash = {}\n\t    eachFormElement.apply(function (name, value) {\n\t      if (name in hash) {\n\t        hash[name] && !isArray(hash[name]) && (hash[name] = [hash[name]])\n\t        hash[name].push(value)\n\t      } else hash[name] = value\n\t    }, arguments)\n\t    return hash\n\t  }\n\t\n\t  // [ { name: 'name', value: 'value' }, ... ] style serialization\n\t  reqwest.serializeArray = function () {\n\t    var arr = []\n\t    eachFormElement.apply(function (name, value) {\n\t      arr.push({name: name, value: value})\n\t    }, arguments)\n\t    return arr\n\t  }\n\t\n\t  reqwest.serialize = function () {\n\t    if (arguments.length === 0) return ''\n\t    var opt, fn\n\t      , args = Array.prototype.slice.call(arguments, 0)\n\t\n\t    opt = args.pop()\n\t    opt && opt.nodeType && args.push(opt) && (opt = null)\n\t    opt && (opt = opt.type)\n\t\n\t    if (opt == 'map') fn = serializeHash\n\t    else if (opt == 'array') fn = reqwest.serializeArray\n\t    else fn = serializeQueryString\n\t\n\t    return fn.apply(null, args)\n\t  }\n\t\n\t  reqwest.toQueryString = function (o, trad) {\n\t    var prefix, i\n\t      , traditional = trad || false\n\t      , s = []\n\t      , enc = encodeURIComponent\n\t      , add = function (key, value) {\n\t          // If value is a function, invoke it and return its value\n\t          value = ('function' === typeof value) ? value() : (value == null ? '' : value)\n\t          s[s.length] = enc(key) + '=' + enc(value)\n\t        }\n\t    // If an array was passed in, assume that it is an array of form elements.\n\t    if (isArray(o)) {\n\t      for (i = 0; o && i < o.length; i++) add(o[i]['name'], o[i]['value'])\n\t    } else {\n\t      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t      // did it), otherwise encode params recursively.\n\t      for (prefix in o) {\n\t        if (o.hasOwnProperty(prefix)) buildParams(prefix, o[prefix], traditional, add)\n\t      }\n\t    }\n\t\n\t    // spaces should be + according to spec\n\t    return s.join('&').replace(/%20/g, '+')\n\t  }\n\t\n\t  function buildParams(prefix, obj, traditional, add) {\n\t    var name, i, v\n\t      , rbracket = /\\[\\]$/\n\t\n\t    if (isArray(obj)) {\n\t      // Serialize array item.\n\t      for (i = 0; obj && i < obj.length; i++) {\n\t        v = obj[i]\n\t        if (traditional || rbracket.test(prefix)) {\n\t          // Treat each array item as a scalar.\n\t          add(prefix, v)\n\t        } else {\n\t          buildParams(prefix + '[' + (typeof v === 'object' ? i : '') + ']', v, traditional, add)\n\t        }\n\t      }\n\t    } else if (obj && obj.toString() === '[object Object]') {\n\t      // Serialize object item.\n\t      for (name in obj) {\n\t        buildParams(prefix + '[' + name + ']', obj[name], traditional, add)\n\t      }\n\t\n\t    } else {\n\t      // Serialize scalar item.\n\t      add(prefix, obj)\n\t    }\n\t  }\n\t\n\t  reqwest.getcallbackPrefix = function () {\n\t    return callbackPrefix\n\t  }\n\t\n\t  // jQuery and Zepto compatibility, differences can be remapped here so you can call\n\t  // .ajax.compat(options, callback)\n\t  reqwest.compat = function (o, fn) {\n\t    if (o) {\n\t      o['type'] && (o['method'] = o['type']) && delete o['type']\n\t      o['dataType'] && (o['type'] = o['dataType'])\n\t      o['jsonpCallback'] && (o['jsonpCallbackName'] = o['jsonpCallback']) && delete o['jsonpCallback']\n\t      o['jsonp'] && (o['jsonpCallback'] = o['jsonp'])\n\t    }\n\t    return new Reqwest(o, fn)\n\t  }\n\t\n\t  reqwest.ajaxSetup = function (options) {\n\t    options = options || {}\n\t    for (var k in options) {\n\t      globalSetupOptions[k] = options[k]\n\t    }\n\t  }\n\t\n\t  return reqwest\n\t});\n\t\n\t},{}],28:[function(_dereq_,module,exports){\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('./core/core');\n\t_dereq_('./color/p5.Color');\n\t_dereq_('./core/p5.Element');\n\t_dereq_('./typography/p5.Font');\n\t_dereq_('./core/p5.Graphics');\n\t_dereq_('./core/p5.Renderer2D');\n\t\n\t_dereq_('./image/p5.Image');\n\t_dereq_('./math/p5.Vector');\n\t_dereq_('./io/p5.TableRow');\n\t_dereq_('./io/p5.Table');\n\t_dereq_('./io/p5.XML');\n\t\n\t_dereq_('./color/creating_reading');\n\t_dereq_('./color/setting');\n\t_dereq_('./core/constants');\n\t_dereq_('./utilities/conversion');\n\t_dereq_('./utilities/array_functions');\n\t_dereq_('./utilities/string_functions');\n\t_dereq_('./core/environment');\n\t_dereq_('./image/image');\n\t_dereq_('./image/loading_displaying');\n\t_dereq_('./image/pixels');\n\t_dereq_('./io/files');\n\t_dereq_('./events/keyboard');\n\t_dereq_('./events/acceleration'); //john\n\t_dereq_('./events/mouse');\n\t_dereq_('./utilities/time_date');\n\t_dereq_('./events/touch');\n\t_dereq_('./math/math');\n\t_dereq_('./math/calculation');\n\t_dereq_('./math/random');\n\t_dereq_('./math/noise');\n\t_dereq_('./math/trigonometry');\n\t_dereq_('./core/rendering');\n\t_dereq_('./core/2d_primitives');\n\t\n\t_dereq_('./core/attributes');\n\t_dereq_('./core/curves');\n\t_dereq_('./core/vertex');\n\t_dereq_('./core/structure');\n\t_dereq_('./core/transform');\n\t_dereq_('./typography/attributes');\n\t_dereq_('./typography/loading_displaying');\n\t\n\t_dereq_('./webgl/p5.RendererGL');\n\t_dereq_('./webgl/p5.Geometry');\n\t_dereq_('./webgl/p5.RendererGL.Retained');\n\t_dereq_('./webgl/p5.RendererGL.Immediate');\n\t_dereq_('./webgl/primitives');\n\t_dereq_('./webgl/loading');\n\t_dereq_('./webgl/p5.Matrix');\n\t_dereq_('./webgl/material');\n\t_dereq_('./webgl/light');\n\t_dereq_('./webgl/shader');\n\t_dereq_('./webgl/camera');\n\t_dereq_('./webgl/interaction');\n\t\n\t/**\n\t * _globalInit\n\t *\n\t * TODO: ???\n\t * if sketch is on window\n\t * assume \"global\" mode\n\t * and instantiate p5 automatically\n\t * otherwise do nothing\n\t *\n\t * @return {Undefined}\n\t */\n\tvar _globalInit = function() {\n\t  if (!window.PHANTOMJS && !window.mocha) {\n\t    // If there is a setup or draw function on the window\n\t    // then instantiate p5 in \"global\" mode\n\t    if(((window.setup && typeof window.setup === 'function') ||\n\t       (window.draw && typeof window.draw === 'function')) &&\n\t       !p5.instance) {\n\t      new p5();\n\t    }\n\t  }\n\t};\n\t\n\t// TODO: ???\n\tif (document.readyState === 'complete') {\n\t  _globalInit();\n\t} else {\n\t  window.addEventListener('load', _globalInit , false);\n\t}\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"./color/creating_reading\":30,\"./color/p5.Color\":31,\"./color/setting\":32,\"./core/2d_primitives\":33,\"./core/attributes\":34,\"./core/constants\":36,\"./core/core\":37,\"./core/curves\":38,\"./core/environment\":39,\"./core/p5.Element\":41,\"./core/p5.Graphics\":42,\"./core/p5.Renderer2D\":44,\"./core/rendering\":45,\"./core/structure\":47,\"./core/transform\":48,\"./core/vertex\":49,\"./events/acceleration\":50,\"./events/keyboard\":51,\"./events/mouse\":52,\"./events/touch\":53,\"./image/image\":55,\"./image/loading_displaying\":56,\"./image/p5.Image\":57,\"./image/pixels\":58,\"./io/files\":59,\"./io/p5.Table\":60,\"./io/p5.TableRow\":61,\"./io/p5.XML\":62,\"./math/calculation\":63,\"./math/math\":64,\"./math/noise\":65,\"./math/p5.Vector\":66,\"./math/random\":68,\"./math/trigonometry\":69,\"./typography/attributes\":70,\"./typography/loading_displaying\":71,\"./typography/p5.Font\":72,\"./utilities/array_functions\":73,\"./utilities/conversion\":74,\"./utilities/string_functions\":75,\"./utilities/time_date\":76,\"./webgl/camera\":77,\"./webgl/interaction\":78,\"./webgl/light\":79,\"./webgl/loading\":80,\"./webgl/material\":81,\"./webgl/p5.Geometry\":82,\"./webgl/p5.Matrix\":83,\"./webgl/p5.RendererGL\":86,\"./webgl/p5.RendererGL.Immediate\":84,\"./webgl/p5.RendererGL.Retained\":85,\"./webgl/primitives\":87,\"./webgl/shader\":88}],29:[function(_dereq_,module,exports){\n\t/**\n\t * module Conversion\n\t * submodule Color Conversion\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Conversions adapted from <http://www.easyrgb.com/math.html>.\n\t *\n\t * In these functions, hue is always in the range [0,1); all other components\n\t * are in the range [0,1]. 'Brightness' and 'value' are used interchangeably.\n\t */\n\t\n\tvar p5 = _dereq_('../core/core');\n\tp5.ColorConversion = {};\n\t\n\t/**\n\t * Convert an HSBA array to HSLA.\n\t */\n\tp5.ColorConversion._hsbaToHSLA = function(hsba) {\n\t  var hue = hsba[0];\n\t  var sat = hsba[1];\n\t  var val = hsba[2];\n\t\n\t  // Calculate lightness.\n\t  var li = (2 - sat) * val / 2;\n\t\n\t  // Convert saturation.\n\t  if (li !== 0) {\n\t    if (li === 1) {\n\t      sat = 0;\n\t    } else if (li < 0.5) {\n\t      sat = sat / (2 - sat);\n\t    } else {\n\t      sat = sat * val / (2 - li * 2);\n\t    }\n\t  }\n\t\n\t  // Hue and alpha stay the same.\n\t  return [hue, sat, li, hsba[3]];\n\t};\n\t\n\t/**\n\t * Convert an HSBA array to RGBA.\n\t */\n\tp5.ColorConversion._hsbaToRGBA = function(hsba) {\n\t  var hue = hsba[0] * 6;  // We will split hue into 6 sectors.\n\t  var sat = hsba[1];\n\t  var val = hsba[2];\n\t\n\t  var RGBA = [];\n\t\n\t  if (sat === 0) {\n\t    RGBA = [val, val, val, hsba[3]];  // Return early if grayscale.\n\t  } else {\n\t    var sector = Math.floor(hue);\n\t    var tint1 = val * (1 - sat);\n\t    var tint2 = val * (1 - sat * (hue - sector));\n\t    var tint3 = val * (1 - sat * (1 + sector - hue));\n\t    var red, green, blue;\n\t    if (sector === 1) {  // Yellow to green.\n\t      red = tint2;\n\t      green = val;\n\t      blue = tint1;\n\t    } else if (sector === 2) {  // Green to cyan.\n\t      red = tint1;\n\t      green = val;\n\t      blue = tint3;\n\t    } else if (sector === 3) {  // Cyan to blue.\n\t      red = tint1;\n\t      green = tint2;\n\t      blue = val;\n\t    } else if (sector === 4) {  // Blue to magenta.\n\t      red = tint3;\n\t      green = tint1;\n\t      blue = val;\n\t    } else if (sector === 5) {  // Magenta to red.\n\t      red = val;\n\t      green = tint1;\n\t      blue = tint2;\n\t    } else {  // Red to yellow (sector could be 0 or 6).\n\t      red = val;\n\t      green = tint3;\n\t      blue = tint1;\n\t    }\n\t    RGBA = [red, green, blue, hsba[3]];\n\t  }\n\t\n\t  return RGBA;\n\t};\n\t\n\t/**\n\t * Convert an HSLA array to HSBA.\n\t */\n\tp5.ColorConversion._hslaToHSBA = function(hsla) {\n\t  var hue = hsla[0];\n\t  var sat = hsla[1];\n\t  var li = hsla[2];\n\t\n\t  // Calculate brightness.\n\t  var val;\n\t  if (li < 0.5) {\n\t    val = (1 + sat) * li;\n\t  } else {\n\t    val = li + sat - li * sat;\n\t  }\n\t\n\t  // Convert saturation.\n\t  sat = 2 * (val - li) / val;\n\t\n\t  // Hue and alpha stay the same.\n\t  return [hue, sat, val, hsla[3]];\n\t};\n\t\n\t/**\n\t * Convert an HSLA array to RGBA.\n\t *\n\t * We need to change basis from HSLA to something that can be more easily be\n\t * projected onto RGBA. We will choose hue and brightness as our first two\n\t * components, and pick a convenient third one ('zest') so that we don't need\n\t * to calculate formal HSBA saturation.\n\t */\n\tp5.ColorConversion._hslaToRGBA = function(hsla){\n\t  var hue = hsla[0] * 6;  // We will split hue into 6 sectors.\n\t  var sat = hsla[1];\n\t  var li = hsla[2];\n\t\n\t  var RGBA = [];\n\t\n\t  if (sat === 0) {\n\t    RGBA = [li, li, li, hsla[3]]; // Return early if grayscale.\n\t  } else {\n\t\n\t    // Calculate brightness.\n\t    var val;\n\t    if (li < 0.5) {\n\t      val = (1 + sat) * li;\n\t    } else {\n\t      val = li + sat - li * sat;\n\t    }\n\t\n\t    // Define zest.\n\t    var zest = 2 * li - val;\n\t\n\t    // Implement projection (project onto green by default).\n\t    var hzvToRGB = function(hue, zest, val) {\n\t      if (hue < 0) {  // Hue must wrap to allow projection onto red and blue.\n\t        hue += 6;\n\t      } else if (hue >= 6) {\n\t        hue -= 6;\n\t      }\n\t      if (hue < 1) {  // Red to yellow (increasing green).\n\t        return (zest + (val - zest) * hue);\n\t      } else if (hue < 3) {  // Yellow to cyan (greatest green).\n\t        return val;\n\t      } else if (hue < 4) {  // Cyan to blue (decreasing green).\n\t        return (zest + (val - zest) * (4 - hue));\n\t      } else {  // Blue to red (least green).\n\t        return zest;\n\t      }\n\t    };\n\t\n\t    // Perform projections, offsetting hue as necessary.\n\t    RGBA = [hzvToRGB(hue + 2, zest, val),\n\t            hzvToRGB(hue    , zest, val),\n\t            hzvToRGB(hue - 2, zest, val),\n\t            hsla[3]];\n\t  }\n\t\n\t  return RGBA;\n\t};\n\t\n\t/**\n\t * Convert an RGBA array to HSBA.\n\t */\n\tp5.ColorConversion._rgbaToHSBA = function(rgba) {\n\t  var red = rgba[0];\n\t  var green = rgba[1];\n\t  var blue = rgba[2];\n\t\n\t  var val = Math.max(red, green, blue);\n\t  var chroma = val - Math.min(red, green, blue);\n\t\n\t  var hue, sat;\n\t  if (chroma === 0) {  // Return early if grayscale.\n\t    hue = 0;\n\t    sat = 0;\n\t  }\n\t  else {\n\t    sat = chroma / val;\n\t    if (red === val) {  // Magenta to yellow.\n\t      hue = (green - blue) / chroma;\n\t    } else if (green === val) { // Yellow to cyan.\n\t      hue = 2 + (blue - red) / chroma;\n\t    } else if (blue === val) {  // Cyan to magenta.\n\t      hue = 4 + (red - green) / chroma;\n\t    }\n\t    if (hue < 0) {  // Confine hue to the interval [0, 1).\n\t      hue += 6;\n\t    } else if (hue >= 6) {\n\t      hue -= 6;\n\t    }\n\t  }\n\t\n\t  return [hue / 6, sat, val, rgba[3]];\n\t};\n\t\n\t/**\n\t * Convert an RGBA array to HSLA.\n\t */\n\tp5.ColorConversion._rgbaToHSLA = function(rgba) {\n\t  var red = rgba[0];\n\t  var green = rgba[1];\n\t  var blue = rgba[2];\n\t\n\t  var val = Math.max(red, green, blue);\n\t  var min = Math.min(red, green, blue);\n\t  var li = val + min;  // We will halve this later.\n\t  var chroma = val - min;\n\t\n\t  var hue, sat;\n\t  if (chroma === 0) {  // Return early if grayscale.\n\t    hue = 0;\n\t    sat = 0;\n\t  } else {\n\t    if (li < 1) {\n\t      sat = chroma / li;\n\t    } else {\n\t      sat = chroma / (2 - chroma);\n\t    }\n\t    if (red === val) {  // Magenta to yellow.\n\t      hue = (green - blue) / chroma;\n\t    } else if (green === val) {  // Yellow to cyan.\n\t      hue = 2 + (blue - red) / chroma;\n\t    } else if (blue === val) {  // Cyan to magenta.\n\t      hue = 4 + (red - green) / chroma;\n\t    }\n\t    if (hue < 0) {  // Confine hue to the interval [0, 1).\n\t      hue += 6;\n\t    } else if (hue >= 6) {\n\t      hue -= 6;\n\t    }\n\t  }\n\t\n\t  return [hue / 6, sat, li / 2, rgba[3]];\n\t};\n\t\n\tmodule.exports = p5.ColorConversion;\n\t\n\t},{\"../core/core\":37}],30:[function(_dereq_,module,exports){\n\t/**\n\t * @module Color\n\t * @submodule Creating & Reading\n\t * @for p5\n\t * @requires core\n\t * @requires constants\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar constants = _dereq_('../core/constants');\n\t_dereq_('./p5.Color');\n\t\n\t/**\n\t * Extracts the alpha value from a color or pixel array.\n\t *\n\t * @method alpha\n\t * @param {Object} obj p5.Color object or pixel array\n\t * @example\n\t * <div>\n\t * <code>\n\t * noStroke();\n\t * c = color(0, 126, 255, 102);\n\t * fill(c);\n\t * rect(15, 15, 35, 70);\n\t * value = alpha(c);  // Sets 'value' to 102\n\t * fill(value);\n\t * rect(50, 15, 35, 70);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Left half of canvas light blue and right half light charcoal grey.\n\t * Left half of canvas light purple and right half a royal blue.\n\t * Left half of canvas salmon pink and the right half white.\n\t * Yellow rect in middle right of canvas, with 55 pixel width and height.\n\t * Yellow ellipse in top left canvas, black ellipse in bottom right,both 80x80.\n\t * Bright fuschia rect in middle of canvas, 60 pixel width and height.\n\t * Two bright green rects on opposite sides of the canvas, both 45x80.\n\t * Four blue rects in each corner of the canvas, each are 35x35.\n\t * Bright sea green rect on left and darker rect on right of canvas, both 45x80.\n\t * Dark green rect on left and light green rect on right of canvas, both 45x80.\n\t * Dark blue rect on left and light teal rect on right of canvas, both 45x80.\n\t * blue rect on left and green on right, both with black outlines & 35x60.\n\t * salmon pink rect on left and black on right, both 35x60.\n\t * 4 rects, tan, brown, brownish purple and purple, with white outlines & 20x60.\n\t * light pastel green rect on left and dark grey rect on right, both 35x60.\n\t * yellow rect on left and red rect on right, both with black outlines & 35x60.\n\t * grey canvas\n\t * deep pink rect on left and grey rect on right, both 35x60.\n\t */\n\tp5.prototype.alpha = function(c) {\n\t  if (c instanceof p5.Color || c instanceof Array) {\n\t    return this.color(c)._getAlpha();\n\t  } else {\n\t    throw new Error('Needs p5.Color or pixel array as argument.');\n\t  }\n\t};\n\t\n\t/**\n\t * Extracts the blue value from a color or pixel array.\n\t *\n\t * @method blue\n\t * @param {Object} obj p5.Color object or pixel array\n\t * @example\n\t * <div>\n\t * <code>\n\t * c = color(175, 100, 220);  // Define color 'c'\n\t * fill(c);  // Use color variable 'c' as fill color\n\t * rect(15, 20, 35, 60);  // Draw left rectangle\n\t *\n\t * blueValue = blue(c);  // Get blue in 'c'\n\t * print(blueValue);  // Prints \"220.0\"\n\t * fill(0, 0, blueValue);  // Use 'blueValue' in new fill\n\t * rect(50, 20, 35, 60);  // Draw right rectangle\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Left half of canvas light purple and right half a royal blue.\n\t *\n\t */\n\tp5.prototype.blue = function(c) {\n\t  if (c instanceof p5.Color || c instanceof Array) {\n\t    return this.color(c)._getBlue();\n\t  } else {\n\t    throw new Error('Needs p5.Color or pixel array as argument.');\n\t  }\n\t};\n\t\n\t/**\n\t * Extracts the HSB brightness value from a color or pixel array.\n\t *\n\t * @method brightness\n\t * @param {Object} color p5.Color object or pixel array\n\t * @example\n\t * <div>\n\t * <code>\n\t * noStroke();\n\t * colorMode(HSB, 255);\n\t * c = color(0, 126, 255);\n\t * fill(c);\n\t * rect(15, 20, 35, 60);\n\t * value = brightness(c);  // Sets 'value' to 255\n\t * fill(value);\n\t * rect(50, 20, 35, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Left half of canvas salmon pink and the right half white.\n\t *\n\t */\n\tp5.prototype.brightness = function(c) {\n\t  if (c instanceof p5.Color || c instanceof Array) {\n\t    return this.color(c)._getBrightness();\n\t  } else {\n\t    throw new Error('Needs p5.Color or pixel array as argument.');\n\t  }\n\t};\n\t\n\t/**\n\t * Creates colors for storing in variables of the color datatype. The\n\t * parameters are interpreted as RGB or HSB values depending on the\n\t * current colorMode(). The default mode is RGB values from 0 to 255\n\t * and, therefore, the function call color(255, 204, 0) will return a\n\t * bright yellow color.\n\t * <br><br>\n\t * Note that if only one value is provided to color(), it will be interpreted\n\t * as a grayscale value. Add a second value, and it will be used for alpha\n\t * transparency. When three values are specified, they are interpreted as\n\t * either RGB or HSB values. Adding a fourth value applies alpha\n\t * transparency. If a single string parameter is provided it will be\n\t * interpreted as a CSS-compatible color string.\n\t *\n\t * Colors are stored as Numbers or Arrays.\n\t *\n\t * @method color\n\t * @param  {Number|String} gray    number specifying value between white\n\t *                                 and black.\n\t * @param  {Number}        [alpha] alpha value relative to current color range\n\t *                                 (default is 0-100)\n\t * @return {Array}                 resulting color\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * var c = color(255, 204, 0);  // Define color 'c'\n\t * fill(c);  // Use color variable 'c' as fill color\n\t * noStroke();  // Don't draw a stroke around shapes\n\t * rect(30, 20, 55, 55);  // Draw rectangle\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var c = color(255, 204, 0);  // Define color 'c'\n\t * fill(c);  // Use color variable 'c' as fill color\n\t * noStroke();  // Don't draw a stroke around shapes\n\t * ellipse(25, 25, 80, 80);  // Draw left circle\n\t *\n\t * // Using only one value with color()\n\t * // generates a grayscale value.\n\t * var c = color(65);  // Update 'c' with grayscale value\n\t * fill(c);  // Use updated 'c' as fill color\n\t * ellipse(75, 75, 80, 80);  // Draw right circle\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // Named SVG & CSS colors may be used,\n\t * var c = color('magenta');\n\t * fill(c);  // Use 'c' as fill color\n\t * noStroke();  // Don't draw a stroke around shapes\n\t * rect(20, 20, 60, 60);  // Draw rectangle\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // as can hex color codes:\n\t * noStroke();  // Don't draw a stroke around shapes\n\t * var c = color('#0f0');\n\t * fill(c);  // Use 'c' as fill color\n\t * rect(0, 10, 45, 80);  // Draw rectangle\n\t *\n\t * c = color('#00ff00');\n\t * fill(c);  // Use updated 'c' as fill color\n\t * rect(55, 10, 45, 80);  // Draw rectangle\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // RGB and RGBA color strings are also supported:\n\t * // these all set to the same color (solid blue)\n\t * var c;\n\t * noStroke();  // Don't draw a stroke around shapes\n\t * c = color('rgb(0,0,255)');\n\t * fill(c); // Use 'c' as fill color\n\t * rect(10, 10, 35, 35);  // Draw rectangle\n\t *\n\t * c = color('rgb(0%, 0%, 100%)');\n\t * fill(c); // Use updated 'c' as fill color\n\t * rect(55, 10, 35, 35);  // Draw rectangle\n\t *\n\t * c = color('rgba(0, 0, 255, 1)');\n\t * fill(c); // Use updated 'c' as fill color\n\t * rect(10, 55, 35, 35);  // Draw rectangle\n\t *\n\t * c = color('rgba(0%, 0%, 100%, 1)');\n\t * fill(c); // Use updated 'c' as fill color\n\t * rect(55, 55, 35, 35);  // Draw rectangle\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // HSL color is also supported and can be specified\n\t * // by value\n\t * var c;\n\t * noStroke();  // Don't draw a stroke around shapes\n\t * c = color('hsl(160, 100%, 50%)');\n\t * fill(c);  // Use 'c' as fill color\n\t * rect(0, 10, 45, 80);  // Draw rectangle\n\t *\n\t * c = color('hsla(160, 100%, 50%, 0.5)');\n\t * fill(c); // Use updated 'c' as fill color\n\t * rect(55, 10, 45, 80);  // Draw rectangle\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // HSB color is also supported and can be specified\n\t * // by value\n\t * var c;\n\t * noStroke();  // Don't draw a stroke around shapes\n\t * c = color('hsb(160, 100%, 50%)');\n\t * fill(c);  // Use 'c' as fill color\n\t * rect(0, 10, 45, 80);  // Draw rectangle\n\t *\n\t * c = color('hsba(160, 100%, 50%, 0.5)');\n\t * fill(c); // Use updated 'c' as fill color\n\t * rect(55, 10, 45, 80);  // Draw rectangle\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var c;  // Declare color 'c'\n\t * noStroke();  // Don't draw a stroke around shapes\n\t *\n\t * // If no colorMode is specified, then the\n\t * // default of RGB with scale of 0-255 is used.\n\t * c = color(50, 55, 100);  // Create a color for 'c'\n\t * fill(c);  // Use color variable 'c' as fill color\n\t * rect(0, 10, 45, 80);  // Draw left rect\n\t *\n\t * colorMode(HSB, 100);  // Use HSB with scale of 0-100\n\t * c = color(50, 55, 100);  // Update 'c' with new color\n\t * fill(c);  // Use updated 'c' as fill color\n\t * rect(55, 10, 45, 80);  // Draw right rect\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Yellow rect in middle right of canvas, with 55 pixel width and height.\n\t * Yellow ellipse in top left of canvas, black ellipse in bottom right,both 80x80.\n\t * Bright fuschia rect in middle of canvas, 60 pixel width and height.\n\t * Two bright green rects on opposite sides of the canvas, both 45x80.\n\t * Four blue rects in each corner of the canvas, each are 35x35.\n\t * Bright sea green rect on left and darker rect on right of canvas, both 45x80.\n\t * Dark green rect on left and lighter green rect on right of canvas, both 45x80.\n\t * Dark blue rect on left and light teal rect on right of canvas, both 45x80.\n\t *\n\t */\n\t\n\t/**\n\t * @method color\n\t * @param  {Number|String} v1      red or hue value relative to\n\t *                                 the current color range, or a color string\n\t * @param  {Number}        v2      green or saturation value\n\t *                                 relative to the current color range\n\t * @param  {Number}        v3      blue or brightness value\n\t *                                 relative to the current color range\n\t * @param  {Number}        [alpha]\n\t */\n\t\n\tp5.prototype.color = function() {\n\t  if (arguments[0] instanceof p5.Color) {\n\t    return arguments[0];  // Do nothing if argument is already a color object.\n\t  } else if (arguments[0] instanceof Array) {\n\t    if (this instanceof p5.Renderer) {\n\t      return new p5.Color(this, arguments[0]);\n\t    } else {\n\t      return new p5.Color(this._renderer, arguments[0]);\n\t    }\n\t  } else {\n\t    if (this instanceof p5.Renderer) {\n\t      return new p5.Color(this, arguments);\n\t    } else {\n\t      return new p5.Color(this._renderer, arguments);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Extracts the green value from a color or pixel array.\n\t *\n\t * @method green\n\t * @param {Object} color p5.Color object or pixel array\n\t * @example\n\t * <div>\n\t * <code>\n\t * c = color(20, 75, 200);  // Define color 'c'\n\t * fill(c);  // Use color variable 'c' as fill color\n\t * rect(15, 20, 35, 60);  // Draw left rectangle\n\t *\n\t * greenValue = green(c);  // Get green in 'c'\n\t * print(greenValue);  // Print \"75.0\"\n\t * fill(0, greenValue, 0);  // Use 'greenValue' in new fill\n\t * rect(50, 20, 35, 60);  // Draw right rectangle\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * blue rect on left and green on right, both with black outlines & 35x60.\n\t *\n\t */\n\t\n\tp5.prototype.green = function(c) {\n\t  if (c instanceof p5.Color || c instanceof Array) {\n\t    return this.color(c)._getGreen();\n\t  } else {\n\t    throw new Error('Needs p5.Color or pixel array as argument.');\n\t  }\n\t};\n\t\n\t/**\n\t * Extracts the hue value from a color or pixel array.\n\t *\n\t * Hue exists in both HSB and HSL. This function will return the\n\t * HSB-normalized hue when supplied with an HSB color object (or when supplied\n\t * with a pixel array while the color mode is HSB), but will default to the\n\t * HSL-normalized hue otherwise. (The values will only be different if the\n\t * maximum hue setting for each system is different.)\n\t *\n\t * @method hue\n\t * @param {Object} color p5.Color object or pixel array\n\t * @example\n\t * <div>\n\t * <code>\n\t * noStroke();\n\t * colorMode(HSB, 255);\n\t * c = color(0, 126, 255);\n\t * fill(c);\n\t * rect(15, 20, 35, 60);\n\t * value = hue(c);  // Sets 'value' to \"0\"\n\t * fill(value);\n\t * rect(50, 20, 35, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * salmon pink rect on left and black on right, both 35x60.\n\t *\n\t */\n\t\n\tp5.prototype.hue = function(c) {\n\t  if (c instanceof p5.Color || c instanceof Array) {\n\t    return this.color(c)._getHue();\n\t  } else {\n\t    throw new Error('Needs p5.Color or pixel array as argument.');\n\t  }\n\t};\n\t\n\t/**\n\t * Blends two colors to find a third color somewhere between them. The amt\n\t * parameter is the amount to interpolate between the two values where 0.0\n\t * equal to the first color, 0.1 is very near the first color, 0.5 is halfway\n\t * in between, etc. An amount below 0 will be treated as 0. Likewise, amounts\n\t * above 1 will be capped at 1. This is different from the behavior of lerp(),\n\t * but necessary because otherwise numbers outside the range will produce\n\t * strange and unexpected colors.\n\t * <br><br>\n\t * The way that colours are interpolated depends on the current color mode.\n\t *\n\t * @method lerpColor\n\t * @param  {Array/Number} c1  interpolate from this color\n\t * @param  {Array/Number} c2  interpolate to this color\n\t * @param  {Number}       amt number between 0 and 1\n\t * @return {Array/Number}     interpolated color\n\t * @example\n\t * <div>\n\t * <code>\n\t * colorMode(RGB);\n\t * stroke(255);\n\t * background(51);\n\t * from = color(218, 165, 32);\n\t * to = color(72, 61, 139);\n\t * colorMode(RGB);  // Try changing to HSB.\n\t * interA = lerpColor(from, to, .33);\n\t * interB = lerpColor(from, to, .66);\n\t * fill(from);\n\t * rect(10, 20, 20, 60);\n\t * fill(interA);\n\t * rect(30, 20, 20, 60);\n\t * fill(interB);\n\t * rect(50, 20, 20, 60);\n\t * fill(to);\n\t * rect(70, 20, 20, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 4 rects one tan, brown, brownish purple, purple, with white outlines & 20x60\n\t *\n\t */\n\t\n\tp5.prototype.lerpColor = function(c1, c2, amt) {\n\t  var mode = this._renderer._colorMode;\n\t  var maxes = this._renderer._colorMaxes;\n\t  var l0, l1, l2, l3;\n\t  var fromArray, toArray;\n\t\n\t  if (mode === constants.RGB) {\n\t    fromArray = c1.levels.map(function(level) {\n\t      return level / 255;\n\t    });\n\t    toArray = c2.levels.map(function(level) {\n\t      return level / 255;\n\t    });\n\t  } else if (mode === constants.HSB) {\n\t    c1._getBrightness();  // Cache hsba so it definitely exists.\n\t    c2._getBrightness();\n\t    fromArray = c1.hsba;\n\t    toArray = c2.hsba;\n\t  } else if (mode === constants.HSL) {\n\t    c1._getLightness();  // Cache hsla so it definitely exists.\n\t    c2._getLightness();\n\t    fromArray = c1.hsla;\n\t    toArray = c2.hsla;\n\t  } else {\n\t    throw new Error (mode + 'cannot be used for interpolation.');\n\t  }\n\t\n\t  // Prevent extrapolation.\n\t  amt = Math.max(Math.min(amt, 1), 0);\n\t\n\t  // Perform interpolation.\n\t  l0 = this.lerp(fromArray[0], toArray[0], amt);\n\t  l1 = this.lerp(fromArray[1], toArray[1], amt);\n\t  l2 = this.lerp(fromArray[2], toArray[2], amt);\n\t  l3 = this.lerp(fromArray[3], toArray[3], amt);\n\t\n\t  // Scale components.\n\t  l0 *= maxes[mode][0];\n\t  l1 *= maxes[mode][1];\n\t  l2 *= maxes[mode][2];\n\t  l3 *= maxes[mode][3];\n\t\n\t  return this.color(l0, l1, l2, l3);\n\t};\n\t\n\t/**\n\t * Extracts the HSL lightness value from a color or pixel array.\n\t *\n\t * @method lightness\n\t * @param {Object} color p5.Color object or pixel array\n\t * @example\n\t * <div>\n\t * <code>\n\t * noStroke();\n\t * colorMode(HSL);\n\t * c = color(156, 100, 50, 1);\n\t * fill(c);\n\t * rect(15, 20, 35, 60);\n\t * value = lightness(c);  // Sets 'value' to 50\n\t * fill(value);\n\t * rect(50, 20, 35, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * light pastel green rect on left and dark grey rect on right, both 35x60.\n\t *\n\t */\n\tp5.prototype.lightness = function(c) {\n\t  if (c instanceof p5.Color || c instanceof Array) {\n\t    return this.color(c)._getLightness();\n\t  } else {\n\t    throw new Error('Needs p5.Color or pixel array as argument.');\n\t  }\n\t};\n\t\n\t/**\n\t * Extracts the red value from a color or pixel array.\n\t *\n\t * @method red\n\t * @param {Object} obj p5.Color object or pixel array\n\t * @example\n\t * <div>\n\t * <code>\n\t * c = color(255, 204, 0);  // Define color 'c'\n\t * fill(c);  // Use color variable 'c' as fill color\n\t * rect(15, 20, 35, 60);  // Draw left rectangle\n\t *\n\t * redValue = red(c);  // Get red in 'c'\n\t * print(redValue);  // Print \"255.0\"\n\t * fill(redValue, 0, 0);  // Use 'redValue' in new fill\n\t * rect(50, 20, 35, 60);  // Draw right rectangle\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * colorMode(RGB, 255);\n\t * var c = color(127, 255, 0);\n\t * colorMode(RGB, 1);\n\t * var myColor = red(c);\n\t * print(myColor);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * yellow rect on left and red rect on right, both with black outlines and 35x60.\n\t * grey canvas\n\t */\n\tp5.prototype.red = function(c) {\n\t  if (c instanceof p5.Color || c instanceof Array) {\n\t    return this.color(c)._getRed();\n\t  } else {\n\t    throw new Error('Needs p5.Color or pixel array as argument.');\n\t  }\n\t};\n\t\n\t/**\n\t * Extracts the saturation value from a color or pixel array.\n\t *\n\t * Saturation is scaled differently in HSB and HSL. This function will return\n\t * the HSB saturation when supplied with an HSB color object (or when supplied\n\t * with a pixel array while the color mode is HSB), but will default to the\n\t * HSL saturation otherwise.\n\t *\n\t * @method saturation\n\t * @param {Object} color p5.Color object or pixel array\n\t * @example\n\t * <div>\n\t * <code>\n\t * noStroke();\n\t * colorMode(HSB, 255);\n\t * c = color(0, 126, 255);\n\t * fill(c);\n\t * rect(15, 20, 35, 60);\n\t * value = saturation(c);  // Sets 'value' to 126\n\t * fill(value);\n\t * rect(50, 20, 35, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *deep pink rect on left and grey rect on right, both 35x60.\n\t *\n\t */\n\t\n\tp5.prototype.saturation = function(c) {\n\t  if (c instanceof p5.Color || c instanceof Array) {\n\t    return this.color(c)._getSaturation();\n\t  } else {\n\t    throw new Error('Needs p5.Color or pixel array as argument.');\n\t  }\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/constants\":36,\"../core/core\":37,\"./p5.Color\":31}],31:[function(_dereq_,module,exports){\n\t/**\n\t * @module Color\n\t * @submodule Creating & Reading\n\t * @for p5\n\t * @requires core\n\t * @requires constants\n\t * @requires color_conversion\n\t */\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar constants = _dereq_('../core/constants');\n\tvar color_conversion = _dereq_('./color_conversion');\n\t\n\t/**\n\t * We define colors to be immutable objects. Each color stores the color mode\n\t * and level maxes that applied at the time of its construction. These are\n\t * used to interpret the input arguments and to format the output e.g. when\n\t * saturation() is requested.\n\t *\n\t * Internally we store an array representing the ideal RGBA values in floating\n\t * point form, normalized from 0 to 1. From this we calculate the closest\n\t * screen color (RGBA levels from 0 to 255) and expose this to the renderer.\n\t *\n\t * We also cache normalized, floating point components of the color in various\n\t * representations as they are calculated. This is done to prevent repeating a\n\t * conversion that has already been performed.\n\t *\n\t * @class p5.Color\n\t * @constructor\n\t */\n\tp5.Color = function(renderer, vals) {\n\t\n\t  // Record color mode and maxes at time of construction.\n\t  this.mode = renderer._colorMode;\n\t  this.maxes = renderer._colorMaxes;\n\t\n\t  // Calculate normalized RGBA values.\n\t  if (this.mode !== constants.RGB &&\n\t      this.mode !== constants.HSL &&\n\t      this.mode !== constants.HSB) {\n\t    throw new Error(this.mode + ' is an invalid colorMode.');\n\t  } else {\n\t    this._array = p5.Color._parseInputs.apply(renderer, vals);\n\t  }\n\t\n\t  // Expose closest screen color.\n\t  this.levels = this._array.map(function(level) {\n\t    return Math.round(level * 255);\n\t  });\n\t\n\t  return this;\n\t};\n\t\n\tp5.Color.prototype.toString = function() {\n\t  var a = this.levels;\n\t  var alpha = this._array[3];  // String representation uses normalized alpha.\n\t  return 'rgba('+a[0]+','+a[1]+','+a[2]+','+ alpha +')';\n\t};\n\t\n\tp5.Color.prototype._getAlpha = function() {\n\t  return this._array[3] * this.maxes[this.mode][3];\n\t};\n\t\n\tp5.Color.prototype._getBlue = function() {\n\t  return this._array[2] * this.maxes[constants.RGB][2];\n\t};\n\t\n\tp5.Color.prototype._getBrightness = function() {\n\t  if (!this.hsba) {\n\t    this.hsba = color_conversion._rgbaToHSBA(this._array);\n\t  }\n\t  return this.hsba[2] * this.maxes[constants.HSB][2];\n\t};\n\t\n\tp5.Color.prototype._getGreen = function() {\n\t  return this._array[1] * this.maxes[constants.RGB][1];\n\t};\n\t\n\t/**\n\t * Hue is the same in HSB and HSL, but the maximum value may be different.\n\t * This function will return the HSB-normalized saturation when supplied with\n\t * an HSB color object, but will default to the HSL-normalized saturation\n\t * otherwise.\n\t */\n\tp5.Color.prototype._getHue = function() {\n\t  if (this.mode === constants.HSB) {\n\t    if (!this.hsba) {\n\t      this.hsba = color_conversion._rgbaToHSBA(this._array);\n\t    }\n\t    return this.hsba[0] * this.maxes[constants.HSB][0];\n\t  } else {\n\t    if (!this.hsla) {\n\t      this.hsla = color_conversion._rgbaToHSLA(this._array);\n\t    }\n\t    return this.hsla[0] * this.maxes[constants.HSL][0];\n\t  }\n\t};\n\t\n\tp5.Color.prototype._getLightness = function() {\n\t  if (!this.hsla) {\n\t    this.hsla = color_conversion._rgbaToHSLA(this._array);\n\t  }\n\t  return this.hsla[2] * this.maxes[constants.HSL][2];\n\t};\n\t\n\tp5.Color.prototype._getRed = function() {\n\t  return this._array[0] * this.maxes[constants.RGB][0];\n\t};\n\t\n\t/**\n\t * Saturation is scaled differently in HSB and HSL. This function will return\n\t * the HSB saturation when supplied with an HSB color object, but will default\n\t * to the HSL saturation otherwise.\n\t */\n\tp5.Color.prototype._getSaturation = function() {\n\t  if (this.mode === constants.HSB) {\n\t    if (!this.hsba) {\n\t      this.hsba = color_conversion._rgbaToHSBA(this._array);\n\t    }\n\t    return this.hsba[1] * this.maxes[constants.HSB][1];\n\t  } else {\n\t    if (!this.hsla) {\n\t      this.hsla = color_conversion._rgbaToHSLA(this._array);\n\t    }\n\t    return this.hsla[1] * this.maxes[constants.HSL][1];\n\t  }\n\t};\n\t\n\t/**\n\t * CSS named colors.\n\t */\n\tvar namedColors = {\n\t  aliceblue:             '#f0f8ff',\n\t  antiquewhite:          '#faebd7',\n\t  aqua:                  '#00ffff',\n\t  aquamarine:            '#7fffd4',\n\t  azure:                 '#f0ffff',\n\t  beige:                 '#f5f5dc',\n\t  bisque:                '#ffe4c4',\n\t  black:                 '#000000',\n\t  blanchedalmond:        '#ffebcd',\n\t  blue:                  '#0000ff',\n\t  blueviolet:            '#8a2be2',\n\t  brown:                 '#a52a2a',\n\t  burlywood:             '#deb887',\n\t  cadetblue:             '#5f9ea0',\n\t  chartreuse:            '#7fff00',\n\t  chocolate:             '#d2691e',\n\t  coral:                 '#ff7f50',\n\t  cornflowerblue:        '#6495ed',\n\t  cornsilk:              '#fff8dc',\n\t  crimson:               '#dc143c',\n\t  cyan:                  '#00ffff',\n\t  darkblue:              '#00008b',\n\t  darkcyan:              '#008b8b',\n\t  darkgoldenrod:         '#b8860b',\n\t  darkgray:              '#a9a9a9',\n\t  darkgreen:             '#006400',\n\t  darkgrey:              '#a9a9a9',\n\t  darkkhaki:             '#bdb76b',\n\t  darkmagenta:           '#8b008b',\n\t  darkolivegreen:        '#556b2f',\n\t  darkorange:            '#ff8c00',\n\t  darkorchid:            '#9932cc',\n\t  darkred:               '#8b0000',\n\t  darksalmon:            '#e9967a',\n\t  darkseagreen:          '#8fbc8f',\n\t  darkslateblue:         '#483d8b',\n\t  darkslategray:         '#2f4f4f',\n\t  darkslategrey:         '#2f4f4f',\n\t  darkturquoise:         '#00ced1',\n\t  darkviolet:            '#9400d3',\n\t  deeppink:              '#ff1493',\n\t  deepskyblue:           '#00bfff',\n\t  dimgray:               '#696969',\n\t  dimgrey:               '#696969',\n\t  dodgerblue:            '#1e90ff',\n\t  firebrick:             '#b22222',\n\t  floralwhite:           '#fffaf0',\n\t  forestgreen:           '#228b22',\n\t  fuchsia:               '#ff00ff',\n\t  gainsboro:             '#dcdcdc',\n\t  ghostwhite:            '#f8f8ff',\n\t  gold:                  '#ffd700',\n\t  goldenrod:             '#daa520',\n\t  gray:                  '#808080',\n\t  green:                 '#008000',\n\t  greenyellow:           '#adff2f',\n\t  grey:                  '#808080',\n\t  honeydew:              '#f0fff0',\n\t  hotpink:               '#ff69b4',\n\t  indianred:             '#cd5c5c',\n\t  indigo:                '#4b0082',\n\t  ivory:                 '#fffff0',\n\t  khaki:                 '#f0e68c',\n\t  lavender:              '#e6e6fa',\n\t  lavenderblush:         '#fff0f5',\n\t  lawngreen:             '#7cfc00',\n\t  lemonchiffon:          '#fffacd',\n\t  lightblue:             '#add8e6',\n\t  lightcoral:            '#f08080',\n\t  lightcyan:             '#e0ffff',\n\t  lightgoldenrodyellow:  '#fafad2',\n\t  lightgray:             '#d3d3d3',\n\t  lightgreen:            '#90ee90',\n\t  lightgrey:             '#d3d3d3',\n\t  lightpink:             '#ffb6c1',\n\t  lightsalmon:           '#ffa07a',\n\t  lightseagreen:         '#20b2aa',\n\t  lightskyblue:          '#87cefa',\n\t  lightslategray:        '#778899',\n\t  lightslategrey:        '#778899',\n\t  lightsteelblue:        '#b0c4de',\n\t  lightyellow:           '#ffffe0',\n\t  lime:                  '#00ff00',\n\t  limegreen:             '#32cd32',\n\t  linen:                 '#faf0e6',\n\t  magenta:               '#ff00ff',\n\t  maroon:                '#800000',\n\t  mediumaquamarine:      '#66cdaa',\n\t  mediumblue:            '#0000cd',\n\t  mediumorchid:          '#ba55d3',\n\t  mediumpurple:          '#9370db',\n\t  mediumseagreen:        '#3cb371',\n\t  mediumslateblue:       '#7b68ee',\n\t  mediumspringgreen:     '#00fa9a',\n\t  mediumturquoise:       '#48d1cc',\n\t  mediumvioletred:       '#c71585',\n\t  midnightblue:          '#191970',\n\t  mintcream:             '#f5fffa',\n\t  mistyrose:             '#ffe4e1',\n\t  moccasin:              '#ffe4b5',\n\t  navajowhite:           '#ffdead',\n\t  navy:                  '#000080',\n\t  oldlace:               '#fdf5e6',\n\t  olive:                 '#808000',\n\t  olivedrab:             '#6b8e23',\n\t  orange:                '#ffa500',\n\t  orangered:             '#ff4500',\n\t  orchid:                '#da70d6',\n\t  palegoldenrod:         '#eee8aa',\n\t  palegreen:             '#98fb98',\n\t  paleturquoise:         '#afeeee',\n\t  palevioletred:         '#db7093',\n\t  papayawhip:            '#ffefd5',\n\t  peachpuff:             '#ffdab9',\n\t  peru:                  '#cd853f',\n\t  pink:                  '#ffc0cb',\n\t  plum:                  '#dda0dd',\n\t  powderblue:            '#b0e0e6',\n\t  purple:                '#800080',\n\t  red:                   '#ff0000',\n\t  rosybrown:             '#bc8f8f',\n\t  royalblue:             '#4169e1',\n\t  saddlebrown:           '#8b4513',\n\t  salmon:                '#fa8072',\n\t  sandybrown:            '#f4a460',\n\t  seagreen:              '#2e8b57',\n\t  seashell:              '#fff5ee',\n\t  sienna:                '#a0522d',\n\t  silver:                '#c0c0c0',\n\t  skyblue:               '#87ceeb',\n\t  slateblue:             '#6a5acd',\n\t  slategray:             '#708090',\n\t  slategrey:             '#708090',\n\t  snow:                  '#fffafa',\n\t  springgreen:           '#00ff7f',\n\t  steelblue:             '#4682b4',\n\t  tan:                   '#d2b48c',\n\t  teal:                  '#008080',\n\t  thistle:               '#d8bfd8',\n\t  tomato:                '#ff6347',\n\t  turquoise:             '#40e0d0',\n\t  violet:                '#ee82ee',\n\t  wheat:                 '#f5deb3',\n\t  white:                 '#ffffff',\n\t  whitesmoke:            '#f5f5f5',\n\t  yellow:                '#ffff00',\n\t  yellowgreen:           '#9acd32'\n\t};\n\t\n\t/**\n\t * These regular expressions are used to build up the patterns for matching\n\t * viable CSS color strings: fragmenting the regexes in this way increases the\n\t * legibility and comprehensibility of the code.\n\t *\n\t * Note that RGB values of .9 are not parsed by IE, but are supported here for\n\t * color string consistency.\n\t */\n\tvar WHITESPACE = /\\s*/;  // Match zero or more whitespace characters.\n\tvar INTEGER = /(\\d{1,3})/;  // Match integers: 79, 255, etc.\n\tvar DECIMAL = /((?:\\d+(?:\\.\\d+)?)|(?:\\.\\d+))/;  // Match 129.6, 79, .9, etc.\n\tvar PERCENT = new RegExp(DECIMAL.source + '%');  // Match 12.9%, 79%, .9%, etc.\n\t\n\t/**\n\t * Full color string patterns. The capture groups are necessary.\n\t */\n\tvar colorPatterns = {\n\t  // Match colors in format #XXX, e.g. #416.\n\t  HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,\n\t\n\t  // Match colors in format #XXXXXX, e.g. #b4d455.\n\t  HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,\n\t\n\t  // Match colors in format rgb(R, G, B), e.g. rgb(255, 0, 128).\n\t  RGB: new RegExp([\n\t    '^rgb\\\\(',\n\t    INTEGER.source,\n\t    ',',\n\t    INTEGER.source,\n\t    ',',\n\t    INTEGER.source,\n\t    '\\\\)$'\n\t  ].join(WHITESPACE.source), 'i'),\n\t\n\t  // Match colors in format rgb(R%, G%, B%), e.g. rgb(100%, 0%, 28.9%).\n\t  RGB_PERCENT: new RegExp([\n\t    '^rgb\\\\(',\n\t    PERCENT.source,\n\t    ',',\n\t    PERCENT.source,\n\t    ',',\n\t    PERCENT.source,\n\t    '\\\\)$'\n\t  ].join(WHITESPACE.source), 'i'),\n\t\n\t  // Match colors in format rgb(R, G, B, A), e.g. rgb(255, 0, 128, 0.25).\n\t  RGBA: new RegExp([\n\t    '^rgba\\\\(',\n\t    INTEGER.source,\n\t    ',',\n\t    INTEGER.source,\n\t    ',',\n\t    INTEGER.source,\n\t    ',',\n\t    DECIMAL.source,\n\t    '\\\\)$'\n\t  ].join(WHITESPACE.source), 'i'),\n\t\n\t  // Match colors in format rgb(R%, G%, B%, A), e.g. rgb(100%, 0%, 28.9%, 0.5).\n\t  RGBA_PERCENT: new RegExp([\n\t    '^rgba\\\\(',\n\t    PERCENT.source,\n\t    ',',\n\t    PERCENT.source,\n\t    ',',\n\t    PERCENT.source,\n\t    ',',\n\t    DECIMAL.source,\n\t    '\\\\)$'\n\t  ].join(WHITESPACE.source), 'i'),\n\t\n\t  // Match colors in format hsla(H, S%, L%), e.g. hsl(100, 40%, 28.9%).\n\t  HSL: new RegExp([\n\t    '^hsl\\\\(',\n\t    INTEGER.source,\n\t    ',',\n\t    PERCENT.source,\n\t    ',',\n\t    PERCENT.source,\n\t    '\\\\)$'\n\t  ].join(WHITESPACE.source), 'i'),\n\t\n\t  // Match colors in format hsla(H, S%, L%, A), e.g. hsla(100, 40%, 28.9%, 0.5).\n\t  HSLA: new RegExp([\n\t    '^hsla\\\\(',\n\t    INTEGER.source,\n\t    ',',\n\t    PERCENT.source,\n\t    ',',\n\t    PERCENT.source,\n\t    ',',\n\t    DECIMAL.source,\n\t    '\\\\)$'\n\t  ].join(WHITESPACE.source), 'i'),\n\t\n\t  // Match colors in format hsb(H, S%, B%), e.g. hsb(100, 40%, 28.9%).\n\t  HSB: new RegExp([\n\t    '^hsb\\\\(',\n\t    INTEGER.source,\n\t    ',',\n\t    PERCENT.source,\n\t    ',',\n\t    PERCENT.source,\n\t    '\\\\)$'\n\t  ].join(WHITESPACE.source), 'i'),\n\t\n\t  // Match colors in format hsba(H, S%, B%, A), e.g. hsba(100, 40%, 28.9%, 0.5).\n\t  HSBA: new RegExp([\n\t    '^hsba\\\\(',\n\t    INTEGER.source,\n\t    ',',\n\t    PERCENT.source,\n\t    ',',\n\t    PERCENT.source,\n\t    ',',\n\t    DECIMAL.source,\n\t    '\\\\)$'\n\t  ].join(WHITESPACE.source), 'i')\n\t};\n\t\n\t/**\n\t * For a number of different inputs, returns a color formatted as [r, g, b, a]\n\t * arrays, with each component normalized between 0 and 1.\n\t *\n\t * @param {Array-like} args An 'array-like' object that represents a list of\n\t *                          arguments\n\t * @return {Array}          a color formatted as [r, g, b, a]\n\t *                          Example:\n\t *                          input        ==> output\n\t *                          g            ==> [g, g, g, 255]\n\t *                          g,a          ==> [g, g, g, a]\n\t *                          r, g, b      ==> [r, g, b, 255]\n\t *                          r, g, b, a   ==> [r, g, b, a]\n\t *                          [g]          ==> [g, g, g, 255]\n\t *                          [g, a]       ==> [g, g, g, a]\n\t *                          [r, g, b]    ==> [r, g, b, 255]\n\t *                          [r, g, b, a] ==> [r, g, b, a]\n\t * @example\n\t * <div>\n\t * <code>\n\t * // todo\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * //todo\n\t *\n\t */\n\tp5.Color._parseInputs = function() {\n\t  var numArgs = arguments.length;\n\t  var mode = this._colorMode;\n\t  var maxes = this._colorMaxes;\n\t  var results = [];\n\t\n\t  if (numArgs >= 3) {  // Argument is a list of component values.\n\t\n\t    results[0] = arguments[0] / maxes[mode][0];\n\t    results[1] = arguments[1] / maxes[mode][1];\n\t    results[2] = arguments[2] / maxes[mode][2];\n\t\n\t    // Alpha may be undefined, so default it to 100%.\n\t    if (typeof arguments[3] === 'number') {\n\t      results[3] = arguments[3] / maxes[mode][3];\n\t    } else {\n\t      results[3] = 1;\n\t    }\n\t\n\t    // Constrain components to the range [0,1].\n\t    results = results.map(function(value) {\n\t      return Math.max(Math.min(value, 1), 0);\n\t    });\n\t\n\t    // Convert to RGBA and return.\n\t    if (mode === constants.HSL) {\n\t      return color_conversion._hslaToRGBA(results);\n\t    } else if (mode === constants.HSB) {\n\t      return color_conversion._hsbaToRGBA(results);\n\t    } else {\n\t      return results;\n\t    }\n\t\n\t  } else if (numArgs === 1 && typeof arguments[0] === 'string') {\n\t\n\t    var str = arguments[0].trim().toLowerCase();\n\t\n\t    // Return if string is a named colour.\n\t    if (namedColors[str]) {\n\t      return p5.Color._parseInputs.apply(this, [namedColors[str]]);\n\t    }\n\t\n\t    // Try RGBA pattern matching.\n\t    if (colorPatterns.HEX3.test(str)) {  // #rgb\n\t      results = colorPatterns.HEX3.exec(str).slice(1).map(function(color) {\n\t        return parseInt(color + color, 16) / 255;\n\t      });\n\t      results[3] = 1;\n\t      return results;\n\t    } else if (colorPatterns.HEX6.test(str)) {  // #rrggbb\n\t      results = colorPatterns.HEX6.exec(str).slice(1).map(function(color) {\n\t        return parseInt(color, 16) / 255;\n\t      });\n\t      results[3] = 1;\n\t      return results;\n\t    } else if (colorPatterns.RGB.test(str)) {  // rgb(R,G,B)\n\t      results = colorPatterns.RGB.exec(str).slice(1).map(function(color) {\n\t        return color / 255;\n\t      });\n\t      results[3] = 1;\n\t      return results;\n\t    } else if (colorPatterns.RGB_PERCENT.test(str)) {  // rgb(R%,G%,B%)\n\t      results = colorPatterns.RGB_PERCENT.exec(str).slice(1)\n\t        .map(function(color) {\n\t          return parseFloat(color) / 100;\n\t        });\n\t      results[3] = 1;\n\t      return results;\n\t    } else if (colorPatterns.RGBA.test(str)) {  // rgba(R,G,B,A)\n\t      results = colorPatterns.RGBA.exec(str).slice(1)\n\t        .map(function(color, idx) {\n\t          if (idx === 3) {\n\t            return parseFloat(color);\n\t          }\n\t          return color / 255;\n\t        });\n\t      return results;\n\t    } else if (colorPatterns.RGBA_PERCENT.test(str)) {  // rgba(R%,G%,B%,A%)\n\t      results = colorPatterns.RGBA_PERCENT.exec(str).slice(1)\n\t        .map(function(color, idx) {\n\t          if (idx === 3) {\n\t            return parseFloat(color);\n\t          }\n\t          return parseFloat(color) / 100;\n\t        });\n\t      return results;\n\t    }\n\t\n\t    // Try HSLA pattern matching.\n\t    if (colorPatterns.HSL.test(str)) {  // hsl(H,S,L)\n\t      results = colorPatterns.HSL.exec(str).slice(1)\n\t        .map(function(color, idx) {\n\t        if (idx === 0) {\n\t          return parseInt(color, 10) / 360;\n\t        }\n\t        return parseInt(color, 10) / 100;\n\t      });\n\t      results[3] = 1;\n\t    } else if (colorPatterns.HSLA.test(str)) {  // hsla(H,S,L,A)\n\t      results = colorPatterns.HSLA.exec(str).slice(1)\n\t        .map(function(color, idx) {\n\t        if (idx === 0) {\n\t          return parseInt(color, 10) / 360;\n\t        }\n\t        else if (idx === 3) {\n\t          return parseFloat(color);\n\t        }\n\t        return parseInt(color, 10) / 100;\n\t      });\n\t    }\n\t    if (results.length) {\n\t      return color_conversion._hslaToRGBA(results);\n\t    }\n\t\n\t    // Try HSBA pattern matching.\n\t    if (colorPatterns.HSB.test(str)) {  // hsb(H,S,B)\n\t      results = colorPatterns.HSB.exec(str).slice(1)\n\t        .map(function(color, idx) {\n\t        if (idx === 0) {\n\t          return parseInt(color, 10) / 360;\n\t        }\n\t        return parseInt(color, 10) / 100;\n\t      });\n\t      results[3] = 1;\n\t    } else if (colorPatterns.HSBA.test(str)) {  // hsba(H,S,B,A)\n\t      results = colorPatterns.HSBA.exec(str).slice(1)\n\t        .map(function(color, idx) {\n\t        if (idx === 0) {\n\t          return parseInt(color, 10) / 360;\n\t        }\n\t        else if (idx === 3) {\n\t          return parseFloat(color);\n\t        }\n\t        return parseInt(color, 10) / 100;\n\t      });\n\t    }\n\t    if (results.length) {\n\t      return color_conversion._hsbaToRGBA(results);\n\t    }\n\t\n\t    // Input did not match any CSS color pattern: default to white.\n\t    results = [1, 1, 1, 1];\n\t\n\t  } else if ((numArgs === 1 || numArgs === 2) &&\n\t              typeof arguments[0] === 'number') {  // 'Grayscale' mode.\n\t\n\t    /**\n\t     * For HSB and HSL, interpret the gray level as a brightness/lightness\n\t     * value (they are equivalent when chroma is zero). For RGB, normalize the\n\t     * gray level according to the blue maximum.\n\t     */\n\t    results[0] = arguments[0] / maxes[mode][2];\n\t    results[1] = arguments[0] / maxes[mode][2];\n\t    results[2] = arguments[0] / maxes[mode][2];\n\t\n\t    // Alpha may be undefined, so default it to 100%.\n\t    if (typeof arguments[1] === 'number') {\n\t      results[3] = arguments[1] / maxes[mode][3];\n\t    } else {\n\t      results[3] = 1;\n\t    }\n\t\n\t    // Constrain components to the range [0,1].\n\t    results = results.map(function(value) {\n\t      return Math.max(Math.min(value, 1), 0);\n\t    });\n\t\n\t  } else {\n\t    throw new Error (arguments + 'is not a valid color representation.');\n\t  }\n\t\n\t  return results;\n\t};\n\t\n\tmodule.exports = p5.Color;\n\t\n\t},{\"../core/constants\":36,\"../core/core\":37,\"./color_conversion\":29}],32:[function(_dereq_,module,exports){\n\t/**\n\t * @module Color\n\t * @submodule Setting\n\t * @for p5\n\t * @requires core\n\t * @requires constants\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar constants = _dereq_('../core/constants');\n\t_dereq_('./p5.Color');\n\t\n\t/**\n\t * The background() function sets the color used for the background of the\n\t * p5.js canvas. The default background is light gray. This function is\n\t * typically used within draw() to clear the display window at the beginning\n\t * of each frame, but it can be used inside setup() to set the background on\n\t * the first frame of animation or if the background need only be set once.\n\t *\n\t * @method background\n\t * @param {p5.Color} color     any value created by the color() function\n\t * @param {Number} [a]         opacity of the background relative to current\n\t *                             color range (default is 0-100)\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Grayscale integer value\n\t * background(51);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // R, G & B integer values\n\t * background(255, 204, 0);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // H, S & B integer values\n\t * colorMode(HSB);\n\t * background(255, 204, 100);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // Named SVG/CSS color string\n\t * background('red');\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // three-digit hexadecimal RGB notation\n\t * background('#fae');\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // six-digit hexadecimal RGB notation\n\t * background('#222222');\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // integer RGB notation\n\t * background('rgb(0,255,0)');\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // integer RGBA notation\n\t * background('rgba(0,255,0, 0.25)');\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // percentage RGB notation\n\t * background('rgb(100%,0%,10%)');\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // percentage RGBA notation\n\t * background('rgba(100%,0%,100%,0.5)');\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // p5 Color object\n\t * background(color(0, 0, 255));\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * canvas with darkest charcoal grey background.\n\t * canvas with yellow background.\n\t * canvas with royal blue background.\n\t * canvas with red background.\n\t * canvas with pink background.\n\t * canvas with black background.\n\t * canvas with bright green background.\n\t * canvas with soft green background.\n\t * canvas with red background.\n\t * canvas with light purple background.\n\t * canvas with blue background.\n\t */\n\t\n\t/**\n\t * @method background\n\t * @param {String} colorstring color string, possible formats include: integer\n\t *                         rgb() or rgba(), percentage rgb() or rgba(),\n\t *                         3-digit hex, 6-digit hex\n\t * @param {Number} [a]\n\t */\n\t\n\t/**\n\t * @method background\n\t * @param {Number} gray   specifies a value between white and black\n\t * @param {Number} [a]\n\t */\n\t\n\t/**\n\t * @method background\n\t * @param {Number} v1     red or hue value (depending on the current color\n\t *                        mode)\n\t * @param {Number} v2     green or saturation value (depending on the current\n\t *                        color mode)\n\t * @param {Number} v3     blue or brightness value (depending on the current\n\t *                        color mode)\n\t * @param  {Number} [a]\n\t */\n\t\n\t/**\n\t * @method background\n\t * @param {p5.Image} image     image created with loadImage() or createImage(),\n\t *                             to set as background\n\t *                             (must be same size as the sketch window)\n\t * @param  {Number}  [a]\n\t */\n\tp5.prototype.background = function() {\n\t  if (arguments[0] instanceof p5.Image) {\n\t    this.image(arguments[0], 0, 0, this.width, this.height);\n\t  } else {\n\t    this._renderer.background.apply(this._renderer, arguments);\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Clears the pixels within a buffer. This function only works on p5.Canvas\n\t * objects created with the createCanvas() function; it won't work with the\n\t * main display window. Unlike the main graphics context, pixels in\n\t * additional graphics areas created with createGraphics() can be entirely\n\t * or partially transparent. This function clears everything to make all of\n\t * the pixels 100% transparent.\n\t *\n\t * @method clear\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Clear the screen on mouse press.\n\t * function setup() {\n\t *   createCanvas(100, 100);\n\t * }\n\t *\n\t * function draw() {\n\t *   ellipse(mouseX, mouseY, 20, 20);\n\t * }\n\t *\n\t * function mousePressed() {\n\t *   clear();\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 20x20 white ellipses are continually drawn at mouse x and y coordinates.\n\t *\n\t */\n\t\n\tp5.prototype.clear = function() {\n\t  this._renderer.clear();\n\t  return this;\n\t};\n\t\n\t/**\n\t * colorMode() changes the way p5.js interprets color data. By default, the\n\t * parameters for fill(), stroke(), background(), and color() are defined by\n\t * values between 0 and 255 using the RGB color model. This is equivalent to\n\t * setting colorMode(RGB, 255). Setting colorMode(HSB) lets you use the HSB\n\t * system instead. By default, this is colorMode(HSB, 360, 100, 100, 1). You\n\t * can also use HSL.\n\t * <br><br>\n\t * Note: existing color objects remember the mode that they were created in,\n\t * so you can change modes as you like without affecting their appearance.\n\t *\n\t * @method colorMode\n\t * @param {Constant} mode   either RGB or HSB, corresponding to\n\t *                          Red/Green/Blue and Hue/Saturation/Brightness\n\t *                          (or Lightness)\n\t * @param {Number} [max1] range for the red or hue depending on the\n\t *                              current color mode, or range for all values\n\t * @param {Number} [max2] range for the green or saturation depending\n\t *                              on the current color mode\n\t * @param {Number} [max3] range for the blue or brightness/lighntess\n\t *                              depending on the current color mode\n\t * @param {Number} [maxA] range for the alpha\n\t * @example\n\t * <div>\n\t * <code>\n\t * noStroke();\n\t * colorMode(RGB, 100);\n\t * for (i = 0; i < 100; i++) {\n\t *   for (j = 0; j < 100; j++) {\n\t *     stroke(i, j, 0);\n\t *     point(i, j);\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * noStroke();\n\t * colorMode(HSB, 100);\n\t * for (i = 0; i < 100; i++) {\n\t *   for (j = 0; j < 100; j++) {\n\t *     stroke(i, j, 100);\n\t *     point(i, j);\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * colorMode(RGB, 255);\n\t * var c = color(127, 255, 0);\n\t *\n\t * colorMode(RGB, 1);\n\t * var myColor = c._getRed();\n\t * text(myColor, 10, 10, 80, 80);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * colorMode(RGB, 255, 255, 255, 1);\n\t * background(255);\n\t *\n\t * strokeWeight(4);\n\t * stroke(255, 0 , 10, 0.3);\n\t * ellipse(40, 40, 50, 50);\n\t * ellipse(50, 50, 40, 40);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *Green to red gradient from bottom L to top R. shading originates from top left.\n\t *Rainbow gradient from left to right. Brightness increasing to white at top.\n\t *unknown image.\n\t *50x50 ellipse at middle L & 40x40 ellipse at center. Transluscent pink outlines.\n\t *\n\t */\n\tp5.prototype.colorMode = function() {\n\t  if (arguments[0] === constants.RGB ||\n\t      arguments[0] === constants.HSB ||\n\t      arguments[0] === constants.HSL) {\n\t\n\t    // Set color mode.\n\t    this._renderer._colorMode = arguments[0];\n\t\n\t    // Set color maxes.\n\t    var maxes = this._renderer._colorMaxes[this._renderer._colorMode];\n\t    if (arguments.length === 2) {\n\t      maxes[0] = arguments[1];  // Red\n\t      maxes[1] = arguments[1];  // Green\n\t      maxes[2] = arguments[1];  // Blue\n\t      maxes[3] = arguments[1];  // Alpha\n\t    } else if (arguments.length === 4) {\n\t      maxes[0] = arguments[1];  // Red\n\t      maxes[1] = arguments[2];  // Green\n\t      maxes[2] = arguments[3];  // Blue\n\t    } else if (arguments.length === 5) {\n\t      maxes[0] = arguments[1];  // Red\n\t      maxes[1] = arguments[2];  // Green\n\t      maxes[2] = arguments[3];  // Blue\n\t      maxes[3] = arguments[4];  // Alpha\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the color used to fill shapes. For example, if you run\n\t * fill(204, 102, 0), all subsequent shapes will be filled with orange. This\n\t * color is either specified in terms of the RGB or HSB color depending on\n\t * the current colorMode(). (The default color space is RGB, with each value\n\t * in the range from 0 to 255).\n\t * <br><br>\n\t * If a single string argument is provided, RGB, RGBA and Hex CSS color strings\n\t * and all named color strings are supported. A p5 Color object can also be\n\t * provided to set the fill color.\n\t *\n\t * @method fill\n\t * @param {Number|Array|String|p5.Color} v1   gray value, red or hue value\n\t *                                            (depending on the current color\n\t *                                            mode), or color Array, or CSS\n\t *                                            color string\n\t * @param {Number}                       [v2] green or saturation value\n\t *                                            (depending on the current\n\t *                                            color mode)\n\t * @param {Number}                       [v3] blue or brightness value\n\t *                                            (depending on the current\n\t *                                            color mode)\n\t * @param {Number}                       [a]  opacity of the background\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Grayscale integer value\n\t * fill(51);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // R, G & B integer values\n\t * fill(255, 204, 0);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // H, S & B integer values\n\t * colorMode(HSB);\n\t * fill(255, 204, 100);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // Named SVG/CSS color string\n\t * fill('red');\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // three-digit hexadecimal RGB notation\n\t * fill('#fae');\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // six-digit hexadecimal RGB notation\n\t * fill('#222222');\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // integer RGB notation\n\t * fill('rgb(0,255,0)');\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // integer RGBA notation\n\t * fill('rgba(0,255,0, 0.25)');\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // percentage RGB notation\n\t * fill('rgb(100%,0%,10%)');\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // percentage RGBA notation\n\t * fill('rgba(100%,0%,100%,0.5)');\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // p5 Color object\n\t * fill(color(0, 0, 255));\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t * @alt\n\t * 60x60 dark charcoal grey rect with black outline in center of canvas.\n\t * 60x60 yellow rect with black outline in center of canvas.\n\t * 60x60 royal blue rect with black outline in center of canvas.\n\t * 60x60 red rect with black outline in center of canvas.\n\t * 60x60 pink rect with black outline in center of canvas.\n\t * 60x60 black rect with black outline in center of canvas.\n\t * 60x60 light green rect with black outline in center of canvas.\n\t * 60x60 soft green rect with black outline in center of canvas.\n\t * 60x60 red rect with black outline in center of canvas.\n\t * 60x60 dark fushcia rect with black outline in center of canvas.\n\t * 60x60 blue rect with black outline in center of canvas.\n\t */\n\t\n\tp5.prototype.fill = function() {\n\t  this._renderer._setProperty('_fillSet', true);\n\t  this._renderer._setProperty('_doFill', true);\n\t  this._renderer.fill.apply(this._renderer, arguments);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Disables filling geometry. If both noStroke() and noFill() are called,\n\t * nothing will be drawn to the screen.\n\t *\n\t * @method noFill\n\t * @example\n\t * <div>\n\t * <code>\n\t * rect(15, 10, 55, 55);\n\t * noFill();\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t * @alt\n\t * white rect top middle and noFill rect center. Both 60x60 with black outlines.\n\t */\n\tp5.prototype.noFill = function() {\n\t  this._renderer._setProperty('_doFill', false);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Disables drawing the stroke (outline). If both noStroke() and noFill()\n\t * are called, nothing will be drawn to the screen.\n\t *\n\t * @method noStroke\n\t * @example\n\t * <div>\n\t * <code>\n\t * noStroke();\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t *\n\t * @alt\n\t *60x60 white rect at center. no outline.\n\t *\n\t */\n\t\n\tp5.prototype.noStroke = function() {\n\t  this._renderer._setProperty('_doStroke', false);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the color used to draw lines and borders around shapes. This color\n\t * is either specified in terms of the RGB or HSB color depending on the\n\t * current colorMode() (the default color space is RGB, with each value in\n\t * the range from 0 to 255).\n\t * <br><br>\n\t * If a single string argument is provided, RGB, RGBA and Hex CSS color\n\t * strings and all named color strings are supported. A p5 Color object\n\t * can also be provided to set the stroke color.\n\t *\n\t * @method stroke\n\t * @param {Number|Array|String|p5.Color} v1   gray value, red or hue value\n\t *                                            (depending on the current color\n\t *                                            mode), or color Array, or CSS\n\t *                                            color string\n\t * @param {Number}                       [v2] green or saturation value\n\t *                                            (depending on the current\n\t *                                            color mode)\n\t * @param {Number}                       [v3] blue or brightness value\n\t *                                            (depending on the current\n\t *                                            color mode)\n\t * @param {Number}                       [a]  opacity of the background\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Grayscale integer value\n\t * strokeWeight(4);\n\t * stroke(51);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // R, G & B integer values\n\t * stroke(255, 204, 0);\n\t * strokeWeight(4);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // H, S & B integer values\n\t * colorMode(HSB);\n\t * strokeWeight(4);\n\t * stroke(255, 204, 100);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // Named SVG/CSS color string\n\t * stroke('red');\n\t * strokeWeight(4);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // three-digit hexadecimal RGB notation\n\t * stroke('#fae');\n\t * strokeWeight(4);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // six-digit hexadecimal RGB notation\n\t * stroke('#222222');\n\t * strokeWeight(4);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // integer RGB notation\n\t * stroke('rgb(0,255,0)');\n\t * strokeWeight(4);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // integer RGBA notation\n\t * stroke('rgba(0,255,0,0.25)');\n\t * strokeWeight(4);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // percentage RGB notation\n\t * stroke('rgb(100%,0%,10%)');\n\t * strokeWeight(4);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // percentage RGBA notation\n\t * stroke('rgba(100%,0%,100%,0.5)');\n\t * strokeWeight(4);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // p5 Color object\n\t * stroke(color(0, 0, 255));\n\t * strokeWeight(4);\n\t * rect(20, 20, 60, 60);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 60x60 white rect at center. Dark charcoal grey outline.\n\t * 60x60 white rect at center. Yellow outline.\n\t * 60x60 white rect at center. Royal blue outline.\n\t * 60x60 white rect at center. Red outline.\n\t * 60x60 white rect at center. Pink outline.\n\t * 60x60 white rect at center. Black outline.\n\t * 60x60 white rect at center. Bright green outline.\n\t * 60x60 white rect at center. Soft green outline.\n\t * 60x60 white rect at center. Red outline.\n\t * 60x60 white rect at center. Dark fushcia outline.\n\t * 60x60 white rect at center. Blue outline.\n\t */\n\t\n\tp5.prototype.stroke = function() {\n\t  this._renderer._setProperty('_strokeSet', true);\n\t  this._renderer._setProperty('_doStroke', true);\n\t  this._renderer.stroke.apply(this._renderer, arguments);\n\t  return this;\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/constants\":36,\"../core/core\":37,\"./p5.Color\":31}],33:[function(_dereq_,module,exports){\n\t/**\n\t * @module Shape\n\t * @submodule 2D Primitives\n\t * @for p5\n\t * @requires core\n\t * @requires constants\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('./core');\n\tvar constants = _dereq_('./constants');\n\tvar canvas = _dereq_('./canvas');\n\t_dereq_('./error_helpers');\n\t\n\t/**\n\t * Draw an arc to the screen. If called with only a, b, c, d, start, and\n\t * stop, the arc will be drawn as an open pie. If mode is provided, the arc\n\t * will be drawn either open, as a chord, or as a pie as specified. The\n\t * origin may be changed with the ellipseMode() function.<br><br>\n\t * Note that drawing a full circle (ex: 0 to TWO_PI) will appear blank\n\t * because 0 and TWO_PI are the same position on the unit circle. The\n\t * best way to handle this is by using the ellipse() function instead\n\t * to create a closed ellipse, and to use the arc() function\n\t * only to draw parts of an ellipse.\n\t *\n\t * @method arc\n\t * @param  {Number} a      x-coordinate of the arc's ellipse\n\t * @param  {Number} b      y-coordinate of the arc's ellipse\n\t * @param  {Number} c      width of the arc's ellipse by default\n\t * @param  {Number} d      height of the arc's ellipse by default\n\t * @param  {Number} start  angle to start the arc, specified in radians\n\t * @param  {Number} stop   angle to stop the arc, specified in radians\n\t * @param  {Constant} [mode] optional parameter to determine the way of drawing\n\t *                         the arc\n\t * @return {Object}        the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * arc(50, 55, 50, 50, 0, HALF_PI);\n\t * noFill();\n\t * arc(50, 55, 60, 60, HALF_PI, PI);\n\t * arc(50, 55, 70, 70, PI, PI+QUARTER_PI);\n\t * arc(50, 55, 80, 80, PI+QUARTER_PI, TWO_PI);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * arc(50, 50, 80, 80, 0, PI+QUARTER_PI, OPEN);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * arc(50, 50, 80, 80, 0, PI+QUARTER_PI, CHORD);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * arc(50, 50, 80, 80, 0, PI+QUARTER_PI, PIE);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *shattered outline of an ellipse with a quarter of a white circle bottom-right.\n\t *white ellipse with black outline with top right missing.\n\t *white ellipse with top right missing with black outline around shape.\n\t *white ellipse with top right quarter missing with black outline around the shape.\n\t *\n\t */\n\tp5.prototype.arc = function(x, y, w, h, start, stop, mode) {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  if (!this._renderer._doStroke && !this._renderer._doFill) {\n\t    return this;\n\t  }\n\t  if (this._angleMode === constants.DEGREES) {\n\t    start = this.radians(start);\n\t    stop = this.radians(stop);\n\t  }\n\t\n\t  // Make all angles positive...\n\t  while (start < 0) {\n\t    start += constants.TWO_PI;\n\t  }\n\t  while (stop < 0) {\n\t    stop += constants.TWO_PI;\n\t  }\n\t  // ...and confine them to the interval [0,TWO_PI).\n\t  start %= constants.TWO_PI;\n\t  stop %= constants.TWO_PI;\n\t\n\t  // account for full circle\n\t  if (stop === start) {\n\t    stop += constants.TWO_PI;\n\t  }\n\t\n\t  // Adjust angles to counter linear scaling.\n\t  if (start <= constants.HALF_PI) {\n\t    start = Math.atan(w / h * Math.tan(start));\n\t  } else  if (start > constants.HALF_PI && start <= 3 * constants.HALF_PI) {\n\t    start = Math.atan(w / h * Math.tan(start)) + constants.PI;\n\t  } else {\n\t    start = Math.atan(w / h * Math.tan(start)) + constants.TWO_PI;\n\t  }\n\t  if (stop <= constants.HALF_PI) {\n\t    stop = Math.atan(w / h * Math.tan(stop));\n\t  } else  if (stop > constants.HALF_PI && stop <= 3 * constants.HALF_PI) {\n\t    stop = Math.atan(w / h * Math.tan(stop)) + constants.PI;\n\t  } else {\n\t    stop = Math.atan(w / h * Math.tan(stop)) + constants.TWO_PI;\n\t  }\n\t\n\t  // Exceed the interval if necessary in order to preserve the size and\n\t  // orientation of the arc.\n\t  if (start > stop) {\n\t    stop += constants.TWO_PI;\n\t  }\n\t  // p5 supports negative width and heights for ellipses\n\t  w = Math.abs(w);\n\t  h = Math.abs(h);\n\t  this._renderer.arc(x, y, w, h, start, stop, mode);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Draws an ellipse (oval) to the screen. An ellipse with equal width and\n\t * height is a circle. By default, the first two parameters set the location,\n\t * and the third and fourth parameters set the shape's width and height. If\n\t * no height is specified, the value of width is used for both the width and\n\t * height. The origin may be changed with the ellipseMode() function.\n\t *\n\t * @method ellipse\n\t * @param  {Number} x x-coordinate of the ellipse.\n\t * @param  {Number} y y-coordinate of the ellipse.\n\t * @param  {Number} w width of the ellipse.\n\t * @param  {Number} [h] height of the ellipse.\n\t * @return {p5}       the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * ellipse(56, 46, 55, 55);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *white ellipse with black outline in middle-right of canvas that is 55x55.\n\t *\n\t */\n\t/**\n\t * @method ellipse\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} [h]\n\t * @return {p5}\n\t */\n\tp5.prototype.ellipse = function() {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  // Duplicate 3rd argument if only 3 given.\n\t  if (args.length === 3) {\n\t    args.push(args[2]);\n\t  }\n\t  // p5 supports negative width and heights for rects\n\t  if (args[2] < 0){args[2] = Math.abs(args[2]);}\n\t  if (args[3] < 0){args[3] = Math.abs(args[3]);}\n\t  if (!this._renderer._doStroke && !this._renderer._doFill) {\n\t    return this;\n\t  }\n\t  var vals = canvas.modeAdjust(\n\t    args[0],\n\t    args[1],\n\t    args[2],\n\t    args[3],\n\t    this._renderer._ellipseMode);\n\t  args[0] = vals.x;\n\t  args[1] = vals.y;\n\t  args[2] = vals.w;\n\t  args[3] = vals.h;\n\t  this._renderer.ellipse(args);\n\t  return this;\n\t};\n\t/**\n\t * Draws a line (a direct path between two points) to the screen. The version\n\t * of line() with four parameters draws the line in 2D. To color a line, use\n\t * the stroke() function. A line cannot be filled, therefore the fill()\n\t * function will not affect the color of a line. 2D lines are drawn with a\n\t * width of one pixel by default, but this can be changed with the\n\t * strokeWeight() function.\n\t *\n\t * @method line\n\t * @param  {Number} x1 the x-coordinate of the first point\n\t * @param  {Number} y1 the y-coordinate of the first point\n\t * @param  {Number} x2 the x-coordinate of the second point\n\t * @param  {Number} y2 the y-coordinate of the second point\n\t * @return {p5}        the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * line(30, 20, 85, 75);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * line(30, 20, 85, 20);\n\t * stroke(126);\n\t * line(85, 20, 85, 75);\n\t * stroke(255);\n\t * line(85, 75, 30, 75);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *line 78 pixels long running from mid-top to bottom-right of canvas.\n\t *3 lines of various stroke sizes. Form top, bottom and right sides of a square.\n\t *\n\t */\n\t////commented out original\n\t// p5.prototype.line = function(x1, y1, x2, y2) {\n\t//   if (!this._renderer._doStroke) {\n\t//     return this;\n\t//   }\n\t//   if(this._renderer.isP3D){\n\t//   } else {\n\t//     this._renderer.line(x1, y1, x2, y2);\n\t//   }\n\t// };\n\tp5.prototype.line = function() {\n\t  if (!this._renderer._doStroke) {\n\t    return this;\n\t  }\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  //check whether we should draw a 3d line or 2d\n\t  if(this._renderer.isP3D){\n\t    this._renderer.line(\n\t      args[0],\n\t      args[1],\n\t      args[2],\n\t      args[3],\n\t      args[4],\n\t      args[5]);\n\t  } else {\n\t    this._renderer.line(\n\t      args[0],\n\t      args[1],\n\t      args[2],\n\t      args[3]);\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Draws a point, a coordinate in space at the dimension of one pixel.\n\t * The first parameter is the horizontal value for the point, the second\n\t * value is the vertical value for the point. The color of the point is\n\t * determined by the current stroke.\n\t *\n\t * @method point\n\t * @param  {Number} x the x-coordinate\n\t * @param  {Number} y the y-coordinate\n\t * @return {p5}       the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * point(30, 20);\n\t * point(85, 20);\n\t * point(85, 75);\n\t * point(30, 75);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *4 points centered in the middle-right of the canvas.\n\t *\n\t */\n\tp5.prototype.point = function() {\n\t  if (!this._renderer._doStroke) {\n\t    return this;\n\t  }\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  //check whether we should draw a 3d line or 2d\n\t  if(this._renderer.isP3D){\n\t    this._renderer.point(\n\t      args[0],\n\t      args[1],\n\t      args[2]\n\t      );\n\t  } else {\n\t    this._renderer.point(\n\t      args[0],\n\t      args[1]\n\t    );\n\t  }\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * Draw a quad. A quad is a quadrilateral, a four sided polygon. It is\n\t * similar to a rectangle, but the angles between its edges are not\n\t * constrained to ninety degrees. The first pair of parameters (x1,y1)\n\t * sets the first vertex and the subsequent pairs should proceed\n\t * clockwise or counter-clockwise around the defined shape.\n\t *\n\t * @method quad\n\t * @param {Number} x1 the x-coordinate of the first point\n\t * @param {Number} y1 the y-coordinate of the first point\n\t * @param {Number} x2 the x-coordinate of the second point\n\t * @param {Number} y2 the y-coordinate of the second point\n\t * @param {Number} x3 the x-coordinate of the third point\n\t * @param {Number} y3 the y-coordinate of the third point\n\t * @param {Number} x4 the x-coordinate of the fourth point\n\t * @param {Number} y4 the y-coordinate of the fourth point\n\t * @return {p5}     the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * quad(38, 31, 86, 20, 69, 63, 30, 76);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *irregular white quadrilateral shape with black outline mid-right of canvas.\n\t *\n\t */\n\t/**\n\t * @method quad\n\t * @param {Number} x1\n\t * @param {Number} y1\n\t * @param {Number} x2\n\t * @param {Number} y2\n\t * @param {Number} x3\n\t * @param {Number} y3\n\t * @param {Number} x4\n\t * @param {Number} y4\n\t * @return {p5} the p5 object\n\t */\n\tp5.prototype.quad = function() {\n\t  if (!this._renderer._doStroke && !this._renderer._doFill) {\n\t    return this;\n\t  }\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  if(this._renderer.isP3D){\n\t    this._renderer.quad(\n\t      args[0],\n\t      args[1],\n\t      args[2],\n\t      args[3],\n\t      args[4],\n\t      args[5],\n\t      args[6],\n\t      args[7],\n\t      args[8],\n\t      args[9],\n\t      args[10],\n\t      args[11]\n\t      );\n\t  } else {\n\t    this._renderer.quad(\n\t     args[0],\n\t     args[1],\n\t     args[2],\n\t     args[3],\n\t     args[4],\n\t     args[5],\n\t     args[6],\n\t    args[7]\n\t    );\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t* Draws a rectangle to the screen. A rectangle is a four-sided shape with\n\t* every angle at ninety degrees. By default, the first two parameters set\n\t* the location of the upper-left corner, the third sets the width, and the\n\t* fourth sets the height. The way these parameters are interpreted, however,\n\t* may be changed with the rectMode() function.\n\t* <br><br>\n\t* The fifth, sixth, seventh and eighth parameters, if specified,\n\t* determine corner radius for the top-right, top-left, lower-right and\n\t* lower-left corners, respectively. An omitted corner radius parameter is set\n\t* to the value of the previously specified radius value in the parameter list.\n\t*\n\t* @method rect\n\t* @param  {Number} x  x-coordinate of the rectangle.\n\t* @param  {Number} y  y-coordinate of the rectangle.\n\t* @param  {Number} w  width of the rectangle.\n\t* @param  {Number} h  height of the rectangle.\n\t* @param  {Number} [tl] optional radius of top-left corner.\n\t* @param  {Number} [tr] optional radius of top-right corner.\n\t* @param  {Number} [br] optional radius of bottom-right corner.\n\t* @param  {Number} [bl] optional radius of bottom-left corner.\n\t* @return {p5}          the p5 object.\n\t* @example\n\t* <div>\n\t* <code>\n\t* // Draw a rectangle at location (30, 20) with a width and height of 55.\n\t* rect(30, 20, 55, 55);\n\t* </code>\n\t* </div>\n\t*\n\t* <div>\n\t* <code>\n\t* // Draw a rectangle with rounded corners, each having a radius of 20.\n\t* rect(30, 20, 55, 55, 20);\n\t* </code>\n\t* </div>\n\t*\n\t* <div>\n\t* <code>\n\t* // Draw a rectangle with rounded corners having the following radii:\n\t* // top-left = 20, top-right = 15, bottom-right = 10, bottom-left = 5.\n\t* rect(30, 20, 55, 55, 20, 15, 10, 5);\n\t* </code>\n\t* </div>\n\t*\n\t* @alt\n\t* 55x55 white rect with black outline in mid-right of canvas.\n\t* 55x55 white rect with black outline and rounded edges in mid-right of canvas.\n\t* 55x55 white rect with black outline and rounded edges of different radii.\n\t*/\n\t/**\n\t* @method rect\n\t* @param  {Number} x\n\t* @param  {Number} y\n\t* @param  {Number} w\n\t* @param  {Number} h\n\t* @param  {Number} [detailX]\n\t* @param  {Number} [detailY]\n\t* @return {p5}          the p5 object.\n\t*/\n\tp5.prototype.rect = function () {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  if (!this._renderer._doStroke && !this._renderer._doFill) {\n\t    return;\n\t  }\n\t  var vals = canvas.modeAdjust(\n\t    args[0],\n\t    args[1],\n\t    args[2],\n\t    args[3],\n\t    this._renderer._rectMode);\n\t  args[0] = vals.x;\n\t  args[1] = vals.y;\n\t  args[2] = vals.w;\n\t  args[3] = vals.h;\n\t  this._renderer.rect(args);\n\t  return this;\n\t};\n\t\n\t/**\n\t* A triangle is a plane created by connecting three points. The first two\n\t* arguments specify the first point, the middle two arguments specify the\n\t* second point, and the last two arguments specify the third point.\n\t*\n\t* @method triangle\n\t* @param  {Number} x1 x-coordinate of the first point\n\t* @param  {Number} y1 y-coordinate of the first point\n\t* @param  {Number} x2 x-coordinate of the second point\n\t* @param  {Number} y2 y-coordinate of the second point\n\t* @param  {Number} x3 x-coordinate of the third point\n\t* @param  {Number} y3 y-coordinate of the third point\n\t* @return {p5}        the p5 object\n\t* @example\n\t* <div>\n\t* <code>\n\t* triangle(30, 75, 58, 20, 86, 75);\n\t* </code>\n\t* </div>\n\t*\n\t*@alt\n\t* white triangle with black outline in mid-right of canvas.\n\t*\n\t*/\n\tp5.prototype.triangle = function() {\n\t\n\t  if (!this._renderer._doStroke && !this._renderer._doFill) {\n\t    return this;\n\t  }\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  this._renderer.triangle(args);\n\t  return this;\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"./canvas\":35,\"./constants\":36,\"./core\":37,\"./error_helpers\":40}],34:[function(_dereq_,module,exports){\n\t/**\n\t * @module Shape\n\t * @submodule Attributes\n\t * @for p5\n\t * @requires core\n\t * @requires constants\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('./core');\n\tvar constants = _dereq_('./constants');\n\t\n\t/**\n\t * Modifies the location from which ellipses are drawn by changing the way\n\t * in which parameters given to ellipse() are interpreted.\n\t * <br><br>\n\t * The default mode is ellipseMode(CENTER), which interprets the first two\n\t * parameters of ellipse() as the shape's center point, while the third and\n\t * fourth parameters are its width and height.\n\t * <br><br>\n\t * ellipseMode(RADIUS) also uses the first two parameters of ellipse() as\n\t * the shape's center point, but uses the third and fourth parameters to\n\t * specify half of the shapes's width and height.\n\t * <br><br>\n\t * ellipseMode(CORNER) interprets the first two parameters of ellipse() as\n\t * the upper-left corner of the shape, while the third and fourth parameters\n\t * are its width and height.\n\t * <br><br>\n\t * ellipseMode(CORNERS) interprets the first two parameters of ellipse() as\n\t * the location of one corner of the ellipse's bounding box, and the third\n\t * and fourth parameters as the location of the opposite corner.\n\t * <br><br>\n\t * The parameter must be written in ALL CAPS because Javascript is a\n\t * case-sensitive language.\n\t *\n\t * @method ellipseMode\n\t * @param  {Constant} mode either CENTER, RADIUS, CORNER, or CORNERS\n\t * @return {p5}                   the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * ellipseMode(RADIUS);  // Set ellipseMode to RADIUS\n\t * fill(255);  // Set fill to white\n\t * ellipse(50, 50, 30, 30);  // Draw white ellipse using RADIUS mode\n\t *\n\t * ellipseMode(CENTER);  // Set ellipseMode to CENTER\n\t * fill(100);  // Set fill to gray\n\t * ellipse(50, 50, 30, 30);  // Draw gray ellipse using CENTER mode\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * ellipseMode(CORNER);  // Set ellipseMode is CORNER\n\t * fill(255);  // Set fill to white\n\t * ellipse(25, 25, 50, 50);  // Draw white ellipse using CORNER mode\n\t *\n\t * ellipseMode(CORNERS);  // Set ellipseMode to CORNERS\n\t * fill(100);  // Set fill to gray\n\t * ellipse(25, 25, 50, 50);  // Draw gray ellipse using CORNERS mode\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 60x60 white ellipse and 30x30 grey ellipse with black outlines at center.\n\t * 60x60 white ellipse @center and 30x30 grey ellipse top-right, black outlines.\n\t *\n\t */\n\tp5.prototype.ellipseMode = function(m) {\n\t  if (m === constants.CORNER ||\n\t    m === constants.CORNERS ||\n\t    m === constants.RADIUS ||\n\t    m === constants.CENTER) {\n\t    this._renderer._ellipseMode = m;\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Draws all geometry with jagged (aliased) edges. Note that smooth() is\n\t * active by default, so it is necessary to call noSmooth() to disable\n\t * smoothing of geometry, images, and fonts.\n\t *\n\t * @method noSmooth\n\t * @return {p5} the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * background(0);\n\t * noStroke();\n\t * smooth();\n\t * ellipse(30, 48, 36, 36);\n\t * noSmooth();\n\t * ellipse(70, 48, 36, 36);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 2 pixelated 36x36 white ellipses to left & right of center, black background\n\t *\n\t */\n\tp5.prototype.noSmooth = function() {\n\t  this._renderer.noSmooth();\n\t  return this;\n\t};\n\t\n\t/**\n\t * Modifies the location from which rectangles are drawn by changing the way\n\t * in which parameters given to rect() are interpreted.\n\t * <br><br>\n\t * The default mode is rectMode(CORNER), which interprets the first two\n\t * parameters of rect() as the upper-left corner of the shape, while the\n\t * third and fourth parameters are its width and height.\n\t * <br><br>\n\t * rectMode(CORNERS) interprets the first two parameters of rect() as the\n\t * location of one corner, and the third and fourth parameters as the\n\t * location of the opposite corner.\n\t * <br><br>\n\t * rectMode(CENTER) interprets the first two parameters of rect() as the\n\t * shape's center point, while the third and fourth parameters are its\n\t * width and height.\n\t * <br><br>\n\t * rectMode(RADIUS) also uses the first two parameters of rect() as the\n\t * shape's center point, but uses the third and fourth parameters to specify\n\t * half of the shapes's width and height.\n\t * <br><br>\n\t * The parameter must be written in ALL CAPS because Javascript is a\n\t * case-sensitive language.\n\t *\n\t * @method rectMode\n\t * @param  {Constant} mode either CORNER, CORNERS, CENTER, or RADIUS\n\t * @return {p5}                   the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * rectMode(CORNER);  // Default rectMode is CORNER\n\t * fill(255);  // Set fill to white\n\t * rect(25, 25, 50, 50);  // Draw white rect using CORNER mode\n\t *\n\t * rectMode(CORNERS);  // Set rectMode to CORNERS\n\t * fill(100);  // Set fill to gray\n\t * rect(25, 25, 50, 50);  // Draw gray rect using CORNERS mode\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * rectMode(RADIUS);  // Set rectMode to RADIUS\n\t * fill(255);  // Set fill to white\n\t * rect(50, 50, 30, 30);  // Draw white rect using RADIUS mode\n\t *\n\t * rectMode(CENTER);  // Set rectMode to CENTER\n\t * fill(100);  // Set fill to gray\n\t * rect(50, 50, 30, 30);  // Draw gray rect using CENTER mode\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 50x50 white rect at center and 25x25 grey rect in the top left of the other.\n\t * 50x50 white rect at center and 25x25 grey rect in the center of the other.\n\t *\n\t */\n\tp5.prototype.rectMode = function(m) {\n\t  if (m === constants.CORNER ||\n\t    m === constants.CORNERS ||\n\t    m === constants.RADIUS ||\n\t    m === constants.CENTER) {\n\t    this._renderer._rectMode = m;\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Draws all geometry with smooth (anti-aliased) edges. smooth() will also\n\t * improve image quality of resized images. Note that smooth() is active by\n\t * default; noSmooth() can be used to disable smoothing of geometry,\n\t * images, and fonts.\n\t *\n\t * @method smooth\n\t * @return {p5} the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * background(0);\n\t * noStroke();\n\t * smooth();\n\t * ellipse(30, 48, 36, 36);\n\t * noSmooth();\n\t * ellipse(70, 48, 36, 36);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 2 pixelated 36x36 white ellipses one left one right of center. On black.\n\t *\n\t */\n\tp5.prototype.smooth = function() {\n\t  this._renderer.smooth();\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the style for rendering line endings. These ends are either squared,\n\t * extended, or rounded, each of which specified with the corresponding\n\t * parameters: SQUARE, PROJECT, and ROUND. The default cap is ROUND.\n\t *\n\t * @method strokeCap\n\t * @param  {Number/Constant} cap either SQUARE, PROJECT, or ROUND\n\t * @return {p5}                  the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * strokeWeight(12.0);\n\t * strokeCap(ROUND);\n\t * line(20, 30, 80, 30);\n\t * strokeCap(SQUARE);\n\t * line(20, 50, 80, 50);\n\t * strokeCap(PROJECT);\n\t * line(20, 70, 80, 70);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 3 lines. Top line: rounded ends, mid: squared, bottom:longer squared ends.\n\t *\n\t */\n\tp5.prototype.strokeCap = function(cap) {\n\t  if (cap === constants.ROUND ||\n\t    cap === constants.SQUARE ||\n\t    cap === constants.PROJECT) {\n\t    this._renderer.strokeCap(cap);\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the style of the joints which connect line segments. These joints\n\t * are either mitered, beveled, or rounded and specified with the\n\t * corresponding parameters MITER, BEVEL, and ROUND. The default joint is\n\t * MITER.\n\t *\n\t * @method strokeJoin\n\t * @param  {Number/Constant} join either MITER, BEVEL, ROUND\n\t * @return {p5}                   the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * strokeWeight(10.0);\n\t * strokeJoin(MITER);\n\t * beginShape();\n\t * vertex(35, 20);\n\t * vertex(65, 50);\n\t * vertex(35, 80);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * strokeWeight(10.0);\n\t * strokeJoin(BEVEL);\n\t * beginShape();\n\t * vertex(35, 20);\n\t * vertex(65, 50);\n\t * vertex(35, 80);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * strokeWeight(10.0);\n\t * strokeJoin(ROUND);\n\t * beginShape();\n\t * vertex(35, 20);\n\t * vertex(65, 50);\n\t * vertex(35, 80);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Right-facing arrowhead shape with pointed tip in center of canvas.\n\t * Right-facing arrowhead shape with flat tip in center of canvas.\n\t * Right-facing arrowhead shape with rounded tip in center of canvas.\n\t *\n\t */\n\tp5.prototype.strokeJoin = function(join) {\n\t  if (join === constants.ROUND ||\n\t    join === constants.BEVEL ||\n\t    join === constants.MITER) {\n\t    this._renderer.strokeJoin(join);\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the width of the stroke used for lines, points, and the border\n\t * around shapes. All widths are set in units of pixels.\n\t *\n\t * @method strokeWeight\n\t * @param  {Number} weight the weight (in pixels) of the stroke\n\t * @return {p5}            the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * strokeWeight(1);  // Default\n\t * line(20, 20, 80, 20);\n\t * strokeWeight(4);  // Thicker\n\t * line(20, 40, 80, 40);\n\t * strokeWeight(10);  // Beastly\n\t * line(20, 70, 80, 70);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 3 horizontal black lines. Top line: thin, mid: medium, bottom:thick.\n\t *\n\t */\n\tp5.prototype.strokeWeight = function(w) {\n\t  this._renderer.strokeWeight(w);\n\t  return this;\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"./constants\":36,\"./core\":37}],35:[function(_dereq_,module,exports){\n\t/**\n\t * @requires constants\n\t */\n\t\n\tvar constants = _dereq_('./constants');\n\t\n\tmodule.exports = {\n\t\n\t  modeAdjust: function(a, b, c, d, mode) {\n\t    if (mode === constants.CORNER) {\n\t      return { x: a, y: b, w: c, h: d };\n\t    } else if (mode === constants.CORNERS) {\n\t      return { x: a, y: b, w: c-a, h: d-b };\n\t    } else if (mode === constants.RADIUS) {\n\t      return { x: a-c, y: b-d, w: 2*c, h: 2*d };\n\t    } else if (mode === constants.CENTER) {\n\t      return { x: a-c*0.5, y: b-d*0.5, w: c, h: d };\n\t    }\n\t  },\n\t\n\t  arcModeAdjust: function(a, b, c, d, mode) {\n\t    if (mode === constants.CORNER) {\n\t      return { x: a+c*0.5, y: b+d*0.5, w: c, h: d };\n\t    } else if (mode === constants.CORNERS) {\n\t      return { x: a, y: b, w: c+a, h: d+b };\n\t    } else if (mode === constants.RADIUS) {\n\t      return { x: a, y: b, w: 2*c, h: 2*d };\n\t    } else if (mode === constants.CENTER) {\n\t      return { x: a, y: b, w: c, h: d };\n\t    }\n\t  }\n\t\n\t};\n\t\n\t\n\t},{\"./constants\":36}],36:[function(_dereq_,module,exports){\n\t/**\n\t * @module Constants\n\t * @submodule Constants\n\t * @for p5\n\t */\n\t\n\tvar PI = Math.PI;\n\t\n\tmodule.exports = {\n\t\n\t  // GRAPHICS RENDERER\n\t  P2D: 'p2d',\n\t  WEBGL: 'webgl',\n\t\n\t  // ENVIRONMENT\n\t  ARROW: 'default',\n\t  CROSS: 'crosshair',\n\t  HAND: 'pointer',\n\t  MOVE: 'move',\n\t  TEXT: 'text',\n\t  WAIT: 'wait',\n\t\n\t  // TRIGONOMETRY\n\t\n\t  /**\n\t   * HALF_PI is a mathematical constant with the value\n\t   * 1.57079632679489661923. It is half the ratio of the\n\t   * circumference of a circle to its diameter. It is useful in\n\t   * combination with the trigonometric functions sin() and cos().\n\t   *\n\t   * @property HALF_PI\n\t   *\n\t   * @example\n\t   * <div><code>\n\t   * arc(50, 50, 80, 80, 0, HALF_PI);\n\t   * </code></div>\n\t   *\n\t   * @alt\n\t   * 80x80 white quarter-circle with curve toward bottom right of canvas.\n\t   *\n\t   */\n\t  HALF_PI: PI / 2,\n\t  /**\n\t   * PI is a mathematical constant with the value\n\t   * 3.14159265358979323846. It is the ratio of the circumference\n\t   * of a circle to its diameter. It is useful in combination with\n\t   * the trigonometric functions sin() and cos().\n\t   *\n\t   * @property PI\n\t   *\n\t   * @example\n\t   * <div><code>\n\t   * arc(50, 50, 80, 80, 0, PI);\n\t   * </code></div>\n\t   *\n\t   * @alt\n\t   * white half-circle with curve toward bottom of canvas.\n\t   *\n\t   */\n\t  PI: PI,\n\t  /**\n\t   * QUARTER_PI is a mathematical constant with the value 0.7853982.\n\t   * It is one quarter the ratio of the circumference of a circle to\n\t   * its diameter. It is useful in combination with the trigonometric\n\t   * functions sin() and cos().\n\t   *\n\t   * @property QUARTER_PI\n\t   *\n\t   * @example\n\t   * <div><code>\n\t   * arc(50, 50, 80, 80, 0, QUARTER_PI);\n\t   * </code></div>\n\t   *\n\t   * @alt\n\t   * white eighth-circle rotated about 40 degrees with curve bottom right canvas.\n\t   *\n\t   */\n\t  QUARTER_PI: PI / 4,\n\t  /**\n\t   * TAU is an alias for TWO_PI, a mathematical constant with the\n\t   * value 6.28318530717958647693. It is twice the ratio of the\n\t   * circumference of a circle to its diameter. It is useful in\n\t   * combination with the trigonometric functions sin() and cos().\n\t   *\n\t   * @property TAU\n\t   *\n\t   * @example\n\t   * <div><code>\n\t   * arc(50, 50, 80, 80, 0, TAU);\n\t   * </code></div>\n\t   *\n\t   * @alt\n\t   * 80x80 white ellipse shape in center of canvas.\n\t   *\n\t   */\n\t  TAU: PI * 2,\n\t  /**\n\t   * TWO_PI is a mathematical constant with the value\n\t   * 6.28318530717958647693. It is twice the ratio of the\n\t   * circumference of a circle to its diameter. It is useful in\n\t   * combination with the trigonometric functions sin() and cos().\n\t   *\n\t   * @property TWO_PI\n\t   *\n\t   * @example\n\t   * <div><code>\n\t   * arc(50, 50, 80, 80, 0, TWO_PI);\n\t   * </code></div>\n\t   *\n\t   * @alt\n\t   * 80x80 white ellipse shape in center of canvas.\n\t   *\n\t   */\n\t  TWO_PI: PI * 2,\n\t  DEGREES: 'degrees',\n\t  RADIANS: 'radians',\n\t\n\t  // SHAPE\n\t  CORNER: 'corner',\n\t  CORNERS: 'corners',\n\t  RADIUS: 'radius',\n\t  RIGHT: 'right',\n\t  LEFT: 'left',\n\t  CENTER: 'center',\n\t  TOP: 'top',\n\t  BOTTOM: 'bottom',\n\t  BASELINE: 'alphabetic',\n\t  POINTS: 0x0000,\n\t  LINES: 0x0001,\n\t  LINE_STRIP: 0x0003,\n\t  LINE_LOOP: 0x0002,\n\t  TRIANGLES: 0x0004,\n\t  TRIANGLE_FAN: 0x0006,\n\t  TRIANGLE_STRIP: 0x0005,\n\t  QUADS: 'quads',\n\t  QUAD_STRIP: 'quad_strip',\n\t  CLOSE: 'close',\n\t  OPEN: 'open',\n\t  CHORD: 'chord',\n\t  PIE: 'pie',\n\t  PROJECT: 'square', // PEND: careful this is counterintuitive\n\t  SQUARE: 'butt',\n\t  ROUND: 'round',\n\t  BEVEL: 'bevel',\n\t  MITER: 'miter',\n\t\n\t  // COLOR\n\t  RGB: 'rgb',\n\t  HSB: 'hsb',\n\t  HSL: 'hsl',\n\t\n\t  // DOM EXTENSION\n\t  AUTO: 'auto',\n\t\n\t  // INPUT\n\t  ALT: 18,\n\t  BACKSPACE: 8,\n\t  CONTROL: 17,\n\t  DELETE: 46,\n\t  DOWN_ARROW: 40,\n\t  ENTER: 13,\n\t  ESCAPE: 27,\n\t  LEFT_ARROW: 37,\n\t  OPTION: 18,\n\t  RETURN: 13,\n\t  RIGHT_ARROW: 39,\n\t  SHIFT: 16,\n\t  TAB: 9,\n\t  UP_ARROW: 38,\n\t\n\t  // RENDERING\n\t  BLEND: 'normal',\n\t  ADD: 'lighter',\n\t  //ADD: 'add', //\n\t  //SUBTRACT: 'subtract', //\n\t  DARKEST: 'darken',\n\t  LIGHTEST: 'lighten',\n\t  DIFFERENCE: 'difference',\n\t  EXCLUSION: 'exclusion',\n\t  MULTIPLY: 'multiply',\n\t  SCREEN: 'screen',\n\t  REPLACE: 'source-over',\n\t  OVERLAY: 'overlay',\n\t  HARD_LIGHT: 'hard-light',\n\t  SOFT_LIGHT: 'soft-light',\n\t  DODGE: 'color-dodge',\n\t  BURN: 'color-burn',\n\t\n\t  // FILTERS\n\t  THRESHOLD: 'threshold',\n\t  GRAY: 'gray',\n\t  OPAQUE: 'opaque',\n\t  INVERT: 'invert',\n\t  POSTERIZE: 'posterize',\n\t  DILATE: 'dilate',\n\t  ERODE: 'erode',\n\t  BLUR: 'blur',\n\t\n\t  // TYPOGRAPHY\n\t  NORMAL: 'normal',\n\t  ITALIC: 'italic',\n\t  BOLD: 'bold',\n\t\n\t  // TYPOGRAPHY-INTERNAL\n\t  _DEFAULT_TEXT_FILL: '#000000',\n\t  _DEFAULT_LEADMULT: 1.25,\n\t  _CTX_MIDDLE: 'middle',\n\t\n\t  // VERTICES\n\t  LINEAR: 'linear',\n\t  QUADRATIC: 'quadratic',\n\t  BEZIER: 'bezier',\n\t  CURVE: 'curve',\n\t\n\t  // DEFAULTS\n\t  _DEFAULT_STROKE: '#000000',\n\t  _DEFAULT_FILL: '#FFFFFF'\n\t\n\t};\n\t\n\t},{}],37:[function(_dereq_,module,exports){\n\t/**\n\t * @module Structure\n\t * @submodule Structure\n\t * @for p5\n\t * @requires constants\n\t */\n\t\n\t'use strict';\n\t\n\t_dereq_('./shim');\n\t\n\t// Core needs the PVariables object\n\tvar constants = _dereq_('./constants');\n\t\n\t/**\n\t * This is the p5 instance constructor.\n\t *\n\t * A p5 instance holds all the properties and methods related to\n\t * a p5 sketch.  It expects an incoming sketch closure and it can also\n\t * take an optional node parameter for attaching the generated p5 canvas\n\t * to a node.  The sketch closure takes the newly created p5 instance as\n\t * its sole argument and may optionally set preload(), setup(), and/or\n\t * draw() properties on it for running a sketch.\n\t *\n\t * A p5 sketch can run in \"global\" or \"instance\" mode:\n\t * \"global\"   - all properties and methods are attached to the window\n\t * \"instance\" - all properties and methods are bound to this p5 object\n\t *\n\t * @param  {Function}    sketch a closure that can set optional preload(),\n\t *                              setup(), and/or draw() properties on the\n\t *                              given p5 instance\n\t * @param  {HTMLElement|boolean} [node] element to attach canvas to, if a\n\t *                                      boolean is passed in use it as sync\n\t * @param  {boolean}     [sync] start synchronously (optional)\n\t * @return {p5}                 a p5 instance\n\t */\n\tvar p5 = function(sketch, node, sync) {\n\t\n\t  if (arguments.length === 2 && typeof node === 'boolean') {\n\t    sync = node;\n\t    node = undefined;\n\t  }\n\t\n\t  //////////////////////////////////////////////\n\t  // PUBLIC p5 PROPERTIES AND METHODS\n\t  //////////////////////////////////////////////\n\t\n\t\n\t  /**\n\t   * Called directly before setup(), the preload() function is used to handle\n\t   * asynchronous loading of external files. If a preload function is\n\t   * defined, setup() will wait until any load calls within have finished.\n\t   * Nothing besides load calls should be inside preload (loadImage,\n\t   * loadJSON, loadFont, loadStrings, etc).\n\t   *\n\t   * @method preload\n\t   * @example\n\t   * <div><code>\n\t   * var img;\n\t   * var c;\n\t   * function preload() {  // preload() runs once\n\t   *   img = loadImage('assets/laDefense.jpg');\n\t   * }\n\t   *\n\t   * function setup() {  // setup() waits until preload() is done\n\t   *   img.loadPixels();\n\t   *   // get color of middle pixel\n\t   *   c = img.get(img.width/2, img.height/2);\n\t   * }\n\t   *\n\t   * function draw() {\n\t   *   background(c);\n\t   *   image(img, 25, 25, 50, 50);\n\t   * }\n\t   * </code></div>\n\t   *\n\t   * @alt\n\t   * nothing displayed\n\t   *\n\t   */\n\t\n\t  /**\n\t   * The setup() function is called once when the program starts. It's used to\n\t   * define initial environment properties such as screen size and background\n\t   * color and to load media such as images and fonts as the program starts.\n\t   * There can only be one setup() function for each program and it shouldn't\n\t   * be called again after its initial execution.\n\t   * <br><br>\n\t   * Note: Variables declared within setup() are not accessible within other\n\t   * functions, including draw().\n\t   *\n\t   * @method setup\n\t   * @example\n\t   * <div><code>\n\t   * var a = 0;\n\t   *\n\t   * function setup() {\n\t   *   background(0);\n\t   *   noStroke();\n\t   *   fill(102);\n\t   * }\n\t   *\n\t   * function draw() {\n\t   *   rect(a++%width, 10, 2, 80);\n\t   * }\n\t   * </code></div>\n\t   *\n\t   * @alt\n\t   * nothing displayed\n\t   *\n\t   */\n\t\n\t  /**\n\t   * Called directly after setup(), the draw() function continuously executes\n\t   * the lines of code contained inside its block until the program is stopped\n\t   * or noLoop() is called. Note if noLoop() is called in setup(), draw() will\n\t   * still be executed once before stopping. draw() is called automatically and\n\t   * should never be called explicitly.\n\t   * <br><br>\n\t   * It should always be controlled with noLoop(), redraw() and loop(). After\n\t   * noLoop() stops the code in draw() from executing, redraw() causes the\n\t   * code inside draw() to execute once, and loop() will cause the code\n\t   * inside draw() to resume executing continuously.\n\t   * <br><br>\n\t   * The number of times draw() executes in each second may be controlled with\n\t   * the frameRate() function.\n\t   * <br><br>\n\t   * There can only be one draw() function for each sketch, and draw() must\n\t   * exist if you want the code to run continuously, or to process events such\n\t   * as mousePressed(). Sometimes, you might have an empty call to draw() in\n\t   * your program, as shown in the above example.\n\t   * <br><br>\n\t   * It is important to note that the drawing coordinate system will be reset\n\t   * at the beginning of each draw() call. If any transformations are performed\n\t   * within draw() (ex: scale, rotate, translate, their effects will be\n\t   * undone at the beginning of draw(), so transformations will not accumulate\n\t   * over time. On the other hand, styling applied (ex: fill, stroke, etc) will\n\t   * remain in effect.\n\t   *\n\t   * @method draw\n\t   * @example\n\t   * <div><code>\n\t   * var yPos = 0;\n\t   * function setup() {  // setup() runs once\n\t   *   frameRate(30);\n\t   * }\n\t   * function draw() {  // draw() loops forever, until stopped\n\t   *   background(204);\n\t   *   yPos = yPos - 1;\n\t   *   if (yPos < 0) {\n\t   *     yPos = height;\n\t   *   }\n\t   *   line(0, yPos, width, yPos);\n\t   * }\n\t   * </code></div>\n\t   *\n\t   * @alt\n\t   * nothing displayed\n\t   *\n\t   */\n\t\n\t\n\t  //////////////////////////////////////////////\n\t  // PRIVATE p5 PROPERTIES AND METHODS\n\t  //////////////////////////////////////////////\n\t\n\t  this._setupDone = false;\n\t  // for handling hidpi\n\t  this._pixelDensity = Math.ceil(window.devicePixelRatio) || 1;\n\t  this._userNode = node;\n\t  this._curElement = null;\n\t  this._elements = [];\n\t  this._requestAnimId = 0;\n\t  this._preloadCount = 0;\n\t  this._isGlobal = false;\n\t  this._loop = true;\n\t  this._styles = [];\n\t  this._defaultCanvasSize = {\n\t    width: 100,\n\t    height: 100\n\t  };\n\t  this._events = { // keep track of user-events for unregistering later\n\t    'mousemove': null,\n\t    'mousedown': null,\n\t    'mouseup': null,\n\t    'dragend': null,\n\t    'dragover': null,\n\t    'click': null,\n\t    'mouseover': null,\n\t    'mouseout': null,\n\t    'keydown': null,\n\t    'keyup': null,\n\t    'keypress': null,\n\t    'touchstart': null,\n\t    'touchmove': null,\n\t    'touchend': null,\n\t    'resize': null,\n\t    'blur': null\n\t  };\n\t\n\t  this._events.wheel = null;\n\t  this._loadingScreenId = 'p5_loading';\n\t\n\t  if (window.DeviceOrientationEvent) {\n\t    this._events.deviceorientation = null;\n\t  }\n\t  if (window.DeviceMotionEvent && !window._isNodeWebkit) {\n\t    this._events.devicemotion = null;\n\t  }\n\t\n\t  this._start = function () {\n\t    // Find node if id given\n\t    if (this._userNode) {\n\t      if (typeof this._userNode === 'string') {\n\t        this._userNode = document.getElementById(this._userNode);\n\t      }\n\t    }\n\t\n\t    // Always create a default canvas.\n\t    // Later on if the user calls createCanvas, this default one\n\t    // will be replaced\n\t    this.createCanvas(\n\t      this._defaultCanvasSize.width,\n\t      this._defaultCanvasSize.height,\n\t      'p2d',\n\t      true\n\t    );\n\t\n\t    var userPreload = this.preload || window.preload; // look for \"preload\"\n\t    if (userPreload) {\n\t\n\t      // Setup loading screen\n\t      // Set loading scfeen into dom if not present\n\t      // Otherwise displays and removes user provided loading screen\n\t      var loadingScreen = document.getElementById(this._loadingScreenId);\n\t      if(!loadingScreen){\n\t        loadingScreen = document.createElement('div');\n\t        loadingScreen.innerHTML = 'Loading...';\n\t        loadingScreen.style.position = 'absolute';\n\t        loadingScreen.id = this._loadingScreenId;\n\t        var node = this._userNode || document.body;\n\t        node.appendChild(loadingScreen);\n\t      }\n\t      // var methods = this._preloadMethods;\n\t      for (var method in this._preloadMethods){\n\t        // default to p5 if no object defined\n\t        this._preloadMethods[method] = this._preloadMethods[method] || p5;\n\t        var obj = this._preloadMethods[method];\n\t        //it's p5, check if it's global or instance\n\t        if (obj === p5.prototype || obj === p5){\n\t          obj = this._isGlobal ? window : this;\n\t        }\n\t        this._registeredPreloadMethods[method] = obj[method];\n\t        obj[method] = this._wrapPreload(obj, method);\n\t      }\n\t\n\t      userPreload();\n\t      this._runIfPreloadsAreDone();\n\t    } else {\n\t      this._setup();\n\t      this._runFrames();\n\t      this._draw();\n\t    }\n\t  }.bind(this);\n\t\n\t  this._runIfPreloadsAreDone = function(){\n\t    var context = this._isGlobal ? window : this;\n\t    if (context._preloadCount === 0) {\n\t      var loadingScreen = document.getElementById(context._loadingScreenId);\n\t      if (loadingScreen) {\n\t        loadingScreen.parentNode.removeChild(loadingScreen);\n\t      }\n\t      context._setup();\n\t      context._runFrames();\n\t      context._draw();\n\t    }\n\t  };\n\t\n\t  this._decrementPreload = function(){\n\t    var context = this._isGlobal ? window : this;\n\t    context._setProperty('_preloadCount', context._preloadCount - 1);\n\t    context._runIfPreloadsAreDone();\n\t  };\n\t\n\t  this._wrapPreload = function(obj, fnName){\n\t    return function(){\n\t      //increment counter\n\t      this._incrementPreload();\n\t      //call original function\n\t      var args = new Array(arguments.length);\n\t      for (var i = 0; i < args.length; ++i) {\n\t        args[i] = arguments[i];\n\t      }\n\t      args.push(this._decrementPreload.bind(this));\n\t      return this._registeredPreloadMethods[fnName].apply(obj, args);\n\t    }.bind(this);\n\t  };\n\t\n\t  this._incrementPreload = function(){\n\t    var context = this._isGlobal ? window : this;\n\t    context._setProperty('_preloadCount', context._preloadCount + 1);\n\t  };\n\t\n\t  this._setup = function() {\n\t\n\t    // return preload functions to their normal vals if switched by preload\n\t    var context = this._isGlobal ? window : this;\n\t    if (typeof context.preload === 'function') {\n\t      for (var f in this._preloadMethods) {\n\t        context[f] = this._preloadMethods[f][f];\n\t        if (context[f] && this) {\n\t          context[f] = context[f].bind(this);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Short-circuit on this, in case someone used the library in \"global\"\n\t    // mode earlier\n\t    if (typeof context.setup === 'function') {\n\t      context.setup();\n\t    }\n\t\n\t    // unhide any hidden canvases that were created\n\t    var canvases = document.getElementsByTagName('canvas');\n\t    for (var i = 0; i < canvases.length; i++) {\n\t      var k = canvases[i];\n\t      if (k.dataset.hidden === 'true') {\n\t        k.style.visibility = '';\n\t        delete(k.dataset.hidden);\n\t      }\n\t    }\n\t    this._setupDone = true;\n\t\n\t  }.bind(this);\n\t\n\t  this._draw = function () {\n\t    var now = window.performance.now();\n\t    var time_since_last = now - this._lastFrameTime;\n\t    var target_time_between_frames = 1000 / this._targetFrameRate;\n\t\n\t    // only draw if we really need to; don't overextend the browser.\n\t    // draw if we're within 5ms of when our next frame should paint\n\t    // (this will prevent us from giving up opportunities to draw\n\t    // again when it's really about time for us to do so). fixes an\n\t    // issue where the frameRate is too low if our refresh loop isn't\n\t    // in sync with the browser. note that we have to draw once even\n\t    // if looping is off, so we bypass the time delay if that\n\t    // is the case.\n\t    var epsilon = 5;\n\t    if (!this._loop ||\n\t        time_since_last >= target_time_between_frames - epsilon) {\n\t\n\t      //mandatory update values(matrixs and stack)\n\t\n\t      this._setProperty('frameCount', this.frameCount + 1);\n\t      this.redraw();\n\t      this._updateMouseCoords();\n\t      this._updateTouchCoords();\n\t      this._frameRate = 1000.0/(now - this._lastFrameTime);\n\t      this._lastFrameTime = now;\n\t    }\n\t\n\t    // get notified the next time the browser gives us\n\t    // an opportunity to draw.\n\t    if (this._loop) {\n\t      this._requestAnimId = window.requestAnimationFrame(this._draw);\n\t    }\n\t  }.bind(this);\n\t\n\t  this._runFrames = function() {\n\t    if (this._updateInterval) {\n\t      clearInterval(this._updateInterval);\n\t    }\n\t  }.bind(this);\n\t\n\t  this._setProperty = function(prop, value) {\n\t    this[prop] = value;\n\t    if (this._isGlobal) {\n\t      window[prop] = value;\n\t    }\n\t  }.bind(this);\n\t\n\t  /**\n\t   * Removes the entire p5 sketch. This will remove the canvas and any\n\t   * elements created by p5.js. It will also stop the draw loop and unbind\n\t   * any properties or methods from the window global scope. It will\n\t   * leave a variable p5 in case you wanted to create a new p5 sketch.\n\t   * If you like, you can set p5 = null to erase it.\n\t   * @method remove\n\t   * @example\n\t   * <div class='norender'><code>\n\t   * function draw() {\n\t   *   ellipse(50, 50, 10, 10);\n\t   * }\n\t   *\n\t   * function mousePressed() {\n\t   *   remove(); // remove whole sketch on mouse press\n\t   * }\n\t   * </code></div>\n\t   *\n\t   * @alt\n\t   * nothing displayed\n\t   *\n\t   */\n\t  this.remove = function() {\n\t    if (this._curElement) {\n\t\n\t      // stop draw\n\t      this._loop = false;\n\t      if (this._requestAnimId) {\n\t        window.cancelAnimationFrame(this._requestAnimId);\n\t      }\n\t\n\t      // unregister events sketch-wide\n\t      for (var ev in this._events) {\n\t        window.removeEventListener(ev, this._events[ev]);\n\t      }\n\t\n\t      // remove DOM elements created by p5, and listeners\n\t      for (var i=0; i<this._elements.length; i++) {\n\t        var e = this._elements[i];\n\t        if (e.elt.parentNode) {\n\t          e.elt.parentNode.removeChild(e.elt);\n\t        }\n\t        for (var elt_ev in e._events) {\n\t          e.elt.removeEventListener(elt_ev, e._events[elt_ev]);\n\t        }\n\t      }\n\t\n\t      // call any registered remove functions\n\t      var self = this;\n\t      this._registeredMethods.remove.forEach(function (f) {\n\t        if (typeof(f) !== 'undefined') {\n\t          f.call(self);\n\t        }\n\t      });\n\t\n\t      // remove window bound properties and methods\n\t      if (this._isGlobal) {\n\t        for (var p in p5.prototype) {\n\t          try {\n\t            delete window[p];\n\t          } catch (x) {\n\t            window[p] = undefined;\n\t          }\n\t        }\n\t        for (var p2 in this) {\n\t          if (this.hasOwnProperty(p2)) {\n\t            try {\n\t              delete window[p2];\n\t            } catch (x) {\n\t              window[p2] = undefined;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t    // window.p5 = undefined;\n\t  }.bind(this);\n\t\n\t  // call any registered init functions\n\t  this._registeredMethods.init.forEach(function (f) {\n\t    if (typeof(f) !== 'undefined') {\n\t      f.call(this);\n\t    }\n\t  }, this);\n\t\n\t  var friendlyBindGlobal = this._createFriendlyGlobalFunctionBinder();\n\t\n\t  // If the user has created a global setup or draw function,\n\t  // assume \"global\" mode and make everything global (i.e. on the window)\n\t  if (!sketch) {\n\t    this._isGlobal = true;\n\t    p5.instance = this;\n\t    // Loop through methods on the prototype and attach them to the window\n\t    for (var p in p5.prototype) {\n\t      if(typeof p5.prototype[p] === 'function') {\n\t        var ev = p.substring(2);\n\t        if (!this._events.hasOwnProperty(ev)) {\n\t          if (Math.hasOwnProperty(p) && (Math[p] === p5.prototype[p])) {\n\t            // Multiple p5 methods are just native Math functions. These can be\n\t            // called without any binding.\n\t            friendlyBindGlobal(p, p5.prototype[p]);\n\t          } else {\n\t            friendlyBindGlobal(p, p5.prototype[p].bind(this));\n\t          }\n\t        }\n\t      } else {\n\t        friendlyBindGlobal(p, p5.prototype[p]);\n\t      }\n\t    }\n\t    // Attach its properties to the window\n\t    for (var p2 in this) {\n\t      if (this.hasOwnProperty(p2)) {\n\t        friendlyBindGlobal(p2, this[p2]);\n\t      }\n\t    }\n\t\n\t  } else {\n\t    // Else, the user has passed in a sketch closure that may set\n\t    // user-provided 'setup', 'draw', etc. properties on this instance of p5\n\t    sketch(this);\n\t  }\n\t\n\t  // Bind events to window (not using container div bc key events don't work)\n\t\n\t  for (var e in this._events) {\n\t    var f = this['_on'+e];\n\t    if (f) {\n\t      var m = f.bind(this);\n\t      window.addEventListener(e, m);\n\t      this._events[e] = m;\n\t    }\n\t  }\n\t\n\t  var focusHandler = function() {\n\t    this._setProperty('focused', true);\n\t  }.bind(this);\n\t  var blurHandler = function() {\n\t    this._setProperty('focused', false);\n\t  }.bind(this);\n\t  window.addEventListener('focus', focusHandler);\n\t  window.addEventListener('blur', blurHandler);\n\t  this.registerMethod('remove', function() {\n\t    window.removeEventListener('focus', focusHandler);\n\t    window.removeEventListener('blur', blurHandler);\n\t  });\n\t\n\t  if (sync) {\n\t    this._start();\n\t  } else {\n\t    if (document.readyState === 'complete') {\n\t      this._start();\n\t    } else {\n\t      window.addEventListener('load', this._start.bind(this), false);\n\t    }\n\t  }\n\t};\n\t\n\t// This is a pointer to our global mode p5 instance, if we're in\n\t// global mode.\n\tp5.instance = null;\n\t\n\t// Allows for the friendly error system to be turned off when creating a sketch,\n\t// which can give a significant boost to performance when needed.\n\tp5.disableFriendlyErrors = false;\n\t\n\t// attach constants to p5 prototype\n\tfor (var k in constants) {\n\t  p5.prototype[k] = constants[k];\n\t}\n\t\n\t// functions that cause preload to wait\n\t// more can be added by using registerPreloadMethod(func)\n\tp5.prototype._preloadMethods = {\n\t  loadJSON: p5.prototype,\n\t  loadImage: p5.prototype,\n\t  loadStrings: p5.prototype,\n\t  loadXML: p5.prototype,\n\t  loadShape: p5.prototype,\n\t  loadTable: p5.prototype,\n\t  loadFont: p5.prototype,\n\t  loadModel: p5.prototype\n\t};\n\t\n\tp5.prototype._registeredMethods = { init: [], pre: [], post: [], remove: [] };\n\t\n\tp5.prototype._registeredPreloadMethods = {};\n\t\n\tp5.prototype.registerPreloadMethod = function(fnString, obj) {\n\t  // obj = obj || p5.prototype;\n\t  if (!p5.prototype._preloadMethods.hasOwnProperty(fnString)) {\n\t    p5.prototype._preloadMethods[fnString] = obj;\n\t  }\n\t};\n\t\n\tp5.prototype.registerMethod = function(name, m) {\n\t  if (!p5.prototype._registeredMethods.hasOwnProperty(name)) {\n\t    p5.prototype._registeredMethods[name] = [];\n\t  }\n\t  p5.prototype._registeredMethods[name].push(m);\n\t};\n\t\n\tp5.prototype._createFriendlyGlobalFunctionBinder = function(options) {\n\t  options = options || {};\n\t\n\t  var globalObject = options.globalObject || window;\n\t  var log = options.log || console.log.bind(console);\n\t  var propsToForciblyOverwrite = {\n\t    // p5.print actually always overwrites an existing global function,\n\t    // albeit one that is very unlikely to be used:\n\t    //\n\t    //   https://developer.mozilla.org/en-US/docs/Web/API/Window/print\n\t    'print': true\n\t  };\n\t\n\t  return function(prop, value) {\n\t    if (!p5.disableFriendlyErrors &&\n\t        typeof(IS_MINIFIED) === 'undefined' &&\n\t        typeof(value) === 'function' &&\n\t        !(prop in p5.prototype._preloadMethods)) {\n\t      try {\n\t        // Because p5 has so many common function names, it's likely\n\t        // that users may accidentally overwrite global p5 functions with\n\t        // their own variables. Let's allow this but log a warning to\n\t        // help users who may be doing this unintentionally.\n\t        //\n\t        // For more information, see:\n\t        //\n\t        //   https://github.com/processing/p5.js/issues/1317\n\t\n\t        if (prop in globalObject && !(prop in propsToForciblyOverwrite)) {\n\t          throw new Error('global \"' + prop + '\" already exists');\n\t        }\n\t\n\t        // It's possible that this might throw an error because there\n\t        // are a lot of edge-cases in which `Object.defineProperty` might\n\t        // not succeed; since this functionality is only intended to\n\t        // help beginners anyways, we'll just catch such an exception\n\t        // if it occurs, and fall back to legacy behavior.\n\t        Object.defineProperty(globalObject, prop, {\n\t          configurable: true,\n\t          enumerable: true,\n\t          get: function() {\n\t            return value;\n\t          },\n\t          set: function(newValue) {\n\t            Object.defineProperty(globalObject, prop, {\n\t              configurable: true,\n\t              enumerable: true,\n\t              value: newValue,\n\t              writable: true\n\t            });\n\t            log(\n\t              'You just changed the value of \"' + prop + '\", which was ' +\n\t              'a p5 function. This could cause problems later if you\\'re ' +\n\t              'not careful.'\n\t            );\n\t          }\n\t        });\n\t      } catch (e) {\n\t        log(\n\t          'p5 had problems creating the global function \"' + prop + '\", ' +\n\t          'possibly because your code is already using that name as ' +\n\t          'a variable. You may want to rename your variable to something ' +\n\t          'else.'\n\t        );\n\t        globalObject[prop] = value;\n\t      }\n\t    } else {\n\t      globalObject[prop] = value;\n\t    }\n\t  };\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"./constants\":36,\"./shim\":46}],38:[function(_dereq_,module,exports){\n\t/**\n\t * @module Shape\n\t * @submodule Curves\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('./core');\n\t\n\t_dereq_('./error_helpers');\n\t\n\tvar bezierDetail = 20;\n\tvar curveDetail = 20;\n\t\n\t/**\n\t * Draws a cubic Bezier curve on the screen. These curves are defined by a\n\t * series of anchor and control points. The first two parameters specify\n\t * the first anchor point and the last two parameters specify the other\n\t * anchor point, which become the first and last points on the curve. The\n\t * middle parameters specify the two control points which define the shape\n\t * of the curve. Approximately speaking, control points \"pull\" the curve\n\t * towards them.<br /><br />Bezier curves were developed by French\n\t * automotive engineer Pierre Bezier, and are commonly used in computer\n\t * graphics to define gently sloping curves. See also curve().\n\t *\n\t * @method bezier\n\t * @param  {Number} x1 x-coordinate for the first anchor point\n\t * @param  {Number} y1 y-coordinate for the first anchor point\n\t * @param  {Number} x2 x-coordinate for the first control point\n\t * @param  {Number} y2 y-coordinate for the first control point\n\t * @param  {Number} x3 x-coordinate for the second control point\n\t * @param  {Number} y3 y-coordinate for the second control point\n\t * @param  {Number} x4 x-coordinate for the second anchor point\n\t * @param  {Number} y4 y-coordinate for the second anchor point\n\t * @return {Object}    the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * stroke(255, 102, 0);\n\t * line(85, 20, 10, 10);\n\t * line(90, 90, 15, 80);\n\t * stroke(0, 0, 0);\n\t * bezier(85, 20, 10, 10, 90, 90, 15, 80);\n\t * </code>\n\t * </div>\n\t * @alt\n\t * stretched black s-shape in center with orange lines extending from end points.\n\t * stretched black s-shape with 10 5x5 white ellipses along the shape.\n\t * stretched black s-shape with 7 5x5 ellipses and orange lines along the shape.\n\t * stretched black s-shape with 17 small orange lines extending from under shape.\n\t * horseshoe shape with orange ends facing left and black curved center.\n\t * horseshoe shape with orange ends facing left and black curved center.\n\t * Line shaped like right-facing arrow,points move with mouse-x and warp shape.\n\t * horizontal line that hooks downward on the right and 13 5x5 ellipses along it.\n\t * right curving line mid-right of canvas with 7 short lines radiating from it.\n\t */\n\t/**\n\t * @method bezier\n\t * @param  {Number} z1 z-coordinate for the first anchor point\n\t * @param  {Number} z2 z-coordinate for the first control point\n\t * @param  {Number} z3 z-coordinate for the first anchor point\n\t * @param  {Number} z4 z-coordinate for the first control point\n\t * @return {p5.Renderer3D}   [description]\n\t * @example\n\t * <div>\n\t * <code>\n\t *background(0, 0, 0);\n\t *noFill();\n\t *stroke(255);\n\t *bezier(250,250,0, 100,100,0, 100,0,0, 0,100,0);\n\t * </code>\n\t * </div>\n\t*/\n\tp5.prototype.bezier = function() {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  if(this._renderer.isP3D){\n\t    this._validateParameters(\n\t      'bezier',\n\t      args,\n\t      ['Number', 'Number', 'Number',\n\t      'Number', 'Number', 'Number',\n\t      'Number', 'Number', 'Number',\n\t      'Number', 'Number', 'Number'\n\t      ]\n\t    );\n\t  } else{\n\t    this._validateParameters(\n\t      'bezier',\n\t      args,\n\t      [ 'Number', 'Number', 'Number', 'Number',\n\t        'Number', 'Number', 'Number', 'Number' ]\n\t    );\n\t  }\n\t  if (!this._renderer._doStroke) {\n\t    return this;\n\t  }\n\t  if (this._renderer.isP3D){\n\t    args.push(bezierDetail);//adding value of bezier detail to the args array\n\t    this._renderer.bezier(args);\n\t  } else{\n\t    this._renderer.bezier(args[0],args[1],\n\t      args[2],args[3],\n\t      args[4],args[5],\n\t      args[6],args[7]);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the resolution at which Beziers display.\n\t *\n\t * The default value is 20.\n\t *\n\t * @param {Number} detail resolution of the curves\n\t * @return {Object} the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * background(204);\n\t * bezierDetail(50);\n\t * bezier(85, 20, 10, 10, 90, 90, 15, 80);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * stretched black s-shape with 7 5x5 ellipses and orange lines along the shape.\n\t *\n\t */\n\tp5.prototype.bezierDetail = function(d) {\n\t  bezierDetail = d;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Evaluates the Bezier at position t for points a, b, c, d.\n\t * The parameters a and d are the first and last points\n\t * on the curve, and b and c are the control points.\n\t * The final parameter t varies between 0 and 1.\n\t * This can be done once with the x coordinates and a second time\n\t * with the y coordinates to get the location of a bezier curve at t.\n\t *\n\t * @method bezierPoint\n\t * @param {Number} a coordinate of first point on the curve\n\t * @param {Number} b coordinate of first control point\n\t * @param {Number} c coordinate of second control point\n\t * @param {Number} d coordinate of second point on the curve\n\t * @param {Number} t value between 0 and 1\n\t * @return {Number} the value of the Bezier at position t\n\t * @example\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * x1 = 85, x2 = 10, x3 = 90, x4 = 15;\n\t * y1 = 20, y2 = 10, y3 = 90, y4 = 80;\n\t * bezier(x1, y1, x2, y2, x3, y3, x4, y4);\n\t * fill(255);\n\t * steps = 10;\n\t * for (i = 0; i <= steps; i++) {\n\t *   t = i / steps;\n\t *   x = bezierPoint(x1, x2, x3, x4, t);\n\t *   y = bezierPoint(y1, y2, y3, y4, t);\n\t *   ellipse(x, y, 5, 5);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * stretched black s-shape with 17 small orange lines extending from under shape.\n\t *\n\t */\n\tp5.prototype.bezierPoint = function(a, b, c, d, t) {\n\t  var adjustedT = 1-t;\n\t  return Math.pow(adjustedT,3)*a +\n\t   3*(Math.pow(adjustedT,2))*t*b +\n\t   3*adjustedT*Math.pow(t,2)*c +\n\t   Math.pow(t,3)*d;\n\t};\n\t\n\t/**\n\t * Evaluates the tangent to the Bezier at position t for points a, b, c, d.\n\t * The parameters a and d are the first and last points\n\t * on the curve, and b and c are the control points.\n\t * The final parameter t varies between 0 and 1.\n\t *\n\t * @method bezierTangent\n\t * @param {Number} a coordinate of first point on the curve\n\t * @param {Number} b coordinate of first control point\n\t * @param {Number} c coordinate of second control point\n\t * @param {Number} d coordinate of second point on the curve\n\t * @param {Number} t value between 0 and 1\n\t * @return {Number} the tangent at position t\n\t * @example\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * bezier(85, 20, 10, 10, 90, 90, 15, 80);\n\t * steps = 6;\n\t * fill(255);\n\t * for (i = 0; i <= steps; i++) {\n\t *   t = i / steps;\n\t *   // Get the location of the point\n\t *   x = bezierPoint(85, 10, 90, 15, t);\n\t *   y = bezierPoint(20, 10, 90, 80, t);\n\t *   // Get the tangent points\n\t *   tx = bezierTangent(85, 10, 90, 15, t);\n\t *   ty = bezierTangent(20, 10, 90, 80, t);\n\t *   // Calculate an angle from the tangent points\n\t *   a = atan2(ty, tx);\n\t *   a += PI;\n\t *   stroke(255, 102, 0);\n\t *   line(x, y, cos(a)*30 + x, sin(a)*30 + y);\n\t *   // The following line of code makes a line\n\t *   // inverse of the above line\n\t *   //line(x, y, cos(a)*-30 + x, sin(a)*-30 + y);\n\t *   stroke(0);\n\t *   ellipse(x, y, 5, 5);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * bezier(85, 20, 10, 10, 90, 90, 15, 80);\n\t * stroke(255, 102, 0);\n\t * steps = 16;\n\t * for (i = 0; i <= steps; i++) {\n\t *   t = i / steps;\n\t *   x = bezierPoint(85, 10, 90, 15, t);\n\t *   y = bezierPoint(20, 10, 90, 80, t);\n\t *   tx = bezierTangent(85, 10, 90, 15, t);\n\t *   ty = bezierTangent(20, 10, 90, 80, t);\n\t *   a = atan2(ty, tx);\n\t *   a -= HALF_PI;\n\t *   line(x, y, cos(a)*8 + x, sin(a)*8 + y);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * s-shaped line with 17 short orange lines extending from underside of shape\n\t *\n\t */\n\tp5.prototype.bezierTangent = function(a, b, c, d, t) {\n\t  var adjustedT = 1-t;\n\t  return 3*d*Math.pow(t,2) -\n\t   3*c*Math.pow(t,2) +\n\t   6*c*adjustedT*t -\n\t   6*b*adjustedT*t +\n\t   3*b*Math.pow(adjustedT,2) -\n\t   3*a*Math.pow(adjustedT,2);\n\t};\n\t\n\t/**\n\t * Draws a curved line on the screen between two points, given as the\n\t * middle four parameters. The first two parameters are a control point, as\n\t * if the curve came from this point even though it's not drawn. The last\n\t * two parameters similarly describe the other control point. <br /><br />\n\t * Longer curves can be created by putting a series of curve() functions\n\t * together or using curveVertex(). An additional function called\n\t * curveTightness() provides control for the visual quality of the curve.\n\t * The curve() function is an implementation of Catmull-Rom splines.\n\t *\n\t * @method curve\n\t * @param  {Number} x1 x-coordinate for the beginning control point\n\t * @param  {Number} y1 y-coordinate for the beginning control point\n\t * @param  {Number} x2 x-coordinate for the first point\n\t * @param  {Number} y2 y-coordinate for the first point\n\t * @param  {Number} x3 x-coordinate for the second point\n\t * @param  {Number} y3 y-coordinate for the second point\n\t * @param  {Number} x4 x-coordinate for the ending control point\n\t * @param  {Number} y4 y-coordinate for the ending control point\n\t * @return {Object}    the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * stroke(255, 102, 0);\n\t * curve(5, 26, 5, 26, 73, 24, 73, 61);\n\t * stroke(0);\n\t * curve(5, 26, 73, 24, 73, 61, 15, 65);\n\t * stroke(255, 102, 0);\n\t * curve(73, 24, 73, 61, 15, 65, 15, 65);\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * // Define the curve points as JavaScript objects\n\t * p1 = {x: 5, y: 26}, p2 = {x: 73, y: 24}\n\t * p3 = {x: 73, y: 61}, p4 = {x: 15, y: 65}\n\t * noFill();\n\t * stroke(255, 102, 0);\n\t * curve(p1.x, p1.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y)\n\t * stroke(0);\n\t * curve(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y)\n\t * stroke(255, 102, 0);\n\t * curve(p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, p4.x, p4.y)\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * horseshoe shape with orange ends facing left and black curved center.\n\t * horseshoe shape with orange ends facing left and black curved center.\n\t *\n\t */\n\t/**\n\t * @method curve\n\t * @param  {Number} z1 z-coordinate for the beginning control point\n\t * @param  {Number} z2 z-coordinate for the first point\n\t * @param  {Number} z3 z-coordinate for the second point\n\t * @param  {Number} z4 z-coordinate for the ending control point\n\t * @return {Object}    the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * stroke(255, 102, 0);\n\t * curve(5,26,0, 5,26,0, 73,24,0, 73,61,0);\n\t * stroke(0);\n\t * curve(5,26,0, 73,24,0, 73,61,0, 15,65,0);\n\t * stroke(255, 102, 0);\n\t * curve(73,24,0, 73,61,0, 15,65,0, 15,65,0);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * curving black and orange lines.\n\t */\n\tp5.prototype.curve = function() {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  if(this._renderer.isP3D){\n\t    this._validateParameters(\n\t      'curve',\n\t      args,\n\t      ['Number', 'Number', 'Number',\n\t      'Number', 'Number', 'Number',\n\t      'Number', 'Number', 'Number',\n\t      'Number', 'Number', 'Number'\n\t      ]\n\t    );\n\t  } else{\n\t    this._validateParameters(\n\t      'curve',\n\t      args,\n\t      [ 'Number', 'Number', 'Number', 'Number',\n\t        'Number', 'Number', 'Number', 'Number' ]\n\t    );\n\t  }\n\t  if (!this._renderer._doStroke) {\n\t    return this;\n\t  }\n\t  if (this._renderer.isP3D){\n\t    args.push(curveDetail);\n\t    this._renderer.curve(args);\n\t  } else{\n\t    this._renderer.curve(args[0],args[1],\n\t      args[2],args[3],\n\t      args[4],args[5],\n\t      args[6],args[7]);\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the resolution at which curves display.\n\t *\n\t * The default value is 20.\n\t *\n\t * @param {Number} resolution of the curves\n\t * @return {Object} the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * background(204);\n\t * curveDetail(20);\n\t * curve(5, 26, 5, 26, 73, 24, 73, 61);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * white arch shape in top-mid canvas.\n\t *\n\t */\n\tp5.prototype.curveDetail = function(d) {\n\t  curveDetail = d;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Modifies the quality of forms created with curve() and curveVertex().\n\t * The parameter tightness determines how the curve fits to the vertex\n\t * points. The value 0.0 is the default value for tightness (this value\n\t * defines the curves to be Catmull-Rom splines) and the value 1.0 connects\n\t * all the points with straight lines. Values within the range -5.0 and 5.0\n\t * will deform the curves but will leave them recognizable and as values\n\t * increase in magnitude, they will continue to deform.\n\t *\n\t * @method curveTightness\n\t * @param {Number} amount of deformation from the original vertices\n\t * @return {Object} the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Move the mouse left and right to see the curve change\n\t *\n\t * function setup() {\n\t *   createCanvas(100, 100);\n\t *   noFill();\n\t * }\n\t *\n\t * function draw() {\n\t *   background(204);\n\t *   var t = map(mouseX, 0, width, -5, 5);\n\t *   curveTightness(t);\n\t *   beginShape();\n\t *   curveVertex(10, 26);\n\t *   curveVertex(10, 26);\n\t *   curveVertex(83, 24);\n\t *   curveVertex(83, 61);\n\t *   curveVertex(25, 65);\n\t *   curveVertex(25, 65);\n\t *   endShape();\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Line shaped like right-facing arrow,points move with mouse-x and warp shape.\n\t */\n\tp5.prototype.curveTightness = function (t) {\n\t  this._renderer._curveTightness = t;\n\t};\n\t\n\t/**\n\t * Evaluates the curve at position t for points a, b, c, d.\n\t * The parameter t varies between 0 and 1, a and d are points\n\t * on the curve, and b and c are the control points.\n\t * This can be done once with the x coordinates and a second time\n\t * with the y coordinates to get the location of a curve at t.\n\t *\n\t * @method curvePoint\n\t * @param {Number} a coordinate of first point on the curve\n\t * @param {Number} b coordinate of first control point\n\t * @param {Number} c coordinate of second control point\n\t * @param {Number} d coordinate of second point on the curve\n\t * @param {Number} t value between 0 and 1\n\t * @return {Number} bezier value at position t\n\t * @example\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * curve(5, 26, 5, 26, 73, 24, 73, 61);\n\t * curve(5, 26, 73, 24, 73, 61, 15, 65);\n\t * fill(255);\n\t * ellipseMode(CENTER);\n\t * steps = 6;\n\t * for (i = 0; i <= steps; i++) {\n\t *   t = i / steps;\n\t *   x = curvePoint(5, 5, 73, 73, t);\n\t *   y = curvePoint(26, 26, 24, 61, t);\n\t *   ellipse(x, y, 5, 5);\n\t *   x = curvePoint(5, 73, 73, 15, t);\n\t *   y = curvePoint(26, 24, 61, 65, t);\n\t *   ellipse(x, y, 5, 5);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t *line hooking down to right-bottom with 13 5x5 white ellipse points\n\t */\n\tp5.prototype.curvePoint = function(a, b, c, d, t) {\n\t  var t3 = t*t*t,\n\t    t2 = t*t,\n\t    f1 = -0.5 * t3 + t2 - 0.5 * t,\n\t    f2 = 1.5 * t3 - 2.5 * t2 + 1.0,\n\t    f3 = -1.5 * t3 + 2.0 * t2 + 0.5 * t,\n\t    f4 = 0.5 * t3 - 0.5 * t2;\n\t  return a*f1 + b*f2 + c*f3 + d*f4;\n\t};\n\t\n\t/**\n\t * Evaluates the tangent to the curve at position t for points a, b, c, d.\n\t * The parameter t varies between 0 and 1, a and d are points on the curve,\n\t * and b and c are the control points.\n\t *\n\t * @method curveTangent\n\t * @param {Number} a coordinate of first point on the curve\n\t * @param {Number} b coordinate of first control point\n\t * @param {Number} c coordinate of second control point\n\t * @param {Number} d coordinate of second point on the curve\n\t * @param {Number} t value between 0 and 1\n\t * @return {Number} the tangent at position t\n\t * @example\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * curve(5, 26, 73, 24, 73, 61, 15, 65);\n\t * steps = 6;\n\t * for (i = 0; i <= steps; i++) {\n\t *   t = i / steps;\n\t *   x = curvePoint(5, 73, 73, 15, t);\n\t *   y = curvePoint(26, 24, 61, 65, t);\n\t *   //ellipse(x, y, 5, 5);\n\t *   tx = curveTangent(5, 73, 73, 15, t);\n\t *   ty = curveTangent(26, 24, 61, 65, t);\n\t *   a = atan2(ty, tx);\n\t *   a -= PI/2.0;\n\t *   line(x, y, cos(a)*8 + x, sin(a)*8 + y);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *right curving line mid-right of canvas with 7 short lines radiating from it.\n\t */\n\tp5.prototype.curveTangent = function(a, b,c, d, t) {\n\t  var t2 = t*t,\n\t    f1 = (-3*t2)/2 + 2*t - 0.5,\n\t    f2 = (9*t2)/2 - 5*t,\n\t    f3 = (-9*t2)/2 + 4*t + 0.5,\n\t    f4 = (3*t2)/2 - t;\n\t  return a*f1 + b*f2 + c*f3 + d*f4;\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"./core\":37,\"./error_helpers\":40}],39:[function(_dereq_,module,exports){\n\t/**\n\t * @module Environment\n\t * @submodule Environment\n\t * @for p5\n\t * @requires core\n\t * @requires constants\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('./core');\n\tvar C = _dereq_('./constants');\n\t\n\tvar standardCursors = [C.ARROW, C.CROSS, C.HAND, C.MOVE, C.TEXT, C.WAIT];\n\t\n\tp5.prototype._frameRate = 0;\n\tp5.prototype._lastFrameTime = window.performance.now();\n\tp5.prototype._targetFrameRate = 60;\n\t\n\tvar _windowPrint = window.print;\n\t\n\t\n\tif (window.console && console.log) {\n\t  /**\n\t   * The print() function writes to the console area of your browser.\n\t   * This function is often helpful for looking at the data a program is\n\t   * producing. This function creates a new line of text for each call to\n\t   * the function. Individual elements can be\n\t   * separated with quotes (\"\") and joined with the addition operator (+).\n\t   * <br><br>\n\t   * While print() is similar to console.log(), it does not directly map to\n\t   * it in order to simulate easier to understand behavior than\n\t   * console.log(). Due to this, it is slower. For fastest results, use\n\t   * console.log().\n\t   *\n\t   * @method print\n\t   * @param {Any} contents any combination of Number, String, Object, Boolean,\n\t   *                       Array to print\n\t   * @example\n\t   * <div><code class='norender'>\n\t   * var x = 10;\n\t   * print(\"The value of x is \" + x);\n\t   * // prints \"The value of x is 10\"\n\t   * </code></div>\n\t   * @alt\n\t   * default grey canvas\n\t   */\n\t  // Converts passed args into a string and then parses that string to\n\t  // simulate synchronous behavior. This is a hack and is gross.\n\t  // Since this will not work on all objects, particularly circular\n\t  // structures, simply console.log() on error.\n\t  p5.prototype.print = function(args) {\n\t    try {\n\t      if (arguments.length === 0) {\n\t        _windowPrint();\n\t      }\n\t      else if (arguments.length > 1) {\n\t        console.log.apply(console, arguments);\n\t      } else {\n\t        var newArgs = JSON.parse(JSON.stringify(args));\n\t        console.log(newArgs);\n\t      }\n\t    } catch(err) {\n\t      console.log(args);\n\t    }\n\t  };\n\t} else {\n\t  p5.prototype.print = function() {};\n\t}\n\t\n\t\n\t/**\n\t * The system variable frameCount contains the number of frames that have\n\t * been displayed since the program started. Inside setup() the value is 0,\n\t * after the first iteration of draw it is 1, etc.\n\t *\n\t * @property frameCount\n\t * @example\n\t *   <div><code>\n\t *     function setup() {\n\t *       frameRate(30);\n\t *       textSize(20);\n\t *       textSize(30);\n\t *       textAlign(CENTER);\n\t *     }\n\t *\n\t *     function draw() {\n\t *       background(200);\n\t *       text(frameCount, width/2, height/2);\n\t *     }\n\t *   </code></div>\n\t *\n\t * @alt\n\t * numbers rapidly counting upward with frame count set to 30.\n\t *\n\t */\n\tp5.prototype.frameCount = 0;\n\t\n\t/**\n\t * Confirms if the window a p5.js program is in is \"focused,\" meaning that\n\t * the sketch will accept mouse or keyboard input. This variable is\n\t * \"true\" if the window is focused and \"false\" if not.\n\t *\n\t * @property focused\n\t * @example\n\t * <div><code>\n\t * // To demonstrate, put two windows side by side.\n\t * // Click on the window that the p5 sketch isn't in!\n\t * function draw() {\n\t *   background(200);\n\t *   noStroke();\n\t *   fill(0, 200, 0);\n\t *   ellipse(25, 25, 50, 50);\n\t *\n\t *   if (!focused) {  // or \"if (focused === false)\"\n\t *     stroke(200,0,0);\n\t *     line(0, 0, 100, 100);\n\t *     line(100, 0, 0, 100);\n\t *   }\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * green 50x50 ellipse at top left. Red X covers canvas when page focus changes\n\t *\n\t */\n\tp5.prototype.focused = (document.hasFocus());\n\t\n\t/**\n\t * Sets the cursor to a predefined symbol or an image, or makes it visible\n\t * if already hidden. If you are trying to set an image as the cursor, the\n\t * recommended size is 16x16 or 32x32 pixels. It is not possible to load an\n\t * image as the cursor if you are exporting your program for the Web, and not\n\t * all MODES work with all browsers. The values for parameters x and y must\n\t * be less than the dimensions of the image.\n\t *\n\t * @method cursor\n\t * @param {Number/Constant} type either ARROW, CROSS, HAND, MOVE, TEXT, or\n\t *                               WAIT, or path for image\n\t * @param {Number}          [x]  the horizontal active spot of the cursor\n\t * @param {Number}          [y]  the vertical active spot of the cursor\n\t * @example\n\t * <div><code>\n\t * // Move the mouse left and right across the image\n\t * // to see the cursor change from a cross to a hand\n\t * function draw() {\n\t *   line(width/2, 0, width/2, height);\n\t *   if (mouseX < 50) {\n\t *     cursor(CROSS);\n\t *   } else {\n\t *     cursor(HAND);\n\t *   }\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * horizontal line divides canvas. cursor on left is a cross, right is hand.\n\t *\n\t */\n\tp5.prototype.cursor = function(type, x, y) {\n\t  var cursor = 'auto';\n\t  var canvas = this._curElement.elt;\n\t  if (standardCursors.indexOf(type) > -1) {\n\t    // Standard css cursor\n\t    cursor = type;\n\t  } else if (typeof type === 'string') {\n\t    var coords = '';\n\t    if (x && y && (typeof x === 'number' && typeof y === 'number')) {\n\t      // Note that x and y values must be unit-less positive integers < 32\n\t      // https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\n\t      coords = x + ' ' + y;\n\t    }\n\t    if (type.substring(0, 6) !== 'http://') {\n\t      // Image (absolute url)\n\t      cursor = 'url(' + type + ') ' + coords + ', auto';\n\t    } else if (/\\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(type)) {\n\t      // Image file (relative path) - Separated for performance reasons\n\t      cursor = 'url(' + type + ') ' + coords + ', auto';\n\t    } else {\n\t      // Any valid string for the css cursor property\n\t      cursor = type;\n\t    }\n\t  }\n\t  canvas.style.cursor = cursor;\n\t};\n\t\n\t/**\n\t * Specifies the number of frames to be displayed every second. For example,\n\t * the function call frameRate(30) will attempt to refresh 30 times a second.\n\t * If the processor is not fast enough to maintain the specified rate, the\n\t * frame rate will not be achieved. Setting the frame rate within setup() is\n\t * recommended. The default rate is 60 frames per second. This is the same as\n\t * setFrameRate(val).\n\t * <br><br>\n\t * Calling frameRate() with no arguments returns the current framerate. This\n\t * is the same as getFrameRate().\n\t * <br><br>\n\t * Calling frameRate() with arguments that are not of the type numbers\n\t * or are non positive also returns current framerate.\n\t *\n\t * @method frameRate\n\t * @param  {Number} [fps] number of frames to be displayed every second\n\t * @return {Number}       current frameRate\n\t * @example\n\t *\n\t * <div><code>\n\t * var rectX = 0;\n\t * var fr = 30; //starting FPS\n\t * var clr;\n\t *\n\t * function setup() {\n\t *   background(200);\n\t *   frameRate(fr); // Attempt to refresh at starting FPS\n\t *   clr = color(255,0,0);\n\t * }\n\t *\n\t * function draw() {\n\t *   background(200);\n\t *   rectX = rectX += 1; // Move Rectangle\n\t *\n\t *   if (rectX >= width) { // If you go off screen.\n\t *     if (fr == 30) {\n\t *       clr = color(0,0,255);\n\t *       fr = 10;\n\t *       frameRate(fr); // make frameRate 10 FPS\n\t *     } else {\n\t *       clr = color(255,0,0);\n\t *       fr = 30;\n\t *       frameRate(fr); // make frameRate 30 FPS\n\t *     }\n\t *     rectX = 0;\n\t *   }\n\t *   fill(clr);\n\t *   rect(rectX, 40, 20,20);\n\t * }\n\t * </div></code>\n\t *\n\t * @alt\n\t * blue rect moves left to right, followed by red rect moving faster. Loops.\n\t *\n\t */\n\tp5.prototype.frameRate = function(fps) {\n\t  if (typeof fps !== 'number' || fps <= 0) {\n\t    return this._frameRate;\n\t  } else {\n\t    this._setProperty('_targetFrameRate', fps);\n\t    this._runFrames();\n\t    return this;\n\t  }\n\t};\n\t/**\n\t * Returns the current framerate.\n\t *\n\t * @return {Number} current frameRate\n\t */\n\tp5.prototype.getFrameRate = function() {\n\t  return this.frameRate();\n\t};\n\t\n\t/**\n\t * Specifies the number of frames to be displayed every second. For example,\n\t * the function call frameRate(30) will attempt to refresh 30 times a second.\n\t * If the processor is not fast enough to maintain the specified rate, the\n\t * frame rate will not be achieved. Setting the frame rate within setup() is\n\t * recommended. The default rate is 60 frames per second.\n\t *\n\t * Calling frameRate() with no arguments returns the current framerate.\n\t *\n\t * @param {Number} [fps] number of frames to be displayed every second\n\t */\n\tp5.prototype.setFrameRate = function(fps) {\n\t  return this.frameRate(fps);\n\t};\n\t\n\t/**\n\t * Hides the cursor from view.\n\t *\n\t * @method noCursor\n\t * @example\n\t * <div><code>\n\t * function setup() {\n\t *   noCursor();\n\t * }\n\t *\n\t * function draw() {\n\t *   background(200);\n\t *   ellipse(mouseX, mouseY, 10, 10);\n\t * }\n\t * </code></div>\n\t *\n\t *\n\t * @alt\n\t * cursor becomes 10x 10 white ellipse the moves with mouse x and y.\n\t *\n\t */\n\tp5.prototype.noCursor = function() {\n\t  this._curElement.elt.style.cursor = 'none';\n\t};\n\t\n\t\n\t/**\n\t * System variable that stores the width of the entire screen display. This\n\t * is used to run a full-screen program on any display size.\n\t *\n\t * @property displayWidth\n\t * @example\n\t * <div class=\"norender\"><code>\n\t * createCanvas(displayWidth, displayHeight);\n\t * </code></div>\n\t *\n\t * @alt\n\t * cursor becomes 10x 10 white ellipse the moves with mouse x and y.\n\t *\n\t */\n\tp5.prototype.displayWidth = screen.width;\n\t\n\t/**\n\t * System variable that stores the height of the entire screen display. This\n\t * is used to run a full-screen program on any display size.\n\t *\n\t * @property displayHeight\n\t * @example\n\t * <div class=\"norender\"><code>\n\t * createCanvas(displayWidth, displayHeight);\n\t * </code></div>\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.prototype.displayHeight = screen.height;\n\t\n\t/**\n\t * System variable that stores the width of the inner window, it maps to\n\t * window.innerWidth.\n\t *\n\t * @property windowWidth\n\t * @example\n\t * <div class=\"norender\"><code>\n\t * createCanvas(windowWidth, windowHeight);\n\t * </code></div>\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.prototype.windowWidth = getWindowWidth();\n\t/**\n\t * System variable that stores the height of the inner window, it maps to\n\t * window.innerHeight.\n\t *\n\t * @property windowHeight\n\t * @example\n\t * <div class=\"norender\"><code>\n\t * createCanvas(windowWidth, windowHeight);\n\t * </code></div>\n\t*@alt\n\t * no display.\n\t *\n\t*/\n\tp5.prototype.windowHeight = getWindowHeight();\n\t\n\t/**\n\t * The windowResized() function is called once every time the browser window\n\t * is resized. This is a good place to resize the canvas or do any other\n\t * adjustements to accomodate the new window size.\n\t *\n\t * @method windowResized\n\t * @example\n\t * <div class=\"norender\"><code>\n\t * function setup() {\n\t *   createCanvas(windowWidth, windowHeight);\n\t * }\n\t *\n\t * function draw() {\n\t *  background(0, 100, 200);\n\t * }\n\t *\n\t * function windowResized() {\n\t *   resizeCanvas(windowWidth, windowHeight);\n\t * }\n\t * </code></div>\n\t * @alt\n\t * no display.\n\t */\n\tp5.prototype._onresize = function(e){\n\t  this._setProperty('windowWidth', getWindowWidth());\n\t  this._setProperty('windowHeight', getWindowHeight());\n\t  var context = this._isGlobal ? window : this;\n\t  var executeDefault;\n\t  if (typeof context.windowResized === 'function') {\n\t    executeDefault = context.windowResized(e);\n\t    if (executeDefault !== undefined && !executeDefault) {\n\t      e.preventDefault();\n\t    }\n\t  }\n\t};\n\t\n\tfunction getWindowWidth() {\n\t  return window.innerWidth ||\n\t         document.documentElement && document.documentElement.clientWidth ||\n\t         document.body && document.body.clientWidth ||\n\t         0;\n\t}\n\t\n\tfunction getWindowHeight() {\n\t  return window.innerHeight ||\n\t         document.documentElement && document.documentElement.clientHeight ||\n\t         document.body && document.body.clientHeight ||\n\t         0;\n\t}\n\t\n\t/**\n\t * System variable that stores the width of the drawing canvas. This value\n\t * is set by the first parameter of the createCanvas() function.\n\t * For example, the function call createCanvas(320, 240) sets the width\n\t * variable to the value 320. The value of width defaults to 100 if\n\t * createCanvas() is not used in a program.\n\t *\n\t * @property width\n\t */\n\tp5.prototype.width = 0;\n\t\n\t/**\n\t * System variable that stores the height of the drawing canvas. This value\n\t * is set by the second parameter of the createCanvas() function. For\n\t * example, the function call createCanvas(320, 240) sets the height\n\t * variable to the value 240. The value of height defaults to 100 if\n\t * createCanvas() is not used in a program.\n\t *\n\t * @property height\n\t */\n\tp5.prototype.height = 0;\n\t\n\t/**\n\t * If argument is given, sets the sketch to fullscreen or not based on the\n\t * value of the argument. If no argument is given, returns the current\n\t * fullscreen state. Note that due to browser restrictions this can only\n\t * be called on user input, for example, on mouse press like the example\n\t * below.\n\t *\n\t * @method fullscreen\n\t * @param  {Boolean} [val] whether the sketch should be in fullscreen mode\n\t * or not\n\t * @return {Boolean} current fullscreen state\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Clicking in the box toggles fullscreen on and off.\n\t * function setup() {\n\t *   background(200);\n\t * }\n\t * function mousePressed() {\n\t *   if (mouseX > 0 && mouseX < 100 && mouseY > 0 && mouseY < 100) {\n\t *     var fs = fullscreen();\n\t *     fullscreen(!fs);\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.prototype.fullscreen = function(val) {\n\t  // no arguments, return fullscreen or not\n\t  if (typeof val === 'undefined') {\n\t    return document.fullscreenElement ||\n\t           document.webkitFullscreenElement ||\n\t           document.mozFullScreenElement ||\n\t           document.msFullscreenElement;\n\t  } else { // otherwise set to fullscreen or not\n\t    if (val) {\n\t      launchFullscreen(document.documentElement);\n\t    } else {\n\t      exitFullscreen();\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Sets the pixel scaling for high pixel density displays. By default\n\t * pixel density is set to match display density, call pixelDensity(1)\n\t * to turn this off. Calling pixelDensity() with no arguments returns\n\t * the current pixel density of the sketch.\n\t *\n\t *\n\t * @method pixelDensity\n\t * @param  {Number} [val] whether or how much the sketch should scale\n\t * @returns {Number} current pixel density of the sketch\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup() {\n\t *   pixelDensity(1);\n\t *   createCanvas(100, 100);\n\t *   background(200);\n\t *   ellipse(width/2, height/2, 50, 50);\n\t * }\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * function setup() {\n\t *   pixelDensity(3.0);\n\t *   createCanvas(100, 100);\n\t *   background(200);\n\t *   ellipse(width/2, height/2, 50, 50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * fuzzy 50x50 white ellipse with black outline in center of canvas.\n\t * sharp 50x50 white ellipse with black outline in center of canvas.\n\t */\n\tp5.prototype.pixelDensity = function(val) {\n\t  if (typeof val === 'number') {\n\t    this._pixelDensity = val;\n\t  } else {\n\t    return this._pixelDensity;\n\t  }\n\t  this.resizeCanvas(this.width, this.height, true);\n\t};\n\t\n\t/**\n\t * Returns the pixel density of the current display the sketch is running on.\n\t *\n\t * @method displayDensity\n\t * @returns {Number} current pixel density of the display\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup() {\n\t *   var density = displayDensity();\n\t *   pixelDensity(density);\n\t *   createCanvas(100, 100);\n\t *   background(200);\n\t *   ellipse(width/2, height/2, 50, 50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 50x50 white ellipse with black outline in center of canvas.\n\t */\n\tp5.prototype.displayDensity = function() {\n\t  return window.devicePixelRatio;\n\t};\n\t\n\tfunction launchFullscreen(element) {\n\t  var enabled = document.fullscreenEnabled ||\n\t                document.webkitFullscreenEnabled ||\n\t                document.mozFullScreenEnabled ||\n\t                document.msFullscreenEnabled;\n\t  if (!enabled) {\n\t    throw new Error('Fullscreen not enabled in this browser.');\n\t  }\n\t  if(element.requestFullscreen) {\n\t    element.requestFullscreen();\n\t  } else if(element.mozRequestFullScreen) {\n\t    element.mozRequestFullScreen();\n\t  } else if(element.webkitRequestFullscreen) {\n\t    element.webkitRequestFullscreen();\n\t  } else if(element.msRequestFullscreen) {\n\t    element.msRequestFullscreen();\n\t  }\n\t}\n\t\n\tfunction exitFullscreen() {\n\t  if(document.exitFullscreen) {\n\t    document.exitFullscreen();\n\t  } else if(document.mozCancelFullScreen) {\n\t    document.mozCancelFullScreen();\n\t  } else if(document.webkitExitFullscreen) {\n\t    document.webkitExitFullscreen();\n\t  } else if (document.msExitFullscreen) {\n\t    document.msExitFullscreen();\n\t  }\n\t}\n\t\n\t\n\t/**\n\t * Gets the current URL.\n\t * @method getURL\n\t * @return {String} url\n\t * @example\n\t * <div>\n\t * <code>\n\t * var url;\n\t * var x = 100;\n\t *\n\t * function setup() {\n\t *   fill(0);\n\t *   noStroke();\n\t *   url = getURL();\n\t * }\n\t *\n\t * function draw() {\n\t *   background(200);\n\t *   text(url, x, height/2);\n\t *   x--;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * current url (http://p5js.org/reference/#/p5/getURL) moves right to left.\n\t *\n\t */\n\tp5.prototype.getURL = function() {\n\t  return location.href;\n\t};\n\t/**\n\t * Gets the current URL path as an array.\n\t * @method getURLPath\n\t * @return {Array} path components\n\t * @example\n\t * <div class='norender'><code>\n\t * function setup() {\n\t *   var urlPath = getURLPath();\n\t *   for (var i=0; i&lt;urlPath.length; i++) {\n\t *     text(urlPath[i], 10, i*20+20);\n\t *   }\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t *no display\n\t *\n\t */\n\tp5.prototype.getURLPath = function() {\n\t  return location.pathname.split('/').filter(function(v){return v!=='';});\n\t};\n\t/**\n\t * Gets the current URL params as an Object.\n\t * @method getURLParams\n\t * @return {Object} URL params\n\t * @example\n\t * <div class='norender'>\n\t * <code>\n\t * // Example: http://p5js.org?year=2014&month=May&day=15\n\t *\n\t * function setup() {\n\t *   var params = getURLParams();\n\t *   text(params.day, 10, 20);\n\t *   text(params.month, 10, 40);\n\t *   text(params.year, 10, 60);\n\t * }\n\t * </code>\n\t * </div>\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.prototype.getURLParams = function() {\n\t  var re = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim;\n\t  var m;\n\t  var v={};\n\t  while ((m = re.exec(location.search)) != null) {\n\t    if (m.index === re.lastIndex) {\n\t      re.lastIndex++;\n\t    }\n\t    v[m[1]]=m[2];\n\t  }\n\t  return v;\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"./constants\":36,\"./core\":37}],40:[function(_dereq_,module,exports){\n\t/**\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('./core');\n\tvar doFriendlyWelcome = false; // TEMP until we get it all working LM\n\t\n\t// -- Borrowed from jQuery 1.11.3 --\n\tvar class2type = {};\n\tvar toString = class2type.toString;\n\tvar names = ['Boolean', 'Number', 'String', 'Function',\n\t             'Array', 'Date', 'RegExp', 'Object', 'Error'];\n\tfor (var n=0; n<names.length; n++) {\n\t  class2type[ '[object ' + names[n] + ']' ] = names[n].toLowerCase();\n\t}\n\tvar getType = function( obj ) {\n\t  if ( obj == null ) {\n\t    return obj + '';\n\t  }\n\t  return typeof obj === 'object' || typeof obj === 'function' ?\n\t    class2type[ toString.call(obj) ] || 'object' :\n\t    typeof obj;\n\t};\n\tvar isArray = Array.isArray || function( obj ) {\n\t  return getType(obj) === 'array';\n\t};\n\tvar isNumeric =function( obj ) {\n\t  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t  // ...but misinterprets leading-number strings, particularly hex literals\n\t  // subtraction forces infinities to NaN\n\t  // adding 1 corrects loss of precision from parseFloat (#15100)\n\t  return !isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;\n\t};\n\t// -- End borrow --\n\t\n\t/**\n\t * Checks the definition type against the argument type\n\t * If any of these passes (in order), it matches:\n\t *\n\t * - p5.* definitions are checked with instanceof\n\t * - Booleans are let through (everything is truthy or falsey)\n\t * - Lowercase of the definition is checked against the js type\n\t * - Number types are checked to see if they are numerically castable\n\t */\n\tvar numberTypes = ['Number', 'Integer', 'Number/Constant'];\n\tfunction typeMatches(defType, argType, arg) {\n\t  if(defType.match(/^p5\\./)) {\n\t    var parts = defType.split('.');\n\t    return arg instanceof p5[parts[1]];\n\t  }\n\t  return defType === 'Boolean' || // Anything is truthy, cover in Debug Guide\n\t    (defType.toLowerCase() === argType) ||\n\t    (numberTypes.indexOf(defType) > -1 && isNumeric(arg));\n\t}\n\t\n\t/**\n\t * Prints out a fancy, colorful message to the console log\n\t *\n\t * @param  {String}               message the words to be said\n\t * @param  {String}               func    the name of the function to link\n\t * @param  {Integer/Color String} color   CSS color string or error type\n\t *\n\t * @return console logs\n\t */\n\t// Wrong number of params, undefined param, wrong type\n\tvar PARAM_COUNT = 0;\n\tvar EMPTY_VAR = 1;\n\tvar WRONG_TYPE = 2;\n\tvar FILE_LOAD = 3;\n\t// p5.js blue, p5.js orange, auto dark green; fallback p5.js darkened magenta\n\t// See testColors below for all the color codes and names\n\tvar typeColors = ['#2D7BB6', '#EE9900', '#4DB200', '#C83C00'];\n\tfunction report(message, func, color) {\n\t  if(doFriendlyWelcome){\n\t    friendlyWelcome();\n\t    doFriendlyWelcome =false;\n\t  }\n\t  if ('undefined' === getType(color)) {\n\t    color   = '#B40033'; // dark magenta\n\t  } else if (getType(color) === 'number') { // Type to color\n\t    color = typeColors[color];\n\t  }\n\t  // LM TEMP commenting this out until we get the whole system working\n\t  // if (func.substring(0,4) === 'load'){\n\t  //   console.log(\n\t  //     '%c> p5.js says: '+message+'%c'+\n\t  //     '[https://github.com/processing/p5.js/wiki/Local-server]',\n\t  //     'background-color:' + color + ';color:#FFF;',\n\t  //     'background-color:transparent;color:' + color +';',\n\t  //     'background-color:' + color + ';color:#FFF;',\n\t  //     'background-color:transparent;color:' + color +';'\n\t  //   );\n\t  // }\n\t  // else{\n\t  //   console.log(\n\t  //     '%c> p5.js says: '+message+'%c [http://p5js.org/reference/#p5/'+func+\n\t  //     ']', 'background-color:' + color + ';color:#FFF;',\n\t  //     'background-color:transparent;color:' + color +';'\n\t  //   );\n\t  // }\n\t}\n\t\n\t/**\n\t * Validate all the parameters of a function for number and type\n\t * NOTE THIS FUNCTION IS TEMPORARILY DISABLED UNTIL FURTHER WORK\n\t * AND UPDATES ARE IMPLEMENTED. -LMCCART\n\t *\n\t * @param  {String} func  name of function we're checking\n\t * @param  {Array}  args  pass of the JS default arguments array\n\t * @param  {Array}  types List of types accepted ['Number', 'String, ...] OR\n\t *                        a list of lists for each format: [\n\t *                          ['String', 'Number', 'Number'],\n\t *                          ['String', 'Number', 'Number', 'Number', 'Number'\n\t *                        ]\n\t *\n\t * @return console logs\n\t */\n\tp5.prototype._validateParameters = function(func, args, types) {\n\t  if (!isArray(types[0])) {\n\t    types = [types];\n\t  }\n\t  // Check number of parameters\n\t  // Example: \"You wrote ellipse(X,X,X). ellipse was expecting 4\n\t  //          parameters. Try ellipse(X,X,X,X).\"\n\t  var diff = Math.abs(args.length-types[0].length);\n\t  var message, tindex = 0;\n\t  for (var i=1, len=types.length; i<len; i++) {\n\t    var d = Math.abs(args.length-types[i].length);\n\t    if (d <= diff) {\n\t      tindex = i;\n\t      diff = d;\n\t    }\n\t  }\n\t  var symbol = 'X'; // Parameter placeholder\n\t  if(diff > 0) {\n\t    message = 'You wrote ' + func + '(';\n\t    // Concat an appropriate number of placeholders for call\n\t    if (args.length > 0) {\n\t      message += symbol + Array(args.length).join(',' + symbol);\n\t    }\n\t    message += '). ' + func + ' was expecting ' + types[tindex].length +\n\t      ' parameters. Try ' + func + '(';\n\t    // Concat an appropriate number of placeholders for definition\n\t    if (types[tindex].length > 0) {\n\t      message += symbol + Array(types[tindex].length).join(',' + symbol);\n\t    }\n\t    message += ').';\n\t    // If multiple definitions\n\t    if (types.length > 1) {\n\t      message += ' ' + func + ' takes different numbers of parameters ' +\n\t        'depending on what you want to do. Click this link to learn more: ';\n\t    }\n\t    report(message, func, PARAM_COUNT);\n\t  }\n\t  // Type checking\n\t  // Example: \"It looks like ellipse received an empty variable in spot #2.\"\n\t  // Example: \"ellipse was expecting a number for parameter #1,\n\t  //           received \"foo\" instead.\"\n\t  for (var format=0; format<types.length; format++) {\n\t    for (var p=0; p < types[format].length && p < args.length; p++) {\n\t      var defType = types[format][p];\n\t      var argType = getType(args[p]);\n\t      if ('undefined' === argType || null === argType) {\n\t        report('It looks like ' + func +\n\t          ' received an empty variable in spot #' + (p+1) +\n\t          '. If not intentional, this is often a problem with scope: ' +\n\t          '[link to scope].', func, EMPTY_VAR);\n\t      } else if (defType !== '*' && !typeMatches(defType, argType, args[p])) {\n\t        message = func + ' was expecting a ' + defType.toLowerCase() +\n\t          ' for parameter #' + (p+1) + ', received ';\n\t        // Wrap strings in quotes\n\t        message += 'string' === argType ? '\"' + args[p] + '\"' : args[p];\n\t        message += ' instead.';\n\t        // If multiple definitions\n\t        if (types.length > 1) {\n\t          message += ' ' + func + ' takes different numbers of parameters ' +\n\t            'depending on what you want to do. ' +\n\t            'Click this link to learn more:';\n\t        }\n\t        report(message, func, WRONG_TYPE);\n\t      }\n\t    }\n\t  }\n\t};\n\t/*\n\t * NOTE THIS FUNCTION IS TEMPORARILY DISABLED UNTIL FURTHER WORK\n\t * AND UPDATES ARE IMPLEMENTED. -LMCCART\n\t */\n\tp5.prototype._validateParameters = function() {\n\t  return true;\n\t};\n\t\n\tvar errorCases = {\n\t  '0': {\n\t    fileType: 'image',\n\t    method: 'loadImage',\n\t    message: ' hosting the image online,'\n\t  },\n\t  '1': {\n\t    fileType: 'XML file',\n\t    method: 'loadXML'\n\t  },\n\t  '2': {\n\t    fileType: 'table file',\n\t    method: 'loadTable'\n\t  },\n\t  '3': {\n\t    fileType: 'text file',\n\t    method: 'loadStrings'\n\t  },\n\t  '4': {\n\t    fileType: 'font',\n\t    method: 'loadFont',\n\t    message: ' hosting the font online,'\n\t  },\n\t};\n\tp5._friendlyFileLoadError = function (errorType, filePath) {\n\t  var errorInfo = errorCases[ errorType ];\n\t  var message = 'It looks like there was a problem' +\n\t  ' loading your ' + errorInfo.fileType + '.' +\n\t  ' Try checking if the file path%c [' + filePath + '] %cis correct,' +\n\t  (errorInfo.message || '') + ' or running a local server.';\n\t  report(message, errorInfo.method, FILE_LOAD);\n\t};\n\t\n\tfunction friendlyWelcome() {\n\t  // p5.js brand - magenta: #ED225D\n\t  var astrixBgColor = 'transparent';\n\t  var astrixTxtColor = '#ED225D';\n\t  var welcomeBgColor = '#ED225D';\n\t  var welcomeTextColor = 'white';\n\t  console.log(\n\t  '%c    _ \\n'+\n\t  ' /\\\\| |/\\\\ \\n'+\n\t  ' \\\\ ` \\' /  \\n'+\n\t  ' / , . \\\\  \\n'+\n\t  ' \\\\/|_|\\\\/ '+\n\t  '\\n\\n%c> p5.js says: Welcome! '+\n\t  'This is your friendly debugger. ' +\n\t  'To turn me off switch to using “p5.min.js”.',\n\t  'background-color:'+astrixBgColor+';color:' + astrixTxtColor +';',\n\t  'background-color:'+welcomeBgColor+';color:' + welcomeTextColor +';'\n\t  );\n\t}\n\t\n\t/**\n\t * Prints out all the colors in the color pallete with white text.\n\t * For color blindness testing.\n\t */\n\t/* function testColors() {\n\t  var str = 'A box of biscuits, a box of mixed biscuits and a biscuit mixer';\n\t  report(str, 'print', '#ED225D'); // p5.js magenta\n\t  report(str, 'print', '#2D7BB6'); // p5.js blue\n\t  report(str, 'print', '#EE9900'); // p5.js orange\n\t  report(str, 'print', '#A67F59'); // p5.js light brown\n\t  report(str, 'print', '#704F21'); // p5.js gold\n\t  report(str, 'print', '#1CC581'); // auto cyan\n\t  report(str, 'print', '#FF6625'); // auto orange\n\t  report(str, 'print', '#79EB22'); // auto green\n\t  report(str, 'print', '#B40033'); // p5.js darkened magenta\n\t  report(str, 'print', '#084B7F'); // p5.js darkened blue\n\t  report(str, 'print', '#945F00'); // p5.js darkened orange\n\t  report(str, 'print', '#6B441D'); // p5.js darkened brown\n\t  report(str, 'print', '#2E1B00'); // p5.js darkened gold\n\t  report(str, 'print', '#008851'); // auto dark cyan\n\t  report(str, 'print', '#C83C00'); // auto dark orange\n\t  report(str, 'print', '#4DB200'); // auto dark green\n\t} */\n\t\n\t// This is a lazily-defined list of p5 symbols that may be\n\t// misused by beginners at top-level code, outside of setup/draw. We'd like\n\t// to detect these errors and help the user by suggesting they move them\n\t// into setup/draw.\n\t//\n\t// For more details, see https://github.com/processing/p5.js/issues/1121.\n\tvar misusedAtTopLevelCode = null;\n\tvar FAQ_URL = 'https://github.com/processing/p5.js/wiki/' +\n\t              'Frequently-Asked-Questions' +\n\t              '#why-cant-i-assign-variables-using-p5-functions-and-' +\n\t              'variables-before-setup';\n\t\n\tfunction defineMisusedAtTopLevelCode() {\n\t  var uniqueNamesFound = {};\n\t\n\t  var getSymbols = function(obj) {\n\t    return Object.getOwnPropertyNames(obj).filter(function(name) {\n\t      if (name[0] === '_') {\n\t        return false;\n\t      }\n\t      if (name in uniqueNamesFound) {\n\t        return false;\n\t      }\n\t\n\t      uniqueNamesFound[name] = true;\n\t\n\t      return true;\n\t    }).map(function(name) {\n\t      var type;\n\t\n\t      if (typeof(obj[name]) === 'function') {\n\t        type = 'function';\n\t      } else if (name === name.toUpperCase()) {\n\t        type = 'constant';\n\t      } else {\n\t        type = 'variable';\n\t      }\n\t\n\t      return {name: name, type: type};\n\t    });\n\t  };\n\t\n\t  misusedAtTopLevelCode = [].concat(\n\t    getSymbols(p5.prototype),\n\t    // At present, p5 only adds its constants to p5.prototype during\n\t    // construction, which may not have happened at the time a\n\t    // ReferenceError is thrown, so we'll manually add them to our list.\n\t    getSymbols(_dereq_('./constants'))\n\t  );\n\t\n\t  // This will ultimately ensure that we report the most specific error\n\t  // possible to the user, e.g. advising them about HALF_PI instead of PI\n\t  // when their code misuses the former.\n\t  misusedAtTopLevelCode.sort(function(a, b) {\n\t    return b.name.length - a.name.length;\n\t  });\n\t}\n\t\n\tfunction helpForMisusedAtTopLevelCode(e, log) {\n\t  if (!log) {\n\t    log = console.log.bind(console);\n\t  }\n\t\n\t  if (!misusedAtTopLevelCode) {\n\t    defineMisusedAtTopLevelCode();\n\t  }\n\t\n\t  // If we find that we're logging lots of false positives, we can\n\t  // uncomment the following code to avoid displaying anything if the\n\t  // user's code isn't likely to be using p5's global mode. (Note that\n\t  // setup/draw are more likely to be defined due to JS function hoisting.)\n\t  //\n\t  //if (!('setup' in window || 'draw' in window)) {\n\t  //  return;\n\t  //}\n\t\n\t  misusedAtTopLevelCode.some(function(symbol) {\n\t    // Note that while just checking for the occurrence of the\n\t    // symbol name in the error message could result in false positives,\n\t    // a more rigorous test is difficult because different browsers\n\t    // log different messages, and the format of those messages may\n\t    // change over time.\n\t    //\n\t    // For example, if the user uses 'PI' in their code, it may result\n\t    // in any one of the following messages:\n\t    //\n\t    //   * 'PI' is undefined                           (Microsoft Edge)\n\t    //   * ReferenceError: PI is undefined             (Firefox)\n\t    //   * Uncaught ReferenceError: PI is not defined  (Chrome)\n\t\n\t    if (e.message && e.message.indexOf(symbol.name) !== -1) {\n\t      log('%cDid you just try to use p5.js\\'s ' + symbol.name +\n\t          (symbol.type === 'function' ? '() ' : ' ') + symbol.type +\n\t          '? If so, you may want to ' +\n\t          'move it into your sketch\\'s setup() function.\\n\\n' +\n\t          'For more details, see: ' + FAQ_URL,\n\t          'color: #B40033' /* Dark magenta */);\n\t      return true;\n\t    }\n\t  });\n\t}\n\t\n\t// Exposing this primarily for unit testing.\n\tp5.prototype._helpForMisusedAtTopLevelCode = helpForMisusedAtTopLevelCode;\n\t\n\tif (document.readyState !== 'complete') {\n\t  window.addEventListener('error', helpForMisusedAtTopLevelCode, false);\n\t\n\t  // Our job is only to catch ReferenceErrors that are thrown when\n\t  // global (non-instance mode) p5 APIs are used at the top-level\n\t  // scope of a file, so we'll unbind our error listener now to make\n\t  // sure we don't log false positives later.\n\t  window.addEventListener('load', function() {\n\t    window.removeEventListener('error', helpForMisusedAtTopLevelCode, false);\n\t  });\n\t}\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"./constants\":36,\"./core\":37}],41:[function(_dereq_,module,exports){\n\t/**\n\t * @module DOM\n\t * @submodule DOM\n\t * @for p5.Element\n\t */\n\t\n\tvar p5 = _dereq_('./core');\n\t\n\t/**\n\t * Base class for all elements added to a sketch, including canvas,\n\t * graphics buffers, and other HTML elements. Methods in blue are\n\t * included in the core functionality, methods in brown are added\n\t * with the <a href=\"http://p5js.org/reference/#/libraries/p5.dom\">p5.dom\n\t * library</a>.\n\t * It is not called directly, but p5.Element\n\t * objects are created by calling createCanvas, createGraphics,\n\t * or in the p5.dom library, createDiv, createImg, createInput, etc.\n\t *\n\t * @class p5.Element\n\t * @constructor\n\t * @param {String} elt DOM node that is wrapped\n\t * @param {Object} [pInst] pointer to p5 instance\n\t */\n\tp5.Element = function(elt, pInst) {\n\t  /**\n\t   * Underlying HTML element. All normal HTML methods can be called on this.\n\t   *\n\t   * @property elt\n\t   */\n\t  this.elt = elt;\n\t  this._pInst = pInst;\n\t  this._events = {};\n\t  this.width = this.elt.offsetWidth;\n\t  this.height = this.elt.offsetHeight;\n\t};\n\t\n\t/**\n\t *\n\t * Attaches the element to the parent specified. A way of setting\n\t * the container for the element. Accepts either a string ID, DOM\n\t * node, or p5.Element. If no arguments given, parent node is returned.\n\t * For more ways to position the canvas, see the\n\t * <a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>\n\t * positioning the canvas</a> wiki page.\n\t *\n\t * @method parent\n\t * @param  {String|Object} parent the ID, DOM node, or p5.Element\n\t *                         of desired parent element\n\t * @return {p5.Element}\n\t * @example\n\t * <div class=\"norender\"><code>\n\t * // in the html file:\n\t * &lt;div id=\"myContainer\">&lt;/div>\n\t * // in the js file:\n\t * var cnv = createCanvas(100, 100);\n\t * cnv.parent(\"myContainer\");\n\t * </code></div>\n\t * <div class='norender'><code>\n\t * var div0 = createDiv('this is the parent');\n\t * var div1 = createDiv('this is the child');\n\t * div1.parent(div0); // use p5.Element\n\t * </code></div>\n\t * <div class='norender'><code>\n\t * var div0 = createDiv('this is the parent');\n\t * div0.id('apples');\n\t * var div1 = createDiv('this is the child');\n\t * div1.parent('apples'); // use id\n\t * </code></div>\n\t * <div class='norender'><code>\n\t * var elt = document.getElementById('myParentDiv');\n\t * var div1 = createDiv('this is the child');\n\t * div1.parent(elt); // use element from page\n\t * </code></div>\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.parent = function(p) {\n\t  if (arguments.length === 0){\n\t    return this.elt.parentNode;\n\t  } else {\n\t    if (typeof p === 'string') {\n\t      if (p[0] === '#') {\n\t        p = p.substring(1);\n\t      }\n\t      p = document.getElementById(p);\n\t    } else if (p instanceof p5.Element) {\n\t      p = p.elt;\n\t    }\n\t    p.appendChild(this.elt);\n\t    return this;\n\t  }\n\t};\n\t\n\t/**\n\t *\n\t * Sets the ID of the element. If no ID argument is passed in, it instead\n\t * returns the current ID of the element.\n\t *\n\t * @method id\n\t * @param  {String} [id] ID of the element\n\t * @return {p5.Element|String}\n\t * @example\n\t * <div><code class='norender'>\n\t * function setup() {\n\t *   var cnv = createCanvas(100, 100);\n\t *   // Assigns a CSS selector ID to\n\t *   // the canvas element.\n\t *   cnv.id(\"mycanvas\");\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.id = function(id) {\n\t  if (arguments.length === 0) {\n\t    return this.elt.id;\n\t  } else {\n\t    this.elt.id = id;\n\t    this.width = this.elt.offsetWidth;\n\t    this.height = this.elt.offsetHeight;\n\t    return this;\n\t  }\n\t};\n\t\n\t/**\n\t *\n\t * Adds given class to the element. If no class argument is passed in, it\n\t * instead returns a string containing the current class(es) of the element.\n\t *\n\t * @method class\n\t * @param  {String} [class] class to add\n\t * @return {p5.Element|String}\n\t */\n\tp5.Element.prototype.class = function(c) {\n\t  if (arguments.length === 0) {\n\t    return this.elt.className;\n\t  } else {\n\t    this.elt.className = c;\n\t    return this;\n\t  }\n\t};\n\t\n\t/**\n\t * The .mousePressed() function is called once after every time a\n\t * mouse button is pressed over the element. This can be used to\n\t * attach element specific event listeners.\n\t *\n\t * @method mousePressed\n\t * @param  {Function} fxn function to be fired when mouse is\n\t *                    pressed over the element.\n\t * @return {p5.Element}\n\t * @example\n\t * <div class='norender'><code>\n\t * var cnv;\n\t * var d;\n\t * var g;\n\t * function setup() {\n\t *   cnv = createCanvas(100, 100);\n\t *   cnv.mousePressed(changeGray); // attach listener for\n\t *                                 // canvas click only\n\t *   d = 10;\n\t *   g = 100;\n\t * }\n\t *\n\t * function draw() {\n\t *   background(g);\n\t *   ellipse(width/2, height/2, d, d);\n\t * }\n\t *\n\t * // this function fires with any click anywhere\n\t * function mousePressed() {\n\t *   d = d + 10;\n\t * }\n\t *\n\t * // this function fires only when cnv is clicked\n\t * function changeGray() {\n\t *   g = random(0, 255);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.mousePressed = function (fxn) {\n\t  attachListener('mousedown', fxn, this);\n\t  attachListener('touchstart', fxn, this);\n\t  return this;\n\t};\n\t\n\t/**\n\t * The .mouseWheel() function is called once after every time a\n\t * mouse wheel is scrolled over the element. This can be used to\n\t * attach element specific event listeners.\n\t * <br><br>\n\t * The function accepts a callback function as argument which will be executed\n\t * when the `wheel` event is triggered on the element, the callabck function is\n\t * passed one argument `event`. The `event.deltaY` property returns negative\n\t * values if the mouse wheel is rotated up or away from the user and positive\n\t * in the other direction. The `event.deltaX` does the same as `event.deltaY`\n\t * except it reads the horizontal wheel scroll of the mouse wheel.\n\t * <br><br>\n\t * On OS X with \"natural\" scrolling enabled, the `event.deltaY` values are\n\t * reversed.\n\t *\n\t * @method mouseWheel\n\t * @param  {Function} fxn function to be fired when mouse wheel is\n\t *                    scrolled over the element.\n\t * @return {p5.Element}\n\t * @example\n\t * <div class='norender'><code>\n\t * var cnv;\n\t * var d;\n\t * var g;\n\t * function setup() {\n\t *   cnv = createCanvas(100, 100);\n\t *   cnv.mouseWheel(changeSize); // attach listener for\n\t *                               // activity on canvas only\n\t *   d = 10;\n\t *   g = 100;\n\t * }\n\t *\n\t * function draw() {\n\t *   background(g);\n\t *   ellipse(width/2, height/2, d, d);\n\t * }\n\t *\n\t * // this function fires with mousewheel movement\n\t * // anywhere on screen\n\t * function mouseWheel() {\n\t *   g = g + 10;\n\t * }\n\t *\n\t * // this function fires with mousewheel movement\n\t * // over canvas only\n\t * function changeSize(event) {\n\t *   if (event.deltaY > 0) {\n\t *     d = d + 10;\n\t *   } else {\n\t *     d = d - 10;\n\t *   }\n\t * }\n\t * </code></div>\n\t *\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.mouseWheel = function (fxn) {\n\t  attachListener('wheel', fxn, this);\n\t  return this;\n\t};\n\t\n\t/**\n\t * The .mouseReleased() function is called once after every time a\n\t * mouse button is released over the element. This can be used to\n\t * attach element specific event listeners.\n\t *\n\t * @method mouseReleased\n\t * @param  {Function} fxn function to be fired when mouse is\n\t *                    released over the element.\n\t * @return {p5.Element}\n\t * @example\n\t * <div class='norender'><code>\n\t * var cnv;\n\t * var d;\n\t * var g;\n\t * function setup() {\n\t *   cnv = createCanvas(100, 100);\n\t *   cnv.mouseReleased(changeGray); // attach listener for\n\t *                                  // activity on canvas only\n\t *   d = 10;\n\t *   g = 100;\n\t * }\n\t *\n\t * function draw() {\n\t *   background(g);\n\t *   ellipse(width/2, height/2, d, d);\n\t * }\n\t *\n\t * // this function fires after the mouse has been\n\t * // released\n\t * function mouseReleased() {\n\t *   d = d + 10;\n\t * }\n\t *\n\t * // this function fires after the mouse has been\n\t * // released while on canvas\n\t * function changeGray() {\n\t *   g = random(0, 255);\n\t * }\n\t * </code></div>\n\t *\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.mouseReleased = function (fxn) {\n\t  attachListener('mouseup', fxn, this);\n\t  attachListener('touchend', fxn, this);\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * The .mouseClicked() function is called once after a mouse button is\n\t * pressed and released over the element. This can be used to\n\t * attach element specific event listeners.\n\t *\n\t * @method mouseClicked\n\t * @param  {Function} fxn function to be fired when mouse is\n\t *                    clicked over the element.\n\t * @return {p5.Element}\n\t * @example\n\t * var cnv;\n\t * var d;\n\t * var g;\n\t * function setup() {\n\t *   cnv = createCanvas(100, 100);\n\t *   cnv.mouseClicked(changeGray); // attach listener for\n\t *                                 // activity on canvas only\n\t *   d = 10;\n\t *   g = 100;\n\t * }\n\t *\n\t * function draw() {\n\t *   background(g);\n\t *   ellipse(width/2, height/2, d, d);\n\t * }\n\t *\n\t * // this function fires after the mouse has been\n\t * // clicked anywhere\n\t * function mouseClicked() {\n\t *   d = d + 10;\n\t * }\n\t *\n\t * // this function fires after the mouse has been\n\t * // clicked on canvas\n\t * function changeGray() {\n\t *   g = random(0, 255);\n\t * }\n\t * </code></div>\n\t *\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.mouseClicked = function (fxn) {\n\t  attachListener('click', fxn, this);\n\t  return this;\n\t};\n\t\n\t/**\n\t * The .mouseMoved() function is called once every time a\n\t * mouse moves over the element. This can be used to attach an\n\t * element specific event listener.\n\t *\n\t * @method mouseMoved\n\t * @param  {Function} fxn function to be fired when mouse is\n\t *                    moved over the element.\n\t * @return {p5.Element}\n\t * @example\n\t * <div class='norender'><code>\n\t * var cnv;\n\t * var d = 30;\n\t * var g;\n\t * function setup() {\n\t *   cnv = createCanvas(100, 100);\n\t *   cnv.mouseMoved(changeSize); // attach listener for\n\t *                               // activity on canvas only\n\t *   d = 10;\n\t *   g = 100;\n\t * }\n\t *\n\t * function draw() {\n\t *   background(g);\n\t *   fill(200);\n\t *   ellipse(width/2, height/2, d, d);\n\t * }\n\t *\n\t * // this function fires when mouse moves anywhere on\n\t * // page\n\t * function mouseMoved() {\n\t *   g = g + 5;\n\t *   if (g > 255) {\n\t *     g = 0;\n\t *   }\n\t * }\n\t *\n\t * // this function fires when mouse moves over canvas\n\t * function changeSize() {\n\t *   d = d + 2;\n\t *   if (d > 100) {\n\t *     d = 0;\n\t *   }\n\t * }\n\t * </code></div>\n\t *\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.mouseMoved = function (fxn) {\n\t  attachListener('mousemove', fxn, this);\n\t  attachListener('touchmove', fxn, this);\n\t  return this;\n\t};\n\t\n\t/**\n\t * The .mouseOver() function is called once after every time a\n\t * mouse moves onto the element. This can be used to attach an\n\t * element specific event listener.\n\t *\n\t * @method mouseOver\n\t * @param  {Function} fxn function to be fired when mouse is\n\t *                    moved over the element.\n\t * @return {p5.Element}\n\t * @example\n\t * <div class='norender'><code>\n\t * var cnv;\n\t * var d;\n\t * var g;\n\t * function setup() {\n\t *   cnv = createCanvas(100, 100);\n\t *   cnv.mouseOver(changeGray);\n\t *   d = 10;\n\t * }\n\t *\n\t * function draw() {\n\t *   ellipse(width/2, height/2, d, d);\n\t * }\n\t *\n\t * function changeGray() {\n\t *   d = d + 10;\n\t *   if (d > 100) {\n\t *     d = 0;\n\t *   }\n\t * }\n\t * </code></div>\n\t *\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.mouseOver = function (fxn) {\n\t  attachListener('mouseover', fxn, this);\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * The .changed() function is called when the value of an\n\t * element is changed.\n\t * This can be used to attach an element specific event listener.\n\t *\n\t * @method changed\n\t * @param  {Function} fxn function to be fired when the value of an\n\t * element changes.\n\t * @return {p5.Element}\n\t * @example\n\t * <div><code>\n\t * var sel;\n\t *\n\t * function setup() {\n\t *   textAlign(CENTER);\n\t *   background(200);\n\t *   sel = createSelect();\n\t *   sel.position(10, 10);\n\t *   sel.option('pear');\n\t *   sel.option('kiwi');\n\t *   sel.option('grape');\n\t *   sel.changed(mySelectEvent);\n\t * }\n\t *\n\t * function mySelectEvent() {\n\t *   var item = sel.value();\n\t *   background(200);\n\t *   text(\"it's a \"+item+\"!\", 50, 50);\n\t * }\n\t * </code></div>\n\t * <div><code>\n\t * var checkbox;\n\t * var cnv;\n\t *\n\t * function setup() {\n\t *   checkbox = createCheckbox(\" fill\");\n\t *   checkbox.changed(changeFill);\n\t *   cnv = createCanvas(100, 100);\n\t *   cnv.position(0, 30);\n\t *   noFill();\n\t * }\n\t *\n\t * function draw() {\n\t *   background(200);\n\t *   ellipse(50, 50, 50, 50);\n\t * }\n\t *\n\t * function changeFill() {\n\t *   if (checkbox.checked()) {\n\t *     fill(0);\n\t *   } else {\n\t *     noFill();\n\t *   }\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * dropdown: pear, kiwi, grape. When selected text \"its a\" + selection shown.\n\t *\n\t */\n\tp5.Element.prototype.changed = function (fxn) {\n\t  attachListener('change', fxn, this);\n\t  return this;\n\t};\n\t\n\t/**\n\t * The .input() function is called when any user input is\n\t * detected with an element. The input event is often used\n\t * to detect keystrokes in a input element, or changes on a\n\t * slider element. This can be used to attach an element specific\n\t * event listener.\n\t *\n\t * @method input\n\t * @param  {Function} fxn function to be fired on user input.\n\t * @return {p5.Element}\n\t * @example\n\t * <div class='norender'><code>\n\t * // Open your console to see the output\n\t * function setup() {\n\t *   var inp = createInput('');\n\t *   inp.input(myInputEvent);\n\t * }\n\t *\n\t * function myInputEvent() {\n\t *   console.log('you are typing: ', this.value());\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.input = function (fxn) {\n\t  attachListener('input', fxn, this);\n\t  return this;\n\t};\n\t\n\t/**\n\t * The .mouseOut() function is called once after every time a\n\t * mouse moves off the element. This can be used to attach an\n\t * element specific event listener.\n\t *\n\t * @method mouseOut\n\t * @param  {Function} fxn function to be fired when mouse is\n\t *                    moved off the element.\n\t * @return {p5.Element}\n\t * @example\n\t * <div class='norender'><code>\n\t * var cnv;\n\t * var d;\n\t * var g;\n\t * function setup() {\n\t *   cnv = createCanvas(100, 100);\n\t *   cnv.mouseOut(changeGray);\n\t *   d = 10;\n\t * }\n\t *\n\t * function draw() {\n\t *   ellipse(width/2, height/2, d, d);\n\t * }\n\t *\n\t * function changeGray() {\n\t *   d = d + 10;\n\t *   if (d > 100) {\n\t *     d = 0;\n\t *   }\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.mouseOut = function (fxn) {\n\t  attachListener('mouseout', fxn, this);\n\t  return this;\n\t};\n\t\n\t/**\n\t * The .touchStarted() function is called once after every time a touch is\n\t * registered. This can be used to attach element specific event listeners.\n\t *\n\t * @method touchStarted\n\t * @param  {Function} fxn function to be fired when touch is\n\t *                    started over the element.\n\t * @return {p5.Element}\n\t * @example\n\t * <div class='norender'><code>\n\t * var cnv;\n\t * var d;\n\t * var g;\n\t * function setup() {\n\t *   cnv = createCanvas(100, 100);\n\t *   cnv.touchStarted(changeGray); // attach listener for\n\t *                                 // canvas click only\n\t *   d = 10;\n\t *   g = 100;\n\t * }\n\t *\n\t * function draw() {\n\t *   background(g);\n\t *   ellipse(width/2, height/2, d, d);\n\t * }\n\t *\n\t * // this function fires with any touch anywhere\n\t * function touchStarted() {\n\t *   d = d + 10;\n\t * }\n\t *\n\t * // this function fires only when cnv is clicked\n\t * function changeGray() {\n\t *   g = random(0, 255);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.touchStarted = function (fxn) {\n\t  attachListener('touchstart', fxn, this);\n\t  attachListener('mousedown', fxn, this);\n\t  return this;\n\t};\n\t\n\t/**\n\t * The .touchMoved() function is called once after every time a touch move is\n\t * registered. This can be used to attach element specific event listeners.\n\t *\n\t * @method touchMoved\n\t * @param  {Function} fxn function to be fired when touch is moved\n\t *                    over the element.\n\t * @return {p5.Element}\n\t * @example\n\t * <div class='norender'><code>\n\t * var cnv;\n\t * var g;\n\t * function setup() {\n\t *   cnv = createCanvas(100, 100);\n\t *   cnv.touchMoved(changeGray); // attach listener for\n\t *                               // canvas click only\n\t *   g = 100;\n\t * }\n\t *\n\t * function draw() {\n\t *   background(g);\n\t * }\n\t *\n\t * // this function fires only when cnv is clicked\n\t * function changeGray() {\n\t *   g = random(0, 255);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.touchMoved = function (fxn) {\n\t  attachListener('touchmove', fxn, this);\n\t  attachListener('mousemove', fxn, this);\n\t  return this;\n\t};\n\t\n\t/**\n\t * The .touchEnded() function is called once after every time a touch is\n\t * registered. This can be used to attach element specific event listeners.\n\t *\n\t * @method touchEnded\n\t * @param  {Function} fxn function to be fired when touch is\n\t *                    ended over the element.\n\t * @return {p5.Element}\n\t * @example\n\t * <div class='norender'><code>\n\t * var cnv;\n\t * var d;\n\t * var g;\n\t * function setup() {\n\t *   cnv = createCanvas(100, 100);\n\t *   cnv.touchEnded(changeGray);   // attach listener for\n\t *                                 // canvas click only\n\t *   d = 10;\n\t *   g = 100;\n\t * }\n\t *\n\t * function draw() {\n\t *   background(g);\n\t *   ellipse(width/2, height/2, d, d);\n\t * }\n\t *\n\t * // this function fires with any touch anywhere\n\t * function touchEnded() {\n\t *   d = d + 10;\n\t * }\n\t *\n\t * // this function fires only when cnv is clicked\n\t * function changeGray() {\n\t *   g = random(0, 255);\n\t * }\n\t * </code></div>\n\t *\n\t *\n\t * @alt\n\t * no display.\n\t *\n\t */\n\tp5.Element.prototype.touchEnded = function (fxn) {\n\t  attachListener('touchend', fxn, this);\n\t  attachListener('mouseup', fxn, this);\n\t  return this;\n\t};\n\t\n\t\n\t\n\t/**\n\t * The .dragOver() function is called once after every time a\n\t * file is dragged over the element. This can be used to attach an\n\t * element specific event listener.\n\t *\n\t * @method dragOver\n\t * @param  {Function} fxn function to be fired when mouse is\n\t *                    dragged over the element.\n\t * @return {p5.Element}\n\t */\n\tp5.Element.prototype.dragOver = function (fxn) {\n\t  attachListener('dragover', fxn, this);\n\t  return this;\n\t};\n\t\n\t/**\n\t * The .dragLeave() function is called once after every time a\n\t * dragged file leaves the element area. This can be used to attach an\n\t * element specific event listener.\n\t *\n\t * @method dragLeave\n\t * @param  {Function} fxn function to be fired when mouse is\n\t *                    dragged over the element.\n\t * @return {p5.Element}\n\t */\n\tp5.Element.prototype.dragLeave = function (fxn) {\n\t  attachListener('dragleave', fxn, this);\n\t  return this;\n\t};\n\t\n\t/**\n\t * The .drop() function is called for each file dropped on the element.\n\t * It requires a callback that is passed a p5.File object.  You can\n\t * optionally pass two callbacks, the first one (required) is triggered\n\t * for each file dropped when the file is loaded.  The second (optional)\n\t * is triggered just once when a file (or files) are dropped.\n\t *\n\t * @method drop\n\t * @param  {Function} callback triggered when files are dropped.\n\t * @param  {Function} callback to receive loaded file.\n\t * @return {p5.Element}\n\t * @example\n\t * <div><code>\n\t * function setup() {\n\t *   var c = createCanvas(100, 100);\n\t *   background(200);\n\t *   textAlign(CENTER);\n\t *   text('drop image', width/2, height/2);\n\t *   c.drop(gotFile);\n\t * }\n\t *\n\t * function gotFile(file) {\n\t *   var img = createImg(file.data).hide();\n\t *   // Draw the image onto the canvas\n\t *   image(img, 0, 0, width, height);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * Canvas turns into whatever image is dragged/dropped onto it.\n\t *\n\t */\n\tp5.Element.prototype.drop = function (callback, fxn) {\n\t  // Make a file loader callback and trigger user's callback\n\t  function makeLoader(theFile) {\n\t    // Making a p5.File object\n\t    var p5file = new p5.File(theFile);\n\t    return function(e) {\n\t      p5file.data = e.target.result;\n\t      callback(p5file);\n\t    };\n\t  }\n\t\n\t  // Is the file stuff supported?\n\t  if (window.File && window.FileReader && window.FileList && window.Blob) {\n\t\n\t    // If you want to be able to drop you've got to turn off\n\t    // a lot of default behavior\n\t    attachListener('dragover',function(evt) {\n\t      evt.stopPropagation();\n\t      evt.preventDefault();\n\t    },this);\n\t\n\t    // If this is a drag area we need to turn off the default behavior\n\t    attachListener('dragleave',function(evt) {\n\t      evt.stopPropagation();\n\t      evt.preventDefault();\n\t    },this);\n\t\n\t    // If just one argument it's the callback for the files\n\t    if (arguments.length > 1) {\n\t      attachListener('drop', fxn, this);\n\t    }\n\t\n\t    // Deal with the files\n\t    attachListener('drop', function(evt) {\n\t\n\t      evt.stopPropagation();\n\t      evt.preventDefault();\n\t\n\t      // A FileList\n\t      var files = evt.dataTransfer.files;\n\t\n\t      // Load each one and trigger the callback\n\t      for (var i = 0; i < files.length; i++) {\n\t        var f = files[i];\n\t        var reader = new FileReader();\n\t        reader.onload = makeLoader(f);\n\t\n\t\n\t        // Text or data?\n\t        // This should likely be improved\n\t        if (f.type.indexOf('text') > -1) {\n\t          reader.readAsText(f);\n\t        } else {\n\t          reader.readAsDataURL(f);\n\t        }\n\t      }\n\t    }, this);\n\t  } else {\n\t    console.log('The File APIs are not fully supported in this browser.');\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t\n\t\n\t\n\tfunction attachListener(ev, fxn, ctx) {\n\t  // LM removing, not sure why we had this?\n\t  // var _this = ctx;\n\t  // var f = function (e) { fxn(e, _this); };\n\t  var f = fxn.bind(ctx);\n\t  ctx.elt.addEventListener(ev, f, false);\n\t  ctx._events[ev] = f;\n\t}\n\t\n\t/**\n\t * Helper fxn for sharing pixel methods\n\t *\n\t */\n\tp5.Element.prototype._setProperty = function (prop, value) {\n\t  this[prop] = value;\n\t};\n\t\n\t\n\tmodule.exports = p5.Element;\n\t\n\t},{\"./core\":37}],42:[function(_dereq_,module,exports){\n\t/**\n\t * @module Rendering\n\t * @submodule Rendering\n\t * @for p5\n\t */\n\t\n\tvar p5 = _dereq_('./core');\n\tvar constants = _dereq_('./constants');\n\t\n\t/**\n\t * Thin wrapper around a renderer, to be used for creating a\n\t * graphics buffer object. Use this class if you need\n\t * to draw into an off-screen graphics buffer. The two parameters define the\n\t * width and height in pixels. The fields and methods for this class are\n\t * extensive, but mirror the normal drawing API for p5.\n\t *\n\t * @class p5.Graphics\n\t * @constructor\n\t * @extends p5.Element\n\t * @param {String} elt DOM node that is wrapped\n\t * @param {Object} [pInst] pointer to p5 instance\n\t * @param {Boolean} whether we're using it as main canvas\n\t */\n\tp5.Graphics = function(w, h, renderer, pInst) {\n\t\n\t  var r = renderer || constants.P2D;\n\t\n\t  var c = document.createElement('canvas');\n\t  var node = this._userNode || document.body;\n\t  node.appendChild(c);\n\t\n\t  p5.Element.call(this, c, pInst, false);\n\t  this._styles = [];\n\t  this.width = w;\n\t  this.height = h;\n\t  this._pixelDensity = pInst._pixelDensity;\n\t\n\t  if (r === constants.WEBGL) {\n\t    this._renderer = new p5.RendererGL(c, this, false);\n\t  } else {\n\t    this._renderer = new p5.Renderer2D(c, this, false);\n\t  }\n\t\n\t  this._renderer.resize(w, h);\n\t  this._renderer._applyDefaults();\n\t\n\t  pInst._elements.push(this);\n\t\n\t  // bind methods and props of p5 to the new object\n\t  for (var p in p5.prototype) {\n\t    if (!this[p]) {\n\t      if (typeof p5.prototype[p] === 'function') {\n\t        this[p] = p5.prototype[p].bind(this);\n\t      } else {\n\t        this[p] = p5.prototype[p];\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tp5.Graphics.prototype = Object.create(p5.Element.prototype);\n\t\n\tmodule.exports = p5.Graphics;\n\t\n\t},{\"./constants\":36,\"./core\":37}],43:[function(_dereq_,module,exports){\n\t/**\n\t * @module Rendering\n\t * @submodule Rendering\n\t * @for p5\n\t */\n\t\n\tvar p5 = _dereq_('./core');\n\tvar constants = _dereq_('../core/constants');\n\t\n\t/**\n\t * Main graphics and rendering context, as well as the base API\n\t * implementation for p5.js \"core\". To be used as the superclass for\n\t * Renderer2D and Renderer3D classes, respecitvely.\n\t *\n\t * @class p5.Renderer\n\t * @constructor\n\t * @extends p5.Element\n\t * @param {String} elt DOM node that is wrapped\n\t * @param {Object} [pInst] pointer to p5 instance\n\t * @param {Boolean} whether we're using it as main canvas\n\t */\n\tp5.Renderer = function(elt, pInst, isMainCanvas) {\n\t  p5.Element.call(this, elt, pInst);\n\t  this.canvas = elt;\n\t  this._pInst = pInst;\n\t  if (isMainCanvas) {\n\t    this._isMainCanvas = true;\n\t    // for pixel method sharing with pimage\n\t    this._pInst._setProperty('_curElement', this);\n\t    this._pInst._setProperty('canvas', this.canvas);\n\t    this._pInst._setProperty('width', this.width);\n\t    this._pInst._setProperty('height', this.height);\n\t  } else { // hide if offscreen buffer by default\n\t    this.canvas.style.display = 'none';\n\t    this._styles = []; // non-main elt styles stored in p5.Renderer\n\t  }\n\t\n\t\n\t  this._textSize = 12;\n\t  this._textLeading = 15;\n\t  this._textFont = 'sans-serif';\n\t  this._textStyle = constants.NORMAL;\n\t  this._textAscent = null;\n\t  this._textDescent = null;\n\t\n\t\n\t  this._rectMode = constants.CORNER;\n\t  this._ellipseMode = constants.CENTER;\n\t  this._curveTightness = 0;\n\t  this._imageMode = constants.CORNER;\n\t\n\t  this._tint = null;\n\t  this._doStroke = true;\n\t  this._doFill = true;\n\t  this._strokeSet = false;\n\t  this._fillSet = false;\n\t  this._colorMode = constants.RGB;\n\t  this._colorMaxes = {\n\t    rgb: [255, 255, 255, 255],\n\t    hsb: [360, 100, 100, 1],\n\t    hsl: [360, 100, 100, 1]\n\t  };\n\t\n\t};\n\t\n\tp5.Renderer.prototype = Object.create(p5.Element.prototype);\n\t\n\t\n\t\n\t\n\t/**\n\t * Resize our canvas element.\n\t */\n\tp5.Renderer.prototype.resize = function(w, h) {\n\t  this.width = w;\n\t  this.height = h;\n\t  this.elt.width = w * this._pInst._pixelDensity;\n\t  this.elt.height = h * this._pInst._pixelDensity;\n\t  this.elt.style.width = w +'px';\n\t  this.elt.style.height = h + 'px';\n\t  if (this._isMainCanvas) {\n\t    this._pInst._setProperty('width', this.width);\n\t    this._pInst._setProperty('height', this.height);\n\t  }\n\t};\n\t\n\tp5.Renderer.prototype.textLeading = function(l) {\n\t\n\t  if (arguments.length && arguments[0]) {\n\t\n\t    this._setProperty('_textLeading', l);\n\t    return this;\n\t  }\n\t\n\t  return this._textLeading;\n\t};\n\t\n\tp5.Renderer.prototype.textSize = function(s) {\n\t\n\t  if (arguments.length && arguments[0]) {\n\t\n\t    this._setProperty('_textSize', s);\n\t    this._setProperty('_textLeading', s * constants._DEFAULT_LEADMULT);\n\t    return this._applyTextProperties();\n\t  }\n\t\n\t  return this._textSize;\n\t};\n\t\n\tp5.Renderer.prototype.textStyle = function(s) {\n\t\n\t  if (arguments.length && arguments[0]) {\n\t\n\t    if (s === constants.NORMAL ||\n\t      s === constants.ITALIC ||\n\t      s === constants.BOLD) {\n\t      this._setProperty('_textStyle', s);\n\t    }\n\t\n\t    return this._applyTextProperties();\n\t  }\n\t\n\t  return this._textStyle;\n\t};\n\t\n\tp5.Renderer.prototype.textAscent = function() {\n\t  if (this._textAscent === null) {\n\t    this._updateTextMetrics();\n\t  }\n\t  return this._textAscent;\n\t};\n\t\n\tp5.Renderer.prototype.textDescent = function() {\n\t\n\t  if (this._textDescent === null) {\n\t    this._updateTextMetrics();\n\t  }\n\t  return this._textDescent;\n\t};\n\t\n\tp5.Renderer.prototype._applyDefaults = function(){\n\t  return this;\n\t};\n\t\n\t/**\n\t * Helper fxn to check font type (system or otf)\n\t */\n\tp5.Renderer.prototype._isOpenType = function(f) {\n\t\n\t  f = f || this._textFont;\n\t  return (typeof f === 'object' && f.font && f.font.supported);\n\t};\n\t\n\tp5.Renderer.prototype._updateTextMetrics = function() {\n\t\n\t  if (this._isOpenType()) {\n\t\n\t    this._setProperty('_textAscent', this._textFont._textAscent());\n\t    this._setProperty('_textDescent', this._textFont._textDescent());\n\t    return this;\n\t  }\n\t\n\t  // Adapted from http://stackoverflow.com/a/25355178\n\t  var text = document.createElement('span');\n\t  text.style.fontFamily = this._textFont;\n\t  text.style.fontSize = this._textSize + 'px';\n\t  text.innerHTML = 'ABCjgq|';\n\t\n\t  var block = document.createElement('div');\n\t  block.style.display = 'inline-block';\n\t  block.style.width = '1px';\n\t  block.style.height = '0px';\n\t\n\t  var container = document.createElement('div');\n\t  container.appendChild(text);\n\t  container.appendChild(block);\n\t\n\t  container.style.height = '0px';\n\t  container.style.overflow = 'hidden';\n\t  document.body.appendChild(container);\n\t\n\t  block.style.verticalAlign = 'baseline';\n\t  var blockOffset = calculateOffset(block);\n\t  var textOffset = calculateOffset(text);\n\t  var ascent = blockOffset[1] - textOffset[1];\n\t\n\t  block.style.verticalAlign = 'bottom';\n\t  blockOffset = calculateOffset(block);\n\t  textOffset = calculateOffset(text);\n\t  var height = blockOffset[1] - textOffset[1];\n\t  var descent = height - ascent;\n\t\n\t  document.body.removeChild(container);\n\t\n\t  this._setProperty('_textAscent', ascent);\n\t  this._setProperty('_textDescent', descent);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Helper fxn to measure ascent and descent.\n\t * Adapted from http://stackoverflow.com/a/25355178\n\t */\n\tfunction calculateOffset(object) {\n\t  var currentLeft = 0,\n\t    currentTop = 0;\n\t  if (object.offsetParent) {\n\t    do {\n\t      currentLeft += object.offsetLeft;\n\t      currentTop += object.offsetTop;\n\t    } while (object = object.offsetParent);\n\t  } else {\n\t    currentLeft += object.offsetLeft;\n\t    currentTop += object.offsetTop;\n\t  }\n\t  return [currentLeft, currentTop];\n\t}\n\t\n\tmodule.exports = p5.Renderer;\n\t\n\t},{\"../core/constants\":36,\"./core\":37}],44:[function(_dereq_,module,exports){\n\t\n\tvar p5 = _dereq_('./core');\n\tvar canvas = _dereq_('./canvas');\n\tvar constants = _dereq_('./constants');\n\tvar filters = _dereq_('../image/filters');\n\t\n\t_dereq_('./p5.Renderer');\n\t\n\t/**\n\t * p5.Renderer2D\n\t * The 2D graphics canvas renderer class.\n\t * extends p5.Renderer\n\t */\n\tvar styleEmpty = 'rgba(0,0,0,0)';\n\t// var alphaThreshold = 0.00125; // minimum visible\n\t\n\tp5.Renderer2D = function(elt, pInst, isMainCanvas){\n\t  p5.Renderer.call(this, elt, pInst, isMainCanvas);\n\t  this.drawingContext = this.canvas.getContext('2d');\n\t  this._pInst._setProperty('drawingContext', this.drawingContext);\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype = Object.create(p5.Renderer.prototype);\n\t\n\tp5.Renderer2D.prototype._applyDefaults = function() {\n\t  this.drawingContext.fillStyle = constants._DEFAULT_FILL;\n\t  this.drawingContext.strokeStyle = constants._DEFAULT_STROKE;\n\t  this.drawingContext.lineCap = constants.ROUND;\n\t  this.drawingContext.font = 'normal 12px sans-serif';\n\t};\n\t\n\tp5.Renderer2D.prototype.resize = function(w,h) {\n\t  p5.Renderer.prototype.resize.call(this, w,h);\n\t  this.drawingContext.scale(this._pInst._pixelDensity,\n\t                            this._pInst._pixelDensity);\n\t};\n\t\n\t//////////////////////////////////////////////\n\t// COLOR | Setting\n\t//////////////////////////////////////////////\n\t\n\tp5.Renderer2D.prototype.background = function() {\n\t  this.drawingContext.save();\n\t  this.drawingContext.setTransform(1, 0, 0, 1, 0, 0);\n\t  this.drawingContext.scale(this._pInst._pixelDensity,\n\t                            this._pInst._pixelDensity);\n\t\n\t  if (arguments[0] instanceof p5.Image) {\n\t    this._pInst.image(arguments[0], 0, 0, this.width, this.height);\n\t  } else {\n\t    var curFill = this.drawingContext.fillStyle;\n\t    // create background rect\n\t    var color = this._pInst.color.apply(this, arguments);\n\t    var newFill = color.toString();\n\t    this.drawingContext.fillStyle = newFill;\n\t    this.drawingContext.fillRect(0, 0, this.width, this.height);\n\t    // reset fill\n\t    this.drawingContext.fillStyle = curFill;\n\t  }\n\t  this.drawingContext.restore();\n\t};\n\t\n\tp5.Renderer2D.prototype.clear = function() {\n\t  this.drawingContext.clearRect(0, 0, this.width, this.height);\n\t};\n\t\n\tp5.Renderer2D.prototype.fill = function() {\n\t\n\t  var ctx = this.drawingContext;\n\t  var color = this._pInst.color.apply(this, arguments);\n\t  ctx.fillStyle = color.toString();\n\t};\n\t\n\tp5.Renderer2D.prototype.stroke = function() {\n\t  var ctx = this.drawingContext;\n\t  var color = this._pInst.color.apply(this, arguments);\n\t  ctx.strokeStyle = color.toString();\n\t};\n\t\n\t//////////////////////////////////////////////\n\t// IMAGE | Loading & Displaying\n\t//////////////////////////////////////////////\n\t\n\tp5.Renderer2D.prototype.image =\n\t  function (img, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) {\n\t  var cnv;\n\t  try {\n\t    if (this._tint) {\n\t      if (p5.MediaElement && img instanceof p5.MediaElement) {\n\t        img.loadPixels();\n\t      }\n\t      if (img.canvas) {\n\t        cnv = this._getTintedImageCanvas(img);\n\t      }\n\t    }\n\t    if (!cnv) {\n\t      cnv = img.canvas || img.elt;\n\t    }\n\t    this.drawingContext.drawImage(cnv, sx, sy, sWidth, sHeight, dx, dy,\n\t      dWidth, dHeight);\n\t  } catch (e) {\n\t    if (e.name !== 'NS_ERROR_NOT_AVAILABLE') {\n\t      throw e;\n\t    }\n\t  }\n\t};\n\t\n\tp5.Renderer2D.prototype._getTintedImageCanvas = function (img) {\n\t  if (!img.canvas) {\n\t    return img;\n\t  }\n\t  var pixels = filters._toPixels(img.canvas);\n\t  var tmpCanvas = document.createElement('canvas');\n\t  tmpCanvas.width = img.canvas.width;\n\t  tmpCanvas.height = img.canvas.height;\n\t  var tmpCtx = tmpCanvas.getContext('2d');\n\t  var id = tmpCtx.createImageData(img.canvas.width, img.canvas.height);\n\t  var newPixels = id.data;\n\t  for (var i = 0; i < pixels.length; i += 4) {\n\t    var r = pixels[i];\n\t    var g = pixels[i + 1];\n\t    var b = pixels[i + 2];\n\t    var a = pixels[i + 3];\n\t    newPixels[i] = r * this._tint[0] / 255;\n\t    newPixels[i + 1] = g * this._tint[1] / 255;\n\t    newPixels[i + 2] = b * this._tint[2] / 255;\n\t    newPixels[i + 3] = a * this._tint[3] / 255;\n\t  }\n\t  tmpCtx.putImageData(id, 0, 0);\n\t  return tmpCanvas;\n\t};\n\t\n\t\n\t//////////////////////////////////////////////\n\t// IMAGE | Pixels\n\t//////////////////////////////////////////////\n\t\n\tp5.Renderer2D.prototype.blendMode = function(mode) {\n\t  this.drawingContext.globalCompositeOperation = mode;\n\t};\n\tp5.Renderer2D.prototype.blend = function() {\n\t  var currBlend = this.drawingContext.globalCompositeOperation;\n\t  var blendMode = arguments[arguments.length - 1];\n\t\n\t  var copyArgs = Array.prototype.slice.call(\n\t    arguments,\n\t    0,\n\t    arguments.length - 1\n\t  );\n\t\n\t  this.drawingContext.globalCompositeOperation = blendMode;\n\t  if (this._pInst) {\n\t    this._pInst.copy.apply(this._pInst, copyArgs);\n\t  } else {\n\t    this.copy.apply(this, copyArgs);\n\t  }\n\t  this.drawingContext.globalCompositeOperation = currBlend;\n\t};\n\t\n\tp5.Renderer2D.prototype.copy = function () {\n\t  var srcImage, sx, sy, sw, sh, dx, dy, dw, dh;\n\t  if (arguments.length === 9) {\n\t    srcImage = arguments[0];\n\t    sx = arguments[1];\n\t    sy = arguments[2];\n\t    sw = arguments[3];\n\t    sh = arguments[4];\n\t    dx = arguments[5];\n\t    dy = arguments[6];\n\t    dw = arguments[7];\n\t    dh = arguments[8];\n\t  } else if (arguments.length === 8) {\n\t    srcImage = this._pInst;\n\t    sx = arguments[0];\n\t    sy = arguments[1];\n\t    sw = arguments[2];\n\t    sh = arguments[3];\n\t    dx = arguments[4];\n\t    dy = arguments[5];\n\t    dw = arguments[6];\n\t    dh = arguments[7];\n\t  } else {\n\t    throw new Error('Signature not supported');\n\t  }\n\t  p5.Renderer2D._copyHelper(srcImage, sx, sy, sw, sh, dx, dy, dw, dh);\n\t};\n\t\n\tp5.Renderer2D._copyHelper =\n\tfunction (srcImage, sx, sy, sw, sh, dx, dy, dw, dh) {\n\t  if (!srcImage.canvas) {\n\t    srcImage.loadPixels();\n\t  }\n\t  var s = srcImage.canvas.width / srcImage.width;\n\t  this.drawingContext.drawImage(srcImage.canvas,\n\t    s * sx, s * sy, s * sw, s * sh, dx, dy, dw, dh);\n\t};\n\t\n\tp5.Renderer2D.prototype.get = function(x, y, w, h) {\n\t  if (x === undefined && y === undefined &&\n\t      w === undefined && h === undefined){\n\t    x = 0;\n\t    y = 0;\n\t    w = this.width;\n\t    h = this.height;\n\t  } else if (w === undefined && h === undefined) {\n\t    w = 1;\n\t    h = 1;\n\t  }\n\t\n\t  // if the section does not overlap the canvas\n\t  if(x + w < 0 || y + h < 0 || x > this.width || y > this.height){\n\t    return [0, 0, 0, 255];\n\t  }\n\t\n\t  var ctx = this._pInst || this;\n\t\n\t  var pd = ctx._pixelDensity;\n\t\n\t  // round down to get integer numbers\n\t  x = Math.floor(x);\n\t  y = Math.floor(y);\n\t\n\t  var sx = x * pd;\n\t  var sy = y * pd;\n\t  if (w === 1 && h === 1){\n\t    var imageData = this.drawingContext.getImageData(sx, sy, 1, 1).data;\n\t    //imageData = [0,0,0,0];\n\t    return [\n\t      imageData[0],\n\t      imageData[1],\n\t      imageData[2],\n\t      imageData[3]\n\t    ];\n\t  } else {\n\t    //auto constrain the width and height to\n\t    //dimensions of the source image\n\t    var dw = Math.min(w, ctx.width);\n\t    var dh = Math.min(h, ctx.height);\n\t    var sw = dw * pd;\n\t    var sh = dh * pd;\n\t\n\t    var region = new p5.Image(dw, dh);\n\t    region.canvas.getContext('2d').drawImage(this.canvas, sx, sy, sw, sh,\n\t      0, 0, dw, dh);\n\t\n\t    return region;\n\t  }\n\t};\n\t\n\tp5.Renderer2D.prototype.loadPixels = function () {\n\t  var pd = this._pixelDensity || this._pInst._pixelDensity;\n\t  var w = this.width * pd;\n\t  var h = this.height * pd;\n\t  var imageData = this.drawingContext.getImageData(0, 0, w, h);\n\t  // @todo this should actually set pixels per object, so diff buffers can\n\t  // have diff pixel arrays.\n\t  if (this._pInst) {\n\t    this._pInst._setProperty('imageData', imageData);\n\t    this._pInst._setProperty('pixels', imageData.data);\n\t  } else { // if called by p5.Image\n\t    this._setProperty('imageData', imageData);\n\t    this._setProperty('pixels', imageData.data);\n\t  }\n\t};\n\t\n\tp5.Renderer2D.prototype.set = function (x, y, imgOrCol) {\n\t  // round down to get integer numbers\n\t  x = Math.floor(x);\n\t  y = Math.floor(y);\n\t  if (imgOrCol instanceof p5.Image) {\n\t    this.drawingContext.save();\n\t    this.drawingContext.setTransform(1, 0, 0, 1, 0, 0);\n\t    this.drawingContext.scale(this._pInst._pixelDensity,\n\t      this._pInst._pixelDensity);\n\t    this.drawingContext.drawImage(imgOrCol.canvas, x, y);\n\t    this.loadPixels.call(this._pInst);\n\t    this.drawingContext.restore();\n\t  } else {\n\t    var ctx = this._pInst || this;\n\t    var r = 0, g = 0, b = 0, a = 0;\n\t    var idx = 4*((y * ctx._pixelDensity) *\n\t      (this.width * ctx._pixelDensity) + (x * ctx._pixelDensity));\n\t    if (!ctx.imageData) {\n\t      ctx.loadPixels.call(ctx);\n\t    }\n\t    if (typeof imgOrCol === 'number') {\n\t      if (idx < ctx.pixels.length) {\n\t        r = imgOrCol;\n\t        g = imgOrCol;\n\t        b = imgOrCol;\n\t        a = 255;\n\t        //this.updatePixels.call(this);\n\t      }\n\t    }\n\t    else if (imgOrCol instanceof Array) {\n\t      if (imgOrCol.length < 4) {\n\t        throw new Error('pixel array must be of the form [R, G, B, A]');\n\t      }\n\t      if (idx < ctx.pixels.length) {\n\t        r = imgOrCol[0];\n\t        g = imgOrCol[1];\n\t        b = imgOrCol[2];\n\t        a = imgOrCol[3];\n\t        //this.updatePixels.call(this);\n\t      }\n\t    } else if (imgOrCol instanceof p5.Color) {\n\t      if (idx < ctx.pixels.length) {\n\t        r = imgOrCol.levels[0];\n\t        g = imgOrCol.levels[1];\n\t        b = imgOrCol.levels[2];\n\t        a = imgOrCol.levels[3];\n\t        //this.updatePixels.call(this);\n\t      }\n\t    }\n\t    // loop over pixelDensity * pixelDensity\n\t    for (var i = 0; i < ctx._pixelDensity; i++) {\n\t      for (var j = 0; j < ctx._pixelDensity; j++) {\n\t        // loop over\n\t        idx = 4*((y * ctx._pixelDensity + j) * this.width *\n\t          ctx._pixelDensity + (x * ctx._pixelDensity + i));\n\t        ctx.pixels[idx] = r;\n\t        ctx.pixels[idx+1] = g;\n\t        ctx.pixels[idx+2] = b;\n\t        ctx.pixels[idx+3] = a;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tp5.Renderer2D.prototype.updatePixels = function (x, y, w, h) {\n\t  var pd = this._pixelDensity || this._pInst._pixelDensity;\n\t  if (x === undefined &&\n\t      y === undefined &&\n\t      w === undefined &&\n\t      h === undefined) {\n\t    x = 0;\n\t    y = 0;\n\t    w = this.width;\n\t    h = this.height;\n\t  }\n\t  w *= pd;\n\t  h *= pd;\n\t\n\t  if (this._pInst) {\n\t    this.drawingContext.putImageData(this._pInst.imageData, x, y, 0, 0, w, h);\n\t  } else {\n\t    this.drawingContext.putImageData(this.imageData, x, y, 0, 0, w, h);\n\t  }\n\t};\n\t\n\t//////////////////////////////////////////////\n\t// SHAPE | 2D Primitives\n\t//////////////////////////////////////////////\n\t\n\t/**\n\t * Generate a cubic Bezier representing an arc on the unit circle of total\n\t * angle `size` radians, beginning `start` radians above the x-axis. Up to\n\t * four of these curves are combined to make a full arc.\n\t *\n\t * See www.joecridge.me/bezier.pdf for an explanation of the method.\n\t */\n\tp5.Renderer2D.prototype._acuteArcToBezier =\n\t  function _acuteArcToBezier(start, size) {\n\t  // Evauate constants.\n\t  var alpha = size / 2.0,\n\t    cos_alpha = Math.cos(alpha),\n\t    sin_alpha = Math.sin(alpha),\n\t    cot_alpha = 1.0 / Math.tan(alpha),\n\t    phi = start + alpha,  // This is how far the arc needs to be rotated.\n\t    cos_phi = Math.cos(phi),\n\t    sin_phi = Math.sin(phi),\n\t    lambda = (4.0 - cos_alpha) / 3.0,\n\t    mu = sin_alpha + (cos_alpha - lambda) * cot_alpha;\n\t\n\t  // Return rotated waypoints.\n\t  return {\n\t    ax: Math.cos(start),\n\t    ay: Math.sin(start),\n\t    bx: lambda * cos_phi + mu * sin_phi,\n\t    by: lambda * sin_phi - mu * cos_phi,\n\t    cx: lambda * cos_phi - mu * sin_phi,\n\t    cy: lambda * sin_phi + mu * cos_phi,\n\t    dx: Math.cos(start + size),\n\t    dy: Math.sin(start + size)\n\t  };\n\t};\n\t\n\tp5.Renderer2D.prototype.arc =\n\t  function(x, y, w, h, start, stop, mode) {\n\t  var ctx = this.drawingContext;\n\t  var vals = canvas.arcModeAdjust(x, y, w, h, this._ellipseMode);\n\t  var rx = vals.w / 2.0;\n\t  var ry = vals.h / 2.0;\n\t  var epsilon = 0.00001;  // Smallest visible angle on displays up to 4K.\n\t  var arcToDraw = 0;\n\t  var curves = [];\n\t\n\t  // Create curves\n\t  while(stop - start > epsilon) {\n\t    arcToDraw = Math.min(stop - start, constants.HALF_PI);\n\t    curves.push(this._acuteArcToBezier(start, arcToDraw));\n\t    start += arcToDraw;\n\t  }\n\t\n\t  // Fill curves\n\t  if (this._doFill) {\n\t    ctx.beginPath();\n\t    curves.forEach(function (curve, index) {\n\t      if (index === 0) {\n\t        ctx.moveTo(vals.x + curve.ax * rx, vals.y + curve.ay * ry);\n\t      }\n\t      ctx.bezierCurveTo(vals.x + curve.bx * rx, vals.y + curve.by * ry,\n\t                        vals.x + curve.cx * rx, vals.y + curve.cy * ry,\n\t                        vals.x + curve.dx * rx, vals.y + curve.dy * ry);\n\t    });\n\t    if (mode === constants.PIE || mode == null) {\n\t      ctx.lineTo(vals.x, vals.y);\n\t    }\n\t    ctx.closePath();\n\t    ctx.fill();\n\t  }\n\t\n\t  // Stroke curves\n\t  if (this._doStroke) {\n\t    ctx.beginPath();\n\t    curves.forEach(function (curve, index) {\n\t      if (index === 0) {\n\t        ctx.moveTo(vals.x + curve.ax * rx, vals.y + curve.ay * ry);\n\t      }\n\t      ctx.bezierCurveTo(vals.x + curve.bx * rx, vals.y + curve.by * ry,\n\t                        vals.x + curve.cx * rx, vals.y + curve.cy * ry,\n\t                        vals.x + curve.dx * rx, vals.y + curve.dy * ry);\n\t    });\n\t    if (mode === constants.PIE) {\n\t      ctx.lineTo(vals.x, vals.y);\n\t      ctx.closePath();\n\t    } else if (mode === constants.CHORD) {\n\t      ctx.closePath();\n\t    }\n\t    ctx.stroke();\n\t  }\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.ellipse = function(args) {\n\t  var ctx = this.drawingContext;\n\t  var doFill = this._doFill, doStroke = this._doStroke;\n\t  var x = args[0],\n\t    y = args[1],\n\t    w = args[2],\n\t    h = args[3];\n\t  if (doFill && !doStroke) {\n\t    if(ctx.fillStyle === styleEmpty) {\n\t      return this;\n\t    }\n\t  } else if (!doFill && doStroke) {\n\t    if(ctx.strokeStyle === styleEmpty) {\n\t      return this;\n\t    }\n\t  }\n\t  var kappa = 0.5522847498,\n\t    ox = (w / 2) * kappa, // control point offset horizontal\n\t    oy = (h / 2) * kappa, // control point offset vertical\n\t    xe = x + w,      // x-end\n\t    ye = y + h,      // y-end\n\t    xm = x + w / 2,  // x-middle\n\t    ym = y + h / 2;  // y-middle\n\t  ctx.beginPath();\n\t  ctx.moveTo(x, ym);\n\t  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n\t  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n\t  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n\t  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\t  ctx.closePath();\n\t  if (doFill) {\n\t    ctx.fill();\n\t  }\n\t  if (doStroke) {\n\t    ctx.stroke();\n\t  }\n\t};\n\t\n\tp5.Renderer2D.prototype.line = function(x1, y1, x2, y2) {\n\t  var ctx = this.drawingContext;\n\t  if (!this._doStroke) {\n\t    return this;\n\t  } else if(ctx.strokeStyle === styleEmpty){\n\t    return this;\n\t  }\n\t  // Translate the line by (0.5, 0.5) to draw it crisp\n\t  if (ctx.lineWidth % 2 === 1) {\n\t    ctx.translate(0.5, 0.5);\n\t  }\n\t  ctx.beginPath();\n\t  ctx.moveTo(x1, y1);\n\t  ctx.lineTo(x2, y2);\n\t  ctx.stroke();\n\t  if (ctx.lineWidth % 2 === 1) {\n\t    ctx.translate(-0.5, -0.5);\n\t  }\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.point = function(x, y) {\n\t  var ctx = this.drawingContext;\n\t  var s = ctx.strokeStyle;\n\t  var f = ctx.fillStyle;\n\t  if (!this._doStroke) {\n\t    return this;\n\t  } else if(ctx.strokeStyle === styleEmpty){\n\t    return this;\n\t  }\n\t  x = Math.round(x);\n\t  y = Math.round(y);\n\t  ctx.fillStyle = s;\n\t  if (ctx.lineWidth > 1) {\n\t    ctx.beginPath();\n\t    ctx.arc(\n\t      x,\n\t      y,\n\t      ctx.lineWidth / 2,\n\t      0,\n\t      constants.TWO_PI,\n\t      false\n\t    );\n\t    ctx.fill();\n\t  } else {\n\t    ctx.fillRect(x, y, 1, 1);\n\t  }\n\t  ctx.fillStyle = f;\n\t};\n\t\n\tp5.Renderer2D.prototype.quad =\n\t  function(x1, y1, x2, y2, x3, y3, x4, y4) {\n\t  var ctx = this.drawingContext;\n\t  var doFill = this._doFill, doStroke = this._doStroke;\n\t  if (doFill && !doStroke) {\n\t    if(ctx.fillStyle === styleEmpty) {\n\t      return this;\n\t    }\n\t  } else if (!doFill && doStroke) {\n\t    if(ctx.strokeStyle === styleEmpty) {\n\t      return this;\n\t    }\n\t  }\n\t  ctx.beginPath();\n\t  ctx.moveTo(x1, y1);\n\t  ctx.lineTo(x2, y2);\n\t  ctx.lineTo(x3, y3);\n\t  ctx.lineTo(x4, y4);\n\t  ctx.closePath();\n\t  if (doFill) {\n\t    ctx.fill();\n\t  }\n\t  if (doStroke) {\n\t    ctx.stroke();\n\t  }\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.rect = function(args) {\n\t  var x = args[0],\n\t    y = args[1],\n\t    w = args[2],\n\t    h = args[3],\n\t    tl = args[4],\n\t    tr = args[5],\n\t    br = args[6],\n\t    bl = args[7];\n\t  var ctx = this.drawingContext;\n\t  var doFill = this._doFill, doStroke = this._doStroke;\n\t  if (doFill && !doStroke) {\n\t    if(ctx.fillStyle === styleEmpty) {\n\t      return this;\n\t    }\n\t  } else if (!doFill && doStroke) {\n\t    if(ctx.strokeStyle === styleEmpty) {\n\t      return this;\n\t    }\n\t  }\n\t  // Translate the line by (0.5, 0.5) to draw a crisp rectangle border\n\t  if (this._doStroke && ctx.lineWidth % 2 === 1) {\n\t    ctx.translate(0.5, 0.5);\n\t  }\n\t  ctx.beginPath();\n\t\n\t  if (typeof tl === 'undefined') {\n\t    // No rounded corners\n\t    ctx.rect(x, y, w, h);\n\t  } else {\n\t    // At least one rounded corner\n\t    // Set defaults when not specified\n\t    if (typeof tr === 'undefined') { tr = tl; }\n\t    if (typeof br === 'undefined') { br = tr; }\n\t    if (typeof bl === 'undefined') { bl = br; }\n\t\n\t    var hw = w / 2;\n\t    var hh = h / 2;\n\t\n\t    // Clip radii\n\t    if (w < 2 * tl) { tl = hw; }\n\t    if (h < 2 * tl) { tl = hh; }\n\t    if (w < 2 * tr) { tr = hw; }\n\t    if (h < 2 * tr) { tr = hh; }\n\t    if (w < 2 * br) { br = hw; }\n\t    if (h < 2 * br) { br = hh; }\n\t    if (w < 2 * bl) { bl = hw; }\n\t    if (h < 2 * bl) { bl = hh; }\n\t\n\t    // Draw shape\n\t    ctx.beginPath();\n\t    ctx.moveTo(x + tl, y);\n\t    ctx.arcTo(x + w, y, x + w, y + h, tr);\n\t    ctx.arcTo(x + w, y + h, x, y + h, br);\n\t    ctx.arcTo(x, y + h, x, y, bl);\n\t    ctx.arcTo(x, y, x + w, y, tl);\n\t    ctx.closePath();\n\t  }\n\t  if (this._doFill) {\n\t    ctx.fill();\n\t  }\n\t  if (this._doStroke) {\n\t    ctx.stroke();\n\t  }\n\t  if (this._doStroke && ctx.lineWidth % 2 === 1) {\n\t    ctx.translate(-0.5, -0.5);\n\t  }\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.triangle = function(args) {\n\t  var ctx = this.drawingContext;\n\t  var doFill = this._doFill, doStroke = this._doStroke;\n\t  var x1=args[0], y1=args[1];\n\t  var x2=args[2], y2=args[3];\n\t  var x3=args[4], y3=args[5];\n\t  if (doFill && !doStroke) {\n\t    if(ctx.fillStyle === styleEmpty) {\n\t      return this;\n\t    }\n\t  } else if (!doFill && doStroke) {\n\t    if(ctx.strokeStyle === styleEmpty) {\n\t      return this;\n\t    }\n\t  }\n\t  ctx.beginPath();\n\t  ctx.moveTo(x1, y1);\n\t  ctx.lineTo(x2, y2);\n\t  ctx.lineTo(x3, y3);\n\t  ctx.closePath();\n\t  if (doFill) {\n\t    ctx.fill();\n\t  }\n\t  if (doStroke) {\n\t    ctx.stroke();\n\t  }\n\t};\n\t\n\tp5.Renderer2D.prototype.endShape =\n\tfunction (mode, vertices, isCurve, isBezier,\n\t    isQuadratic, isContour, shapeKind) {\n\t  if (vertices.length === 0) {\n\t    return this;\n\t  }\n\t  if (!this._doStroke && !this._doFill) {\n\t    return this;\n\t  }\n\t  var closeShape = mode === constants.CLOSE;\n\t  var v;\n\t  if (closeShape && !isContour) {\n\t    vertices.push(vertices[0]);\n\t  }\n\t  var i, j;\n\t  var numVerts = vertices.length;\n\t  if (isCurve && (shapeKind === constants.POLYGON || shapeKind === null)) {\n\t    if (numVerts > 3) {\n\t      var b = [], s = 1 - this._curveTightness;\n\t      this.drawingContext.beginPath();\n\t      this.drawingContext.moveTo(vertices[1][0], vertices[1][1]);\n\t      for (i = 1; i + 2 < numVerts; i++) {\n\t        v = vertices[i];\n\t        b[0] = [\n\t          v[0],\n\t          v[1]\n\t        ];\n\t        b[1] = [\n\t          v[0] + (s * vertices[i + 1][0] - s * vertices[i - 1][0]) / 6,\n\t          v[1] + (s * vertices[i + 1][1] - s * vertices[i - 1][1]) / 6\n\t        ];\n\t        b[2] = [\n\t          vertices[i + 1][0] +\n\t          (s * vertices[i][0]-s * vertices[i + 2][0]) / 6,\n\t          vertices[i + 1][1]+(s * vertices[i][1] - s*vertices[i + 2][1]) / 6\n\t        ];\n\t        b[3] = [\n\t          vertices[i + 1][0],\n\t          vertices[i + 1][1]\n\t        ];\n\t        this.drawingContext.bezierCurveTo(b[1][0],b[1][1],\n\t          b[2][0],b[2][1],b[3][0],b[3][1]);\n\t      }\n\t      if (closeShape) {\n\t        this.drawingContext.lineTo(vertices[i + 1][0], vertices[i + 1][1]);\n\t      }\n\t      this._doFillStrokeClose();\n\t    }\n\t  } else if (isBezier&&(shapeKind===constants.POLYGON ||shapeKind === null)) {\n\t    this.drawingContext.beginPath();\n\t    for (i = 0; i < numVerts; i++) {\n\t      if (vertices[i].isVert) {\n\t        if (vertices[i].moveTo) {\n\t          this.drawingContext.moveTo(vertices[i][0], vertices[i][1]);\n\t        } else {\n\t          this.drawingContext.lineTo(vertices[i][0], vertices[i][1]);\n\t        }\n\t      } else {\n\t        this.drawingContext.bezierCurveTo(vertices[i][0], vertices[i][1],\n\t          vertices[i][2], vertices[i][3], vertices[i][4], vertices[i][5]);\n\t      }\n\t    }\n\t    this._doFillStrokeClose();\n\t  } else if (isQuadratic &&\n\t    (shapeKind === constants.POLYGON || shapeKind === null)) {\n\t    this.drawingContext.beginPath();\n\t    for (i = 0; i < numVerts; i++) {\n\t      if (vertices[i].isVert) {\n\t        if (vertices[i].moveTo) {\n\t          this.drawingContext.moveTo([0], vertices[i][1]);\n\t        } else {\n\t          this.drawingContext.lineTo(vertices[i][0], vertices[i][1]);\n\t        }\n\t      } else {\n\t        this.drawingContext.quadraticCurveTo(vertices[i][0], vertices[i][1],\n\t          vertices[i][2], vertices[i][3]);\n\t      }\n\t    }\n\t    this._doFillStrokeClose();\n\t  } else {\n\t    if (shapeKind === constants.POINTS) {\n\t      for (i = 0; i < numVerts; i++) {\n\t        v = vertices[i];\n\t        if (this._doStroke) {\n\t          this._pInst.stroke(v[6]);\n\t        }\n\t        this._pInst.point(v[0], v[1]);\n\t      }\n\t    } else if (shapeKind === constants.LINES) {\n\t      for (i = 0; i + 1 < numVerts; i += 2) {\n\t        v = vertices[i];\n\t        if (this._doStroke) {\n\t          this._pInst.stroke(vertices[i + 1][6]);\n\t        }\n\t        this._pInst.line(v[0], v[1], vertices[i + 1][0], vertices[i + 1][1]);\n\t      }\n\t    } else if (shapeKind === constants.TRIANGLES) {\n\t      for (i = 0; i + 2 < numVerts; i += 3) {\n\t        v = vertices[i];\n\t        this.drawingContext.beginPath();\n\t        this.drawingContext.moveTo(v[0], v[1]);\n\t        this.drawingContext.lineTo(vertices[i + 1][0], vertices[i + 1][1]);\n\t        this.drawingContext.lineTo(vertices[i + 2][0], vertices[i + 2][1]);\n\t        this.drawingContext.lineTo(v[0], v[1]);\n\t        if (this._doFill) {\n\t          this._pInst.fill(vertices[i + 2][5]);\n\t          this.drawingContext.fill();\n\t        }\n\t        if (this._doStroke) {\n\t          this._pInst.stroke(vertices[i + 2][6]);\n\t          this.drawingContext.stroke();\n\t        }\n\t        this.drawingContext.closePath();\n\t      }\n\t    } else if (shapeKind === constants.TRIANGLE_STRIP) {\n\t      for (i = 0; i + 1 < numVerts; i++) {\n\t        v = vertices[i];\n\t        this.drawingContext.beginPath();\n\t        this.drawingContext.moveTo(vertices[i + 1][0], vertices[i + 1][1]);\n\t        this.drawingContext.lineTo(v[0], v[1]);\n\t        if (this._doStroke) {\n\t          this._pInst.stroke(vertices[i + 1][6]);\n\t        }\n\t        if (this._doFill) {\n\t          this._pInst.fill(vertices[i + 1][5]);\n\t        }\n\t        if (i + 2 < numVerts) {\n\t          this.drawingContext.lineTo(vertices[i + 2][0], vertices[i + 2][1]);\n\t          if (this._doStroke) {\n\t            this._pInst.stroke(vertices[i + 2][6]);\n\t          }\n\t          if (this._doFill) {\n\t            this._pInst.fill(vertices[i + 2][5]);\n\t          }\n\t        }\n\t        this._doFillStrokeClose();\n\t      }\n\t    } else if (shapeKind === constants.TRIANGLE_FAN) {\n\t      if (numVerts > 2) {\n\t        this.drawingContext.beginPath();\n\t        this.drawingContext.moveTo(vertices[0][0], vertices[0][1]);\n\t        this.drawingContext.lineTo(vertices[1][0], vertices[1][1]);\n\t        this.drawingContext.lineTo(vertices[2][0], vertices[2][1]);\n\t        if (this._doFill) {\n\t          this._pInst.fill(vertices[2][5]);\n\t        }\n\t        if (this._doStroke) {\n\t          this._pInst.stroke(vertices[2][6]);\n\t        }\n\t        this._doFillStrokeClose();\n\t        for (i = 3; i < numVerts; i++) {\n\t          v = vertices[i];\n\t          this.drawingContext.beginPath();\n\t          this.drawingContext.moveTo(vertices[0][0], vertices[0][1]);\n\t          this.drawingContext.lineTo(vertices[i - 1][0], vertices[i - 1][1]);\n\t          this.drawingContext.lineTo(v[0], v[1]);\n\t          if (this._doFill) {\n\t            this._pInst.fill(v[5]);\n\t          }\n\t          if (this._doStroke) {\n\t            this._pInst.stroke(v[6]);\n\t          }\n\t          this._doFillStrokeClose();\n\t        }\n\t      }\n\t    } else if (shapeKind === constants.QUADS) {\n\t      for (i = 0; i + 3 < numVerts; i += 4) {\n\t        v = vertices[i];\n\t        this.drawingContext.beginPath();\n\t        this.drawingContext.moveTo(v[0], v[1]);\n\t        for (j = 1; j < 4; j++) {\n\t          this.drawingContext.lineTo(vertices[i + j][0], vertices[i + j][1]);\n\t        }\n\t        this.drawingContext.lineTo(v[0], v[1]);\n\t        if (this._doFill) {\n\t          this._pInst.fill(vertices[i + 3][5]);\n\t        }\n\t        if (this._doStroke) {\n\t          this._pInst.stroke(vertices[i + 3][6]);\n\t        }\n\t        this._doFillStrokeClose();\n\t      }\n\t    } else if (shapeKind === constants.QUAD_STRIP) {\n\t      if (numVerts > 3) {\n\t        for (i = 0; i + 1 < numVerts; i += 2) {\n\t          v = vertices[i];\n\t          this.drawingContext.beginPath();\n\t          if (i + 3 < numVerts) {\n\t            this.drawingContext.moveTo(vertices[i + 2][0], vertices[i+2][1]);\n\t            this.drawingContext.lineTo(v[0], v[1]);\n\t            this.drawingContext.lineTo(vertices[i + 1][0], vertices[i+1][1]);\n\t            this.drawingContext.lineTo(vertices[i + 3][0], vertices[i+3][1]);\n\t            if (this._doFill) {\n\t              this._pInst.fill(vertices[i + 3][5]);\n\t            }\n\t            if (this._doStroke) {\n\t              this._pInst.stroke(vertices[i + 3][6]);\n\t            }\n\t          } else {\n\t            this.drawingContext.moveTo(v[0], v[1]);\n\t            this.drawingContext.lineTo(vertices[i + 1][0], vertices[i+1][1]);\n\t          }\n\t          this._doFillStrokeClose();\n\t        }\n\t      }\n\t    } else {\n\t      this.drawingContext.beginPath();\n\t      this.drawingContext.moveTo(vertices[0][0], vertices[0][1]);\n\t      for (i = 1; i < numVerts; i++) {\n\t        v = vertices[i];\n\t        if (v.isVert) {\n\t          if (v.moveTo) {\n\t            this.drawingContext.moveTo(v[0], v[1]);\n\t          } else {\n\t            this.drawingContext.lineTo(v[0], v[1]);\n\t          }\n\t        }\n\t      }\n\t      this._doFillStrokeClose();\n\t    }\n\t  }\n\t  isCurve = false;\n\t  isBezier = false;\n\t  isQuadratic = false;\n\t  isContour = false;\n\t  if (closeShape) {\n\t    vertices.pop();\n\t  }\n\t  return this;\n\t};\n\t//////////////////////////////////////////////\n\t// SHAPE | Attributes\n\t//////////////////////////////////////////////\n\t\n\tp5.Renderer2D.prototype.noSmooth = function() {\n\t  if ('imageSmoothingEnabled' in this.drawingContext) {\n\t    this.drawingContext.imageSmoothingEnabled = false;\n\t  }\n\t  else if ('mozImageSmoothingEnabled' in this.drawingContext) {\n\t    this.drawingContext.mozImageSmoothingEnabled = false;\n\t  }\n\t  else if ('webkitImageSmoothingEnabled' in this.drawingContext) {\n\t    this.drawingContext.webkitImageSmoothingEnabled = false;\n\t  }\n\t  else if ('msImageSmoothingEnabled' in this.drawingContext) {\n\t    this.drawingContext.msImageSmoothingEnabled = false;\n\t  }\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.smooth = function() {\n\t  if ('imageSmoothingEnabled' in this.drawingContext) {\n\t    this.drawingContext.imageSmoothingEnabled = true;\n\t  }\n\t  else if ('mozImageSmoothingEnabled' in this.drawingContext) {\n\t    this.drawingContext.mozImageSmoothingEnabled = true;\n\t  }\n\t  else if ('webkitImageSmoothingEnabled' in this.drawingContext) {\n\t    this.drawingContext.webkitImageSmoothingEnabled = true;\n\t  }\n\t  else if ('msImageSmoothingEnabled' in this.drawingContext) {\n\t    this.drawingContext.msImageSmoothingEnabled = true;\n\t  }\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.strokeCap = function(cap) {\n\t  if (cap === constants.ROUND ||\n\t    cap === constants.SQUARE ||\n\t    cap === constants.PROJECT) {\n\t    this.drawingContext.lineCap = cap;\n\t  }\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.strokeJoin = function(join) {\n\t  if (join === constants.ROUND ||\n\t    join === constants.BEVEL ||\n\t    join === constants.MITER) {\n\t    this.drawingContext.lineJoin = join;\n\t  }\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.strokeWeight = function(w) {\n\t  if (typeof w === 'undefined' || w === 0) {\n\t    // hack because lineWidth 0 doesn't work\n\t    this.drawingContext.lineWidth = 0.0001;\n\t  } else {\n\t    this.drawingContext.lineWidth = w;\n\t  }\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype._getFill = function(){\n\t  return this.drawingContext.fillStyle;\n\t};\n\t\n\tp5.Renderer2D.prototype._getStroke = function(){\n\t  return this.drawingContext.strokeStyle;\n\t};\n\t\n\t//////////////////////////////////////////////\n\t// SHAPE | Curves\n\t//////////////////////////////////////////////\n\tp5.Renderer2D.prototype.bezier = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n\t  this._pInst.beginShape();\n\t  this._pInst.vertex(x1, y1);\n\t  this._pInst.bezierVertex(x2, y2, x3, y3, x4, y4);\n\t  this._pInst.endShape();\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.curve = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n\t  this._pInst.beginShape();\n\t  this._pInst.curveVertex(x1, y1);\n\t  this._pInst.curveVertex(x2, y2);\n\t  this._pInst.curveVertex(x3, y3);\n\t  this._pInst.curveVertex(x4, y4);\n\t  this._pInst.endShape();\n\t  return this;\n\t};\n\t\n\t//////////////////////////////////////////////\n\t// SHAPE | Vertex\n\t//////////////////////////////////////////////\n\t\n\tp5.Renderer2D.prototype._doFillStrokeClose = function () {\n\t  if (this._doFill) {\n\t    this.drawingContext.fill();\n\t  }\n\t  if (this._doStroke) {\n\t    this.drawingContext.stroke();\n\t  }\n\t  this.drawingContext.closePath();\n\t};\n\t\n\t//////////////////////////////////////////////\n\t// TRANSFORM\n\t//////////////////////////////////////////////\n\t\n\tp5.Renderer2D.prototype.applyMatrix =\n\tfunction(n00, n01, n02, n10, n11, n12) {\n\t  this.drawingContext.transform(n00, n01, n02, n10, n11, n12);\n\t};\n\t\n\tp5.Renderer2D.prototype.resetMatrix = function() {\n\t  this.drawingContext.setTransform(1, 0, 0, 1, 0, 0);\n\t  this.drawingContext.scale(this._pInst._pixelDensity,\n\t                            this._pInst._pixelDensity);\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.rotate = function(r) {\n\t  this.drawingContext.rotate(r);\n\t};\n\t\n\tp5.Renderer2D.prototype.scale = function(x,y) {\n\t  this.drawingContext.scale(x, y);\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.shearX = function(angle) {\n\t  if (this._pInst._angleMode === constants.DEGREES) {\n\t    // undoing here, because it gets redone in tan()\n\t    angle = this._pInst.degrees(angle);\n\t  }\n\t  this.drawingContext.transform(1, 0, this._pInst.tan(angle), 1, 0, 0);\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.shearY = function(angle) {\n\t  if (this._pInst._angleMode === constants.DEGREES) {\n\t    // undoing here, because it gets redone in tan()\n\t    angle = this._pInst.degrees(angle);\n\t  }\n\t  this.drawingContext.transform(1, this._pInst.tan(angle), 0, 1, 0, 0);\n\t  return this;\n\t};\n\t\n\tp5.Renderer2D.prototype.translate = function(x, y) {\n\t  this.drawingContext.translate(x, y);\n\t  return this;\n\t};\n\t\n\t//////////////////////////////////////////////\n\t// TYPOGRAPHY\n\t//\n\t//////////////////////////////////////////////\n\t\n\tp5.Renderer2D.prototype.text = function (str, x, y, maxWidth, maxHeight) {\n\t\n\t  var p = this._pInst, cars, n, ii, jj, line, testLine,\n\t    testWidth, words, totalHeight, baselineHacked,\n\t    finalMaxHeight = Number.MAX_VALUE;\n\t\n\t  // baselineHacked: (HACK)\n\t  // A temporary fix to conform to Processing's implementation\n\t  // of BASELINE vertical alignment in a bounding box\n\t\n\t  if (!(this._doFill || this._doStroke)) {\n\t    return;\n\t  }\n\t\n\t  if (typeof str !== 'string') {\n\t    str = str.toString();\n\t  }\n\t\n\t  str = str.replace(/(\\t)/g, '  ');\n\t  cars = str.split('\\n');\n\t\n\t  if (typeof maxWidth !== 'undefined') {\n\t\n\t    totalHeight = 0;\n\t    for (ii = 0; ii < cars.length; ii++) {\n\t      line = '';\n\t      words = cars[ii].split(' ');\n\t      for (n = 0; n < words.length; n++) {\n\t        testLine = line + words[n] + ' ';\n\t        testWidth = this.textWidth(testLine);\n\t        if (testWidth > maxWidth) {\n\t          line = words[n] + ' ';\n\t          totalHeight += p.textLeading();\n\t        } else {\n\t          line = testLine;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._rectMode === constants.CENTER) {\n\t\n\t      x -= maxWidth / 2;\n\t      y -= maxHeight / 2;\n\t    }\n\t\n\t    switch (this.drawingContext.textAlign) {\n\t\n\t      case constants.CENTER:\n\t        x += maxWidth / 2;\n\t        break;\n\t      case constants.RIGHT:\n\t        x += maxWidth;\n\t        break;\n\t    }\n\t\n\t    if (typeof maxHeight !== 'undefined') {\n\t\n\t      switch (this.drawingContext.textBaseline) {\n\t        case constants.BOTTOM:\n\t          y += (maxHeight - totalHeight);\n\t          break;\n\t        case constants._CTX_MIDDLE: // CENTER?\n\t          y += (maxHeight - totalHeight) / 2;\n\t          break;\n\t        case constants.BASELINE:\n\t          baselineHacked = true;\n\t          this.drawingContext.textBaseline = constants.TOP;\n\t          break;\n\t      }\n\t\n\t      // remember the max-allowed y-position for any line (fix to #928)\n\t      finalMaxHeight = (y + maxHeight) - p.textAscent();\n\t    }\n\t\n\t    for (ii = 0; ii < cars.length; ii++) {\n\t\n\t      line = '';\n\t      words = cars[ii].split(' ');\n\t      for (n = 0; n < words.length; n++) {\n\t        testLine = line + words[n] + ' ';\n\t        testWidth = this.textWidth(testLine);\n\t        if (testWidth > maxWidth && line.length > 0) {\n\t          this._renderText(p, line, x, y, finalMaxHeight);\n\t          line = words[n] + ' ';\n\t          y += p.textLeading();\n\t        } else {\n\t          line = testLine;\n\t        }\n\t      }\n\t\n\t      this._renderText(p, line, x, y, finalMaxHeight);\n\t      y += p.textLeading();\n\t    }\n\t  }\n\t  else {\n\t    // Offset to account for vertically centering multiple lines of text - no\n\t    // need to adjust anything for vertical align top or baseline\n\t    var offset = 0,\n\t      vAlign = p.textAlign().vertical;\n\t    if (vAlign === constants.CENTER) {\n\t      offset = ((cars.length - 1) * p.textLeading()) / 2;\n\t    } else if (vAlign === constants.BOTTOM) {\n\t      offset = (cars.length - 1) * p.textLeading();\n\t    }\n\t\n\t    for (jj = 0; jj < cars.length; jj++) {\n\t\n\t      this._renderText(p, cars[jj], x, y-offset, finalMaxHeight);\n\t      y += p.textLeading();\n\t    }\n\t  }\n\t\n\t  if (baselineHacked) {\n\t    this.drawingContext.textBaseline = constants.BASELINE;\n\t  }\n\t\n\t  return p;\n\t};\n\t\n\tp5.Renderer2D.prototype._renderText = function(p, line, x, y, maxY) {\n\t\n\t  if (y >= maxY) {\n\t    return; // don't render lines beyond our maxY position\n\t  }\n\t\n\t  p.push(); // fix to #803\n\t\n\t  if (!this._isOpenType()) {  // a system/browser font\n\t\n\t    // no stroke unless specified by user\n\t    if (this._doStroke && this._strokeSet) {\n\t\n\t      this.drawingContext.strokeText(line, x, y);\n\t    }\n\t\n\t    if (this._doFill) {\n\t\n\t      // if fill hasn't been set by user, use default text fill\n\t      this.drawingContext.fillStyle =  this._fillSet ?\n\t        this.drawingContext.fillStyle : constants._DEFAULT_TEXT_FILL;\n\t\n\t      this.drawingContext.fillText(line, x, y);\n\t    }\n\t  }\n\t  else { // an opentype font, let it handle the rendering\n\t\n\t    this._textFont._renderPath(line, x, y, { renderer: this });\n\t  }\n\t\n\t  p.pop();\n\t\n\t  return p;\n\t};\n\t\n\tp5.Renderer2D.prototype.textWidth = function(s) {\n\t\n\t  if (this._isOpenType()) {\n\t\n\t    return this._textFont._textWidth(s, this._textSize);\n\t  }\n\t\n\t  return this.drawingContext.measureText(s).width;\n\t};\n\t\n\tp5.Renderer2D.prototype.textAlign = function(h, v) {\n\t\n\t  if (arguments.length) {\n\t\n\t    if (h === constants.LEFT ||\n\t      h === constants.RIGHT ||\n\t      h === constants.CENTER) {\n\t\n\t      this.drawingContext.textAlign = h;\n\t    }\n\t\n\t    if (v === constants.TOP ||\n\t      v === constants.BOTTOM ||\n\t      v === constants.CENTER ||\n\t      v === constants.BASELINE) {\n\t\n\t      if (v === constants.CENTER) {\n\t        this.drawingContext.textBaseline = constants._CTX_MIDDLE;\n\t      } else {\n\t        this.drawingContext.textBaseline = v;\n\t      }\n\t    }\n\t\n\t    return this._pInst;\n\t\n\t  } else {\n\t\n\t    var valign = this.drawingContext.textBaseline;\n\t\n\t    if (valign === constants._CTX_MIDDLE) {\n\t\n\t      valign = constants.CENTER;\n\t    }\n\t\n\t    return {\n\t\n\t      horizontal: this.drawingContext.textAlign,\n\t      vertical: valign\n\t    };\n\t  }\n\t};\n\t\n\tp5.Renderer2D.prototype._applyTextProperties = function() {\n\t\n\t  var font, p = this._pInst;\n\t\n\t  this._setProperty('_textAscent', null);\n\t  this._setProperty('_textDescent', null);\n\t\n\t  font = this._textFont;\n\t\n\t  if (this._isOpenType()) {\n\t\n\t    font = this._textFont.font.familyName;\n\t    this._setProperty('_textStyle', this._textFont.font.styleName);\n\t  }\n\t\n\t  this.drawingContext.font = this._textStyle + ' ' +\n\t  this._textSize + 'px ' + font;\n\t\n\t  return p;\n\t};\n\t\n\t\n\t//////////////////////////////////////////////\n\t// STRUCTURE\n\t//////////////////////////////////////////////\n\t\n\tp5.Renderer2D.prototype.push = function() {\n\t  this.drawingContext.save();\n\t};\n\t\n\tp5.Renderer2D.prototype.pop = function() {\n\t  this.drawingContext.restore();\n\t};\n\t\n\tmodule.exports = p5.Renderer2D;\n\t\n\t},{\"../image/filters\":54,\"./canvas\":35,\"./constants\":36,\"./core\":37,\"./p5.Renderer\":43}],45:[function(_dereq_,module,exports){\n\t/**\n\t * @module Rendering\n\t * @submodule Rendering\n\t * @for p5\n\t */\n\t\n\tvar p5 = _dereq_('./core');\n\tvar constants = _dereq_('./constants');\n\t_dereq_('./p5.Graphics');\n\t_dereq_('./p5.Renderer2D');\n\t_dereq_('../webgl/p5.RendererGL');\n\tvar defaultId = 'defaultCanvas0'; // this gets set again in createCanvas\n\t\n\t/**\n\t * Creates a canvas element in the document, and sets the dimensions of it\n\t * in pixels. This method should be called only once at the start of setup.\n\t * Calling createCanvas more than once in a sketch will result in very\n\t * unpredicable behavior. If you want more than one drawing canvas\n\t * you could use createGraphics (hidden by default but it can be shown).\n\t * <br><br>\n\t * The system variables width and height are set by the parameters passed\n\t * to this function. If createCanvas() is not used, the window will be\n\t * given a default size of 100x100 pixels.\n\t * <br><br>\n\t * For more ways to position the canvas, see the\n\t * <a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>\n\t * positioning the canvas</a> wiki page.\n\t *\n\t * @method createCanvas\n\t * @param  {Number} w width of the canvas\n\t * @param  {Number} h height of the canvas\n\t * @param  {Constant} [renderer] P2D or WEBGL\n\t * @return {Object} canvas generated\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup() {\n\t *   createCanvas(100, 50);\n\t *   background(153);\n\t *   line(0, 0, width, height);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Black line extending from top-left of canvas to bottom right.\n\t *\n\t */\n\t\n\tp5.prototype.createCanvas = function(w, h, renderer) {\n\t  //optional: renderer, otherwise defaults to p2d\n\t  var r = renderer || constants.P2D;\n\t  var isDefault, c;\n\t\n\t  //4th arg (isDefault) used when called onLoad,\n\t  //otherwise hidden to the public api\n\t  if(arguments[3]){\n\t    isDefault =\n\t    (typeof arguments[3] === 'boolean') ? arguments[3] : false;\n\t  }\n\t\n\t  if(r === constants.WEBGL){\n\t    c = document.getElementById(defaultId);\n\t    if(c){ //if defaultCanvas already exists\n\t      c.parentNode.removeChild(c); //replace the existing defaultCanvas\n\t    }\n\t    c = document.createElement('canvas');\n\t    c.id = defaultId;\n\t  }\n\t  else {\n\t    if (isDefault) {\n\t      c = document.createElement('canvas');\n\t      var i = 0;\n\t      while (document.getElementById('defaultCanvas'+i)) {\n\t        i++;\n\t      }\n\t      defaultId = 'defaultCanvas'+i;\n\t      c.id = defaultId;\n\t    } else { // resize the default canvas if new one is created\n\t      c = this.canvas;\n\t    }\n\t  }\n\t\n\t  // set to invisible if still in setup (to prevent flashing with manipulate)\n\t  if (!this._setupDone) {\n\t    c.dataset.hidden = true; // tag to show later\n\t    c.style.visibility='hidden';\n\t  }\n\t\n\t  if (this._userNode) { // user input node case\n\t    this._userNode.appendChild(c);\n\t  } else {\n\t    document.body.appendChild(c);\n\t  }\n\t\n\t\n\t\n\t  // Init our graphics renderer\n\t  //webgl mode\n\t  if (r === constants.WEBGL) {\n\t    this._setProperty('_renderer', new p5.RendererGL(c, this, true));\n\t    this._isdefaultGraphics = true;\n\t  }\n\t  //P2D mode\n\t  else {\n\t    if (!this._isdefaultGraphics) {\n\t      this._setProperty('_renderer', new p5.Renderer2D(c, this, true));\n\t      this._isdefaultGraphics = true;\n\t    }\n\t  }\n\t  this._renderer.resize(w, h);\n\t  this._renderer._applyDefaults();\n\t  if (isDefault) { // only push once\n\t    this._elements.push(this._renderer);\n\t  }\n\t  return this._renderer;\n\t};\n\t\n\t/**\n\t * Resizes the canvas to given width and height. The canvas will be cleared\n\t * and draw will be called immediately, allowing the sketch to re-render itself\n\t * in the resized canvas.\n\t * @method resizeCanvas\n\t * @example\n\t * <div class=\"norender\"><code>\n\t * function setup() {\n\t *   createCanvas(windowWidth, windowHeight);\n\t * }\n\t *\n\t * function draw() {\n\t *  background(0, 100, 200);\n\t * }\n\t *\n\t * function windowResized() {\n\t *   resizeCanvas(windowWidth, windowHeight);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * No image displayed.\n\t *\n\t */\n\tp5.prototype.resizeCanvas = function (w, h, noRedraw) {\n\t  if (this._renderer) {\n\t\n\t    // save canvas properties\n\t    var props = {};\n\t    for (var key in this.drawingContext) {\n\t      var val = this.drawingContext[key];\n\t      if (typeof val !== 'object' && typeof val !== 'function') {\n\t        props[key] = val;\n\t      }\n\t    }\n\t    this._renderer.resize(w, h);\n\t    // reset canvas properties\n\t    for (var savedKey in props) {\n\t      this.drawingContext[savedKey] = props[savedKey];\n\t    }\n\t    if (!noRedraw) {\n\t      this.redraw();\n\t    }\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Removes the default canvas for a p5 sketch that doesn't\n\t * require a canvas\n\t * @method noCanvas\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup() {\n\t *   noCanvas();\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype.noCanvas = function() {\n\t  if (this.canvas) {\n\t    this.canvas.parentNode.removeChild(this.canvas);\n\t  }\n\t};\n\t\n\t/**\n\t * Creates and returns a new p5.Renderer object. Use this class if you need\n\t * to draw into an off-screen graphics buffer. The two parameters define the\n\t * width and height in pixels.\n\t *\n\t * @method createGraphics\n\t * @param  {Number} w width of the offscreen graphics buffer\n\t * @param  {Number} h height of the offscreen graphics buffer\n\t * @param  {Constant} [renderer] P2D or WEBGL\n\t * undefined defaults to p2d\n\t * @return {Object} offscreen graphics buffer\n\t * @example\n\t * <div>\n\t * <code>\n\t * var pg;\n\t * function setup() {\n\t *   createCanvas(100, 100);\n\t *   pg = createGraphics(100, 100);\n\t * }\n\t * function draw() {\n\t *   background(200);\n\t *   pg.background(100);\n\t *   pg.noStroke();\n\t *   pg.ellipse(pg.width/2, pg.height/2, 50, 50);\n\t *   image(pg, 50, 50);\n\t *   image(pg, 0, 0, 50, 50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 4 grey squares alternating light and dark grey. White quarter circle mid-left.\n\t *\n\t */\n\tp5.prototype.createGraphics = function(w, h, renderer){\n\t  return new p5.Graphics(w, h, renderer, this);\n\t};\n\t\n\t/**\n\t * Blends the pixels in the display window according to the defined mode.\n\t * There is a choice of the following modes to blend the source pixels (A)\n\t * with the ones of pixels already in the display window (B):\n\t * <ul>\n\t * <li><code>BLEND</code> - linear interpolation of colours: C =\n\t * A*factor + B. This is the default blending mode.</li>\n\t * <li><code>ADD</code> - sum of A and B</li>\n\t * <li><code>DARKEST</code> - only the darkest colour succeeds: C =\n\t * min(A*factor, B).</li>\n\t * <li><code>LIGHTEST</code> - only the lightest colour succeeds: C =\n\t * max(A*factor, B).</li>\n\t * <li><code>DIFFERENCE</code> - subtract colors from underlying image.</li>\n\t * <li><code>EXCLUSION</code> - similar to <code>DIFFERENCE</code>, but less\n\t * extreme.</li>\n\t * <li><code>MULTIPLY</code> - multiply the colors, result will always be\n\t * darker.</li>\n\t * <li><code>SCREEN</code> - opposite multiply, uses inverse values of the\n\t * colors.</li>\n\t * <li><code>REPLACE</code> - the pixels entirely replace the others and\n\t * don't utilize alpha (transparency) values.</li>\n\t * <li><code>OVERLAY</code> - mix of <code>MULTIPLY</code> and <code>SCREEN\n\t * </code>. Multiplies dark values, and screens light values.</li>\n\t * <li><code>HARD_LIGHT</code> - <code>SCREEN</code> when greater than 50%\n\t * gray, <code>MULTIPLY</code> when lower.</li>\n\t * <li><code>SOFT_LIGHT</code> - mix of <code>DARKEST</code> and\n\t * <code>LIGHTEST</code>. Works like <code>OVERLAY</code>, but not as harsh.\n\t * </li>\n\t * <li><code>DODGE</code> - lightens light tones and increases contrast,\n\t * ignores darks.</li>\n\t * <li><code>BURN</code> - darker areas are applied, increasing contrast,\n\t * ignores lights.</li>\n\t * </ul>\n\t *\n\t * @method blendMode\n\t * @param  {Constant} mode blend mode to set for canvas\n\t * @example\n\t * <div>\n\t * <code>\n\t * blendMode(LIGHTEST);\n\t * strokeWeight(30);\n\t * stroke(80, 150, 255);\n\t * line(25, 25, 75, 75);\n\t * stroke(255, 50, 50);\n\t * line(75, 25, 25, 75);\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * blendMode(MULTIPLY);\n\t * strokeWeight(30);\n\t * stroke(80, 150, 255);\n\t * line(25, 25, 75, 75);\n\t * stroke(255, 50, 50);\n\t * line(75, 25, 25, 75);\n\t * </code>\n\t * </div>\n\t * @alt\n\t * translucent image thick red & blue diagonal rounded lines intersecting center\n\t * Thick red & blue diagonal rounded lines intersecting center. dark at overlap\n\t *\n\t */\n\tp5.prototype.blendMode = function(mode) {\n\t  if (mode === constants.BLEND || mode === constants.DARKEST ||\n\t    mode === constants.LIGHTEST || mode === constants.DIFFERENCE ||\n\t    mode === constants.MULTIPLY || mode === constants.EXCLUSION ||\n\t    mode === constants.SCREEN || mode === constants.REPLACE ||\n\t    mode === constants.OVERLAY || mode === constants.HARD_LIGHT ||\n\t    mode === constants.SOFT_LIGHT || mode === constants.DODGE ||\n\t    mode === constants.BURN || mode === constants.ADD ||\n\t    mode === constants.NORMAL) {\n\t    this._renderer.blendMode(mode);\n\t  } else {\n\t    throw new Error('Mode '+mode+' not recognized.');\n\t  }\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../webgl/p5.RendererGL\":86,\"./constants\":36,\"./core\":37,\"./p5.Graphics\":42,\"./p5.Renderer2D\":44}],46:[function(_dereq_,module,exports){\n\t\n\t// requestAnim shim layer by Paul Irish\n\twindow.requestAnimationFrame = (function(){\n\t  return window.requestAnimationFrame      ||\n\t        window.webkitRequestAnimationFrame ||\n\t        window.mozRequestAnimationFrame    ||\n\t        window.oRequestAnimationFrame      ||\n\t        window.msRequestAnimationFrame     ||\n\t        function(callback, element){\n\t          // should '60' here be framerate?\n\t          window.setTimeout(callback, 1000 / 60);\n\t        };\n\t})();\n\t\n\t// use window.performance() to get max fast and accurate time in milliseconds\n\twindow.performance = window.performance || {};\n\twindow.performance.now = (function(){\n\t  var load_date = Date.now();\n\t  return window.performance.now        ||\n\t        window.performance.mozNow      ||\n\t        window.performance.msNow       ||\n\t        window.performance.oNow        ||\n\t        window.performance.webkitNow   ||\n\t        function () {\n\t          return Date.now() - load_date;\n\t        };\n\t})();\n\t\n\t/*\n\t// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t// http://my.opera.com/emoller/blog/2011/12/20/\n\t// requestanimationframe-for-smart-er-animating\n\t// requestAnimationFrame polyfill by Erik Möller\n\t// fixes from Paul Irish and Tino Zijdel\n\t(function() {\n\t  var lastTime = 0;\n\t  var vendors = ['ms', 'moz', 'webkit', 'o'];\n\t  for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t    window.requestAnimationFrame =\n\t      window[vendors[x]+'RequestAnimationFrame'];\n\t    window.cancelAnimationFrame =\n\t      window[vendors[x]+'CancelAnimationFrame'] ||\n\t      window[vendors[x]+'CancelRequestAnimationFrame'];\n\t  }\n\t\n\t  if (!window.requestAnimationFrame) {\n\t    window.requestAnimationFrame = function(callback, element) {\n\t      var currTime = new Date().getTime();\n\t      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t      var id = window.setTimeout(function()\n\t        { callback(currTime + timeToCall); }, timeToCall);\n\t      lastTime = currTime + timeToCall;\n\t      return id;\n\t    };\n\t  }\n\t\n\t  if (!window.cancelAnimationFrame) {\n\t    window.cancelAnimationFrame = function(id) {\n\t      clearTimeout(id);\n\t    };\n\t  }\n\t}());\n\t*/\n\t\n\t/**\n\t * shim for Uint8ClampedArray.slice\n\t * (allows arrayCopy to work with pixels[])\n\t * with thanks to http://halfpapstudios.com/blog/tag/html5-canvas/\n\t * Enumerable set to false to protect for...in from\n\t * Uint8ClampedArray.prototype pollution.\n\t */\n\t(function () {\n\t  'use strict';\n\t  if (typeof Uint8ClampedArray !== 'undefined' &&\n\t      !Uint8ClampedArray.prototype.slice) {\n\t    Object.defineProperty(Uint8ClampedArray.prototype, 'slice', {\n\t      value: Array.prototype.slice,\n\t      writable: true, configurable: true, enumerable: false\n\t    });\n\t  }\n\t}());\n\t\n\t},{}],47:[function(_dereq_,module,exports){\n\t/**\n\t * @module Structure\n\t * @submodule Structure\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('./core');\n\t\n\tp5.prototype.exit = function() {\n\t  throw 'exit() not implemented, see remove()';\n\t};\n\t/**\n\t * Stops p5.js from continuously executing the code within draw().\n\t * If loop() is called, the code in draw() begins to run continuously again.\n\t * If using noLoop() in setup(), it should be the last line inside the block.\n\t * <br><br>\n\t * When noLoop() is used, it's not possible to manipulate or access the\n\t * screen inside event handling functions such as mousePressed() or\n\t * keyPressed(). Instead, use those functions to call redraw() or loop(),\n\t * which will run draw(), which can update the screen properly. This means\n\t * that when noLoop() has been called, no drawing can happen, and functions\n\t * like saveFrame() or loadPixels() may not be used.\n\t * <br><br>\n\t * Note that if the sketch is resized, redraw() will be called to update\n\t * the sketch, even after noLoop() has been specified. Otherwise, the sketch\n\t * would enter an odd state until loop() was called.\n\t *\n\t * @method noLoop\n\t * @example\n\t * <div><code>\n\t * function setup() {\n\t *   createCanvas(100, 100);\n\t *   background(200);\n\t *   noLoop();\n\t * }\n\t\n\t * function draw() {\n\t *   line(10, 10, 90, 90);\n\t * }\n\t * </code></div>\n\t *\n\t * <div><code>\n\t * var x = 0;\n\t * function setup() {\n\t *   createCanvas(100, 100);\n\t * }\n\t *\n\t * function draw() {\n\t *   background(204);\n\t *   x = x + 0.1;\n\t *   if (x > width) {\n\t *     x = 0;\n\t *   }\n\t *   line(x, 0, x, height);\n\t * }\n\t *\n\t * function mousePressed() {\n\t *   noLoop();\n\t * }\n\t *\n\t * function mouseReleased() {\n\t *   loop();\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * 113 pixel long line extending from top-left to bottom right of canvas.\n\t * horizontal line moves slowly from left. Loops but stops on mouse press.\n\t *\n\t */\n\tp5.prototype.noLoop = function() {\n\t  this._loop = false;\n\t};\n\t/**\n\t * By default, p5.js loops through draw() continuously, executing the code\n\t * within it. However, the draw() loop may be stopped by calling noLoop().\n\t * In that case, the draw() loop can be resumed with loop().\n\t *\n\t * @method loop\n\t * @example\n\t * <div><code>\n\t * var x = 0;\n\t * function setup() {\n\t *   createCanvas(100, 100);\n\t *   noLoop();\n\t * }\n\t *\n\t * function draw() {\n\t *   background(204);\n\t *   x = x + 0.1;\n\t *   if (x > width) {\n\t *     x = 0;\n\t *   }\n\t *   line(x, 0, x, height);\n\t * }\n\t *\n\t * function mousePressed() {\n\t *   loop();\n\t * }\n\t *\n\t * function mouseReleased() {\n\t *   noLoop();\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * horizontal line moves slowly from left. Loops but stops on mouse press.\n\t *\n\t */\n\t\n\tp5.prototype.loop = function() {\n\t  this._loop = true;\n\t  this._draw();\n\t};\n\t\n\t/**\n\t * The push() function saves the current drawing style settings and\n\t * transformations, while pop() restores these settings. Note that these\n\t * functions are always used together. They allow you to change the style\n\t * and transformation settings and later return to what you had. When a new\n\t * state is started with push(), it builds on the current style and transform\n\t * information. The push() and pop() functions can be embedded to provide\n\t * more control. (See the second example for a demonstration.)\n\t * <br><br>\n\t * push() stores information related to the current transformation state\n\t * and style settings controlled by the following functions: fill(),\n\t * stroke(), tint(), strokeWeight(), strokeCap(), strokeJoin(),\n\t * imageMode(), rectMode(), ellipseMode(), colorMode(), textAlign(),\n\t * textFont(), textMode(), textSize(), textLeading().\n\t *\n\t * @method push\n\t * @example\n\t * <div>\n\t * <code>\n\t * ellipse(0, 50, 33, 33);  // Left circle\n\t *\n\t * push();  // Start a new drawing state\n\t * strokeWeight(10);\n\t * fill(204, 153, 0);\n\t * translate(50, 0);\n\t * ellipse(0, 50, 33, 33);  // Middle circle\n\t * pop();  // Restore original state\n\t *\n\t * ellipse(100, 50, 33, 33);  // Right circle\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * ellipse(0, 50, 33, 33);  // Left circle\n\t *\n\t * push();  // Start a new drawing state\n\t * strokeWeight(10);\n\t * fill(204, 153, 0);\n\t * ellipse(33, 50, 33, 33);  // Left-middle circle\n\t *\n\t * push();  // Start another new drawing state\n\t * stroke(0, 102, 153);\n\t * ellipse(66, 50, 33, 33);  // Right-middle circle\n\t * pop();  // Restore previous state\n\t *\n\t * pop();  // Restore original state\n\t *\n\t * ellipse(100, 50, 33, 33);  // Right circle\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Gold ellipse + thick black outline @center 2 white ellipses on left and right.\n\t * 2 Gold ellipses left black right blue stroke. 2 white ellipses on left+right.\n\t *\n\t */\n\tp5.prototype.push = function () {\n\t  this._renderer.push();\n\t  this._styles.push({\n\t    _doStroke: this._renderer._doStroke,\n\t    _strokeSet: this._renderer._strokeSet,\n\t    _doFill: this._renderer._doFill,\n\t    _fillSet: this._renderer._fillSet,\n\t    _tint: this._renderer._tint,\n\t    _imageMode: this._renderer._imageMode,\n\t    _rectMode: this._renderer._rectMode,\n\t    _ellipseMode: this._renderer._ellipseMode,\n\t    _colorMode: this._renderer._colorMode,\n\t    _textFont: this._renderer._textFont,\n\t    _textLeading: this._renderer._textLeading,\n\t    _textSize: this._renderer._textSize,\n\t    _textStyle: this._renderer._textStyle\n\t  });\n\t};\n\t\n\t/**\n\t * The push() function saves the current drawing style settings and\n\t * transformations, while pop() restores these settings. Note that these\n\t * functions are always used together. They allow you to change the style\n\t * and transformation settings and later return to what you had. When a new\n\t * state is started with push(), it builds on the current style and transform\n\t * information. The push() and pop() functions can be embedded to provide\n\t * more control. (See the second example for a demonstration.)\n\t * <br><br>\n\t * push() stores information related to the current transformation state\n\t * and style settings controlled by the following functions: fill(),\n\t * stroke(), tint(), strokeWeight(), strokeCap(), strokeJoin(),\n\t * imageMode(), rectMode(), ellipseMode(), colorMode(), textAlign(),\n\t * textFont(), textMode(), textSize(), textLeading().\n\t *\n\t * @method pop\n\t * @example\n\t * <div>\n\t * <code>\n\t * ellipse(0, 50, 33, 33);  // Left circle\n\t *\n\t * push();  // Start a new drawing state\n\t * translate(50, 0);\n\t * strokeWeight(10);\n\t * fill(204, 153, 0);\n\t * ellipse(0, 50, 33, 33);  // Middle circle\n\t * pop();  // Restore original state\n\t *\n\t * ellipse(100, 50, 33, 33);  // Right circle\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * ellipse(0, 50, 33, 33);  // Left circle\n\t *\n\t * push();  // Start a new drawing state\n\t * strokeWeight(10);\n\t * fill(204, 153, 0);\n\t * ellipse(33, 50, 33, 33);  // Left-middle circle\n\t *\n\t * push();  // Start another new drawing state\n\t * stroke(0, 102, 153);\n\t * ellipse(66, 50, 33, 33);  // Right-middle circle\n\t * pop();  // Restore previous state\n\t *\n\t * pop();  // Restore original state\n\t *\n\t * ellipse(100, 50, 33, 33);  // Right circle\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Gold ellipse + thick black outline @center 2 white ellipses on left and right.\n\t * 2 Gold ellipses left black right blue stroke. 2 white ellipses on left+right.\n\t *\n\t */\n\tp5.prototype.pop = function () {\n\t  this._renderer.pop();\n\t  var lastS = this._styles.pop();\n\t  for(var prop in lastS){\n\t    this._renderer[prop] = lastS[prop];\n\t  }\n\t};\n\t\n\tp5.prototype.pushStyle = function() {\n\t  throw new Error('pushStyle() not used, see push()');\n\t};\n\t\n\tp5.prototype.popStyle = function() {\n\t  throw new Error('popStyle() not used, see pop()');\n\t};\n\t\n\t/**\n\t *\n\t * Executes the code within draw() one time. This functions allows the\n\t * program to update the display window only when necessary, for example\n\t * when an event registered by mousePressed() or keyPressed() occurs.\n\t * <br><br>\n\t * In structuring a program, it only makes sense to call redraw() within\n\t * events such as mousePressed(). This is because redraw() does not run\n\t * draw() immediately (it only sets a flag that indicates an update is\n\t * needed).\n\t * <br><br>\n\t * The redraw() function does not work properly when called inside draw().\n\t * To enable/disable animations, use loop() and noLoop().\n\t * <br><br>\n\t * In addition you can set the number of redraws per method call. Just\n\t * add an integer as single parameter for the number of redraws.\n\t *\n\t * @method redraw\n\t * @param  {Integer} [n] Redraw for n-times. The default value is 1.\n\t * @example\n\t * <div><code>\n\t * var x = 0;\n\t *\n\t * function setup() {\n\t *   createCanvas(100, 100);\n\t *   noLoop();\n\t * }\n\t *\n\t * function draw() {\n\t *   background(204);\n\t *   line(x, 0, x, height);\n\t * }\n\t *\n\t * function mousePressed() {\n\t *   x += 1;\n\t *   redraw();\n\t * }\n\t * </code></div>\n\t *\n\t * <div class='norender'><code>\n\t * var x = 0;\n\t *\n\t * function setup() {\n\t *   createCanvas(100, 100);\n\t *   noLoop();\n\t * }\n\t *\n\t * function draw() {\n\t *   background(204);\n\t *   x += 1;\n\t *   line(x, 0, x, height);\n\t * }\n\t *\n\t * function mousePressed() {\n\t *   redraw(5);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * black line on far left of canvas\n\t * black line on far left of canvas\n\t *\n\t */\n\tp5.prototype.redraw = function () {\n\t  this.resetMatrix();\n\t  if(this._renderer.isP3D){\n\t    this._renderer._update();\n\t  }\n\t\n\t  var numberOfRedraws = 1;\n\t  if (arguments.length === 1) {\n\t    try {\n\t      if (parseInt(arguments[0]) > 1) {\n\t        numberOfRedraws = parseInt(arguments[0]);\n\t      }\n\t    } catch (error) {\n\t      // Do nothing, because the default value didn't be changed.\n\t    }\n\t  }\n\t  var userSetup = this.setup || window.setup;\n\t  var userDraw = this.draw || window.draw;\n\t  if (typeof userDraw === 'function') {\n\t    if (typeof userSetup === 'undefined') {\n\t      this.scale(this._pixelDensity, this._pixelDensity);\n\t    }\n\t    var self = this;\n\t    var callMethod = function (f) {\n\t      f.call(self);\n\t    };\n\t    for (var idxRedraw = 0; idxRedraw < numberOfRedraws; idxRedraw++) {\n\t      this._registeredMethods.pre.forEach(callMethod);\n\t      userDraw();\n\t      this._registeredMethods.post.forEach(callMethod);\n\t    }\n\t  }\n\t};\n\t\n\tp5.prototype.size = function() {\n\t  var s = 'size() is not a valid p5 function, to set the size of the ';\n\t  s += 'drawing canvas, please use createCanvas() instead';\n\t  throw s;\n\t};\n\t\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"./core\":37}],48:[function(_dereq_,module,exports){\n\t/**\n\t * @module Transform\n\t * @submodule Transform\n\t * @for p5\n\t * @requires core\n\t * @requires constants\n\t */\n\t\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('./core');\n\tvar constants = _dereq_('./constants');\n\t\n\t/**\n\t * Multiplies the current matrix by the one specified through the parameters.\n\t * This is very slow because it will try to calculate the inverse of the\n\t * transform, so avoid it whenever possible.\n\t *\n\t * @method applyMatrix\n\t * @param  {Number} n00 numbers which define the 3x2 matrix to be multiplied\n\t * @param  {Number} n01 numbers which define the 3x2 matrix to be multiplied\n\t * @param  {Number} n02 numbers which define the 3x2 matrix to be multiplied\n\t * @param  {Number} n10 numbers which define the 3x2 matrix to be multiplied\n\t * @param  {Number} n11 numbers which define the 3x2 matrix to be multiplied\n\t * @param  {Number} n12 numbers which define the 3x2 matrix to be multiplied\n\t * @return {p5}         the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Example in the works.\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * no image diplayed\n\t *\n\t */\n\tp5.prototype.applyMatrix = function(n00, n01, n02, n10, n11, n12) {\n\t  this._renderer.applyMatrix(n00, n01, n02, n10, n11, n12);\n\t  return this;\n\t};\n\t\n\tp5.prototype.popMatrix = function() {\n\t  throw new Error('popMatrix() not used, see pop()');\n\t};\n\t\n\tp5.prototype.printMatrix = function() {\n\t  throw new Error('printMatrix() not implemented');\n\t};\n\t\n\tp5.prototype.pushMatrix = function() {\n\t  throw new Error('pushMatrix() not used, see push()');\n\t};\n\t\n\t/**\n\t * Replaces the current matrix with the identity matrix.\n\t *\n\t * @method resetMatrix\n\t * @return {p5} the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Example in the works.\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * no image diplayed\n\t *\n\t */\n\tp5.prototype.resetMatrix = function() {\n\t  this._renderer.resetMatrix();\n\t  return this;\n\t};\n\t\n\t/**\n\t * Rotates a shape the amount specified by the angle parameter. This\n\t * function accounts for angleMode, so angles can be entered in either\n\t * RADIANS or DEGREES.\n\t * <br><br>\n\t * Objects are always rotated around their relative position to the\n\t * origin and positive numbers rotate objects in a clockwise direction.\n\t * Transformations apply to everything that happens after and subsequent\n\t * calls to the function accumulates the effect. For example, calling\n\t * rotate(HALF_PI) and then rotate(HALF_PI) is the same as rotate(PI).\n\t * All tranformations are reset when draw() begins again.\n\t * <br><br>\n\t * Technically, rotate() multiplies the current transformation matrix\n\t * by a rotation matrix. This function can be further controlled by\n\t * the push() and pop().\n\t *\n\t * @method rotate\n\t * @param  {Number} angle the angle of rotation, specified in radians\n\t *                        or degrees, depending on current angleMode\n\t * @return {p5}           the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * translate(width/2, height/2);\n\t * rotate(PI/3.0);\n\t * rect(-26, -26, 52, 52);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * white 52x52 rect with black outline at center rotated counter 45 degrees\n\t *\n\t */\n\t/**\n\t * @method rotate\n\t * @param  {Number} rad  angle in radians\n\t * @param  {p5.Vector | Array} axis axis to rotate around\n\t * @return {p5.RendererGL}      [description]\n\t */\n\tp5.prototype.rotate = function() {\n\t  var args = new Array(arguments.length);\n\t  var r;\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  if (this._angleMode === constants.DEGREES) {\n\t    r = this.radians(args[0]);\n\t  } else if (this._angleMode === constants.RADIANS){\n\t    r = args[0];\n\t  }\n\t  //in webgl mode\n\t  if(args.length > 1){\n\t    this._renderer.rotate(r, args[1]);\n\t  }\n\t  else {\n\t    this._renderer.rotate(r);\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Rotates around X axis.\n\t * @method  rotateX\n\t * @param  {Number} rad angles in radians\n\t * @return {[type]}     [description]\n\t */\n\tp5.prototype.rotateX = function(rad) {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  if (this._renderer.isP3D) {\n\t    this._validateParameters(\n\t      'rotateX',\n\t      args,\n\t      [\n\t        ['Number']\n\t      ]\n\t    );\n\t    this._renderer.rotateX(rad);\n\t  } else {\n\t    throw 'not supported in p2d. Please use webgl mode';\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Rotates around Y axis.\n\t * @method rotateY\n\t * @param  {Number} rad angles in radians\n\t * @return {[type]}     [description]\n\t */\n\tp5.prototype.rotateY = function(rad) {\n\t  if (this._renderer.isP3D) {\n\t    var args = new Array(arguments.length);\n\t    for (var i = 0; i < args.length; ++i) {\n\t      args[i] = arguments[i];\n\t    }\n\t    this._validateParameters(\n\t      'rotateY',\n\t      args,\n\t      [\n\t        ['Number']\n\t      ]\n\t    );\n\t    this._renderer.rotateY(rad);\n\t  } else {\n\t    throw 'not supported in p2d. Please use webgl mode';\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Rotates around Z axis.  Webgl mode only.\n\t * @method rotateZ\n\t * @param  {Number} rad angles in radians\n\t * @return {[type]}     [description]\n\t */\n\tp5.prototype.rotateZ = function(rad) {\n\t  if (this._renderer.isP3D) {\n\t    var args = new Array(arguments.length);\n\t    for (var i = 0; i < args.length; ++i) {\n\t      args[i] = arguments[i];\n\t    }\n\t    this._validateParameters(\n\t      'rotateZ',\n\t      args,\n\t      [\n\t        ['Number']\n\t      ]\n\t    );\n\t    this._renderer.rotateZ(rad);\n\t  } else {\n\t    throw 'not supported in p2d. Please use webgl mode';\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Increases or decreases the size of a shape by expanding and contracting\n\t * vertices. Objects always scale from their relative origin to the\n\t * coordinate system. Scale values are specified as decimal percentages.\n\t * For example, the function call scale(2.0) increases the dimension of a\n\t * shape by 200%.\n\t * <br><br>\n\t * Transformations apply to everything that happens after and subsequent\n\t * calls to the function multiply the effect. For example, calling scale(2.0)\n\t * and then scale(1.5) is the same as scale(3.0). If scale() is called\n\t * within draw(), the transformation is reset when the loop begins again.\n\t * <br><br>\n\t * Using this function with the z parameter is only available in WEBGL mode.\n\t * This function can be further controlled with push() and pop().\n\t *\n\t * @method scale\n\t * @param  {Number | p5.Vector | Array} s\n\t *                      percent to scale the object, or percentage to\n\t *                      scale the object in the x-axis if multiple arguments\n\t *                      are given\n\t * @param  {Number} [y] percent to scale the object in the y-axis\n\t * @param  {Number} [z] percent to scale the object in the z-axis (webgl only)\n\t * @return {p5}         the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * translate(width/2, height/2);\n\t * rotate(PI/3.0);\n\t * rect(-26, -26, 52, 52);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * rect(30, 20, 50, 50);\n\t * scale(0.5, 1.3);\n\t * rect(30, 20, 50, 50);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * white 52x52 rect with black outline at center rotated counter 45 degrees\n\t * 2 white rects with black outline- 1 50x50 at center. other 25x65 bottom left\n\t *\n\t */\n\tp5.prototype.scale = function() {\n\t  var x,y,z;\n\t  var args = new Array(arguments.length);\n\t  for(var i = 0; i < args.length; i++) {\n\t    args[i] = arguments[i];\n\t  }\n\t  if(args[0] instanceof p5.Vector){\n\t    x = args[0].x;\n\t    y = args[0].y;\n\t    z = args[0].z;\n\t  }\n\t  else if(args[0] instanceof Array){\n\t    x = args[0][0];\n\t    y = args[0][1];\n\t    z = args[0][2] || 1;\n\t  }\n\t  else {\n\t    if(args.length === 1){\n\t      x = y = z = args[0];\n\t    }\n\t    else {\n\t      x = args[0];\n\t      y = args[1];\n\t      z = args[2] || 1;\n\t    }\n\t  }\n\t\n\t  if(this._renderer.isP3D){\n\t    this._renderer.scale.call(this._renderer, x,y,z);\n\t  }\n\t  else {\n\t    this._renderer.scale.call(this._renderer, x,y);\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Shears a shape around the x-axis the amount specified by the angle\n\t * parameter. Angles should be specified in the current angleMode.\n\t * Objects are always sheared around their relative position to the origin\n\t * and positive numbers shear objects in a clockwise direction.\n\t * <br><br>\n\t * Transformations apply to everything that happens after and subsequent\n\t * calls to the function accumulates the effect. For example, calling\n\t * shearX(PI/2) and then shearX(PI/2) is the same as shearX(PI).\n\t * If shearX() is called within the draw(), the transformation is reset when\n\t * the loop begins again.\n\t * <br><br>\n\t * Technically, shearX() multiplies the current transformation matrix by a\n\t * rotation matrix. This function can be further controlled by the\n\t * push() and pop() functions.\n\t *\n\t * @method shearX\n\t * @param  {Number} angle angle of shear specified in radians or degrees,\n\t *                        depending on current angleMode\n\t * @return {p5}           the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * translate(width/4, height/4);\n\t * shearX(PI/4.0);\n\t * rect(0, 0, 30, 30);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t  * white irregular quadrilateral with black outline at top middle.\n\t *\n\t */\n\tp5.prototype.shearX = function(angle) {\n\t  if (this._angleMode === constants.DEGREES) {\n\t    angle = this.radians(angle);\n\t  }\n\t  this._renderer.shearX(angle);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Shears a shape around the y-axis the amount specified by the angle\n\t * parameter. Angles should be specified in the current angleMode. Objects\n\t * are always sheared around their relative position to the origin and\n\t * positive numbers shear objects in a clockwise direction.\n\t * <br><br>\n\t * Transformations apply to everything that happens after and subsequent\n\t * calls to the function accumulates the effect. For example, calling\n\t * shearY(PI/2) and then shearY(PI/2) is the same as shearY(PI). If\n\t * shearY() is called within the draw(), the transformation is reset when\n\t * the loop begins again.\n\t * <br><br>\n\t * Technically, shearY() multiplies the current transformation matrix by a\n\t * rotation matrix. This function can be further controlled by the\n\t * push() and pop() functions.\n\t *\n\t * @method shearY\n\t * @param  {Number} angle angle of shear specified in radians or degrees,\n\t *                        depending on current angleMode\n\t * @return {p5}           the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * translate(width/4, height/4);\n\t * shearY(PI/4.0);\n\t * rect(0, 0, 30, 30);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * white irregular quadrilateral with black outline at middle bottom.\n\t *\n\t */\n\tp5.prototype.shearY = function(angle) {\n\t  if (this._angleMode === constants.DEGREES) {\n\t    angle = this.radians(angle);\n\t  }\n\t  this._renderer.shearY(angle);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Specifies an amount to displace objects within the display window.\n\t * The x parameter specifies left/right translation, the y parameter\n\t * specifies up/down translation.\n\t * <br><br>\n\t * Transformations are cumulative and apply to everything that happens after\n\t * and subsequent calls to the function accumulates the effect. For example,\n\t * calling translate(50, 0) and then translate(20, 0) is the same as\n\t * translate(70, 0). If translate() is called within draw(), the\n\t * transformation is reset when the loop begins again. This function can be\n\t * further controlled by using push() and pop().\n\t *\n\t * @method translate\n\t * @param  {Number} x left/right translation\n\t * @param  {Number} y up/down translation\n\t * @param  {Number} [z] forward/backward translation (webgl only)\n\t * @return {p5}       the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * translate(30, 20);\n\t * rect(0, 0, 55, 55);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * rect(0, 0, 55, 55);  // Draw rect at original 0,0\n\t * translate(30, 20);\n\t * rect(0, 0, 55, 55);  // Draw rect at new 0,0\n\t * translate(14, 14);\n\t * rect(0, 0, 55, 55);  // Draw rect at new 0,0\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * white 55x55 rect with black outline at center right.\n\t * 3 white 55x55 rects with black outlines at top-l, center-r and bottom-r.\n\t *\n\t */\n\tp5.prototype.translate = function(x, y, z) {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t\n\t  if (this._renderer.isP3D) {\n\t    this._validateParameters(\n\t      'translate',\n\t      args,\n\t      [\n\t        //p3d\n\t        ['Number', 'Number', 'Number']\n\t      ]\n\t    );\n\t    this._renderer.translate(x, y, z);\n\t  } else {\n\t    this._validateParameters(\n\t      'translate',\n\t      args,\n\t      [\n\t        //p2d\n\t        ['Number', 'Number']\n\t      ]\n\t    );\n\t    this._renderer.translate(x, y);\n\t  }\n\t  return this;\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"./constants\":36,\"./core\":37}],49:[function(_dereq_,module,exports){\n\t/**\n\t * @module Shape\n\t * @submodule Vertex\n\t * @for p5\n\t * @requires core\n\t * @requires constants\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('./core');\n\tvar constants = _dereq_('./constants');\n\tvar shapeKind = null;\n\tvar vertices = [];\n\tvar contourVertices = [];\n\tvar isBezier = false;\n\tvar isCurve = false;\n\tvar isQuadratic = false;\n\tvar isContour = false;\n\tvar isFirstContour = true;\n\t\n\t/**\n\t * Use the beginContour() and endContour() functions to create negative\n\t * shapes within shapes such as the center of the letter 'O'. beginContour()\n\t * begins recording vertices for the shape and endContour() stops recording.\n\t * The vertices that define a negative shape must \"wind\" in the opposite\n\t * direction from the exterior shape. First draw vertices for the exterior\n\t * clockwise order, then for internal shapes, draw vertices\n\t * shape in counter-clockwise.\n\t * <br><br>\n\t * These functions can only be used within a beginShape()/endShape() pair and\n\t * transformations such as translate(), rotate(), and scale() do not work\n\t * within a beginContour()/endContour() pair. It is also not possible to use\n\t * other shapes, such as ellipse() or rect() within.\n\t *\n\t * @method beginContour\n\t * @return {Object} the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * translate(50, 50);\n\t * stroke(255, 0, 0);\n\t * beginShape();\n\t * // Exterior part of shape, clockwise winding\n\t * vertex(-40, -40);\n\t * vertex(40, -40);\n\t * vertex(40, 40);\n\t * vertex(-40, 40);\n\t * // Interior part of shape, counter-clockwise winding\n\t * beginContour();\n\t * vertex(-20, -20);\n\t * vertex(-20, 20);\n\t * vertex(20, 20);\n\t * vertex(20, -20);\n\t * endContour();\n\t * endShape(CLOSE);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * white rect and smaller grey rect with red outlines in center of canvas.\n\t *\n\t */\n\tp5.prototype.beginContour = function() {\n\t  contourVertices = [];\n\t  isContour = true;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Using the beginShape() and endShape() functions allow creating more\n\t * complex forms. beginShape() begins recording vertices for a shape and\n\t * endShape() stops recording. The value of the kind parameter tells it which\n\t * types of shapes to create from the provided vertices. With no mode\n\t * specified, the shape can be any irregular polygon.\n\t * <br><br>\n\t * The parameters available for beginShape() are POINTS, LINES, TRIANGLES,\n\t * TRIANGLE_FAN, TRIANGLE_STRIP, QUADS, and QUAD_STRIP. After calling the\n\t * beginShape() function, a series of vertex() commands must follow. To stop\n\t * drawing the shape, call endShape(). Each shape will be outlined with the\n\t * current stroke color and filled with the fill color.\n\t * <br><br>\n\t * Transformations such as translate(), rotate(), and scale() do not work\n\t * within beginShape(). It is also not possible to use other shapes, such as\n\t * ellipse() or rect() within beginShape().\n\t *\n\t * @method beginShape\n\t * @param  {Constant} kind either POINTS, LINES, TRIANGLES, TRIANGLE_FAN\n\t *                                TRIANGLE_STRIP, QUADS, or QUAD_STRIP\n\t * @return {Object}               the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * beginShape();\n\t * vertex(30, 20);\n\t * vertex(85, 20);\n\t * vertex(85, 75);\n\t * vertex(30, 75);\n\t * endShape(CLOSE);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * // currently not working\n\t * beginShape(POINTS);\n\t * vertex(30, 20);\n\t * vertex(85, 20);\n\t * vertex(85, 75);\n\t * vertex(30, 75);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * beginShape(LINES);\n\t * vertex(30, 20);\n\t * vertex(85, 20);\n\t * vertex(85, 75);\n\t * vertex(30, 75);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * beginShape();\n\t * vertex(30, 20);\n\t * vertex(85, 20);\n\t * vertex(85, 75);\n\t * vertex(30, 75);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * beginShape();\n\t * vertex(30, 20);\n\t * vertex(85, 20);\n\t * vertex(85, 75);\n\t * vertex(30, 75);\n\t * endShape(CLOSE);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * beginShape(TRIANGLES);\n\t * vertex(30, 75);\n\t * vertex(40, 20);\n\t * vertex(50, 75);\n\t * vertex(60, 20);\n\t * vertex(70, 75);\n\t * vertex(80, 20);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * beginShape(TRIANGLE_STRIP);\n\t * vertex(30, 75);\n\t * vertex(40, 20);\n\t * vertex(50, 75);\n\t * vertex(60, 20);\n\t * vertex(70, 75);\n\t * vertex(80, 20);\n\t * vertex(90, 75);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * beginShape(TRIANGLE_FAN);\n\t * vertex(57.5, 50);\n\t * vertex(57.5, 15);\n\t * vertex(92, 50);\n\t * vertex(57.5, 85);\n\t * vertex(22, 50);\n\t * vertex(57.5, 15);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * beginShape(QUADS);\n\t * vertex(30, 20);\n\t * vertex(30, 75);\n\t * vertex(50, 75);\n\t * vertex(50, 20);\n\t * vertex(65, 20);\n\t * vertex(65, 75);\n\t * vertex(85, 75);\n\t * vertex(85, 20);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * beginShape(QUAD_STRIP);\n\t * vertex(30, 20);\n\t * vertex(30, 75);\n\t * vertex(50, 20);\n\t * vertex(50, 75);\n\t * vertex(65, 20);\n\t * vertex(65, 75);\n\t * vertex(85, 20);\n\t * vertex(85, 75);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * beginShape();\n\t * vertex(20, 20);\n\t * vertex(40, 20);\n\t * vertex(40, 40);\n\t * vertex(60, 40);\n\t * vertex(60, 60);\n\t * vertex(20, 60);\n\t * endShape(CLOSE);\n\t * </code>\n\t * </div>\n\t  * @alt\n\t * white square-shape with black outline in middle-right of canvas.\n\t * 4 black points in a square shape in middle-right of canvas.\n\t * 2 horizontal black lines. In the top-right and bottom-right of canvas.\n\t * 3 line shape with horizontal on top, vertical in middle and horizontal bottom.\n\t * square line shape in middle-right of canvas.\n\t * 2 white triangle shapes mid-right canvas. left one pointing up and right down.\n\t * 5 horizontal interlocking and alternating white triangles in mid-right canvas.\n\t * 4 interlocking white triangles in 45 degree rotated square-shape.\n\t * 2 white rectangle shapes in mid-right canvas. Both 20x55.\n\t * 3 side-by-side white rectangles center rect is smaller in mid-right canvas.\n\t * Thick white l-shape with black outline mid-top-left of canvas.\n\t *\n\t */\n\tp5.prototype.beginShape = function(kind) {\n\t  if (kind === constants.POINTS ||\n\t    kind === constants.LINES ||\n\t    kind === constants.TRIANGLES ||\n\t    kind === constants.TRIANGLE_FAN ||\n\t    kind === constants.TRIANGLE_STRIP ||\n\t    kind === constants.QUADS ||\n\t    kind === constants.QUAD_STRIP) {\n\t    shapeKind = kind;\n\t  } else {\n\t    shapeKind = null;\n\t  }\n\t  if(this._renderer.isP3D){\n\t    this._renderer.beginShape(kind);\n\t  } else {\n\t    vertices = [];\n\t    contourVertices = [];\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Specifies vertex coordinates for Bezier curves. Each call to\n\t * bezierVertex() defines the position of two control points and\n\t * one anchor point of a Bezier curve, adding a new segment to a\n\t * line or shape.\n\t * <br><br>\n\t * The first time bezierVertex() is used within a\n\t * beginShape() call, it must be prefaced with a call to vertex()\n\t * to set the first anchor point. This function must be used between\n\t * beginShape() and endShape() and only when there is no MODE\n\t * parameter specified to beginShape().\n\t *\n\t * @method bezierVertex\n\t * @param  {Number} x2 x-coordinate for the first control point\n\t * @param  {Number} y2 y-coordinate for the first control point\n\t * @param  {Number} x3 x-coordinate for the second control point\n\t * @param  {Number} y3 y-coordinate for the second control point\n\t * @param  {Number} x4 x-coordinate for the anchor point\n\t * @param  {Number} y4 y-coordinate for the anchor point\n\t * @return {Object}    the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * beginShape();\n\t * vertex(30, 20);\n\t * bezierVertex(80, 0, 80, 75, 30, 75);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * beginShape();\n\t * vertex(30, 20);\n\t * bezierVertex(80, 0, 80, 75, 30, 75);\n\t * bezierVertex(50, 80, 60, 25, 30, 20);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * crescent-shaped line in middle of canvas. Points facing left.\n\t * white crescent shape in middle of canvas. Points facing left.\n\t *\n\t */\n\tp5.prototype.bezierVertex = function(x2, y2, x3, y3, x4, y4) {\n\t  if (vertices.length === 0) {\n\t    throw 'vertex() must be used once before calling bezierVertex()';\n\t  } else {\n\t    isBezier = true;\n\t    var vert = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      vert[i] = arguments[i];\n\t    }\n\t    vert.isVert = false;\n\t    if (isContour) {\n\t      contourVertices.push(vert);\n\t    } else {\n\t      vertices.push(vert);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Specifies vertex coordinates for curves. This function may only\n\t * be used between beginShape() and endShape() and only when there\n\t * is no MODE parameter specified to beginShape().\n\t * <br><br>\n\t * The first and last points in a series of curveVertex() lines will be used to\n\t * guide the beginning and end of a the curve. A minimum of four\n\t * points is required to draw a tiny curve between the second and\n\t * third points. Adding a fifth point with curveVertex() will draw\n\t * the curve between the second, third, and fourth points. The\n\t * curveVertex() function is an implementation of Catmull-Rom\n\t * splines.\n\t *\n\t * @method curveVertex\n\t * @param {Number} x x-coordinate of the vertex\n\t * @param {Number} y y-coordinate of the vertex\n\t * @return {Object} the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * beginShape();\n\t * curveVertex(84,  91);\n\t * curveVertex(84,  91);\n\t * curveVertex(68,  19);\n\t * curveVertex(21,  17);\n\t * curveVertex(32, 100);\n\t * curveVertex(32, 100);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Upside-down u-shape line, mid canvas. left point extends beyond canvas view.\n\t *\n\t */\n\tp5.prototype.curveVertex = function(x,y) {\n\t  isCurve = true;\n\t  this.vertex(x, y);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Use the beginContour() and endContour() functions to create negative\n\t * shapes within shapes such as the center of the letter 'O'. beginContour()\n\t * begins recording vertices for the shape and endContour() stops recording.\n\t * The vertices that define a negative shape must \"wind\" in the opposite\n\t * direction from the exterior shape. First draw vertices for the exterior\n\t * clockwise order, then for internal shapes, draw vertices\n\t * shape in counter-clockwise.\n\t * <br><br>\n\t * These functions can only be used within a beginShape()/endShape() pair and\n\t * transformations such as translate(), rotate(), and scale() do not work\n\t * within a beginContour()/endContour() pair. It is also not possible to use\n\t * other shapes, such as ellipse() or rect() within.\n\t *\n\t * @method endContour\n\t * @return {Object} the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * translate(50, 50);\n\t * stroke(255, 0, 0);\n\t * beginShape();\n\t * // Exterior part of shape, clockwise winding\n\t * vertex(-40, -40);\n\t * vertex(40, -40);\n\t * vertex(40, 40);\n\t * vertex(-40, 40);\n\t * // Interior part of shape, counter-clockwise winding\n\t * beginContour();\n\t * vertex(-20, -20);\n\t * vertex(-20, 20);\n\t * vertex(20, 20);\n\t * vertex(20, -20);\n\t * endContour();\n\t * endShape(CLOSE);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * white rect and smaller grey rect with red outlines in center of canvas.\n\t *\n\t */\n\tp5.prototype.endContour = function() {\n\t  var vert = contourVertices[0].slice(); // copy all data\n\t  vert.isVert = contourVertices[0].isVert;\n\t  vert.moveTo = false;\n\t  contourVertices.push(vert);\n\t\n\t  // prevent stray lines with multiple contours\n\t  if (isFirstContour) {\n\t    vertices.push(vertices[0]);\n\t    isFirstContour = false;\n\t  }\n\t\n\t  for (var i = 0; i < contourVertices.length; i++) {\n\t    vertices.push(contourVertices[i]);\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * The endShape() function is the companion to beginShape() and may only be\n\t * called after beginShape(). When endshape() is called, all of image data\n\t * defined since the previous call to beginShape() is written into the image\n\t * buffer. The constant CLOSE as the value for the MODE parameter to close\n\t * the shape (to connect the beginning and the end).\n\t *\n\t * @method endShape\n\t * @param  {Constant} mode use CLOSE to close the shape\n\t * @return {Object}               the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * noFill();\n\t *\n\t * beginShape();\n\t * vertex(20, 20);\n\t * vertex(45, 20);\n\t * vertex(45, 80);\n\t * endShape(CLOSE);\n\t *\n\t * beginShape();\n\t * vertex(50, 20);\n\t * vertex(75, 20);\n\t * vertex(75, 80);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Triangle line shape with smallest interior angle on bottom and upside-down L.\n\t *\n\t */\n\tp5.prototype.endShape = function(mode) {\n\t  if(this._renderer.isP3D){\n\t    this._renderer.endShape(mode, isCurve, isBezier,\n\t      isQuadratic, isContour, shapeKind);\n\t  }else{\n\t    if (vertices.length === 0) { return this; }\n\t    if (!this._renderer._doStroke && !this._renderer._doFill) { return this; }\n\t\n\t    var closeShape = mode === constants.CLOSE;\n\t\n\t    // if the shape is closed, the first element is also the last element\n\t    if (closeShape && !isContour) {\n\t      vertices.push(vertices[0]);\n\t    }\n\t\n\t    this._renderer.endShape(mode, vertices, isCurve, isBezier,\n\t      isQuadratic, isContour, shapeKind);\n\t\n\t    // Reset some settings\n\t    isCurve = false;\n\t    isBezier = false;\n\t    isQuadratic = false;\n\t    isContour = false;\n\t    isFirstContour = true;\n\t\n\t    // If the shape is closed, the first element was added as last element.\n\t    // We must remove it again to prevent the list of vertices from growing\n\t    // over successive calls to endShape(CLOSE)\n\t    if (closeShape) {\n\t      vertices.pop();\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Specifies vertex coordinates for quadratic Bezier curves. Each call to\n\t * quadraticVertex() defines the position of one control points and one\n\t * anchor point of a Bezier curve, adding a new segment to a line or shape.\n\t * The first time quadraticVertex() is used within a beginShape() call, it\n\t * must be prefaced with a call to vertex() to set the first anchor point.\n\t * This function must be used between beginShape() and endShape() and only\n\t * when there is no MODE parameter specified to beginShape().\n\t *\n\t * @method quadraticVertex\n\t * @param  {Number} cx x-coordinate for the control point\n\t * @param  {Number} cy y-coordinate for the control point\n\t * @param  {Number} x3 x-coordinate for the anchor point\n\t * @param  {Number} y3 y-coordinate for the anchor point\n\t * @return {Object}    the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * strokeWeight(4);\n\t * beginShape();\n\t * vertex(20, 20);\n\t * quadraticVertex(80, 20, 50, 50);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * noFill();\n\t * strokeWeight(4);\n\t * beginShape();\n\t * vertex(20, 20);\n\t * quadraticVertex(80, 20, 50, 50);\n\t * quadraticVertex(20, 80, 80, 80);\n\t * vertex(80, 60);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * arched-shaped black line with 4 pixel thick stroke weight.\n\t * backwards s-shaped black line with 4 pixel thick stroke weight.\n\t *\n\t */\n\tp5.prototype.quadraticVertex = function(cx, cy, x3, y3) {\n\t  //if we're drawing a contour, put the points into an\n\t  // array for inside drawing\n\t  if(this._contourInited) {\n\t    var pt = {};\n\t    pt.x = cx;\n\t    pt.y = cy;\n\t    pt.x3 = x3;\n\t    pt.y3 = y3;\n\t    pt.type = constants.QUADRATIC;\n\t    this._contourVertices.push(pt);\n\t\n\t    return this;\n\t  }\n\t  if (vertices.length > 0) {\n\t    isQuadratic = true;\n\t    var vert = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      vert[i] = arguments[i];\n\t    }\n\t    vert.isVert = false;\n\t    if (isContour) {\n\t      contourVertices.push(vert);\n\t    } else {\n\t      vertices.push(vert);\n\t    }\n\t  } else {\n\t    throw 'vertex() must be used once before calling quadraticVertex()';\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * All shapes are constructed by connecting a series of vertices. vertex()\n\t * is used to specify the vertex coordinates for points, lines, triangles,\n\t * quads, and polygons. It is used exclusively within the beginShape() and\n\t * endShape() functions.\n\t *\n\t * @method vertex\n\t * @param  {Number} x x-coordinate of the vertex\n\t * @param  {Number} y y-coordinate of the vertex\n\t * @return {Object}   the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * beginShape(POINTS);\n\t * vertex(30, 20);\n\t * vertex(85, 20);\n\t * vertex(85, 75);\n\t * vertex(30, 75);\n\t * endShape();\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 4 black points in a square shape in middle-right of canvas.\n\t *\n\t */\n\tp5.prototype.vertex = function(x, y, moveTo) {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  if(this._renderer.isP3D){\n\t    this._validateParameters(\n\t      'vertex',\n\t      args,\n\t      [\n\t        ['Number', 'Number', 'Number']\n\t      ]\n\t    );\n\t    this._renderer.vertex\n\t    (arguments[0], arguments[1], arguments[2]);\n\t  }else{\n\t    this._validateParameters(\n\t      'vertex',\n\t      args,\n\t      [\n\t        ['Number', 'Number'],\n\t        ['Number', 'Number', 'Number']\n\t      ]\n\t    );\n\t    var vert = [];\n\t    vert.isVert = true;\n\t    vert[0] = x;\n\t    vert[1] = y;\n\t    vert[2] = 0;\n\t    vert[3] = 0;\n\t    vert[4] = 0;\n\t    vert[5] = this._renderer._getFill();\n\t    vert[6] = this._renderer._getStroke();\n\t\n\t    if (moveTo) {\n\t      vert.moveTo = moveTo;\n\t    }\n\t    if (isContour) {\n\t      if (contourVertices.length === 0) {\n\t        vert.moveTo = true;\n\t      }\n\t      contourVertices.push(vert);\n\t    } else {\n\t      vertices.push(vert);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tmodule.exports = p5;\n\t},{\"./constants\":36,\"./core\":37}],50:[function(_dereq_,module,exports){\n\t/**\n\t * @module Events\n\t * @submodule Acceleration\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/**\n\t * The system variable deviceOrientation always contains the orientation of\n\t * the device. The value of this variable will either be set 'landscape'\n\t * or 'portrait'. If no data is available it will be set to 'undefined'.\n\t *\n\t * @property deviceOrientation\n\t */\n\tp5.prototype.deviceOrientation = undefined;\n\t\n\t/**\n\t * The system variable accelerationX always contains the acceleration of the\n\t * device along the x axis. Value is represented as meters per second squared.\n\t *\n\t * @property accelerationX\n\t */\n\tp5.prototype.accelerationX = 0;\n\t\n\t/**\n\t * The system variable accelerationY always contains the acceleration of the\n\t * device along the y axis. Value is represented as meters per second squared.\n\t *\n\t * @property accelerationY\n\t */\n\tp5.prototype.accelerationY = 0;\n\t\n\t/**\n\t * The system variable accelerationZ always contains the acceleration of the\n\t * device along the z axis. Value is represented as meters per second squared.\n\t *\n\t * @property accelerationZ\n\t */\n\tp5.prototype.accelerationZ = 0;\n\t\n\t/**\n\t * The system variable pAccelerationX always contains the acceleration of the\n\t * device along the x axis in the frame previous to the current frame. Value\n\t * is represented as meters per second squared.\n\t *\n\t * @property pAccelerationX\n\t */\n\tp5.prototype.pAccelerationX = 0;\n\t\n\t/**\n\t * The system variable pAccelerationY always contains the acceleration of the\n\t * device along the y axis in the frame previous to the current frame. Value\n\t * is represented as meters per second squared.\n\t *\n\t * @property pAccelerationY\n\t */\n\tp5.prototype.pAccelerationY = 0;\n\t\n\t/**\n\t * The system variable pAccelerationZ always contains the acceleration of the\n\t * device along the z axis in the frame previous to the current frame. Value\n\t * is represented as meters per second squared.\n\t *\n\t * @property pAccelerationZ\n\t */\n\tp5.prototype.pAccelerationZ = 0;\n\t\n\t/**\n\t * _updatePAccelerations updates the pAcceleration values\n\t *\n\t * @private\n\t */\n\tp5.prototype._updatePAccelerations = function(){\n\t  this._setProperty('pAccelerationX', this.accelerationX);\n\t  this._setProperty('pAccelerationY', this.accelerationY);\n\t  this._setProperty('pAccelerationZ', this.accelerationZ);\n\t};\n\t\n\t/**\n\t * The system variable rotationX always contains the rotation of the\n\t * device along the x axis. Value is represented as 0 to +/-180 degrees.\n\t * <br><br>\n\t * Note: The order the rotations are called is important, ie. if used\n\t * together, it must be called in the order Z-X-Y or there might be\n\t * unexpected behaviour.\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *   background(200);\n\t *   //rotateZ(radians(rotationZ));\n\t *   rotateX(radians(rotationX));\n\t *   //rotateY(radians(rotationY));\n\t *   box(200, 200, 200);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @property rotationX\n\t *\n\t * @alt\n\t * red horizontal line right, green vertical line bottom. black background.\n\t *\n\t */\n\tp5.prototype.rotationX = 0;\n\t\n\t/**\n\t * The system variable rotationY always contains the rotation of the\n\t * device along the y axis. Value is represented as 0 to +/-90 degrees.\n\t * <br><br>\n\t * Note: The order the rotations are called is important, ie. if used\n\t * together, it must be called in the order Z-X-Y or there might be\n\t * unexpected behaviour.\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *   background(200);\n\t *   //rotateZ(radians(rotationZ));\n\t *   //rotateX(radians(rotationX));\n\t *   rotateY(radians(rotationY));\n\t *   box(200, 200, 200);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @property rotationY\n\t *\n\t * @alt\n\t * red horizontal line right, green vertical line bottom. black background.\n\t */\n\tp5.prototype.rotationY = 0;\n\t\n\t/**\n\t * The system variable rotationZ always contains the rotation of the\n\t * device along the z axis. Value is represented as 0 to 359 degrees.\n\t * <br><br>\n\t * Unlike rotationX and rotationY, this variable is available for devices\n\t * with a built-in compass only.\n\t * <br><br>\n\t * Note: The order the rotations are called is important, ie. if used\n\t * together, it must be called in the order Z-X-Y or there might be\n\t * unexpected behaviour.\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *   background(200);\n\t *   rotateZ(radians(rotationZ));\n\t *   //rotateX(radians(rotationX));\n\t *   //rotateY(radians(rotationY));\n\t *   box(200, 200, 200);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @property rotationZ\n\t *\n\t * @alt\n\t * red horizontal line right, green vertical line bottom. black background.\n\t */\n\tp5.prototype.rotationZ = 0;\n\t\n\t/**\n\t * The system variable pRotationX always contains the rotation of the\n\t * device along the x axis in the frame previous to the current frame. Value\n\t * is represented as 0 to +/-180 degrees.\n\t * <br><br>\n\t * pRotationX can also be used with rotationX to determine the rotate\n\t * direction of the device along the X-axis.\n\t * @example\n\t * <div class='norender'>\n\t * <code>\n\t * // A simple if statement looking at whether\n\t * // rotationX - pRotationX < 0 is true or not will be\n\t * // sufficient for determining the rotate direction\n\t * // in most cases.\n\t *\n\t * // Some extra logic is needed to account for cases where\n\t * // the angles wrap around.\n\t * var rotateDirection = 'clockwise';\n\t *\n\t * // Simple range conversion to make things simpler.\n\t * // This is not absolutely neccessary but the logic\n\t * // will be different in that case.\n\t *\n\t * var rX = rotationX + 180;\n\t * var pRX = pRotationX + 180;\n\t *\n\t * if ((rX - pRX > 0 && rX - pRX < 270)|| rX - pRX < -270){\n\t *   rotateDirection = 'clockwise';\n\t * } else if (rX - pRX < 0 || rX - pRX > 270){\n\t *   rotateDirection = 'counter-clockwise';\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * no image to display.\n\t *\n\t *\n\t * @property pRotationX\n\t */\n\tp5.prototype.pRotationX = 0;\n\t\n\t/**\n\t * The system variable pRotationY always contains the rotation of the\n\t * device along the y axis in the frame previous to the current frame. Value\n\t * is represented as 0 to +/-90 degrees.\n\t * <br><br>\n\t * pRotationY can also be used with rotationY to determine the rotate\n\t * direction of the device along the Y-axis.\n\t * @example\n\t * <div class='norender'>\n\t * <code>\n\t * // A simple if statement looking at whether\n\t * // rotationY - pRotationY < 0 is true or not will be\n\t * // sufficient for determining the rotate direction\n\t * // in most cases.\n\t *\n\t * // Some extra logic is needed to account for cases where\n\t * // the angles wrap around.\n\t * var rotateDirection = 'clockwise';\n\t *\n\t * // Simple range conversion to make things simpler.\n\t * // This is not absolutely neccessary but the logic\n\t * // will be different in that case.\n\t *\n\t * var rY = rotationY + 180;\n\t * var pRY = pRotationY + 180;\n\t *\n\t * if ((rY - pRY > 0 && rY - pRY < 270)|| rY - pRY < -270){\n\t *   rotateDirection = 'clockwise';\n\t * } else if (rY - pRY < 0 || rY - pRY > 270){\n\t *   rotateDirection = 'counter-clockwise';\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * no image to display.\n\t *\n\t *\n\t * @property pRotationY\n\t */\n\tp5.prototype.pRotationY = 0;\n\t\n\t/**\n\t * The system variable pRotationZ always contains the rotation of the\n\t * device along the z axis in the frame previous to the current frame. Value\n\t * is represented as 0 to 359 degrees.\n\t * <br><br>\n\t * pRotationZ can also be used with rotationZ to determine the rotate\n\t * direction of the device along the Z-axis.\n\t * @example\n\t * <div class='norender'>\n\t * <code>\n\t * // A simple if statement looking at whether\n\t * // rotationZ - pRotationZ < 0 is true or not will be\n\t * // sufficient for determining the rotate direction\n\t * // in most cases.\n\t *\n\t * // Some extra logic is needed to account for cases where\n\t * // the angles wrap around.\n\t * var rotateDirection = 'clockwise';\n\t *\n\t * if ((rotationZ - pRotationZ > 0 &&\n\t *   rotationZ - pRotationZ < 270)||\n\t *   rotationZ - pRotationZ < -270){\n\t *\n\t *   rotateDirection = 'clockwise';\n\t *\n\t * } else if (rotationZ - pRotationZ < 0 ||\n\t *   rotationZ - pRotationZ > 270){\n\t *\n\t *   rotateDirection = 'counter-clockwise';\n\t *\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * no image to display.\n\t *\n\t *\n\t * @property pRotationZ\n\t */\n\tp5.prototype.pRotationZ = 0;\n\t\n\tvar startAngleX = 0;\n\tvar startAngleY = 0;\n\tvar startAngleZ = 0;\n\t\n\tvar rotateDirectionX = 'clockwise';\n\tvar rotateDirectionY = 'clockwise';\n\tvar rotateDirectionZ = 'clockwise';\n\t\n\tvar pRotateDirectionX;\n\tvar pRotateDirectionY;\n\tvar pRotateDirectionZ;\n\t\n\tp5.prototype._updatePRotations = function(){\n\t  this._setProperty('pRotationX', this.rotationX);\n\t  this._setProperty('pRotationY', this.rotationY);\n\t  this._setProperty('pRotationZ', this.rotationZ);\n\t};\n\t\n\tp5.prototype.turnAxis = undefined;\n\t\n\tvar move_threshold = 0.5;\n\tvar shake_threshold = 30;\n\t\n\t/**\n\t * The setMoveThreshold() function is used to set the movement threshold for\n\t * the deviceMoved() function. The default threshold is set to 0.5.\n\t *\n\t * @method setMoveThreshold\n\t * @param {number} value The threshold value\n\t */\n\tp5.prototype.setMoveThreshold = function(val){\n\t  if(typeof val === 'number'){\n\t    move_threshold = val;\n\t  }\n\t};\n\t\n\t/**\n\t * The setShakeThreshold() function is used to set the movement threshold for\n\t * the deviceShaken() function. The default threshold is set to 30.\n\t *\n\t * @method setShakeThreshold\n\t * @param {number} value The threshold value\n\t */\n\tp5.prototype.setShakeThreshold = function(val){\n\t  if(typeof val === 'number'){\n\t    shake_threshold = val;\n\t  }\n\t};\n\t\n\t/**\n\t * The deviceMoved() function is called when the device is moved by more than\n\t * the threshold value along X, Y or Z axis. The default threshold is set to\n\t * 0.5.\n\t * @method deviceMoved\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Run this example on a mobile device\n\t * // Move the device around\n\t * // to change the value.\n\t *\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function deviceMoved() {\n\t *   value = value + 5;\n\t *   if (value > 255) {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 50x50 black rect in center of canvas. turns white on mobile when device moves\n\t *\n\t */\n\t\n\t/**\n\t * The deviceTurned() function is called when the device rotates by\n\t * more than 90 degrees continuously.\n\t * <br><br>\n\t * The axis that triggers the deviceTurned() method is stored in the turnAxis\n\t * variable. The deviceTurned() method can be locked to trigger on any axis:\n\t * X, Y or Z by comparing the turnAxis variable to 'X', 'Y' or 'Z'.\n\t *\n\t * @method deviceTurned\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Run this example on a mobile device\n\t * // Rotate the device by 90 degrees\n\t * // to change the value.\n\t *\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function deviceTurned() {\n\t *   if (value == 0){\n\t *     value = 255\n\t *   } else if (value == 255) {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * // Run this example on a mobile device\n\t * // Rotate the device by 90 degrees in the\n\t * // X-axis to change the value.\n\t *\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function deviceTurned() {\n\t *   if (turnAxis == 'X'){\n\t *     if (value == 0){\n\t *       value = 255\n\t *     } else if (value == 255) {\n\t *       value = 0;\n\t *     }\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 50x50 black rect in center of canvas. turns white on mobile when device turns\n\t * 50x50 black rect in center of canvas. turns white on mobile when x-axis turns\n\t *\n\t */\n\t\n\t/**\n\t * The deviceShaken() function is called when the device total acceleration\n\t * changes of accelerationX and accelerationY values is more than\n\t * the threshold value. The default threshold is set to 30.\n\t * @method deviceShaken\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Run this example on a mobile device\n\t * // Shake the device to change the value.\n\t *\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function deviceShaken() {\n\t *   value = value + 5;\n\t *   if (value > 255) {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 50x50 black rect in center of canvas. turns white on mobile when device shakes\n\t *\n\t */\n\t\n\tp5.prototype._ondeviceorientation = function (e) {\n\t  this._updatePRotations();\n\t  this._setProperty('rotationX', e.beta);\n\t  this._setProperty('rotationY', e.gamma);\n\t  this._setProperty('rotationZ', e.alpha);\n\t  this._handleMotion();\n\t};\n\tp5.prototype._ondevicemotion = function (e) {\n\t  this._updatePAccelerations();\n\t  this._setProperty('accelerationX', e.acceleration.x * 2);\n\t  this._setProperty('accelerationY', e.acceleration.y * 2);\n\t  this._setProperty('accelerationZ', e.acceleration.z * 2);\n\t  this._handleMotion();\n\t};\n\tp5.prototype._handleMotion = function() {\n\t  if (window.orientation === 90 || window.orientation === -90) {\n\t    this._setProperty('deviceOrientation', 'landscape');\n\t  } else if (window.orientation === 0) {\n\t    this._setProperty('deviceOrientation', 'portrait');\n\t  } else if (window.orientation === undefined) {\n\t    this._setProperty('deviceOrientation', 'undefined');\n\t  }\n\t  var deviceMoved = this.deviceMoved || window.deviceMoved;\n\t  if (typeof deviceMoved === 'function') {\n\t    if (Math.abs(this.accelerationX - this.pAccelerationX) > move_threshold ||\n\t      Math.abs(this.accelerationY - this.pAccelerationY) > move_threshold ||\n\t      Math.abs(this.accelerationZ - this.pAccelerationZ) > move_threshold) {\n\t      deviceMoved();\n\t    }\n\t  }\n\t  var deviceTurned = this.deviceTurned || window.deviceTurned;\n\t  if (typeof deviceTurned === 'function') {\n\t    // The angles given by rotationX etc is from range -180 to 180.\n\t    // The following will convert them to 0 to 360 for ease of calculation\n\t    // of cases when the angles wrapped around.\n\t    // _startAngleX will be converted back at the end and updated.\n\t    var wRX = this.rotationX + 180;\n\t    var wPRX = this.pRotationX + 180;\n\t    var wSAX = startAngleX + 180;\n\t    if ((wRX - wPRX > 0 && wRX - wPRX < 270)|| wRX - wPRX < -270){\n\t      rotateDirectionX = 'clockwise';\n\t    } else if (wRX - wPRX < 0 || wRX - wPRX > 270){\n\t      rotateDirectionX = 'counter-clockwise';\n\t    }\n\t    if (rotateDirectionX !== pRotateDirectionX){\n\t      wSAX = wRX;\n\t    }\n\t    if (Math.abs(wRX - wSAX) > 90 && Math.abs(wRX - wSAX) < 270){\n\t      wSAX = wRX;\n\t      this._setProperty('turnAxis', 'X');\n\t      deviceTurned();\n\t    }\n\t    pRotateDirectionX = rotateDirectionX;\n\t    startAngleX = wSAX - 180;\n\t\n\t    // Y-axis is identical to X-axis except for changing some names.\n\t    var wRY = this.rotationY + 180;\n\t    var wPRY = this.pRotationY + 180;\n\t    var wSAY = startAngleY + 180;\n\t    if ((wRY - wPRY > 0 && wRY - wPRY < 270)|| wRY - wPRY < -270){\n\t      rotateDirectionY = 'clockwise';\n\t    } else if (wRY - wPRY < 0 || wRY - this.pRotationY > 270){\n\t      rotateDirectionY = 'counter-clockwise';\n\t    }\n\t    if (rotateDirectionY !== pRotateDirectionY){\n\t      wSAY = wRY;\n\t    }\n\t    if (Math.abs(wRY - wSAY) > 90 && Math.abs(wRY - wSAY) < 270){\n\t      wSAY = wRY;\n\t      this._setProperty('turnAxis', 'Y');\n\t      deviceTurned();\n\t    }\n\t    pRotateDirectionY = rotateDirectionY;\n\t    startAngleY = wSAY - 180;\n\t\n\t    // Z-axis is already in the range 0 to 360\n\t    // so no conversion is needed.\n\t    if ((this.rotationZ - this.pRotationZ > 0 &&\n\t      this.rotationZ - this.pRotationZ < 270)||\n\t      this.rotationZ - this.pRotationZ < -270){\n\t      rotateDirectionZ = 'clockwise';\n\t    } else if (this.rotationZ - this.pRotationZ < 0 ||\n\t      this.rotationZ - this.pRotationZ > 270){\n\t      rotateDirectionZ = 'counter-clockwise';\n\t    }\n\t    if (rotateDirectionZ !== pRotateDirectionZ){\n\t      startAngleZ = this.rotationZ;\n\t    }\n\t    if (Math.abs(this.rotationZ - startAngleZ) > 90 &&\n\t      Math.abs(this.rotationZ - startAngleZ) < 270){\n\t      startAngleZ = this.rotationZ;\n\t      this._setProperty('turnAxis', 'Z');\n\t      deviceTurned();\n\t    }\n\t    pRotateDirectionZ = rotateDirectionZ;\n\t    this._setProperty('turnAxis', undefined);\n\t  }\n\t  var deviceShaken = this.deviceShaken || window.deviceShaken;\n\t  if (typeof deviceShaken === 'function') {\n\t    var accelerationChangeX;\n\t    var accelerationChangeY;\n\t    // Add accelerationChangeZ if acceleration change on Z is needed\n\t    if (this.pAccelerationX !== null) {\n\t      accelerationChangeX = Math.abs(this.accelerationX - this.pAccelerationX);\n\t      accelerationChangeY = Math.abs(this.accelerationY - this.pAccelerationY);\n\t    }\n\t    if (accelerationChangeX + accelerationChangeY > shake_threshold) {\n\t      deviceShaken();\n\t    }\n\t  }\n\t};\n\t\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],51:[function(_dereq_,module,exports){\n\t/**\n\t * @module Events\n\t * @submodule Keyboard\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/**\n\t * Holds the key codes of currently pressed keys.\n\t * @private\n\t */\n\tvar downKeys = {};\n\t\n\t/**\n\t * The boolean system variable keyIsPressed is true if any key is pressed\n\t * and false if no keys are pressed.\n\t *\n\t * @property keyIsPressed\n\t * @example\n\t * <div>\n\t * <code>\n\t * var value = 0;\n\t * function draw() {\n\t *   if (keyIsPressed === true) {\n\t *     fill(0);\n\t *   } else {\n\t *     fill(255);\n\t *   }\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 50x50 white rect that turns black on keypress.\n\t *\n\t */\n\tp5.prototype.isKeyPressed = false;\n\tp5.prototype.keyIsPressed = false; // khan\n\t\n\t/**\n\t * The system variable key always contains the value of the most recent\n\t * key on the keyboard that was typed. To get the proper capitalization, it\n\t * is best to use it within keyTyped(). For non-ASCII keys, use the keyCode\n\t * variable.\n\t *\n\t * @property key\n\t * @example\n\t * <div><code>\n\t * // Click any key to display it!\n\t * // (Not Guaranteed to be Case Sensitive)\n\t * function setup() {\n\t *   fill(245, 123, 158);\n\t *   textSize(50);\n\t * }\n\t *\n\t * function draw() {\n\t *   background(200);\n\t *   text(key, 33,65); // Display last key pressed.\n\t * }\n\t * </div></code>\n\t *\n\t * @alt\n\t * canvas displays any key value that is pressed in pink font.\n\t *\n\t */\n\tp5.prototype.key = '';\n\t\n\t/**\n\t * The variable keyCode is used to detect special keys such as BACKSPACE,\n\t * DELETE, ENTER, RETURN, TAB, ESCAPE, SHIFT, CONTROL, OPTION, ALT, UP_ARROW,\n\t * DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW.\n\t *\n\t * @property keyCode\n\t * @example\n\t * <div><code>\n\t * var fillVal = 126;\n\t * function draw() {\n\t *   fill(fillVal);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t *\n\t * function keyPressed() {\n\t *   if (keyCode == UP_ARROW) {\n\t *     fillVal = 255;\n\t *   } else if (keyCode == DOWN_ARROW) {\n\t *     fillVal = 0;\n\t *   }\n\t *   return false; // prevent default\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * Grey rect center. turns white when up arrow pressed and black when down\n\t *\n\t */\n\tp5.prototype.keyCode = 0;\n\t\n\t/**\n\t * The keyPressed() function is called once every time a key is pressed. The\n\t * keyCode for the key that was pressed is stored in the keyCode variable.\n\t * <br><br>\n\t * For non-ASCII keys, use the keyCode variable. You can check if the keyCode\n\t * equals BACKSPACE, DELETE, ENTER, RETURN, TAB, ESCAPE, SHIFT, CONTROL,\n\t * OPTION, ALT, UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW.\n\t * <br><br>\n\t * For ASCII keys that was pressed is stored in the key variable. However, it\n\t * does not distinguish between uppercase and lowercase. For this reason, it\n\t * is recommended to use keyTyped() to read the key variable, in which the\n\t * case of the variable will be distinguished.\n\t * <br><br>\n\t * Because of how operating systems handle key repeats, holding down a key\n\t * may cause multiple calls to keyTyped() (and keyReleased() as well). The\n\t * rate of repeat is set by the operating system and how each computer is\n\t * configured.<br><br>\n\t * Browsers may have different default\n\t * behaviors attached to various key events. To prevent any default\n\t * behavior for this event, add \"return false\" to the end of the method.\n\t *\n\t * @method keyPressed\n\t * @example\n\t * <div>\n\t * <code>\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function keyPressed() {\n\t *   if (value === 0) {\n\t *     value = 255;\n\t *   } else {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function keyPressed() {\n\t *   if (keyCode === LEFT_ARROW) {\n\t *     value = 255;\n\t *   } else if (keyCode === RIGHT_ARROW) {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t * <div class=\"norender\">\n\t * <code>\n\t * function keyPressed(){\n\t *   // Do something\n\t *   return false; // prevent any default behaviour\n\t * }\n\t * </code>\n\t *\n\t * @alt\n\t * black rect center. turns white when key pressed and black when released\n\t * black rect center. turns white when left arrow pressed and black when right.\n\t *\n\t * </div>\n\t */\n\tp5.prototype._onkeydown = function (e) {\n\t  if (downKeys[e.which]) { // prevent multiple firings\n\t    return;\n\t  }\n\t  this._setProperty('isKeyPressed', true);\n\t  this._setProperty('keyIsPressed', true);\n\t  this._setProperty('keyCode', e.which);\n\t  downKeys[e.which] = true;\n\t  var key = String.fromCharCode(e.which);\n\t  if (!key) {\n\t    key = e.which;\n\t  }\n\t  this._setProperty('key', key);\n\t  var keyPressed = this.keyPressed || window.keyPressed;\n\t  if (typeof keyPressed === 'function' && !e.charCode) {\n\t    var executeDefault = keyPressed(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  }\n\t};\n\t/**\n\t * The keyReleased() function is called once every time a key is released.\n\t * See key and keyCode for more information.<br><br>\n\t * Browsers may have different default\n\t * behaviors attached to various key events. To prevent any default\n\t * behavior for this event, add \"return false\" to the end of the method.\n\t *\n\t * @method keyReleased\n\t * @example\n\t * <div>\n\t * <code>\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function keyReleased() {\n\t *   if (value === 0) {\n\t *     value = 255;\n\t *   } else {\n\t *     value = 0;\n\t *   }\n\t *   return false; // prevent any default behavior\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * black rect center. turns white when key pressed and black when pressed again\n\t *\n\t */\n\tp5.prototype._onkeyup = function (e) {\n\t  var keyReleased = this.keyReleased || window.keyReleased;\n\t  this._setProperty('isKeyPressed', false);\n\t  this._setProperty('keyIsPressed', false);\n\t  this._setProperty('_lastKeyCodeTyped', null);\n\t  downKeys[e.which] = false;\n\t  //delete this._downKeys[e.which];\n\t  var key = String.fromCharCode(e.which);\n\t  if (!key) {\n\t    key = e.which;\n\t  }\n\t  this._setProperty('key', key);\n\t  this._setProperty('keyCode', e.which);\n\t  if (typeof keyReleased === 'function') {\n\t    var executeDefault = keyReleased(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The keyTyped() function is called once every time a key is pressed, but\n\t * action keys such as Ctrl, Shift, and Alt are ignored. The most recent\n\t * key pressed will be stored in the key variable.\n\t * <br><br>\n\t * Because of how operating systems handle key repeats, holding down a key\n\t * will cause multiple calls to keyTyped() (and keyReleased() as well). The\n\t * rate of repeat is set by the operating system and how each computer is\n\t * configured.<br><br>\n\t * Browsers may have different default behaviors attached to various key\n\t * events. To prevent any default behavior for this event, add \"return false\"\n\t * to the end of the method.\n\t *\n\t * @method keyTyped\n\t * @example\n\t * <div>\n\t * <code>\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function keyTyped() {\n\t *   if (key === 'a') {\n\t *     value = 255;\n\t *   } else if (key === 'b') {\n\t *     value = 0;\n\t *   }\n\t *   // uncomment to prevent any default behavior\n\t *   // return false;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * black rect center. turns white when 'a' key typed and black when 'b' pressed\n\t *\n\t */\n\tp5.prototype._onkeypress = function (e) {\n\t  if (e.which === this._lastKeyCodeTyped) { // prevent multiple firings\n\t    return;\n\t  }\n\t  this._setProperty('keyCode', e.which);\n\t  this._setProperty('_lastKeyCodeTyped', e.which); // track last keyCode\n\t  this._setProperty('key', String.fromCharCode(e.which));\n\t  var keyTyped = this.keyTyped || window.keyTyped;\n\t  if (typeof keyTyped === 'function') {\n\t    var executeDefault = keyTyped(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  }\n\t};\n\t/**\n\t * The onblur function is called when the user is no longer focused\n\t * on the p5 element. Because the keyup events will not fire if the user is\n\t * not focused on the element we must assume all keys currently down have\n\t * been released.\n\t */\n\tp5.prototype._onblur = function (e) {\n\t  downKeys = {};\n\t};\n\t\n\t/**\n\t * The keyIsDown() function checks if the key is currently down, i.e. pressed.\n\t * It can be used if you have an object that moves, and you want several keys\n\t * to be able to affect its behaviour simultaneously, such as moving a\n\t * sprite diagonally. You can put in any number representing the keyCode of\n\t * the key, or use any of the variable keyCode names listed\n\t * <a href=\"http://p5js.org/reference/#p5/keyCode\">here</a>.\n\t *\n\t * @method keyIsDown\n\t * @param {Number}          code The key to check for.\n\t * @return {Boolean}        whether key is down or not\n\t * @example\n\t * <div><code>\n\t * var x = 100;\n\t * var y = 100;\n\t *\n\t * function setup() {\n\t *   createCanvas(512, 512);\n\t * }\n\t *\n\t * function draw() {\n\t *   if (keyIsDown(LEFT_ARROW))\n\t *     x-=5;\n\t *\n\t *   if (keyIsDown(RIGHT_ARROW))\n\t *     x+=5;\n\t *\n\t *   if (keyIsDown(UP_ARROW))\n\t *     y-=5;\n\t *\n\t *   if (keyIsDown(DOWN_ARROW))\n\t *     y+=5;\n\t *\n\t *   clear();\n\t *   fill(255, 0, 0);\n\t *   ellipse(x, y, 50, 50);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * 50x50 red ellipse moves left, right, up and down with arrow presses.\n\t *\n\t */\n\tp5.prototype.keyIsDown = function(code) {\n\t  return downKeys[code];\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],52:[function(_dereq_,module,exports){\n\t/**\n\t * @module Events\n\t * @submodule Mouse\n\t * @for p5\n\t * @requires core\n\t * @requires constants\n\t */\n\t\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar constants = _dereq_('../core/constants');\n\t\n\t/*\n\t * This is a flag which is false until the first time\n\t * we receive a mouse event. The pmouseX and pmouseY\n\t * values will match the mouseX and mouseY values until\n\t * this interaction takes place.\n\t */\n\tp5.prototype._hasMouseInteracted = false;\n\t\n\t/**\n\t * The system variable mouseX always contains the current horizontal\n\t * position of the mouse, relative to (0, 0) of the canvas.\n\t *\n\t * @property mouseX\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Move the mouse across the canvas\n\t * function draw() {\n\t *   background(244, 248, 252);\n\t *   line(mouseX, 0, mouseX, 100);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * horizontal black line moves left and right with mouse x-position\n\t *\n\t */\n\tp5.prototype.mouseX = 0;\n\t\n\t/**\n\t * The system variable mouseY always contains the current vertical position\n\t * of the mouse, relative to (0, 0) of the canvas.\n\t *\n\t * @property mouseY\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Move the mouse across the canvas\n\t * function draw() {\n\t *   background(244, 248, 252);\n\t *   line(0, mouseY, 100, mouseY);\n\t *}\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * vertical black line moves up and down with mouse y-position\n\t *\n\t */\n\tp5.prototype.mouseY = 0;\n\t\n\t/**\n\t * The system variable pmouseX always contains the horizontal position of\n\t * the mouse in the frame previous to the current frame, relative to (0, 0)\n\t * of the canvas.\n\t *\n\t * @property pmouseX\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Move the mouse across the canvas to leave a trail\n\t * function setup() {\n\t *   //slow down the frameRate to make it more visible\n\t *   frameRate(10);\n\t * }\n\t *\n\t * function draw() {\n\t *   background(244, 248, 252);\n\t *   line(mouseX, mouseY, pmouseX, pmouseY);\n\t *   print(pmouseX + \" -> \" + mouseX);\n\t * }\n\t *\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * line trail is created from cursor movements. faster movement make longer line.\n\t *\n\t */\n\tp5.prototype.pmouseX = 0;\n\t\n\t/**\n\t * The system variable pmouseY always contains the vertical position of the\n\t * mouse in the frame previous to the current frame, relative to (0, 0) of\n\t * the canvas.\n\t *\n\t * @property pmouseY\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * function draw() {\n\t *   background(237, 34, 93);\n\t *   fill(0);\n\t *   //draw a square only if the mouse is not moving\n\t *   if(mouseY == pmouseY && mouseX == pmouseX)\n\t *     rect(20,20,60,60);\n\t *\n\t *   print(pmouseY + \" -> \" + mouseY);\n\t * }\n\t *\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 60x60 black rect center, fuschia background. rect flickers on mouse movement\n\t *\n\t */\n\tp5.prototype.pmouseY = 0;\n\t\n\t/**\n\t * The system variable winMouseX always contains the current horizontal\n\t * position of the mouse, relative to (0, 0) of the window.\n\t *\n\t * @property winMouseX\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * var myCanvas;\n\t *\n\t * function setup() {\n\t *   //use a variable to store a pointer to the canvas\n\t *   myCanvas = createCanvas(100, 100);\n\t * }\n\t *\n\t * function draw() {\n\t *   background(237, 34, 93);\n\t *   fill(0);\n\t *\n\t *   //move the canvas to the horizontal mouse position\n\t *   //relative to the window\n\t *   myCanvas.position(winMouseX+1, windowHeight/2);\n\t *\n\t *  //the y of the square is relative to the canvas\n\t *  rect(20,mouseY,60,60);\n\t * }\n\t *\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 60x60 black rect y moves with mouse y and fuschia canvas moves with mouse x\n\t *\n\t */\n\tp5.prototype.winMouseX = 0;\n\t\n\t/**\n\t * The system variable winMouseY always contains the current vertical\n\t * position of the mouse, relative to (0, 0) of the window.\n\t *\n\t * @property winMouseY\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t *var myCanvas;\n\t *\n\t * function setup() {\n\t *   //use a variable to store a pointer to the canvas\n\t *   myCanvas = createCanvas(100, 100);\n\t * }\n\t *\n\t * function draw() {\n\t *   background(237, 34, 93);\n\t *   fill(0);\n\t *\n\t *   //move the canvas to the vertical mouse position\n\t *   //relative to the window\n\t *   myCanvas.position(windowWidth/2, winMouseY+1);\n\t *\n\t *  //the x of the square is relative to the canvas\n\t *  rect(mouseX,20,60,60);\n\t * }\n\t *\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 60x60 black rect x moves with mouse x and fuschia canvas y moves with mouse y\n\t *\n\t */\n\tp5.prototype.winMouseY = 0;\n\t\n\t/**\n\t * The system variable pwinMouseX always contains the horizontal position\n\t * of the mouse in the frame previous to the current frame, relative to\n\t * (0, 0) of the window.\n\t *\n\t * @property pwinMouseX\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t *\n\t * var myCanvas;\n\t *\n\t * function setup() {\n\t *   //use a variable to store a pointer to the canvas\n\t *   myCanvas = createCanvas(100, 100);\n\t *   noStroke();\n\t *   fill(237, 34, 93);\n\t *   }\n\t *\n\t * function draw() {\n\t *   clear();\n\t *   //the difference between previous and\n\t *   //current x position is the horizontal mouse speed\n\t *   var speed = abs(winMouseX-pwinMouseX);\n\t *   //change the size of the circle\n\t *   //according to the horizontal speed\n\t *   ellipse(50, 50, 10+speed*5, 10+speed*5);\n\t *   //move the canvas to the mouse position\n\t *   myCanvas.position( winMouseX+1, winMouseY+1);\n\t * }\n\t *\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * fuschia ellipse moves with mouse x and y. Grows and shrinks with mouse speed\n\t *\n\t */\n\tp5.prototype.pwinMouseX = 0;\n\t\n\t/**\n\t * The system variable pwinMouseY always contains the vertical position of\n\t * the mouse in the frame previous to the current frame, relative to (0, 0)\n\t * of the window.\n\t *\n\t * @property pwinMouseY\n\t *\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t *\n\t * var myCanvas;\n\t *\n\t * function setup() {\n\t *   //use a variable to store a pointer to the canvas\n\t *   myCanvas = createCanvas(100, 100);\n\t *   noStroke();\n\t *   fill(237, 34, 93);\n\t *   }\n\t *\n\t * function draw() {\n\t *   clear();\n\t *   //the difference between previous and\n\t *   //current y position is the vertical mouse speed\n\t *   var speed = abs(winMouseY-pwinMouseY);\n\t *   //change the size of the circle\n\t *   //according to the vertical speed\n\t *   ellipse(50, 50, 10+speed*5, 10+speed*5);\n\t *   //move the canvas to the mouse position\n\t *   myCanvas.position( winMouseX+1, winMouseY+1);\n\t * }\n\t *\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * fuschia ellipse moves with mouse x and y. Grows and shrinks with mouse speed\n\t *\n\t */\n\tp5.prototype.pwinMouseY = 0;\n\t\n\t/**\n\t * Processing automatically tracks if the mouse button is pressed and which\n\t * button is pressed. The value of the system variable mouseButton is either\n\t * LEFT, RIGHT, or CENTER depending on which button was pressed last.\n\t * Warning: different browsers may track mouseButton differently.\n\t *\n\t * @property mouseButton\n\t *\n\t * @example\n\t\t* <div>\n\t\t* <code>\n\t\t* function draw() {\n\t\t*   background(237, 34, 93);\n\t\t*   fill(0);\n\t\t*\n\t\t*   if (mouseIsPressed) {\n\t\t*     if (mouseButton == LEFT)\n\t\t*       ellipse(50, 50, 50, 50);\n\t\t*     if (mouseButton == RIGHT)\n\t\t*       rect(25, 25, 50, 50);\n\t\t*     if (mouseButton == CENTER)\n\t\t*       triangle(23, 75, 50, 20, 78, 75);\n\t\t*   }\n\t\t*\n\t\t*   print(mouseButton);\n\t\t* }\n\t\t* </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 50x50 black ellipse appears on center of fuschia canvas on mouse click/press.\n\t *\n\t */\n\tp5.prototype.mouseButton = 0;\n\t\n\t/**\n\t * The boolean system variable mouseIsPressed is true if the mouse is pressed\n\t * and false if not.\n\t *\n\t * @property mouseIsPressed\n\t *\n\t * @example\n\t\t* <div>\n\t\t* <code>\n\t\t* function draw() {\n\t\t*   background(237, 34, 93);\n\t\t*   fill(0);\n\t\t*\n\t\t*   if (mouseIsPressed)\n\t\t*     ellipse(50, 50, 50, 50);\n\t\t*   else\n\t\t*     rect(25, 25, 50, 50);\n\t\t*\n\t\t*   print(mouseIsPressed);\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t  *\n\t * @alt\n\t * black 50x50 rect becomes ellipse with mouse click/press. fuschia background.\n\t *\n\t */\n\tp5.prototype.mouseIsPressed = false;\n\tp5.prototype.isMousePressed = false; // both are supported\n\t\n\tp5.prototype._updateNextMouseCoords = function(e) {\n\t  var x = this.mouseX;\n\t  var y = this.mouseY;\n\t  var winX = this.winMouseX;\n\t  var winY = this.winMouseY;\n\t  if(e.type === 'touchstart' ||\n\t     e.type === 'touchmove' ||\n\t     e.type === 'touchend' || e.touches) {\n\t    x = this.touchX;\n\t    y = this.touchY;\n\t    winX = this.winTouchX;\n\t    winY = this.winTouchY;\n\t  } else if(this._curElement !== null) {\n\t    var mousePos = getMousePos(this._curElement.elt, e);\n\t    x = mousePos.x;\n\t    y = mousePos.y;\n\t    winX = mousePos.winX;\n\t    winY = mousePos.winY;\n\t  }\n\t  this._setProperty('mouseX', x);\n\t  this._setProperty('mouseY', y);\n\t  this._setProperty('winMouseX', winX);\n\t  this._setProperty('winMouseY', winY);\n\t  if (!this._hasMouseInteracted) {\n\t    // For first draw, make previous and next equal\n\t    this._updateMouseCoords();\n\t    this._setProperty('_hasMouseInteracted', true);\n\t  }\n\t};\n\t\n\tp5.prototype._updateMouseCoords = function() {\n\t  this._setProperty('pmouseX', this.mouseX);\n\t  this._setProperty('pmouseY', this.mouseY);\n\t  this._setProperty('pwinMouseX', this.winMouseX);\n\t  this._setProperty('pwinMouseY', this.winMouseY);\n\t};\n\t\n\tfunction getMousePos(canvas, evt) {\n\t  var rect = canvas.getBoundingClientRect();\n\t  return {\n\t    x: evt.clientX - rect.left,\n\t    y: evt.clientY - rect.top,\n\t    winX: evt.clientX,\n\t    winY: evt.clientY\n\t  };\n\t}\n\t\n\tp5.prototype._setMouseButton = function(e) {\n\t  if (e.button === 1) {\n\t    this._setProperty('mouseButton', constants.CENTER);\n\t  } else if (e.button === 2) {\n\t    this._setProperty('mouseButton', constants.RIGHT);\n\t  } else {\n\t    this._setProperty('mouseButton', constants.LEFT);\n\t  }\n\t};\n\t\n\t/**\n\t * The mouseMoved() function is called every time the mouse moves and a mouse\n\t * button is not pressed.<br><br>\n\t * Browsers may have different default\n\t * behaviors attached to various mouse events. To prevent any default\n\t * behavior for this event, add \"return false\" to the end of the method.\n\t *\n\t * @method mouseMoved\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Move the mouse across the page\n\t * // to change its value\n\t *\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function mouseMoved() {\n\t *   value = value + 5;\n\t *   if (value > 255) {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * function mouseMoved() {\n\t *   ellipse(mouseX, mouseY, 5, 5);\n\t *   // prevent default\n\t *   return false;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * black 50x50 rect becomes lighter with mouse movements until white then resets\n\t * no image displayed\n\t *\n\t */\n\t\n\t/**\n\t * The mouseDragged() function is called once every time the mouse moves and\n\t * a mouse button is pressed. If no mouseDragged() function is defined, the\n\t * touchMoved() function will be called instead if it is defined.<br><br>\n\t * Browsers may have different default\n\t * behaviors attached to various mouse events. To prevent any default\n\t * behavior for this event, add \"return false\" to the end of the method.\n\t *\n\t * @method mouseDragged\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Drag the mouse across the page\n\t * // to change its value\n\t *\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function mouseDragged() {\n\t *   value = value + 5;\n\t *   if (value > 255) {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * function mouseDragged() {\n\t *   ellipse(mouseX, mouseY, 5, 5);\n\t *   // prevent default\n\t *   return false;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * black 50x50 rect turns lighter with mouse click and drag until white, resets\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype._onmousemove = function(e){\n\t  var context = this._isGlobal ? window : this;\n\t  var executeDefault;\n\t  this._updateNextMouseCoords(e);\n\t  this._updateNextTouchCoords(e);\n\t  if (!this.isMousePressed) {\n\t    if (typeof context.mouseMoved === 'function') {\n\t      executeDefault = context.mouseMoved(e);\n\t      if(executeDefault === false) {\n\t        e.preventDefault();\n\t      }\n\t    }\n\t  }\n\t  else {\n\t    if (typeof context.mouseDragged === 'function') {\n\t      executeDefault = context.mouseDragged(e);\n\t      if(executeDefault === false) {\n\t        e.preventDefault();\n\t      }\n\t    } else if (typeof context.touchMoved === 'function') {\n\t      executeDefault = context.touchMoved(e);\n\t      if(executeDefault === false) {\n\t        e.preventDefault();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The mousePressed() function is called once after every time a mouse button\n\t * is pressed. The mouseButton variable (see the related reference entry)\n\t * can be used to determine which button has been pressed. If no\n\t * mousePressed() function is defined, the touchStarted() function will be\n\t * called instead if it is defined.<br><br>\n\t * Browsers may have different default\n\t * behaviors attached to various mouse events. To prevent any default\n\t * behavior for this event, add \"return false\" to the end of the method.\n\t *\n\t * @method mousePressed\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Click within the image to change\n\t * // the value of the rectangle\n\t *\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function mousePressed() {\n\t *   if (value == 0) {\n\t *     value = 255;\n\t *   } else {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * function mousePressed() {\n\t *   ellipse(mouseX, mouseY, 5, 5);\n\t *   // prevent default\n\t *   return false;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * black 50x50 rect turns white with mouse click/press.\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype._onmousedown = function(e) {\n\t  var context = this._isGlobal ? window : this;\n\t  var executeDefault;\n\t  this._setProperty('isMousePressed', true);\n\t  this._setProperty('mouseIsPressed', true);\n\t  this._setMouseButton(e);\n\t  this._updateNextMouseCoords(e);\n\t  this._updateNextTouchCoords(e);\n\t  if (typeof context.mousePressed === 'function') {\n\t    executeDefault = context.mousePressed(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  } else if (typeof context.touchStarted === 'function') {\n\t    executeDefault = context.touchStarted(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The mouseReleased() function is called every time a mouse button is\n\t * released. If no mouseReleased() function is defined, the touchEnded()\n\t * function will be called instead if it is defined.<br><br>\n\t * Browsers may have different default\n\t * behaviors attached to various mouse events. To prevent any default\n\t * behavior for this event, add \"return false\" to the end of the method.\n\t *\n\t *\n\t * @method mouseReleased\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Click within the image to change\n\t * // the value of the rectangle\n\t * // after the mouse has been clicked\n\t *\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function mouseReleased() {\n\t *   if (value == 0) {\n\t *     value = 255;\n\t *   } else {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * function mouseReleased() {\n\t *   ellipse(mouseX, mouseY, 5, 5);\n\t *   // prevent default\n\t *   return false;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * black 50x50 rect turns white with mouse click/press.\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype._onmouseup = function(e) {\n\t  var context = this._isGlobal ? window : this;\n\t  var executeDefault;\n\t  this._setProperty('isMousePressed', false);\n\t  this._setProperty('mouseIsPressed', false);\n\t  if (typeof context.mouseReleased === 'function') {\n\t    executeDefault = context.mouseReleased(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  } else if (typeof context.touchEnded === 'function') {\n\t    executeDefault = context.touchEnded(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  }\n\t};\n\t\n\tp5.prototype._ondragend = p5.prototype._onmouseup;\n\tp5.prototype._ondragover = p5.prototype._onmousemove;\n\t\n\t/**\n\t * The mouseClicked() function is called once after a mouse button has been\n\t * pressed and then released.<br><br>\n\t * Browsers may have different default\n\t * behaviors attached to various mouse events. To prevent any default\n\t * behavior for this event, add \"return false\" to the end of the method.\n\t *\n\t * @method mouseClicked\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Click within the image to change\n\t * // the value of the rectangle\n\t * // after the mouse has been clicked\n\t *\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function mouseClicked() {\n\t *   if (value == 0) {\n\t *     value = 255;\n\t *   } else {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * function mouseClicked() {\n\t *   ellipse(mouseX, mouseY, 5, 5);\n\t *   // prevent default\n\t *   return false;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * black 50x50 rect turns white with mouse click/press.\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype._onclick = function(e) {\n\t  var context = this._isGlobal ? window : this;\n\t  if (typeof context.mouseClicked === 'function') {\n\t    var executeDefault = context.mouseClicked(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The function mouseWheel() is executed every time a vertical mouse wheel\n\t * event is detected either triggered by an actual mouse wheel or by a\n\t * touchpad.<br><br>\n\t * The event.delta property returns the amount the mouse wheel\n\t * have scrolled. The values can be positive or negative depending on the\n\t * scroll direction (on OS X with \"natural\" scrolling enabled, the signs\n\t * are inverted).<br><br>\n\t * Browsers may have different default behaviors attached to various\n\t * mouse events. To prevent any default behavior for this event, add\n\t * \"return false\" to the end of the method.<br><br>\n\t * Due to the current support of the \"wheel\" event on Safari, the function\n\t * may only work as expected if \"return false\" is included while using Safari.\n\t *\n\t * @method mouseWheel\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * var pos = 25;\n\t *\n\t * function draw() {\n\t *   background(237, 34, 93);\n\t *   fill(0);\n\t *   rect(25, pos, 50, 50);\n\t * }\n\t *\n\t * function mouseWheel(event) {\n\t *   print(event.delta);\n\t *   //move the square according to the vertical scroll amount\n\t *   pos += event.delta;\n\t *   //uncomment to block page scrolling\n\t *   //return false;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * black 50x50 rect moves up and down with vertical scroll. fuschia background\n\t *\n\t */\n\tp5.prototype._onwheel = function(e) {\n\t  var context = this._isGlobal ? window : this;\n\t  if (typeof context.mouseWheel === 'function') {\n\t    e.delta = e.deltaY;\n\t    var executeDefault = context.mouseWheel(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/constants\":36,\"../core/core\":37}],53:[function(_dereq_,module,exports){\n\t/**\n\t * @module Events\n\t * @submodule Touch\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/*\n\t * This is a flag which is false until the first time\n\t * we receive a touch event. The ptouchX and ptouchY\n\t * values will match the touchX and touchY values until\n\t * this interaction takes place.\n\t */\n\tp5.prototype._hasTouchInteracted = false;\n\t\n\t/**\n\t * The system variable touchX always contains the horizontal position of\n\t * one finger, relative to (0, 0) of the canvas. This is best used for\n\t * single touch interactions. For multi-touch interactions, use the\n\t * touches[] array.\n\t *\n\t * @property touchX\n\t * @method touchX\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Touch and move  the finger in horizontally  across the canvas\n\t * function setup() {\n\t *   createCanvas(100, 100);\n\t * }\n\t *\n\t * function draw() {\n\t *   background(51);\n\t *   stroke(255, 204, 0);\n\t *   strokeWeight(4);\n\t *   rect(touchX, 50, 10, 10);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 10x10 white rect with thick gold outline moves left and right with touch x.\n\t *\n\t */\n\tp5.prototype.touchX = 0;\n\t\n\t/**\n\t * The system variable touchY always contains the vertical position of\n\t * one finger, relative to (0, 0) of the canvas. This is best used for\n\t * single touch interactions. For multi-touch interactions, use the\n\t * touches[] array.\n\t *\n\t * @property touchY\n\t * @method touchY\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Touch and move the finger vertically across the canvas\n\t * function setup() {\n\t *   createCanvas(100, 100);\n\t * }\n\t *\n\t * function draw() {\n\t *   background(51);\n\t *   stroke(255, 204, 0);\n\t *   strokeWeight(4);\n\t *   rect(50, touchY, 10, 10);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 10x10 white rect with thick gold outline moves up and down with touch y.\n\t *\n\t */\n\tp5.prototype.touchY = 0;\n\t\n\t/**\n\t * The system variable ptouchX always contains the horizontal position of\n\t * one finger, relative to (0, 0) of the canvas, in the frame previous to the\n\t * current frame.\n\t *\n\t * @property ptouchX\n\t */\n\tp5.prototype.ptouchX = 0;\n\t\n\t/**\n\t * The system variable ptouchY always contains the vertical position of\n\t * one finger, relative to (0, 0) of the canvas, in the frame previous to the\n\t * current frame.\n\t *\n\t * @property ptouchY\n\t */\n\tp5.prototype.ptouchY = 0;\n\t\n\t/**\n\t * The system variable winTouchX always contains the horizontal position of\n\t * one finger, relative to (0, 0) of the window.\n\t *\n\t * @property winTouchX\n\t */\n\tp5.prototype.winTouchX = 0;\n\t\n\t/**\n\t * The system variable winTouchY always contains the vertical position of\n\t * one finger, relative to (0, 0) of the window.\n\t *\n\t * @property winTouchY\n\t */\n\tp5.prototype.winTouchY = 0;\n\t\n\t/**\n\t * The system variable pwinTouchX always contains the horizontal position of\n\t * one finger, relative to (0, 0) of the window, in the frame previous to the\n\t * current frame.\n\t *\n\t * @property pwinTouchX\n\t */\n\tp5.prototype.pwinTouchX = 0;\n\t\n\t/**\n\t * The system variable pwinTouchY always contains the vertical position of\n\t * one finger, relative to (0, 0) of the window, in the frame previous to the\n\t * current frame.\n\t *\n\t * @property pwinTouchY\n\t */\n\tp5.prototype.pwinTouchY = 0;\n\t\n\t/**\n\t * The system variable touches[] contains an array of the positions of all\n\t * current touch points, relative to (0, 0) of the canvas, and IDs identifying a\n\t * unique touch as it moves. Each element in the array is an object with x, y,\n\t * and id properties.\n\t *\n\t * @property touches[]\n\t */\n\tp5.prototype.touches = [];\n\t\n\t/**\n\t * The boolean system variable touchIsDown is true if the screen is\n\t * touched and false if not.\n\t *\n\t * @property touchIsDown\n\t */\n\tp5.prototype.touchIsDown = false;\n\t\n\tp5.prototype._updateNextTouchCoords = function(e) {\n\t  var x = this.touchX;\n\t  var y = this.touchY;\n\t  var winX = this.winTouchX;\n\t  var winY = this.winTouchY;\n\t  if(e.type === 'mousedown' ||\n\t     e.type === 'mousemove' ||\n\t     e.type === 'mouseup' || !e.touches) {\n\t    x = this.mouseX;\n\t    y = this.mouseY;\n\t    winX = this.winMouseX;\n\t    winY = this.winMouseY;\n\t  } else {\n\t    if(this._curElement !== null) {\n\t      var touchInfo = getTouchInfo(this._curElement.elt, e, 0);\n\t      x = touchInfo.x;\n\t      y = touchInfo.y;\n\t      winX = touchInfo.winX;\n\t      winY = touchInfo.winY;\n\t\n\t      var touches = [];\n\t      for(var i = 0; i < e.touches.length; i++){\n\t        touches[i] = getTouchInfo(this._curElement.elt, e, i);\n\t      }\n\t      this._setProperty('touches', touches);\n\t    }\n\t  }\n\t  this._setProperty('touchX', x);\n\t  this._setProperty('touchY', y);\n\t  this._setProperty('winTouchX', winX);\n\t  this._setProperty('winTouchY', winY);\n\t  if (!this._hasTouchInteracted) {\n\t    // For first draw, make previous and next equal\n\t    this._updateTouchCoords();\n\t    this._setProperty('_hasTouchInteracted', true);\n\t  }\n\t};\n\t\n\tp5.prototype._updateTouchCoords = function() {\n\t  this._setProperty('ptouchX', this.touchX);\n\t  this._setProperty('ptouchY', this.touchY);\n\t  this._setProperty('pwinTouchX', this.winTouchX);\n\t  this._setProperty('pwinTouchY', this.winTouchY);\n\t};\n\t\n\tfunction getTouchInfo(canvas, e, i) {\n\t  i = i || 0;\n\t  var rect = canvas.getBoundingClientRect();\n\t  var touch = e.touches[i] || e.changedTouches[i];\n\t  return {\n\t    x: touch.clientX - rect.left,\n\t    y: touch.clientY - rect.top,\n\t    winX: touch.clientX,\n\t    winY: touch.clientY,\n\t    id: touch.identifier\n\t  };\n\t}\n\t\n\t/**\n\t * The touchStarted() function is called once after every time a touch is\n\t * registered. If no touchStarted() function is defined, the mousePressed()\n\t * function will be called instead if it is defined.<br><br>\n\t * Browsers may have different default behaviors attached to various touch\n\t * events. To prevent any default behavior for this event, add \"return false\"\n\t * to the end of the method.\n\t *\n\t * @method touchStarted\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Touch within the image to change\n\t * // the value of the rectangle\n\t *\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function touchStarted() {\n\t *   if (value == 0) {\n\t *     value = 255;\n\t *   } else {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * function touchStarted() {\n\t *   ellipse(touchX, touchY, 5, 5);\n\t *   // prevent default\n\t *   return false;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 50x50 black rect turns white with touch event.\n\t * no image displayed\n\t */\n\tp5.prototype._ontouchstart = function(e) {\n\t  var context = this._isGlobal ? window : this;\n\t  var executeDefault;\n\t  this._updateNextTouchCoords(e);\n\t  this._updateNextMouseCoords(e);\n\t  this._setProperty('touchIsDown', true);\n\t  if(typeof context.touchStarted === 'function') {\n\t    executeDefault = context.touchStarted(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  } else if (typeof context.mousePressed === 'function') {\n\t    executeDefault = context.mousePressed(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t    //this._setMouseButton(e);\n\t  }\n\t};\n\t\n\t/**\n\t * The touchMoved() function is called every time a touch move is registered.\n\t * If no touchMoved() function is defined, the mouseDragged() function will\n\t * be called instead if it is defined.<br><br>\n\t * Browsers may have different default behaviors attached to various touch\n\t * events. To prevent any default behavior for this event, add \"return false\"\n\t * to the end of the method.\n\t *\n\t * @method touchMoved\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Move your finger across the page\n\t * // to change its value\n\t *\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function touchMoved() {\n\t *   value = value + 5;\n\t *   if (value > 255) {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * function touchMoved() {\n\t *   ellipse(touchX, touchY, 5, 5);\n\t *   // prevent default\n\t *   return false;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 50x50 black rect turns lighter with touch until white. resets\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype._ontouchmove = function(e) {\n\t  var context = this._isGlobal ? window : this;\n\t  var executeDefault;\n\t  this._updateNextTouchCoords(e);\n\t  this._updateNextMouseCoords(e);\n\t  if (typeof context.touchMoved === 'function') {\n\t    executeDefault = context.touchMoved(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  } else if (typeof context.mouseDragged === 'function') {\n\t    executeDefault = context.mouseDragged(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The touchEnded() function is called every time a touch ends. If no\n\t * touchEnded() function is defined, the mouseReleased() function will be\n\t * called instead if it is defined.<br><br>\n\t * Browsers may have different default behaviors attached to various touch\n\t * events. To prevent any default behavior for this event, add \"return false\"\n\t * to the end of the method.\n\t *\n\t * @method touchEnded\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Release touch within the image to\n\t * // change the value of the rectangle\n\t *\n\t * var value = 0;\n\t * function draw() {\n\t *   fill(value);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * function touchEnded() {\n\t *   if (value == 0) {\n\t *     value = 255;\n\t *   } else {\n\t *     value = 0;\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * function touchEnded() {\n\t *   ellipse(touchX, touchY, 5, 5);\n\t *   // prevent default\n\t *   return false;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 50x50 black rect turns white with touch.\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype._ontouchend = function(e) {\n\t  this._updateNextTouchCoords(e);\n\t  this._updateNextMouseCoords(e);\n\t  if (this.touches.length === 0) {\n\t    this._setProperty('touchIsDown', false);\n\t  }\n\t  var context = this._isGlobal ? window : this;\n\t  var executeDefault;\n\t  if (typeof context.touchEnded === 'function') {\n\t    executeDefault = context.touchEnded(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  } else if (typeof context.mouseReleased === 'function') {\n\t    executeDefault = context.mouseReleased(e);\n\t    if(executeDefault === false) {\n\t      e.preventDefault();\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],54:[function(_dereq_,module,exports){\n\t/*global ImageData:false */\n\t\n\t/**\n\t * This module defines the filters for use with image buffers.\n\t *\n\t * This module is basically a collection of functions stored in an object\n\t * as opposed to modules. The functions are destructive, modifying\n\t * the passed in canvas rather than creating a copy.\n\t *\n\t * Generally speaking users of this module will use the Filters.apply method\n\t * on a canvas to create an effect.\n\t *\n\t * A number of functions are borrowed/adapted from\n\t * http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n\t * or the java processing implementation.\n\t */\n\t\n\t'use strict';\n\t\n\tvar Filters = {};\n\t\n\t\n\t/*\n\t * Helper functions\n\t */\n\t\n\t\n\t/**\n\t * Returns the pixel buffer for a canvas\n\t *\n\t * @private\n\t *\n\t * @param  {Canvas|ImageData} canvas the canvas to get pixels from\n\t * @return {Uint8ClampedArray}       a one-dimensional array containing\n\t *                                   the data in thc RGBA order, with integer\n\t *                                   values between 0 and 255\n\t */\n\tFilters._toPixels = function (canvas) {\n\t  if (canvas instanceof ImageData) {\n\t    return canvas.data;\n\t  } else {\n\t    return canvas.getContext('2d').getImageData(\n\t      0,\n\t      0,\n\t      canvas.width,\n\t      canvas.height\n\t    ).data;\n\t  }\n\t};\n\t\n\t/**\n\t * Returns a 32 bit number containing ARGB data at ith pixel in the\n\t * 1D array containing pixels data.\n\t *\n\t * @private\n\t *\n\t * @param  {Uint8ClampedArray} data array returned by _toPixels()\n\t * @param  {Integer}           i    index of a 1D Image Array\n\t * @return {Integer}                32 bit integer value representing\n\t *                                  ARGB value.\n\t */\n\tFilters._getARGB = function (data, i) {\n\t  var offset = i * 4;\n\t  return (data[offset+3] << 24) & 0xff000000 |\n\t    (data[offset] << 16) & 0x00ff0000 |\n\t    (data[offset+1] << 8) & 0x0000ff00 |\n\t    data[offset+2] & 0x000000ff;\n\t};\n\t\n\t/**\n\t * Modifies pixels RGBA values to values contained in the data object.\n\t *\n\t * @private\n\t *\n\t * @param {Uint8ClampedArray} pixels array returned by _toPixels()\n\t * @param {Int32Array}        data   source 1D array where each value\n\t *                                   represents ARGB values\n\t */\n\tFilters._setPixels = function (pixels, data) {\n\t  var offset = 0;\n\t  for( var i = 0, al = pixels.length; i < al; i++) {\n\t    offset = i*4;\n\t    pixels[offset + 0] = (data[i] & 0x00ff0000)>>>16;\n\t    pixels[offset + 1] = (data[i] & 0x0000ff00)>>>8;\n\t    pixels[offset + 2] = (data[i] & 0x000000ff);\n\t    pixels[offset + 3] = (data[i] & 0xff000000)>>>24;\n\t  }\n\t};\n\t\n\t/**\n\t * Returns the ImageData object for a canvas\n\t * https://developer.mozilla.org/en-US/docs/Web/API/ImageData\n\t *\n\t * @private\n\t *\n\t * @param  {Canvas|ImageData} canvas canvas to get image data from\n\t * @return {ImageData}               Holder of pixel data (and width and\n\t *                                   height) for a canvas\n\t */\n\tFilters._toImageData = function (canvas) {\n\t  if (canvas instanceof ImageData) {\n\t    return canvas;\n\t  } else {\n\t    return canvas.getContext('2d').getImageData(\n\t      0,\n\t      0,\n\t      canvas.width,\n\t      canvas.height\n\t    );\n\t  }\n\t};\n\t\n\t/**\n\t * Returns a blank ImageData object.\n\t *\n\t * @private\n\t *\n\t * @param  {Integer} width\n\t * @param  {Integer} height\n\t * @return {ImageData}\n\t */\n\tFilters._createImageData = function (width, height) {\n\t  Filters._tmpCanvas = document.createElement('canvas');\n\t  Filters._tmpCtx = Filters._tmpCanvas.getContext('2d');\n\t  return this._tmpCtx.createImageData(width, height);\n\t};\n\t\n\t\n\t/**\n\t * Applys a filter function to a canvas.\n\t *\n\t * The difference between this and the actual filter functions defined below\n\t * is that the filter functions generally modify the pixel buffer but do\n\t * not actually put that data back to the canvas (where it would actually\n\t * update what is visible). By contrast this method does make the changes\n\t * actually visible in the canvas.\n\t *\n\t * The apply method is the method that callers of this module would generally\n\t * use. It has been separated from the actual filters to support an advanced\n\t * use case of creating a filter chain that executes without actually updating\n\t * the canvas in between everystep.\n\t *\n\t * @param  {[type]} func   [description]\n\t * @param  {[type]} canvas [description]\n\t * @param  {[type]} level  [description]\n\t * @return {[type]}        [description]\n\t */\n\tFilters.apply = function (canvas, func, filterParam) {\n\t  var ctx = canvas.getContext('2d');\n\t  var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\t\n\t  //Filters can either return a new ImageData object, or just modify\n\t  //the one they received.\n\t  var newImageData = func(imageData, filterParam);\n\t  if (newImageData instanceof ImageData) {\n\t    ctx.putImageData(newImageData, 0, 0, 0, 0, canvas.width, canvas.height);\n\t  } else {\n\t    ctx.putImageData(imageData, 0, 0, 0, 0, canvas.width, canvas.height);\n\t  }\n\t};\n\t\n\t\n\t/*\n\t * Filters\n\t */\n\t\n\t\n\t/**\n\t * Converts the image to black and white pixels depending if they are above or\n\t * below the threshold defined by the level parameter. The parameter must be\n\t * between 0.0 (black) and 1.0 (white). If no level is specified, 0.5 is used.\n\t *\n\t * Borrowed from http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n\t *\n\t * @param  {Canvas} canvas\n\t * @param  {Float} level\n\t */\n\tFilters.threshold = function (canvas, level) {\n\t  var pixels = Filters._toPixels(canvas);\n\t\n\t  if (level === undefined) {\n\t    level = 0.5;\n\t  }\n\t  var thresh = Math.floor(level * 255);\n\t\n\t  for (var i = 0; i < pixels.length; i += 4) {\n\t    var r = pixels[i];\n\t    var g = pixels[i + 1];\n\t    var b = pixels[i + 2];\n\t    var gray = (0.2126 * r + 0.7152 * g + 0.0722 * b);\n\t    var val;\n\t    if (gray >= thresh) {\n\t      val = 255;\n\t    } else {\n\t      val = 0;\n\t    }\n\t    pixels[i] = pixels[i + 1] = pixels[i + 2] = val;\n\t  }\n\t\n\t};\n\t\n\t\n\t/**\n\t * Converts any colors in the image to grayscale equivalents.\n\t * No parameter is used.\n\t *\n\t * Borrowed from http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n\t *\n\t * @param {Canvas} canvas\n\t */\n\tFilters.gray = function (canvas) {\n\t  var pixels = Filters._toPixels(canvas);\n\t\n\t  for (var i = 0; i < pixels.length; i += 4) {\n\t    var r = pixels[i];\n\t    var g = pixels[i + 1];\n\t    var b = pixels[i + 2];\n\t\n\t    // CIE luminance for RGB\n\t    var gray = (0.2126 * r + 0.7152 * g + 0.0722 * b);\n\t    pixels[i] = pixels[i + 1] = pixels[i + 2] = gray;\n\t  }\n\t};\n\t\n\t/**\n\t * Sets the alpha channel to entirely opaque. No parameter is used.\n\t *\n\t * @param {Canvas} canvas\n\t */\n\tFilters.opaque = function (canvas) {\n\t  var pixels = Filters._toPixels(canvas);\n\t\n\t  for (var i = 0; i < pixels.length; i += 4) {\n\t    pixels[i + 3] = 255;\n\t  }\n\t\n\t  return pixels;\n\t};\n\t\n\t/**\n\t * Sets each pixel to its inverse value. No parameter is used.\n\t * @param {Invert}\n\t */\n\tFilters.invert = function (canvas) {\n\t  var pixels = Filters._toPixels(canvas);\n\t\n\t  for (var i = 0; i < pixels.length; i += 4) {\n\t    pixels[i] = 255 - pixels[i];\n\t    pixels[i + 1] = 255 - pixels[i + 1];\n\t    pixels[i + 2] = 255 - pixels[i + 2];\n\t  }\n\t\n\t};\n\t\n\t\n\t/**\n\t * Limits each channel of the image to the number of colors specified as\n\t * the parameter. The parameter can be set to values between 2 and 255, but\n\t * results are most noticeable in the lower ranges.\n\t *\n\t * Adapted from java based processing implementation\n\t *\n\t * @param  {Canvas} canvas\n\t * @param  {Integer} level\n\t */\n\tFilters.posterize = function (canvas, level) {\n\t  var pixels = Filters._toPixels(canvas);\n\t\n\t  if ((level < 2) || (level > 255)) {\n\t    throw new Error(\n\t      'Level must be greater than 2 and less than 255 for posterize'\n\t    );\n\t  }\n\t\n\t  var levels1 = level - 1;\n\t  for (var i = 0; i < pixels.length; i+=4) {\n\t    var rlevel = pixels[i];\n\t    var glevel = pixels[i + 1];\n\t    var blevel = pixels[i + 2];\n\t\n\t    pixels[i] = (((rlevel * level) >> 8) * 255) / levels1;\n\t    pixels[i + 1] = (((glevel * level) >> 8) * 255) / levels1;\n\t    pixels[i + 2] = (((blevel * level) >> 8) * 255) / levels1;\n\t  }\n\t};\n\t\n\t/**\n\t * reduces the bright areas in an image\n\t * @param  {Canvas} canvas\n\t *\n\t */\n\tFilters.dilate = function (canvas) {\n\t  var pixels = Filters._toPixels(canvas);\n\t  var currIdx = 0;\n\t  var maxIdx = pixels.length ? pixels.length/4 : 0;\n\t  var out = new Int32Array(maxIdx);\n\t  var currRowIdx, maxRowIdx, colOrig, colOut, currLum;\n\t  var idxRight, idxLeft, idxUp, idxDown,\n\t      colRight, colLeft, colUp, colDown,\n\t      lumRight, lumLeft, lumUp, lumDown;\n\t\n\t  while(currIdx < maxIdx) {\n\t    currRowIdx = currIdx;\n\t    maxRowIdx = currIdx + canvas.width;\n\t    while (currIdx < maxRowIdx) {\n\t      colOrig = colOut = Filters._getARGB(pixels, currIdx);\n\t      idxLeft = currIdx - 1;\n\t      idxRight = currIdx + 1;\n\t      idxUp = currIdx - canvas.width;\n\t      idxDown = currIdx + canvas.width;\n\t\n\t      if (idxLeft < currRowIdx) {\n\t        idxLeft = currIdx;\n\t      }\n\t      if (idxRight >= maxRowIdx) {\n\t        idxRight = currIdx;\n\t      }\n\t      if (idxUp < 0){\n\t        idxUp = 0;\n\t      }\n\t      if (idxDown >= maxIdx) {\n\t        idxDown = currIdx;\n\t      }\n\t      colUp = Filters._getARGB(pixels, idxUp);\n\t      colLeft = Filters._getARGB(pixels, idxLeft);\n\t      colDown = Filters._getARGB(pixels, idxDown);\n\t      colRight = Filters._getARGB(pixels, idxRight);\n\t\n\t      //compute luminance\n\t      currLum = 77*(colOrig>>16&0xff) +\n\t        151*(colOrig>>8&0xff) +\n\t        28*(colOrig&0xff);\n\t      lumLeft = 77*(colLeft>>16&0xff) +\n\t        151*(colLeft>>8&0xff) +\n\t        28*(colLeft&0xff);\n\t      lumRight = 77*(colRight>>16&0xff) +\n\t        151*(colRight>>8&0xff) +\n\t        28*(colRight&0xff);\n\t      lumUp = 77*(colUp>>16&0xff) +\n\t        151*(colUp>>8&0xff) +\n\t        28*(colUp&0xff);\n\t      lumDown = 77*(colDown>>16&0xff) +\n\t        151*(colDown>>8&0xff) +\n\t        28*(colDown&0xff);\n\t\n\t      if (lumLeft > currLum) {\n\t        colOut = colLeft;\n\t        currLum = lumLeft;\n\t      }\n\t      if (lumRight > currLum) {\n\t        colOut = colRight;\n\t        currLum = lumRight;\n\t      }\n\t      if (lumUp > currLum) {\n\t        colOut = colUp;\n\t        currLum = lumUp;\n\t      }\n\t      if (lumDown > currLum) {\n\t        colOut = colDown;\n\t        currLum = lumDown;\n\t      }\n\t      out[currIdx++]=colOut;\n\t    }\n\t  }\n\t  Filters._setPixels(pixels, out);\n\t};\n\t\n\t/**\n\t * increases the bright areas in an image\n\t * @param  {Canvas} canvas\n\t *\n\t */\n\tFilters.erode = function(canvas) {\n\t  var pixels = Filters._toPixels(canvas);\n\t  var currIdx = 0;\n\t  var maxIdx = pixels.length ? pixels.length/4 : 0;\n\t  var out = new Int32Array(maxIdx);\n\t  var currRowIdx, maxRowIdx, colOrig, colOut, currLum;\n\t  var idxRight, idxLeft, idxUp, idxDown,\n\t      colRight, colLeft, colUp, colDown,\n\t      lumRight, lumLeft, lumUp, lumDown;\n\t\n\t  while(currIdx < maxIdx) {\n\t    currRowIdx = currIdx;\n\t    maxRowIdx = currIdx + canvas.width;\n\t    while (currIdx < maxRowIdx) {\n\t      colOrig = colOut = Filters._getARGB(pixels, currIdx);\n\t      idxLeft = currIdx - 1;\n\t      idxRight = currIdx + 1;\n\t      idxUp = currIdx - canvas.width;\n\t      idxDown = currIdx + canvas.width;\n\t\n\t      if (idxLeft < currRowIdx) {\n\t        idxLeft = currIdx;\n\t      }\n\t      if (idxRight >= maxRowIdx) {\n\t        idxRight = currIdx;\n\t      }\n\t      if (idxUp < 0) {\n\t        idxUp = 0;\n\t      }\n\t      if (idxDown >= maxIdx) {\n\t        idxDown = currIdx;\n\t      }\n\t      colUp = Filters._getARGB(pixels, idxUp);\n\t      colLeft = Filters._getARGB(pixels, idxLeft);\n\t      colDown = Filters._getARGB(pixels, idxDown);\n\t      colRight = Filters._getARGB(pixels, idxRight);\n\t\n\t      //compute luminance\n\t      currLum = 77*(colOrig>>16&0xff) +\n\t        151*(colOrig>>8&0xff) +\n\t        28*(colOrig&0xff);\n\t      lumLeft = 77*(colLeft>>16&0xff) +\n\t        151*(colLeft>>8&0xff) +\n\t        28*(colLeft&0xff);\n\t      lumRight = 77*(colRight>>16&0xff) +\n\t        151*(colRight>>8&0xff) +\n\t        28*(colRight&0xff);\n\t      lumUp = 77*(colUp>>16&0xff) +\n\t        151*(colUp>>8&0xff) +\n\t        28*(colUp&0xff);\n\t      lumDown = 77*(colDown>>16&0xff) +\n\t        151*(colDown>>8&0xff) +\n\t        28*(colDown&0xff);\n\t\n\t      if (lumLeft < currLum) {\n\t        colOut = colLeft;\n\t        currLum = lumLeft;\n\t      }\n\t      if (lumRight < currLum) {\n\t        colOut = colRight;\n\t        currLum = lumRight;\n\t      }\n\t      if (lumUp < currLum) {\n\t        colOut = colUp;\n\t        currLum = lumUp;\n\t      }\n\t      if (lumDown < currLum) {\n\t        colOut = colDown;\n\t        currLum = lumDown;\n\t      }\n\t\n\t      out[currIdx++]=colOut;\n\t    }\n\t  }\n\t  Filters._setPixels(pixels, out);\n\t};\n\t\n\t// BLUR\n\t\n\t// internal kernel stuff for the gaussian blur filter\n\tvar blurRadius;\n\tvar blurKernelSize;\n\tvar blurKernel;\n\tvar blurMult;\n\t\n\t/*\n\t * Port of https://github.com/processing/processing/blob/\n\t * master/core/src/processing/core/PImage.java#L1250\n\t *\n\t * Optimized code for building the blur kernel.\n\t * further optimized blur code (approx. 15% for radius=20)\n\t * bigger speed gains for larger radii (~30%)\n\t * added support for various image types (ALPHA, RGB, ARGB)\n\t * [toxi 050728]\n\t */\n\tfunction buildBlurKernel(r) {\n\t  var radius = (r * 3.5)|0;\n\t  radius = (radius < 1) ? 1 : ((radius < 248) ? radius : 248);\n\t\n\t  if (blurRadius !== radius) {\n\t    blurRadius = radius;\n\t    blurKernelSize = 1 + blurRadius<<1;\n\t    blurKernel = new Int32Array(blurKernelSize);\n\t    blurMult = new Array(blurKernelSize);\n\t    for(var l = 0; l < blurKernelSize; l++){\n\t      blurMult[l] = new Int32Array(256);\n\t    }\n\t\n\t    var bk,bki;\n\t    var bm,bmi;\n\t\n\t    for (var i = 1, radiusi = radius - 1; i < radius; i++) {\n\t      blurKernel[radius+i] = blurKernel[radiusi] = bki = radiusi * radiusi;\n\t      bm = blurMult[radius+i];\n\t      bmi = blurMult[radiusi--];\n\t      for (var j = 0; j < 256; j++){\n\t        bm[j] = bmi[j] = bki * j;\n\t      }\n\t    }\n\t    bk = blurKernel[radius] = radius * radius;\n\t    bm = blurMult[radius];\n\t\n\t    for (var k = 0; k < 256; k++){\n\t      bm[k] = bk * k;\n\t    }\n\t  }\n\t\n\t}\n\t\n\t// Port of https://github.com/processing/processing/blob/\n\t// master/core/src/processing/core/PImage.java#L1433\n\tfunction blurARGB(canvas, radius) {\n\t  var pixels = Filters._toPixels(canvas);\n\t  var width = canvas.width;\n\t  var height = canvas.height;\n\t  var numPackedPixels = width * height;\n\t  var argb = new Int32Array(numPackedPixels);\n\t  for (var j = 0; j < numPackedPixels; j++) {\n\t    argb[j] = Filters._getARGB(pixels, j);\n\t  }\n\t  var sum, cr, cg, cb, ca;\n\t  var read, ri, ym, ymi, bk0;\n\t  var a2 = new Int32Array(numPackedPixels);\n\t  var r2 = new Int32Array(numPackedPixels);\n\t  var g2 = new Int32Array(numPackedPixels);\n\t  var b2 = new Int32Array(numPackedPixels);\n\t  var yi = 0;\n\t  buildBlurKernel(radius);\n\t  var x, y, i;\n\t  var bm;\n\t  for (y = 0; y < height; y++) {\n\t    for (x = 0; x < width; x++) {\n\t      cb = cg = cr = ca = sum = 0;\n\t      read = x - blurRadius;\n\t      if (read < 0) {\n\t        bk0 = -read;\n\t        read = 0;\n\t      } else {\n\t        if (read >= width) {\n\t          break;\n\t        }\n\t        bk0 = 0;\n\t      }\n\t      for (i = bk0; i < blurKernelSize; i++) {\n\t        if (read >= width) {\n\t          break;\n\t        }\n\t        var c = argb[read + yi];\n\t        bm = blurMult[i];\n\t        ca += bm[(c & -16777216) >>> 24];\n\t        cr += bm[(c & 16711680) >> 16];\n\t        cg += bm[(c & 65280) >> 8];\n\t        cb += bm[c & 255];\n\t        sum += blurKernel[i];\n\t        read++;\n\t      }\n\t      ri = yi + x;\n\t      a2[ri] = ca / sum;\n\t      r2[ri] = cr / sum;\n\t      g2[ri] = cg / sum;\n\t      b2[ri] = cb / sum;\n\t    }\n\t    yi += width;\n\t  }\n\t  yi = 0;\n\t  ym = -blurRadius;\n\t  ymi = ym * width;\n\t  for (y = 0; y < height; y++) {\n\t    for (x = 0; x < width; x++) {\n\t      cb = cg = cr = ca = sum = 0;\n\t      if (ym < 0) {\n\t        bk0 = ri = -ym;\n\t        read = x;\n\t      } else {\n\t        if (ym >= height) {\n\t          break;\n\t        }\n\t        bk0 = 0;\n\t        ri = ym;\n\t        read = x + ymi;\n\t      }\n\t      for (i = bk0; i < blurKernelSize; i++) {\n\t        if (ri >= height) {\n\t          break;\n\t        }\n\t        bm = blurMult[i];\n\t        ca += bm[a2[read]];\n\t        cr += bm[r2[read]];\n\t        cg += bm[g2[read]];\n\t        cb += bm[b2[read]];\n\t        sum += blurKernel[i];\n\t        ri++;\n\t        read += width;\n\t      }\n\t      argb[x + yi] = (ca/sum)<<24 | (cr/sum)<<16 | (cg/sum)<<8 | (cb/sum);\n\t    }\n\t    yi += width;\n\t    ymi += width;\n\t    ym++;\n\t  }\n\t  Filters._setPixels(pixels, argb);\n\t}\n\t\n\tFilters.blur = function(canvas, radius){\n\t  blurARGB(canvas, radius);\n\t};\n\t\n\t\n\tmodule.exports = Filters;\n\t\n\t},{}],55:[function(_dereq_,module,exports){\n\t/**\n\t * @module Image\n\t * @submodule Image\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t/**\n\t * This module defines the p5 methods for the p5.Image class\n\t * for drawing images to the main display canvas.\n\t */\n\t'use strict';\n\t\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/* global frames:true */// This is not global, but JSHint is not aware that\n\t// this module is implicitly enclosed with Browserify: this overrides the\n\t// redefined-global error and permits using the name \"frames\" for the array\n\t// of saved animation frames.\n\tvar frames = [];\n\t\n\t\n\t/**\n\t * Creates a new p5.Image (the datatype for storing images). This provides a\n\t * fresh buffer of pixels to play with. Set the size of the buffer with the\n\t * width and height parameters.\n\t * <br><br>\n\t * .pixels gives access to an array containing the values for all the pixels\n\t * in the display window.\n\t * These values are numbers. This array is the size (including an appropriate\n\t * factor for the pixelDensity) of the display window x4,\n\t * representing the R, G, B, A values in order for each pixel, moving from\n\t * left to right across each row, then down each column. See .pixels for\n\t * more info. It may also be simpler to use set() or get().\n\t * <br><br>\n\t * Before accessing the pixels of an image, the data must loaded with the\n\t * loadPixels() function. After the array data has been modified, the\n\t * updatePixels() function must be run to update the changes.\n\t *\n\t * @method createImage\n\t * @param  {Integer} width  width in pixels\n\t * @param  {Integer} height height in pixels\n\t * @return {p5.Image}       the p5.Image object\n\t * @example\n\t * <div>\n\t * <code>\n\t * img = createImage(66, 66);\n\t * img.loadPixels();\n\t * for (i = 0; i < img.width; i++) {\n\t *   for (j = 0; j < img.height; j++) {\n\t *     img.set(i, j, color(0, 90, 102));\n\t *   }\n\t * }\n\t * img.updatePixels();\n\t * image(img, 17, 17);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * img = createImage(66, 66);\n\t * img.loadPixels();\n\t * for (i = 0; i < img.width; i++) {\n\t *   for (j = 0; j < img.height; j++) {\n\t *     img.set(i, j, color(0, 90, 102, i % img.width * 2));\n\t *   }\n\t * }\n\t * img.updatePixels();\n\t * image(img, 17, 17);\n\t * image(img, 34, 34);\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var pink = color(255, 102, 204);\n\t * img = createImage(66, 66);\n\t * img.loadPixels();\n\t * var d = pixelDensity;\n\t * var halfImage = 4 * (width * d) * (height/2 * d);\n\t * for (var i = 0; i < halfImage; i+=4) {\n\t *   img.pixels[i] = red(pink);\n\t *   img.pixels[i+1] = green(pink);\n\t *   img.pixels[i+2] = blue(pink);\n\t *   img.pixels[i+3] = alpha(pink);\n\t * }\n\t * img.updatePixels();\n\t * image(img, 17, 17);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 66x66 dark turquoise rect in center of canvas.\n\t * 2 gradated dark turquoise rects fade left. 1 center 1 bottom right of canvas\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype.createImage = function(width, height) {\n\t  return new p5.Image(width, height);\n\t};\n\t\n\t/**\n\t *  Save the current canvas as an image. In Safari, this will open the\n\t *  image in the window and the user must provide their own\n\t *  filename on save-as. Other browsers will either save the\n\t *  file immediately, or prompt the user with a dialogue window.\n\t *\n\t *  @method saveCanvas\n\t *  @param  {[selectedCanvas]} canvas a variable representing a\n\t *                             specific html5 canvas (optional)\n\t *  @param  {[String]} filename\n\t *  @param  {[String]} extension 'jpg' or 'png'\n\t *  @example\n\t *  <div class='norender'><code>\n\t *  function setup() {\n\t *    var c = createCanvas(100, 100);\n\t *    background(255, 0, 0);\n\t *    saveCanvas(c, 'myCanvas', 'jpg');\n\t *  }\n\t *  </code></div>\n\t *  <div class='norender'><code>\n\t *  // note that this example has the same result as above\n\t *  // if no canvas is specified, defaults to main canvas\n\t *  function setup() {\n\t *    createCanvas(100, 100);\n\t *    background(255, 0, 0);\n\t *    saveCanvas('myCanvas', 'jpg');\n\t *  }\n\t *  </code></div>\n\t *  <div class='norender'><code>\n\t *  // all of the following are valid\n\t *  saveCanvas(c, 'myCanvas', 'jpg');\n\t *  saveCanvas(c, 'myCanvas');\n\t *  saveCanvas(c);\n\t *  saveCanvas('myCanvas', 'png');\n\t *  saveCanvas('myCanvas');\n\t *  saveCanvas();\n\t *  </code></div>\n\t *\n\t * @alt\n\t * no image displayed\n\t * no image displayed\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype.saveCanvas = function() {\n\t\n\t  var cnv, filename, extension;\n\t  if (arguments.length === 3) {\n\t    cnv = arguments[0];\n\t    filename = arguments[1];\n\t    extension = arguments[2];\n\t  } else if (arguments.length === 2) {\n\t    if (typeof arguments[0] === 'object') {\n\t      cnv = arguments[0];\n\t      filename = arguments[1];\n\t    } else {\n\t      filename = arguments[0];\n\t      extension = arguments[1];\n\t    }\n\t  } else if (arguments.length === 1) {\n\t    if (typeof arguments[0] === 'object') {\n\t      cnv = arguments[0];\n\t    } else {\n\t      filename = arguments[0];\n\t    }\n\t  }\n\t\n\t  if (cnv instanceof p5.Element) {\n\t    cnv = cnv.elt;\n\t  }\n\t  if (!(cnv instanceof HTMLCanvasElement)) {\n\t    cnv = null;\n\t  }\n\t\n\t  if (!extension) {\n\t    extension = p5.prototype._checkFileExtension(filename, extension)[1];\n\t    if (extension === '') {\n\t      extension = 'png';\n\t    }\n\t  }\n\t\n\t  if (!cnv) {\n\t    if (this._curElement && this._curElement.elt) {\n\t      cnv = this._curElement.elt;\n\t    }\n\t  }\n\t\n\t  if ( p5.prototype._isSafari() ) {\n\t    var aText = 'Hello, Safari user!\\n';\n\t    aText += 'Now capturing a screenshot...\\n';\n\t    aText += 'To save this image,\\n';\n\t    aText += 'go to File --> Save As.\\n';\n\t    alert(aText);\n\t    window.location.href = cnv.toDataURL();\n\t  } else {\n\t    var mimeType;\n\t    if (typeof(extension) === 'undefined') {\n\t      extension = 'png';\n\t      mimeType = 'image/png';\n\t    }\n\t    else {\n\t      switch(extension){\n\t        case 'png':\n\t          mimeType = 'image/png';\n\t          break;\n\t        case 'jpeg':\n\t          mimeType = 'image/jpeg';\n\t          break;\n\t        case 'jpg':\n\t          mimeType = 'image/jpeg';\n\t          break;\n\t        default:\n\t          mimeType = 'image/png';\n\t          break;\n\t      }\n\t    }\n\t    var downloadMime = 'image/octet-stream';\n\t    var imageData = cnv.toDataURL(mimeType);\n\t    imageData = imageData.replace(mimeType, downloadMime);\n\t\n\t    p5.prototype.downloadFile(imageData, filename, extension);\n\t  }\n\t};\n\t\n\t/**\n\t *  Capture a sequence of frames that can be used to create a movie.\n\t *  Accepts a callback. For example, you may wish to send the frames\n\t *  to a server where they can be stored or converted into a movie.\n\t *  If no callback is provided, the browser will pop up save dialogues in an\n\t *  attempt to download all of the images that have just been created. With the\n\t *  callback provided the image data isn't saved by default but instead passed\n\t *  as an argument to the callback function as an array of objects, with the\n\t *  size of array equal to the total number of frames.\n\t *\n\t *  @method saveFrames\n\t *  @param  {String}   filename\n\t *  @param  {String}   extension 'jpg' or 'png'\n\t *  @param  {Number}   duration  Duration in seconds to save the frames for.\n\t *  @param  {Number}   framerate  Framerate to save the frames in.\n\t *  @param  {Function} [callback] A callback function that will be executed\n\t                                  to handle the image data. This function\n\t                                  should accept an array as argument. The\n\t                                  array will contain the specified number of\n\t                                  frames of objects. Each object has three\n\t                                  properties: imageData - an\n\t                                  image/octet-stream, filename and extension.\n\t *  @example\n\t *  <div><code>\n\t *  function draw() {\n\t *    background(mouseX);\n\t *  }\n\t *\n\t *  function mousePressed() {\n\t *    saveFrames(\"out\", \"png\", 1, 25, function(data){\n\t *      print(data);\n\t *    });\n\t *  }\n\t *  </code></div>\n\t *\n\t * @alt\n\t * canvas background goes from light to dark with mouse x.\n\t *\n\t */\n\tp5.prototype.saveFrames = function(fName, ext, _duration, _fps, callback) {\n\t  var duration = _duration || 3;\n\t  duration = p5.prototype.constrain(duration, 0, 15);\n\t  duration = duration * 1000;\n\t  var fps = _fps || 15;\n\t  fps = p5.prototype.constrain(fps, 0, 22);\n\t  var count = 0;\n\t\n\t  var makeFrame = p5.prototype._makeFrame;\n\t  var cnv = this._curElement.elt;\n\t  var frameFactory = setInterval(function(){\n\t    makeFrame(fName + count, ext, cnv);\n\t    count++;\n\t  },1000/fps);\n\t\n\t  setTimeout(function(){\n\t    clearInterval(frameFactory);\n\t    if (callback) {\n\t      callback(frames);\n\t    }\n\t    else {\n\t      for (var i = 0; i < frames.length; i++) {\n\t        var f = frames[i];\n\t        p5.prototype.downloadFile(f.imageData, f.filename, f.ext);\n\t      }\n\t    }\n\t    frames = []; // clear frames\n\t  }, duration + 0.01);\n\t};\n\t\n\tp5.prototype._makeFrame = function(filename, extension, _cnv) {\n\t  var cnv;\n\t  if (this) {\n\t    cnv = this._curElement.elt;\n\t  } else {\n\t    cnv = _cnv;\n\t  }\n\t  var mimeType;\n\t  if (!extension) {\n\t    extension = 'png';\n\t    mimeType = 'image/png';\n\t  }\n\t  else {\n\t    switch(extension.toLowerCase()){\n\t      case 'png':\n\t        mimeType = 'image/png';\n\t        break;\n\t      case 'jpeg':\n\t        mimeType = 'image/jpeg';\n\t        break;\n\t      case 'jpg':\n\t        mimeType = 'image/jpeg';\n\t        break;\n\t      default:\n\t        mimeType = 'image/png';\n\t        break;\n\t    }\n\t  }\n\t  var downloadMime = 'image/octet-stream';\n\t  var imageData = cnv.toDataURL(mimeType);\n\t  imageData = imageData.replace(mimeType, downloadMime);\n\t\n\t  var thisFrame = {};\n\t  thisFrame.imageData = imageData;\n\t  thisFrame.filename = filename;\n\t  thisFrame.ext = extension;\n\t  frames.push(thisFrame);\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],56:[function(_dereq_,module,exports){\n\t/**\n\t * @module Image\n\t * @submodule Loading & Displaying\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar Filters = _dereq_('./filters');\n\tvar canvas = _dereq_('../core/canvas');\n\tvar constants = _dereq_('../core/constants');\n\t\n\t_dereq_('../core/error_helpers');\n\t\n\t/**\n\t * Loads an image from a path and creates a p5.Image from it.\n\t * <br><br>\n\t * The image may not be immediately available for rendering\n\t * If you want to ensure that the image is ready before doing\n\t * anything with it, place the loadImage() call in preload().\n\t * You may also supply a callback function to handle the image when it's ready.\n\t * <br><br>\n\t * The path to the image should be relative to the HTML file\n\t * that links in your sketch. Loading an from a URL or other\n\t * remote location may be blocked due to your browser's built-in\n\t * security.\n\t *\n\t * @method loadImage\n\t * @param  {String} path Path of the image to be loaded\n\t * @param  {Function(p5.Image)} [successCallback] Function to be called once\n\t *                                the image is loaded. Will be passed the\n\t *                                p5.Image.\n\t * @param  {Function(Event)}    [failureCallback] called with event error if\n\t *                                the image fails to load.\n\t * @return {p5.Image}             the p5.Image object\n\t * @example\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/laDefense.jpg\");\n\t * }\n\t * function setup() {\n\t *   image(img, 0, 0);\n\t * }\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * function setup() {\n\t *   // here we use a callback to display the image after loading\n\t *   loadImage(\"assets/laDefense.jpg\", function(img) {\n\t *     image(img, 0, 0);\n\t *   });\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * image of the underside of a white umbrella and grided ceililng above\n\t * image of the underside of a white umbrella and grided ceililng above\n\t *\n\t */\n\tp5.prototype.loadImage = function(path, successCallback, failureCallback) {\n\t  var img = new Image();\n\t  var pImg = new p5.Image(1, 1, this);\n\t  var decrementPreload = p5._getDecrementPreload.apply(this, arguments);\n\t\n\t  img.onload = function() {\n\t    pImg.width = pImg.canvas.width = img.width;\n\t    pImg.height = pImg.canvas.height = img.height;\n\t\n\t    // Draw the image into the backing canvas of the p5.Image\n\t    pImg.drawingContext.drawImage(img, 0, 0);\n\t\n\t    if (typeof successCallback === 'function') {\n\t      successCallback(pImg);\n\t    }\n\t    if (decrementPreload && (successCallback !== decrementPreload)) {\n\t      decrementPreload();\n\t    }\n\t  };\n\t  img.onerror = function(e) {\n\t    p5._friendlyFileLoadError(0,img.src);\n\t    // don't get failure callback mixed up with decrementPreload\n\t    if ((typeof failureCallback === 'function') &&\n\t      (failureCallback !== decrementPreload)) {\n\t      failureCallback(e);\n\t    }\n\t  };\n\t\n\t  //set crossOrigin in case image is served which CORS headers\n\t  //this will let us draw to canvas without tainting it.\n\t  //see https://developer.mozilla.org/en-US/docs/HTML/CORS_Enabled_Image\n\t  // When using data-uris the file will be loaded locally\n\t  // so we don't need to worry about crossOrigin with base64 file types\n\t  if(path.indexOf('data:image/') !== 0) {\n\t    img.crossOrigin = 'Anonymous';\n\t  }\n\t\n\t  //start loading the image\n\t  img.src = path;\n\t\n\t  return pImg;\n\t};\n\t\n\t/**\n\t * Validates clipping params. Per drawImage spec sWidth and sHight cannot be\n\t * negative or greater than image intrinsic width and height\n\t * @private\n\t * @param {Number} sVal\n\t * @param {Number} iVal\n\t * @returns {Number}\n\t * @private\n\t */\n\tfunction _sAssign(sVal, iVal) {\n\t  if (sVal > 0 && sVal < iVal) {\n\t    return sVal;\n\t  }\n\t  else {\n\t    return iVal;\n\t  }\n\t}\n\t\n\t/**\n\t * Draw an image to the main canvas of the p5js sketch\n\t *\n\t * @method image\n\t * @param  {p5.Image} img    the image to display\n\t * @param  {Number}   [sx=0]   The X coordinate of the top left corner of the\n\t *                             sub-rectangle of the source image to draw into\n\t *                             the destination canvas.\n\t * @param  {Number}   [sy=0]   The Y coordinate of the top left corner of the\n\t *                             sub-rectangle of the source image to draw into\n\t *                             the destination canvas.\n\t * @param {Number} [sWidth=img.width] The width of the sub-rectangle of the\n\t *                                    source image to draw into the destination\n\t *                                    canvas.\n\t * @param {Number} [sHeight=img.height] The height of the sub-rectangle of the\n\t *                                      source image to draw into the\n\t *                                      destination context.\n\t * @param  {Number}   [dx=0]    The X coordinate in the destination canvas at\n\t *                              which to place the top-left corner of the\n\t *                              source image.\n\t * @param  {Number}   [dy=0]    The Y coordinate in the destination canvas at\n\t *                              which to place the top-left corner of the\n\t *                              source image.\n\t * @param  {Number}   [dWidth]  The width to draw the image in the destination\n\t *                              canvas. This allows scaling of the drawn image.\n\t * @param  {Number}   [dHeight] The height to draw the image in the destination\n\t *                              canvas. This allows scaling of the drawn image.\n\t * @example\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/laDefense.jpg\");\n\t * }\n\t * function setup() {\n\t *   image(img, 0, 0);\n\t *   image(img, 0, 0, 100, 100);\n\t *   image(img, 0, 0, 100, 100, 0, 0, 100, 100);\n\t * }\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * function setup() {\n\t *   // here we use a callback to display the image after loading\n\t *   loadImage(\"assets/laDefense.jpg\", function(img) {\n\t *     image(img, 0, 0);\n\t *   });\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * image of the underside of a white umbrella and grided ceiling above\n\t * image of the underside of a white umbrella and grided ceiling above\n\t *\n\t */\n\tp5.prototype.image =\n\t  function(img, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) {\n\t  // Temporarily disabling until options for p5.Graphics are added.\n\t  // var args = new Array(arguments.length);\n\t  // for (var i = 0; i < args.length; ++i) {\n\t  //   args[i] = arguments[i];\n\t  // }\n\t  // this._validateParameters(\n\t  //   'image',\n\t  //   args,\n\t  //   [\n\t  //     ['p5.Image', 'Number', 'Number'],\n\t  //     ['p5.Image', 'Number', 'Number', 'Number', 'Number']\n\t  //   ]\n\t  // );\n\t\n\t  // set defaults per spec: https://goo.gl/3ykfOq\n\t  if (arguments.length <= 5) {\n\t    dx = sx || 0;\n\t    dy = sy || 0;\n\t    sx = 0;\n\t    sy = 0;\n\t    if (img.elt && img.elt.videoWidth && !img.canvas) { // video no canvas\n\t      var actualW = img.elt.videoWidth;\n\t      var actualH = img.elt.videoHeight;\n\t      dWidth = sWidth || img.elt.width;\n\t      dHeight = sHeight || img.elt.width*actualH/actualW;\n\t      sWidth = actualW;\n\t      sHeight = actualH;\n\t    } else {\n\t      dWidth = sWidth || img.width;\n\t      dHeight = sHeight || img.height;\n\t      sWidth = img.width;\n\t      sHeight = img.height;\n\t    }\n\t  } else if (arguments.length === 9) {\n\t    sx = sx || 0;\n\t    sy = sy || 0;\n\t    sWidth = _sAssign(sWidth, img.width);\n\t    sHeight = _sAssign(sHeight, img.height);\n\t\n\t    dx = dx || 0;\n\t    dy = dy || 0;\n\t    dWidth = dWidth || img.width;\n\t    dHeight = dHeight || img.height;\n\t  } else {\n\t    throw 'Wrong number of arguments to image()';\n\t  }\n\t\n\t  var vals = canvas.modeAdjust(dx, dy, dWidth, dHeight,\n\t    this._renderer._imageMode);\n\t\n\t  // tint the image if there is a tint\n\t  this._renderer.image(img, sx, sy, sWidth, sHeight, vals.x, vals.y, vals.w,\n\t    vals.h);\n\t};\n\t\n\t/**\n\t * Sets the fill value for displaying images. Images can be tinted to\n\t * specified colors or made transparent by including an alpha value.\n\t * <br><br>\n\t * To apply transparency to an image without affecting its color, use\n\t * white as the tint color and specify an alpha value. For instance,\n\t * tint(255, 128) will make an image 50% transparent (assuming the default\n\t * alpha range of 0-255, which can be changed with colorMode()).\n\t * <br><br>\n\t * The value for the gray parameter must be less than or equal to the current\n\t * maximum value as specified by colorMode(). The default maximum value is\n\t * 255.\n\t *\n\t * @method tint\n\t * @param {Number|Array} v1   gray value, red or hue value (depending on the\n\t *                            current color mode), or color Array\n\t * @param {Number|Array} [v2] green or saturation value (depending on the\n\t *                            current color mode)\n\t * @param {Number|Array} [v3] blue or brightness value (depending on the\n\t *                            current color mode)\n\t * @param {Number|Array} [a]  opacity of the background\n\t * @example\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/laDefense.jpg\");\n\t * }\n\t * function setup() {\n\t *   image(img, 0, 0);\n\t *   tint(0, 153, 204);  // Tint blue\n\t *   image(img, 50, 0);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/laDefense.jpg\");\n\t * }\n\t * function setup() {\n\t *   image(img, 0, 0);\n\t *   tint(0, 153, 204, 126);  // Tint blue and set transparency\n\t *   image(img, 50, 0);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/laDefense.jpg\");\n\t * }\n\t * function setup() {\n\t *   image(img, 0, 0);\n\t *   tint(255, 126);  // Apply transparency without changing color\n\t *   image(img, 50, 0);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 2 side by side images of umbrella and ceiling, one image with blue tint\n\t * Images of umbrella and ceiling, one half of image with blue tint\n\t * 2 side by side images of umbrella and ceiling, one image translucent\n\t *\n\t */\n\tp5.prototype.tint = function () {\n\t  var c = this.color.apply(this, arguments);\n\t  this._renderer._tint = c.levels;\n\t};\n\t\n\t/**\n\t * Removes the current fill value for displaying images and reverts to\n\t * displaying images with their original hues.\n\t *\n\t * @method noTint\n\t * @example\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t * function setup() {\n\t *   tint(0, 153, 204);  // Tint blue\n\t *   image(img, 0, 0);\n\t *   noTint();  // Disable tint\n\t *   image(img, 50, 0);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 2 side by side images of bricks, left image with blue tint\n\t *\n\t */\n\tp5.prototype.noTint = function() {\n\t  this._renderer._tint = null;\n\t};\n\t\n\t/**\n\t * Apply the current tint color to the input image, return the resulting\n\t * canvas.\n\t *\n\t * @param {p5.Image} The image to be tinted\n\t * @return {canvas} The resulting tinted canvas\n\t *\n\t */\n\tp5.prototype._getTintedImageCanvas = function(img) {\n\t  if (!img.canvas) {\n\t    return img;\n\t  }\n\t  var pixels = Filters._toPixels(img.canvas);\n\t  var tmpCanvas = document.createElement('canvas');\n\t  tmpCanvas.width = img.canvas.width;\n\t  tmpCanvas.height = img.canvas.height;\n\t  var tmpCtx = tmpCanvas.getContext('2d');\n\t  var id = tmpCtx.createImageData(img.canvas.width, img.canvas.height);\n\t  var newPixels = id.data;\n\t\n\t  for(var i = 0; i < pixels.length; i += 4) {\n\t    var r = pixels[i];\n\t    var g = pixels[i+1];\n\t    var b = pixels[i+2];\n\t    var a = pixels[i+3];\n\t\n\t    newPixels[i] = r*this._renderer._tint[0]/255;\n\t    newPixels[i+1] = g*this._renderer._tint[1]/255;\n\t    newPixels[i+2] = b*this._renderer._tint[2]/255;\n\t    newPixels[i+3] = a*this._renderer._tint[3]/255;\n\t  }\n\t\n\t  tmpCtx.putImageData(id, 0, 0);\n\t  return tmpCanvas;\n\t};\n\t\n\t/**\n\t * Set image mode. Modifies the location from which images are drawn by\n\t * changing the way in which parameters given to image() are interpreted.\n\t * The default mode is imageMode(CORNER), which interprets the second and\n\t * third parameters of image() as the upper-left corner of the image. If\n\t * two additional parameters are specified, they are used to set the image's\n\t * width and height.\n\t * <br><br>\n\t * imageMode(CORNERS) interprets the second and third parameters of image()\n\t * as the location of one corner, and the fourth and fifth parameters as the\n\t * opposite corner.\n\t * <br><br>\n\t * imageMode(CENTER) interprets the second and third parameters of image()\n\t * as the image's center point. If two additional parameters are specified,\n\t * they are used to set the image's width and height.\n\t *\n\t * @method imageMode\n\t * @param {Constant} mode either CORNER, CORNERS, or CENTER\n\t * @example\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t * function setup() {\n\t *   imageMode(CORNER);\n\t *   image(img, 10, 10, 50, 50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t * function setup() {\n\t *   imageMode(CORNERS);\n\t *   image(img, 10, 10, 90, 40);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t * function setup() {\n\t *   imageMode(CENTER);\n\t *   image(img, 50, 50, 80, 80);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * small square image of bricks\n\t * horizontal rectangle image of bricks\n\t * large square image of bricks\n\t *\n\t */\n\tp5.prototype.imageMode = function(m) {\n\t  if (m === constants.CORNER ||\n\t    m === constants.CORNERS ||\n\t    m === constants.CENTER) {\n\t    this._renderer._imageMode = m;\n\t  }\n\t};\n\t\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/canvas\":35,\"../core/constants\":36,\"../core/core\":37,\"../core/error_helpers\":40,\"./filters\":54}],57:[function(_dereq_,module,exports){\n\t/**\n\t * @module Image\n\t * @submodule Image\n\t * @requires core\n\t * @requires constants\n\t * @requires filters\n\t */\n\t\n\t/**\n\t * This module defines the p5.Image class and P5 methods for\n\t * drawing images to the main display canvas.\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar Filters = _dereq_('./filters');\n\t\n\t/*\n\t * Class methods\n\t */\n\t\n\t/**\n\t * Creates a new p5.Image. A p5.Image is a canvas backed representation of an\n\t * image.\n\t * <br><br>\n\t * p5 can display .gif, .jpg and .png images. Images may be displayed\n\t * in 2D and 3D space. Before an image is used, it must be loaded with the\n\t * loadImage() function. The p5.Image class contains fields for the width and\n\t * height of the image, as well as an array called pixels[] that contains the\n\t * values for every pixel in the image.\n\t * <br><br>\n\t * The methods described below allow easy access to the image's pixels and\n\t * alpha channel and simplify the process of compositing.\n\t * <br><br>\n\t * Before using the pixels[] array, be sure to use the loadPixels() method on\n\t * the image to make sure that the pixel data is properly loaded.\n\t *\n\t * @class p5.Image\n\t * @constructor\n\t * @param {Number} width\n\t * @param {Number} height\n\t * @param {Object} pInst An instance of a p5 sketch.\n\t */\n\tp5.Image = function(width, height){\n\t  /**\n\t   * Image width.\n\t   * @property width\n\t   * @example\n\t   * <div><code>\n\t   * var img;\n\t   * function preload() {\n\t   *   img = loadImage(\"assets/rockies.jpg\");\n\t   * }\n\t   *\n\t   * function setup() {\n\t   *   createCanvas(100, 100);\n\t   *   image(img, 0, 0);\n\t   *   for (var i=0; i < img.width; i++) {\n\t   *     var c = img.get(i, img.height/2);\n\t   *     stroke(c);\n\t   *     line(i, height/2, i, height);\n\t   *   }\n\t   * }\n\t   * </code></div>\n\t   *\n\t   * @alt\n\t   * rocky mountains in top and horizontal lines in corresponding colors in bottom.\n\t   *\n\t   */\n\t  this.width = width;\n\t  /**\n\t   * Image height.\n\t   * @property height\n\t   * @example\n\t   * <div><code>\n\t   * var img;\n\t   * function preload() {\n\t   *   img = loadImage(\"assets/rockies.jpg\");\n\t   * }\n\t   *\n\t   * function setup() {\n\t   *   createCanvas(100, 100);\n\t   *   image(img, 0, 0);\n\t   *   for (var i=0; i < img.height; i++) {\n\t   *     var c = img.get(img.width/2, i);\n\t   *     stroke(c);\n\t   *     line(0, i, width/2, i);\n\t   *   }\n\t   * }\n\t   * </code></div>\n\t   *\n\t   * @alt\n\t   * rocky mountains on right and vertical lines in corresponding colors on left.\n\t   *\n\t   */\n\t  this.height = height;\n\t  this.canvas = document.createElement('canvas');\n\t  this.canvas.width = this.width;\n\t  this.canvas.height = this.height;\n\t  this.drawingContext = this.canvas.getContext('2d');\n\t  this._pixelDensity = 1;\n\t  //used for webgl texturing only\n\t  this.isTexture = false;\n\t  /**\n\t   * Array containing the values for all the pixels in the display window.\n\t   * These values are numbers. This array is the size (include an appropriate\n\t   * factor for pixelDensity) of the display window x4,\n\t   * representing the R, G, B, A values in order for each pixel, moving from\n\t   * left to right across each row, then down each column. Retina and other\n\t   * high denisty displays may have more pixels[] (by a factor of\n\t   * pixelDensity^2).\n\t   * For example, if the image is 100x100 pixels, there will be 40,000. With\n\t   * pixelDensity = 2, there will be 160,000. The first four values\n\t   * (indices 0-3) in the array will be the R, G, B, A values of the pixel at\n\t   * (0, 0). The second four values (indices 4-7) will contain the R, G, B, A\n\t   * values of the pixel at (1, 0). More generally, to set values for a pixel\n\t   * at (x, y):\n\t   * <code><pre>var d = pixelDensity;\n\t   * for (var i = 0; i < d; i++) {\n\t   *   for (var j = 0; j < d; j++) {\n\t   *     // loop over\n\t   *     idx = 4*((y * d + j) * width * d + (x * d + i));\n\t   *     pixels[idx] = r;\n\t   *     pixels[idx+1] = g;\n\t   *     pixels[idx+2] = b;\n\t   *     pixels[idx+3] = a;\n\t   *   }\n\t   * }\n\t   * </pre></code>\n\t   * <br><br>\n\t   * Before accessing this array, the data must loaded with the loadPixels()\n\t   * function. After the array data has been modified, the updatePixels()\n\t   * function must be run to update the changes.\n\t   * @property pixels[]\n\t   * @example\n\t   * <div>\n\t   * <code>\n\t   * img = createImage(66, 66);\n\t   * img.loadPixels();\n\t   * for (i = 0; i < img.width; i++) {\n\t   *   for (j = 0; j < img.height; j++) {\n\t   *     img.set(i, j, color(0, 90, 102));\n\t   *   }\n\t   * }\n\t   * img.updatePixels();\n\t   * image(img, 17, 17);\n\t   * </code>\n\t   * </div>\n\t   * <div>\n\t   * <code>\n\t   * var pink = color(255, 102, 204);\n\t   * img = createImage(66, 66);\n\t   * img.loadPixels();\n\t   * for (var i = 0; i < 4*(width*height/2); i+=4) {\n\t   *   img.pixels[i] = red(pink);\n\t   *   img.pixels[i+1] = green(pink);\n\t   *   img.pixels[i+2] = blue(pink);\n\t   *   img.pixels[i+3] = alpha(pink);\n\t   * }\n\t   * img.updatePixels();\n\t   * image(img, 17, 17);\n\t   * </code>\n\t   * </div>\n\t   *\n\t   * @alt\n\t   * 66x66 turquoise rect in center of canvas\n\t   * 66x66 pink rect in center of canvas\n\t   *\n\t   */\n\t  this.pixels = [];\n\t};\n\t\n\t/**\n\t * Helper fxn for sharing pixel methods\n\t *\n\t */\n\tp5.Image.prototype._setProperty = function (prop, value) {\n\t  this[prop] = value;\n\t};\n\t\n\t/**\n\t * Loads the pixels data for this image into the [pixels] attribute.\n\t *\n\t * @method loadPixels\n\t * @example\n\t * <div><code>\n\t * var myImage;\n\t * var halfImage;\n\t *\n\t * function preload() {\n\t *   myImage = loadImage(\"assets/rockies.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   myImage.loadPixels();\n\t *   halfImage = 4 * width * height/2;\n\t *   for(var i = 0; i < halfImage; i++){\n\t *     myImage.pixels[i+halfImage] = myImage.pixels[i];\n\t *   }\n\t *   myImage.updatePixels();\n\t * }\n\t *\n\t * function draw() {\n\t *   image(myImage, 0, 0);\n\t * }\n\t * </code></div>\n\t *\n\t   * @alt\n\t   * 2 images of rocky mountains vertically stacked\n\t   *\n\t */\n\tp5.Image.prototype.loadPixels = function(){\n\t  p5.Renderer2D.prototype.loadPixels.call(this);\n\t};\n\t\n\t/**\n\t * Updates the backing canvas for this image with the contents of\n\t * the [pixels] array.\n\t *\n\t * @method updatePixels\n\t * @param {Integer|undefined} x x-offset of the target update area for the\n\t *                              underlying canvas\n\t * @param {Integer|undefined} y y-offset of the target update area for the\n\t *                              underlying canvas\n\t * @param {Integer|undefined} w height of the target update area for the\n\t *                              underlying canvas\n\t * @param {Integer|undefined} h height of the target update area for the\n\t *                              underlying canvas\n\t * @example\n\t * <div><code>\n\t * var myImage;\n\t * var halfImage;\n\t *\n\t * function preload() {\n\t *   myImage = loadImage(\"assets/rockies.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   myImage.loadPixels();\n\t *   halfImage = 4 * width * height/2;\n\t *   for(var i = 0; i < halfImage; i++){\n\t *     myImage.pixels[i+halfImage] = myImage.pixels[i];\n\t *   }\n\t *   myImage.updatePixels();\n\t * }\n\t *\n\t * function draw() {\n\t *   image(myImage, 0, 0);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * 2 images of rocky mountains vertically stacked\n\t *\n\t */\n\tp5.Image.prototype.updatePixels = function(x, y, w, h){\n\t  p5.Renderer2D.prototype.updatePixels.call(this, x, y, w, h);\n\t};\n\t\n\t/**\n\t * Get a region of pixels from an image.\n\t *\n\t * If no params are passed, those whole image is returned,\n\t * if x and y are the only params passed a single pixel is extracted\n\t * if all params are passed a rectangle region is extracted and a p5.Image\n\t * is returned.\n\t *\n\t * Returns undefined if the region is outside the bounds of the image\n\t *\n\t * @method get\n\t * @param  {Number}               [x] x-coordinate of the pixel\n\t * @param  {Number}               [y] y-coordinate of the pixel\n\t * @param  {Number}               [w] width\n\t * @param  {Number}               [h] height\n\t * @return {Array/Color | p5.Image}     color of pixel at x,y in array format\n\t *                                    [R, G, B, A] or p5.Image\n\t * @example\n\t * <div><code>\n\t * var myImage;\n\t * var c;\n\t *\n\t * function preload() {\n\t *   myImage = loadImage(\"assets/rockies.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   background(myImage);\n\t *   noStroke();\n\t *   c = myImage.get(60, 90);\n\t *   fill(c);\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t *\n\t * //get() returns color here\n\t * </code></div>\n\t *\n\t * @alt\n\t * image of rocky mountains with 50x50 green rect in front\n\t *\n\t */\n\tp5.Image.prototype.get = function(x, y, w, h){\n\t  return p5.Renderer2D.prototype.get.call(this, x, y, w, h);\n\t};\n\t\n\t/**\n\t * Set the color of a single pixel or write an image into\n\t * this p5.Image.\n\t *\n\t * Note that for a large number of pixels this will\n\t * be slower than directly manipulating the pixels array\n\t * and then calling updatePixels().\n\t *\n\t * @method set\n\t * @param {Number}              x x-coordinate of the pixel\n\t * @param {Number}              y y-coordinate of the pixel\n\t * @param {Number|Array|Object}   a grayscale value | pixel array |\n\t *                                a p5.Color | image to copy\n\t * @example\n\t * <div>\n\t * <code>\n\t * img = createImage(66, 66);\n\t * img.loadPixels();\n\t * for (i = 0; i < img.width; i++) {\n\t *   for (j = 0; j < img.height; j++) {\n\t *     img.set(i, j, color(0, 90, 102, i % img.width * 2));\n\t *   }\n\t * }\n\t * img.updatePixels();\n\t * image(img, 17, 17);\n\t * image(img, 34, 34);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 2 gradated dark turquoise rects fade left. 1 center 1 bottom right of canvas\n\t *\n\t */\n\tp5.Image.prototype.set = function(x, y, imgOrCol){\n\t  p5.Renderer2D.prototype.set.call(this, x, y, imgOrCol);\n\t};\n\t\n\t/**\n\t * Resize the image to a new width and height. To make the image scale\n\t * proportionally, use 0 as the value for the wide or high parameter.\n\t * For instance, to make the width of an image 150 pixels, and change\n\t * the height using the same proportion, use resize(150, 0).\n\t *\n\t * @method resize\n\t * @param {Number} width the resized image width\n\t * @param {Number} height the resized image height\n\t * @example\n\t * <div><code>\n\t * var img;\n\t *\n\t * function setup() {\n\t *   img = loadImage(\"assets/rockies.jpg\");\n\t * }\n\t\n\t * function draw() {\n\t *   image(img, 0, 0);\n\t * }\n\t *\n\t * function mousePressed() {\n\t *   img.resize(50, 100);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * image of rocky mountains. zoomed in\n\t *\n\t */\n\tp5.Image.prototype.resize = function(width, height){\n\t\n\t  // Copy contents to a temporary canvas, resize the original\n\t  // and then copy back.\n\t  //\n\t  // There is a faster approach that involves just one copy and swapping the\n\t  // this.canvas reference. We could switch to that approach if (as i think\n\t  // is the case) there an expectation that the user would not hold a\n\t  // reference to the backing canvas of a p5.Image. But since we do not\n\t  // enforce that at the moment, I am leaving in the slower, but safer\n\t  // implementation.\n\t\n\t  // auto-resize\n\t  if (width === 0 && height === 0) {\n\t    width = this.canvas.width;\n\t    height = this.canvas.height;\n\t  } else if (width === 0) {\n\t    width = this.canvas.width * height / this.canvas.height;\n\t  } else if (height === 0) {\n\t    height = this.canvas.height * width / this.canvas.width;\n\t  }\n\t\n\t  width = Math.floor(width);\n\t  height = Math.floor(height);\n\t\n\t  var tempCanvas = document.createElement('canvas');\n\t  tempCanvas.width = width;\n\t  tempCanvas.height = height;\n\t  tempCanvas.getContext('2d').drawImage(this.canvas,\n\t    0, 0, this.canvas.width, this.canvas.height,\n\t    0, 0, tempCanvas.width, tempCanvas.height\n\t  );\n\t\n\t\n\t  // Resize the original canvas, which will clear its contents\n\t  this.canvas.width = this.width = width;\n\t  this.canvas.height = this.height = height;\n\t\n\t  //Copy the image back\n\t\n\t  this.drawingContext.drawImage(tempCanvas,\n\t    0, 0, width, height,\n\t    0, 0, width, height\n\t  );\n\t\n\t  if(this.pixels.length > 0){\n\t    this.loadPixels();\n\t  }\n\t};\n\t\n\t/**\n\t * Copies a region of pixels from one image to another. If no\n\t * srcImage is specified this is used as the source. If the source\n\t * and destination regions aren't the same size, it will\n\t * automatically resize source pixels to fit the specified\n\t * target region.\n\t *\n\t * @method copy\n\t * @param  {p5.Image|undefined} srcImage source image\n\t * @param  {Integer} sx X coordinate of the source's upper left corner\n\t * @param  {Integer} sy Y coordinate of the source's upper left corner\n\t * @param  {Integer} sw source image width\n\t * @param  {Integer} sh source image height\n\t * @param  {Integer} dx X coordinate of the destination's upper left corner\n\t * @param  {Integer} dy Y coordinate of the destination's upper left corner\n\t * @param  {Integer} dw destination image width\n\t * @param  {Integer} dh destination image height\n\t * @example\n\t * <div><code>\n\t * var photo;\n\t * var bricks;\n\t * var x;\n\t * var y;\n\t *\n\t * function preload() {\n\t *   photo = loadImage(\"assets/rockies.jpg\");\n\t *   bricks = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   x = bricks.width/2;\n\t *   y = bricks.height/2;\n\t *   photo.copy(bricks, 0, 0, x, y, 0, 0, x, y);\n\t *   image(photo, 0, 0);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * image of rocky mountains and smaller image on top of bricks at top left\n\t *\n\t */\n\tp5.Image.prototype.copy = function () {\n\t  p5.prototype.copy.apply(this, arguments);\n\t};\n\t\n\t/**\n\t * Masks part of an image from displaying by loading another\n\t * image and using it's blue channel as an alpha channel for\n\t * this image.\n\t *\n\t * @method mask\n\t * @param {p5.Image} srcImage source image\n\t * @example\n\t * <div><code>\n\t * var photo, maskImage;\n\t * function preload() {\n\t *   photo = loadImage(\"assets/rockies.jpg\");\n\t *   maskImage = loadImage(\"assets/mask2.png\");\n\t * }\n\t *\n\t * function setup() {\n\t *   createCanvas(100, 100);\n\t *   photo.mask(maskImage);\n\t *   image(photo, 0, 0);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * image of rocky mountains with white at right\n\t *\n\t *\n\t * http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/\n\t *\n\t */\n\t// TODO: - Accept an array of alpha values.\n\t//       - Use other channels of an image. p5 uses the\n\t//       blue channel (which feels kind of arbitrary). Note: at the\n\t//       moment this method does not match native processings original\n\t//       functionality exactly.\n\tp5.Image.prototype.mask = function(p5Image) {\n\t  if(p5Image === undefined){\n\t    p5Image = this;\n\t  }\n\t  var currBlend = this.drawingContext.globalCompositeOperation;\n\t\n\t  var scaleFactor = 1;\n\t  if (p5Image instanceof p5.Renderer) {\n\t    scaleFactor = p5Image._pInst._pixelDensity;\n\t  }\n\t\n\t  var copyArgs = [\n\t    p5Image,\n\t    0,\n\t    0,\n\t    scaleFactor*p5Image.width,\n\t    scaleFactor*p5Image.height,\n\t    0,\n\t    0,\n\t    this.width,\n\t    this.height\n\t  ];\n\t\n\t  this.drawingContext.globalCompositeOperation = 'destination-in';\n\t  p5.Image.prototype.copy.apply(this, copyArgs);\n\t  this.drawingContext.globalCompositeOperation = currBlend;\n\t};\n\t\n\t/**\n\t * Applies an image filter to a p5.Image\n\t *\n\t * @method filter\n\t * @param {String} operation one of threshold, gray, invert, posterize and\n\t *                           opaque see Filters.js for docs on each available\n\t *                           filter\n\t * @param {Number|undefined} value\n\t * @example\n\t * <div><code>\n\t * var photo1;\n\t * var photo2;\n\t *\n\t * function preload() {\n\t *   photo1 = loadImage(\"assets/rockies.jpg\");\n\t *   photo2 = loadImage(\"assets/rockies.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   photo2.filter(\"gray\");\n\t *   image(photo1, 0, 0);\n\t *   image(photo2, width/2, 0);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * 2 images of rocky mountains left one in color, right in black and white\n\t *\n\t */\n\tp5.Image.prototype.filter = function(operation, value) {\n\t  Filters.apply(this.canvas, Filters[operation.toLowerCase()], value);\n\t};\n\t\n\t/**\n\t * Copies a region of pixels from one image to another, using a specified\n\t * blend mode to do the operation.\n\t *\n\t * @method blend\n\t * @param  {p5.Image|undefined} srcImage source image\n\t * @param  {Integer} sx X coordinate of the source's upper left corner\n\t * @param  {Integer} sy Y coordinate of the source's upper left corner\n\t * @param  {Integer} sw source image width\n\t * @param  {Integer} sh source image height\n\t * @param  {Integer} dx X coordinate of the destination's upper left corner\n\t * @param  {Integer} dy Y coordinate of the destination's upper left corner\n\t * @param  {Integer} dw destination image width\n\t * @param  {Integer} dh destination image height\n\t * @param  {Integer} blendMode the blend mode\n\t *\n\t * Available blend modes are: normal | multiply | screen | overlay |\n\t *            darken | lighten | color-dodge | color-burn | hard-light |\n\t *            soft-light | difference | exclusion | hue | saturation |\n\t *            color | luminosity\n\t *\n\t *\n\t * http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/\n\t * @example\n\t * <div><code>\n\t * var mountains;\n\t * var bricks;\n\t *\n\t * function preload() {\n\t *   mountains = loadImage(\"assets/rockies.jpg\");\n\t *   bricks = loadImage(\"assets/bricks_third.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, ADD);\n\t *   image(mountains, 0, 0);\n\t *   image(bricks, 0, 0);\n\t * }\n\t * </code></div>\n\t * <div><code>\n\t * var mountains;\n\t * var bricks;\n\t *\n\t * function preload() {\n\t *   mountains = loadImage(\"assets/rockies.jpg\");\n\t *   bricks = loadImage(\"assets/bricks_third.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, DARKEST);\n\t *   image(mountains, 0, 0);\n\t *   image(bricks, 0, 0);\n\t * }\n\t * </code></div>\n\t * <div><code>\n\t * var mountains;\n\t * var bricks;\n\t *\n\t * function preload() {\n\t *   mountains = loadImage(\"assets/rockies.jpg\");\n\t *   bricks = loadImage(\"assets/bricks_third.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, LIGHTEST);\n\t *   image(mountains, 0, 0);\n\t *   image(bricks, 0, 0);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * image of rocky mountains. Brick images on left and right. Right overexposed\n\t * image of rockies. Brickwall images on left and right. Right mortar transparent\n\t * image of rockies. Brickwall images on left and right. Right translucent\n\t *\n\t */\n\tp5.Image.prototype.blend = function() {\n\t  p5.prototype.blend.apply(this, arguments);\n\t};\n\t\n\t/**\n\t * Saves the image to a file and force the browser to download it.\n\t * Accepts two strings for filename and file extension\n\t * Supports png (default) and jpg.\n\t *\n\t * @method save\n\t * @param {String} filename give your file a name\n\t * @param  {String} extension 'png' or 'jpg'\n\t * @example\n\t * <div><code>\n\t * var photo;\n\t *\n\t * function preload() {\n\t *   photo = loadImage(\"assets/rockies.jpg\");\n\t * }\n\t *\n\t * function draw() {\n\t *   image(photo, 0, 0);\n\t * }\n\t *\n\t * function keyTyped() {\n\t *   if (key == 's') {\n\t *     photo.save(\"photo\", \"png\");\n\t *   }\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * image of rocky mountains.\n\t *\n\t */\n\tp5.Image.prototype.save = function(filename, extension) {\n\t  var mimeType;\n\t  if (!extension) {\n\t    extension = 'png';\n\t    mimeType = 'image/png';\n\t  }\n\t  else {\n\t    // en.wikipedia.org/wiki/Comparison_of_web_browsers#Image_format_support\n\t    switch(extension.toLowerCase()){\n\t      case 'png':\n\t        mimeType = 'image/png';\n\t        break;\n\t      case 'jpeg':\n\t        mimeType = 'image/jpeg';\n\t        break;\n\t      case 'jpg':\n\t        mimeType = 'image/jpeg';\n\t        break;\n\t      default:\n\t        mimeType = 'image/png';\n\t        break;\n\t    }\n\t  }\n\t  var downloadMime = 'image/octet-stream';\n\t  var imageData = this.canvas.toDataURL(mimeType);\n\t  imageData = imageData.replace(mimeType, downloadMime);\n\t\n\t  //Make the browser download the file\n\t  p5.prototype.downloadFile(imageData, filename, extension);\n\t};\n\t\n\tmodule.exports = p5.Image;\n\t},{\"../core/core\":37,\"./filters\":54}],58:[function(_dereq_,module,exports){\n\t/**\n\t * @module Image\n\t * @submodule Pixels\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar Filters = _dereq_('./filters');\n\t_dereq_('../color/p5.Color');\n\t\n\t/**\n\t * <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference\n\t * /Global_Objects/Uint8ClampedArray' target='_blank'>Uint8ClampedArray</a>\n\t * containing the values for all the pixels in the display window.\n\t * These values are numbers. This array is the size (include an appropriate\n\t * factor for pixelDensity) of the display window x4,\n\t * representing the R, G, B, A values in order for each pixel, moving from\n\t * left to right across each row, then down each column. Retina and other\n\t * high denisty displays will have more pixels[] (by a factor of\n\t * pixelDensity^2).\n\t * For example, if the image is 100x100 pixels, there will be 40,000. On a\n\t * retina display, there will be 160,000.\n\t * <br><br>\n\t * The first four values (indices 0-3) in the array will be the R, G, B, A\n\t * values of the pixel at (0, 0). The second four values (indices 4-7) will\n\t * contain the R, G, B, A values of the pixel at (1, 0). More generally, to\n\t * set values for a pixel at (x, y):\n\t * <code><pre>\n\t * var d = pixelDensity;\n\t * for (var i = 0; i < d; i++) {\n\t *   for (var j = 0; j < d; j++) {\n\t *     // loop over\n\t *     idx = 4 * ((y * d + j) * width * d + (x * d + i));\n\t *     pixels[idx] = r;\n\t *     pixels[idx+1] = g;\n\t *     pixels[idx+2] = b;\n\t *     pixels[idx+3] = a;\n\t *   }\n\t * }\n\t * </pre></code>\n\t *\n\t * <p>While the above method is complex, it is flexible enough to work with\n\t * any pixelDensity. Note that set() will automatically take care of\n\t * setting all the appropriate values in pixels[] for a given (x, y) at\n\t * any pixelDensity, but the performance may not be as fast when lots of\n\t * modifications are made to the pixel array.\n\t * <br><br>\n\t * Before accessing this array, the data must loaded with the loadPixels()\n\t * function. After the array data has been modified, the updatePixels()\n\t * function must be run to update the changes.\n\t * <br><br>\n\t * Note that this is not a standard javascript array.  This means that\n\t * standard javascript functions such as <code>slice()</code> or\n\t * <code>arrayCopy()</code> do not\n\t * work.</p>\n\t *\n\t * @property pixels[]\n\t * @example\n\t * <div>\n\t * <code>\n\t * var pink = color(255, 102, 204);\n\t * loadPixels();\n\t * var d = pixelDensity();\n\t * var halfImage = 4 * (width * d) * (height/2 * d);\n\t * for (var i = 0; i < halfImage; i+=4) {\n\t *   pixels[i] = red(pink);\n\t *   pixels[i+1] = green(pink);\n\t *   pixels[i+2] = blue(pink);\n\t *   pixels[i+3] = alpha(pink);\n\t * }\n\t * updatePixels();\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * top half of canvas pink, bottom grey\n\t *\n\t */\n\tp5.prototype.pixels = [];\n\t\n\t/**\n\t * Copies a region of pixels from one image to another, using a specified\n\t * blend mode to do the operation.<br><br>\n\t * Available blend modes are: BLEND | DARKEST | LIGHTEST | DIFFERENCE |\n\t * MULTIPLY| EXCLUSION | SCREEN | REPLACE | OVERLAY | HARD_LIGHT |\n\t * SOFT_LIGHT | DODGE | BURN | ADD | NORMAL\n\t *\n\t *\n\t * @method blend\n\t * @param  {p5.Image|undefined} srcImage source image\n\t * @param  {Integer} sx X coordinate of the source's upper left corner\n\t * @param  {Integer} sy Y coordinate of the source's upper left corner\n\t * @param  {Integer} sw source image width\n\t * @param  {Integer} sh source image height\n\t * @param  {Integer} dx X coordinate of the destination's upper left corner\n\t * @param  {Integer} dy Y coordinate of the destination's upper left corner\n\t * @param  {Integer} dw destination image width\n\t * @param  {Integer} dh destination image height\n\t * @param  {Integer} blendMode the blend mode\n\t *\n\t * @example\n\t * <div><code>\n\t * var img0;\n\t * var img1;\n\t *\n\t * function preload() {\n\t *   img0 = loadImage(\"assets/rockies.jpg\");\n\t *   img1 = loadImage(\"assets/bricks_third.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   background(img0);\n\t *   image(img1, 0, 0);\n\t *   blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, LIGHTEST);\n\t * }\n\t * </code></div>\n\t * <div><code>\n\t * var img0;\n\t * var img1;\n\t *\n\t * function preload() {\n\t *   img0 = loadImage(\"assets/rockies.jpg\");\n\t *   img1 = loadImage(\"assets/bricks_third.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   background(img0);\n\t *   image(img1, 0, 0);\n\t *   blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, DARKEST);\n\t * }\n\t * </code></div>\n\t * <div><code>\n\t * var img0;\n\t * var img1;\n\t *\n\t * function preload() {\n\t *   img0 = loadImage(\"assets/rockies.jpg\");\n\t *   img1 = loadImage(\"assets/bricks_third.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   background(img0);\n\t *   image(img1, 0, 0);\n\t *   blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, ADD);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * image of rocky mountains. Brick images on left and right. Right overexposed\n\t * image of rockies. Brickwall images on left and right. Right mortar transparent\n\t * image of rockies. Brickwall images on left and right. Right translucent\n\t *\n\t *\n\t */\n\tp5.prototype.blend = function() {\n\t  if (this._renderer) {\n\t    this._renderer.blend.apply(this._renderer, arguments);\n\t  } else {\n\t    p5.Renderer2D.prototype.blend.apply(this, arguments);\n\t  }\n\t};\n\t\n\t/**\n\t * Copies a region of the canvas to another region of the canvas\n\t * and copies a region of pixels from an image used as the srcImg parameter\n\t * into the canvas srcImage is specified this is used as the source. If\n\t * the source and destination regions aren't the same size, it will\n\t * automatically resize source pixels to fit the specified\n\t * target region.\n\t *\n\t * @method copy\n\t * @param  {p5.Image|undefined} srcImage source image\n\t * @param  {Integer} sx X coordinate of the source's upper left corner\n\t * @param  {Integer} sy Y coordinate of the source's upper left corner\n\t * @param  {Integer} sw source image width\n\t * @param  {Integer} sh source image height\n\t * @param  {Integer} dx X coordinate of the destination's upper left corner\n\t * @param  {Integer} dy Y coordinate of the destination's upper left corner\n\t * @param  {Integer} dw destination image width\n\t * @param  {Integer} dh destination image height\n\t *\n\t * @example\n\t * <div><code>\n\t * var img;\n\t *\n\t * function preload() {\n\t *   img = loadImage(\"assets/rockies.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   background(img);\n\t *   copy(img, 7, 22, 10, 10, 35, 25, 50, 50);\n\t *   stroke(255);\n\t *   noFill();\n\t *   // Rectangle shows area being copied\n\t *   rect(7, 22, 10, 10);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * image of rocky mountains. Brick images on left and right. Right overexposed\n\t * image of rockies. Brickwall images on left and right. Right mortar transparent\n\t * image of rockies. Brickwall images on left and right. Right translucent\n\t *\n\t */\n\tp5.prototype.copy = function () {\n\t  p5.Renderer2D._copyHelper.apply(this, arguments);\n\t};\n\t\n\t/**\n\t * Applies a filter to the canvas.\n\t * <br><br>\n\t *\n\t * The presets options are:\n\t * <br><br>\n\t *\n\t * THRESHOLD\n\t * Converts the image to black and white pixels depending if they are above or\n\t * below the threshold defined by the level parameter. The parameter must be\n\t * between 0.0 (black) and 1.0 (white). If no level is specified, 0.5 is used.\n\t * <br><br>\n\t *\n\t * GRAY\n\t * Converts any colors in the image to grayscale equivalents. No parameter\n\t * is used.\n\t * <br><br>\n\t *\n\t * OPAQUE\n\t * Sets the alpha channel to entirely opaque. No parameter is used.\n\t * <br><br>\n\t *\n\t * INVERT\n\t * Sets each pixel to its inverse value. No parameter is used.\n\t * <br><br>\n\t *\n\t * POSTERIZE\n\t * Limits each channel of the image to the number of colors specified as the\n\t * parameter. The parameter can be set to values between 2 and 255, but\n\t * results are most noticeable in the lower ranges.\n\t * <br><br>\n\t *\n\t * BLUR\n\t * Executes a Guassian blur with the level parameter specifying the extent\n\t * of the blurring. If no parameter is used, the blur is equivalent to\n\t * Guassian blur of radius 1. Larger values increase the blur.\n\t * <br><br>\n\t *\n\t * ERODE\n\t * Reduces the light areas. No parameter is used.\n\t * <br><br>\n\t *\n\t * DILATE\n\t * Increases the light areas. No parameter is used.\n\t *\n\t * @method filter\n\t * @param  {Constant} filterType\n\t * @param  {Number} filterParam an optional parameter unique\n\t *  to each filter, see above\n\t *\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t * function setup() {\n\t *  image(img, 0, 0);\n\t *  filter(THRESHOLD);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t * function setup() {\n\t *  image(img, 0, 0);\n\t *  filter(GRAY);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t * function setup() {\n\t *  image(img, 0, 0);\n\t *  filter(OPAQUE);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t * function setup() {\n\t *  image(img, 0, 0);\n\t *  filter(INVERT);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t * function setup() {\n\t *  image(img, 0, 0);\n\t *  filter(POSTERIZE,3);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t * function setup() {\n\t *  image(img, 0, 0);\n\t *  filter(DILATE);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t * function setup() {\n\t *  image(img, 0, 0);\n\t *  filter(BLUR,3);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/bricks.jpg\");\n\t * }\n\t * function setup() {\n\t *  image(img, 0, 0);\n\t *  filter(ERODE);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * black and white image of a brick wall.\n\t * greyscale image of a brickwall\n\t * image of a brickwall\n\t * jade colored image of a brickwall\n\t * red and pink image of a brickwall\n\t * image of a brickwall\n\t * blurry image of a brickwall\n\t * image of a brickwall\n\t * image of a brickwall with less detail\n\t *\n\t */\n\tp5.prototype.filter = function(operation, value) {\n\t  Filters.apply(this.canvas, Filters[operation.toLowerCase()], value);\n\t};\n\t\n\t/**\n\t * Returns an array of [R,G,B,A] values for any pixel or grabs a section of\n\t * an image. If no parameters are specified, the entire image is returned.\n\t * Use the x and y parameters to get the value of one pixel. Get a section of\n\t * the display window by specifying additional w and h parameters. When\n\t * getting an image, the x and y parameters define the coordinates for the\n\t * upper-left corner of the image, regardless of the current imageMode().\n\t * <br><br>\n\t * If the pixel requested is outside of the image window, [0,0,0,255] is\n\t * returned. To get the numbers scaled according to the current color ranges\n\t * and taking into account colorMode, use getColor instead of get.\n\t * <br><br>\n\t * Getting the color of a single pixel with get(x, y) is easy, but not as fast\n\t * as grabbing the data directly from pixels[]. The equivalent statement to\n\t * get(x, y) using pixels[] with pixel density d is\n\t * <code>\n\t * var off = (y * width + x) * d * 4;\n\t * [pixels[off],\n\t * pixels[off+1],\n\t * pixels[off+2],\n\t * pixels[off+3]]</code>\n\t * <br><br>\n\t * See the reference for pixels[] for more information.\n\t *\n\t * @method get\n\t * @param  {Number}         [x] x-coordinate of the pixel\n\t * @param  {Number}         [y] y-coordinate of the pixel\n\t * @param  {Number}         [w] width\n\t * @param  {Number}         [h] height\n\t * @return {Array|p5.Image}     values of pixel at x,y in array format\n\t *                              [R, G, B, A] or p5.Image\n\t * @example\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/rockies.jpg\");\n\t * }\n\t * function setup() {\n\t *   image(img, 0, 0);\n\t *   var c = get();\n\t *   image(c, width/2, 0);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/rockies.jpg\");\n\t * }\n\t * function setup() {\n\t *   image(img, 0, 0);\n\t *   var c = get(50, 90);\n\t *   fill(c);\n\t *   noStroke();\n\t *   rect(25, 25, 50, 50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 2 images of the rocky mountains, side-by-side\n\t * Image of the rocky mountains with 50x50 green rect in center of canvas\n\t *\n\t */\n\tp5.prototype.get = function(x, y, w, h){\n\t  return this._renderer.get(x, y, w, h);\n\t};\n\t\n\t/**\n\t * Loads the pixel data for the display window into the pixels[] array. This\n\t * function must always be called before reading from or writing to pixels[].\n\t *\n\t * @method loadPixels\n\t * @example\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/rockies.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   image(img, 0, 0);\n\t *   var d = pixelDensity();\n\t *   var halfImage = 4 * (img.width * d) *\n\t       (img.height/2 * d);\n\t *   loadPixels();\n\t *   for (var i = 0; i < halfImage; i++) {\n\t *     pixels[i+halfImage] = pixels[i];\n\t *   }\n\t *   updatePixels();\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * two images of the rocky mountains. one on top, one on bottom of canvas.\n\t *\n\t */\n\tp5.prototype.loadPixels = function() {\n\t  this._renderer.loadPixels();\n\t};\n\t\n\t/**\n\t * <p>Changes the color of any pixel, or writes an image directly to the\n\t * display window.</p>\n\t * <p>The x and y parameters specify the pixel to change and the c parameter\n\t * specifies the color value. This can be a p5.Color object, or [R, G, B, A]\n\t * pixel array. It can also be a single grayscale value.\n\t * When setting an image, the x and y parameters define the coordinates for\n\t * the upper-left corner of the image, regardless of the current imageMode().\n\t * </p>\n\t * <p>\n\t * After using set(), you must call updatePixels() for your changes to\n\t * appear.  This should be called once all pixels have been set.\n\t * </p>\n\t * <p>Setting the color of a single pixel with set(x, y) is easy, but not as\n\t * fast as putting the data directly into pixels[]. Setting the pixels[]\n\t * values directly may be complicated when working with a retina display,\n\t * but will perform better when lots of pixels need to be set directly on\n\t * every loop.</p>\n\t * <p>See the reference for pixels[] for more information.</p>\n\t *\n\t * @method set\n\t * @param {Number}              x x-coordinate of the pixel\n\t * @param {Number}              y y-coordinate of the pixel\n\t * @param {Number|Array|Object} c insert a grayscale value | a pixel array |\n\t *                                a p5.Color object | a p5.Image to copy\n\t * @example\n\t * <div>\n\t * <code>\n\t * var black = color(0);\n\t * set(30, 20, black);\n\t * set(85, 20, black);\n\t * set(85, 75, black);\n\t * set(30, 75, black);\n\t * updatePixels();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * for (var i = 30; i < width-15; i++) {\n\t *   for (var j = 20; j < height-25; j++) {\n\t *     var c = color(204-j, 153-i, 0);\n\t *     set(i, j, c);\n\t *   }\n\t * }\n\t * updatePixels();\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/rockies.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   set(0, 0, img);\n\t *   updatePixels();\n\t *   line(0, 0, width, height);\n\t *   line(0, height, width, 0);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 4 black points in the shape of a square middle-right of canvas.\n\t * square with orangey-brown gradient lightening at bottom right.\n\t * image of the rocky mountains. with lines like an 'x' through the center.\n\t */\n\tp5.prototype.set = function (x, y, imgOrCol) {\n\t  this._renderer.set(x, y, imgOrCol);\n\t};\n\t/**\n\t * Updates the display window with the data in the pixels[] array.\n\t * Use in conjunction with loadPixels(). If you're only reading pixels from\n\t * the array, there's no need to call updatePixels() — updating is only\n\t * necessary to apply changes. updatePixels() should be called anytime the\n\t * pixels array is manipulated or set() is called.\n\t *\n\t * @method updatePixels\n\t * @param  {Number} [x]    x-coordinate of the upper-left corner of region\n\t *                         to update\n\t * @param  {Number} [y]    y-coordinate of the upper-left corner of region\n\t *                         to update\n\t * @param  {Number} [w]    width of region to update\n\t * @param  {Number} [w]    height of region to update\n\t * @example\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function preload() {\n\t *   img = loadImage(\"assets/rockies.jpg\");\n\t * }\n\t *\n\t * function setup() {\n\t *   image(img, 0, 0);\n\t *   var halfImage = 4 * (img.width * pixelDensity()) *\n\t *     (img.height * pixelDensity()/2);\n\t *   loadPixels();\n\t *   for (var i = 0; i < halfImage; i++) {\n\t *     pixels[i+halfImage] = pixels[i];\n\t *   }\n\t *   updatePixels();\n\t * }\n\t * </code>\n\t * </div>\n\t * @alt\n\t * two images of the rocky mountains. one on top, one on bottom of canvas.\n\t */\n\tp5.prototype.updatePixels = function (x, y, w, h) {\n\t  // graceful fail - if loadPixels() or set() has not been called, pixel\n\t  // array will be empty, ignore call to updatePixels()\n\t  if (this.pixels.length === 0) {\n\t    return;\n\t  }\n\t  this._renderer.updatePixels(x, y, w, h);\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../color/p5.Color\":31,\"../core/core\":37,\"./filters\":54}],59:[function(_dereq_,module,exports){\n\t/**\n\t * @module IO\n\t * @submodule Input\n\t * @for p5\n\t * @requires core\n\t * @requires reqwest\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar reqwest = _dereq_('reqwest');\n\tvar opentype = _dereq_('opentype.js');\n\t_dereq_('../core/error_helpers');\n\t\n\t/**\n\t * Checks if we are in preload and returns the last arg which will be the\n\t * _decrementPreload function if called from a loadX() function.  Should\n\t * only be used in loadX() functions.\n\t * @private\n\t */\n\tp5._getDecrementPreload = function () {\n\t  var decrementPreload = arguments[arguments.length - 1];\n\t\n\t  // when in preload decrementPreload will always be the last arg as it is set\n\t  // with args.push() before invocation in _wrapPreload\n\t  if ((window.preload || (this && this.preload)) &&\n\t    typeof decrementPreload === 'function') {\n\t    return decrementPreload;\n\t  } else {\n\t    return null;\n\t  }\n\t};\n\t\n\t/**\n\t * Loads an opentype font file (.otf, .ttf) from a file or a URL,\n\t * and returns a PFont Object. This method is asynchronous,\n\t * meaning it may not finish before the next line in your sketch\n\t * is executed.\n\t * <br><br>\n\t * The path to the font should be relative to the HTML file\n\t * that links in your sketch. Loading an from a URL or other\n\t * remote location may be blocked due to your browser's built-in\n\t * security.\n\t *\n\t * @method loadFont\n\t * @param  {String}        path       name of the file or url to load\n\t * @param  {Function}      [callback] function to be executed after\n\t *                                    loadFont()\n\t *                                    completes\n\t * @return {Object}                   p5.Font object\n\t * @example\n\t *\n\t * <p>Calling loadFont() inside preload() guarantees that the load\n\t * operation will have completed before setup() and draw() are called.</p>\n\t *\n\t * <div><code>\n\t * var myFont;\n\t * function preload() {\n\t *   myFont = loadFont('assets/AvenirNextLTPro-Demi.otf');\n\t * }\n\t *\n\t * function setup() {\n\t *   fill('#ED225D');\n\t *   textFont(myFont);\n\t *   textSize(36);\n\t *   text('p5*js', 10, 50);\n\t * }\n\t * </code></div>\n\t *\n\t * Outside of preload(), you may supply a callback function to handle the\n\t * object:\n\t *\n\t * <div><code>\n\t * function setup() {\n\t *   loadFont('assets/AvenirNextLTPro-Demi.otf', drawText);\n\t * }\n\t *\n\t * function drawText(font) {\n\t *   fill('#ED225D');\n\t *   textFont(font, 36);\n\t *   text('p5*js', 10, 50);\n\t * }\n\t *\n\t * </code></div>\n\t *\n\t * <p>You can also use the string name of the font to style other HTML\n\t * elements.</p>\n\t *\n\t * <div><code>\n\t * var myFont;\n\t *\n\t * function preload() {\n\t *   myFont = loadFont('assets/Avenir.otf');\n\t * }\n\t *\n\t * function setup() {\n\t *   var myDiv = createDiv('hello there');\n\t *   myDiv.style('font-family', 'Avenir');\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * p5*js in p5's theme dark pink\n\t * p5*js in p5's theme dark pink\n\t *\n\t */\n\tp5.prototype.loadFont = function (path, onSuccess, onError) {\n\t\n\t  var p5Font = new p5.Font(this);\n\t  var decrementPreload = p5._getDecrementPreload.apply(this, arguments);\n\t\n\t  opentype.load(path, function (err, font) {\n\t\n\t    if (err) {\n\t\n\t      if ((typeof onError !== 'undefined') && (onError !== decrementPreload)) {\n\t        return onError(err);\n\t      }\n\t      p5._friendlyFileLoadError(4, path);\n\t      console.error(err, path);\n\t      return;\n\t    }\n\t\n\t    p5Font.font = font;\n\t\n\t    if (typeof onSuccess !== 'undefined') {\n\t      onSuccess(p5Font);\n\t    }\n\t\n\t    if (decrementPreload && (onSuccess !== decrementPreload)) {\n\t      decrementPreload();\n\t    }\n\t\n\t    // check that we have an acceptable font type\n\t    var validFontTypes = [ 'ttf', 'otf', 'woff', 'woff2' ],\n\t      fileNoPath = path.split('\\\\').pop().split('/').pop(),\n\t      lastDotIdx = fileNoPath.lastIndexOf('.'), fontFamily, newStyle,\n\t      fileExt = lastDotIdx < 1 ? null : fileNoPath.substr(lastDotIdx + 1);\n\t\n\t    // if so, add it to the DOM (name-only) for use with p5.dom\n\t    if (validFontTypes.indexOf(fileExt) > -1) {\n\t\n\t      fontFamily = fileNoPath.substr(0, lastDotIdx);\n\t      newStyle = document.createElement('style');\n\t      newStyle.appendChild(document.createTextNode('\\n@font-face {' +\n\t        '\\nfont-family: ' + fontFamily + ';\\nsrc: url(' + path + ');\\n}\\n'));\n\t      document.head.appendChild(newStyle);\n\t    }\n\t\n\t  });\n\t\n\t  return p5Font;\n\t};\n\t\n\t//BufferedReader\n\tp5.prototype.createInput = function () {\n\t  // TODO\n\t  throw 'not yet implemented';\n\t};\n\t\n\tp5.prototype.createReader = function () {\n\t  // TODO\n\t  throw 'not yet implemented';\n\t};\n\t\n\tp5.prototype.loadBytes = function () {\n\t  // TODO\n\t  throw 'not yet implemented';\n\t};\n\t\n\t/**\n\t * Loads a JSON file from a file or a URL, and returns an Object or Array.\n\t * This method is asynchronous, meaning it may not finish before the next\n\t * line in your sketch is executed.\n\t *\n\t * @method loadJSON\n\t * @param  {String}        path       name of the file or url to load\n\t * @param  {Function}      [callback] function to be executed after\n\t *                                    loadJSON() completes, data is passed\n\t *                                    in as first argument\n\t * @param  {Function}      [errorCallback] function to be executed if\n\t *                                    there is an error, response is passed\n\t *                                    in as first argument\n\t * @param  {String}        [datatype] \"json\" or \"jsonp\"\n\t * @return {Object|Array}             JSON data\n\t * @example\n\t *\n\t * <p>Calling loadJSON() inside preload() guarantees to complete the\n\t * operation before setup() and draw() are called.</p>\n\t *\n\t * <div><code>\n\t * var weather;\n\t * function preload() {\n\t *   var url = 'http://api.openweathermap.org/data/2.5/weather?q=London,UK'+\n\t *    '&APPID=7bbbb47522848e8b9c26ba35c226c734';\n\t *   weather = loadJSON(url);\n\t * }\n\t *\n\t * function setup() {\n\t *   noLoop();\n\t * }\n\t *\n\t * function draw() {\n\t *   background(200);\n\t *   // get the humidity value out of the loaded JSON\n\t *   var humidity = weather.main.humidity;\n\t *   fill(0, humidity); // use the humidity value to set the alpha\n\t *   ellipse(width/2, height/2, 50, 50);\n\t * }\n\t * </code></div>\n\t *\n\t *\n\t * <p>Outside of preload(), you may supply a callback function to handle the\n\t * object:</p>\n\t * <div><code>\n\t * function setup() {\n\t *   noLoop();\n\t *   var url = 'http://api.openweathermap.org/data/2.5/weather?q=NewYork'+\n\t *    '&APPID=7bbbb47522848e8b9c26ba35c226c734';\n\t *   loadJSON(url, drawWeather);\n\t * }\n\t *\n\t * function draw() {\n\t *   background(200);\n\t * }\n\t *\n\t * function drawWeather(weather) {\n\t *   // get the humidity value out of the loaded JSON\n\t *   var humidity = weather.main.humidity;\n\t *   fill(0, humidity); // use the humidity value to set the alpha\n\t *   ellipse(width/2, height/2, 50, 50);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * 50x50 ellipse that changes from black to white depending on the current humidity\n\t * 50x50 ellipse that changes from black to white depending on the current humidity\n\t *\n\t */\n\tp5.prototype.loadJSON = function () {\n\t  var path = arguments[0];\n\t  var callback = arguments[1];\n\t  var errorCallback;\n\t  var decrementPreload = p5._getDecrementPreload.apply(this, arguments);\n\t\n\t  var ret = {}; // object needed for preload\n\t  // assume jsonp for URLs\n\t  var t = 'json'; //= path.indexOf('http') === -1 ? 'json' : 'jsonp';\n\t\n\t  // check for explicit data type argument\n\t  for (var i = 2; i < arguments.length; i++) {\n\t    var arg = arguments[i];\n\t    if (typeof arg === 'string') {\n\t      if (arg === 'jsonp' || arg === 'json') {\n\t        t = arg;\n\t      }\n\t    } else if (typeof arg === 'function') {\n\t      errorCallback = arg;\n\t    }\n\t  }\n\t\n\t  reqwest({\n\t    url: path,\n\t    type: t,\n\t    crossOrigin: true,\n\t    error: function (resp) {\n\t      // pass to error callback if defined\n\t      if (errorCallback) {\n\t        errorCallback(resp);\n\t      } else { // otherwise log error msg\n\t        console.log(resp.statusText);\n\t      }\n\t    },\n\t    success: function (resp) {\n\t      for (var k in resp) {\n\t        ret[k] = resp[k];\n\t      }\n\t      if (typeof callback !== 'undefined') {\n\t        callback(resp);\n\t      }\n\t      if (decrementPreload && (callback !== decrementPreload)) {\n\t        decrementPreload();\n\t      }\n\t    }\n\t  });\n\t\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Reads the contents of a file and creates a String array of its individual\n\t * lines. If the name of the file is used as the parameter, as in the above\n\t * example, the file must be located in the sketch directory/folder.\n\t * <br><br>\n\t * Alternatively, the file maybe be loaded from anywhere on the local\n\t * computer using an absolute path (something that starts with / on Unix and\n\t * Linux, or a drive letter on Windows), or the filename parameter can be a\n\t * URL for a file found on a network.\n\t * <br><br>\n\t * This method is asynchronous, meaning it may not finish before the next\n\t * line in your sketch is executed.\n\t *\n\t * @method loadStrings\n\t * @param  {String}   filename   name of the file or url to load\n\t * @param  {Function} [callback] function to be executed after loadStrings()\n\t *                               completes, Array is passed in as first\n\t *                               argument\n\t * @param  {Function} [errorCallback] function to be executed if\n\t *                               there is an error, response is passed\n\t *                               in as first argument\n\t * @return {Array}               Array of Strings\n\t * @example\n\t *\n\t * <p>Calling loadStrings() inside preload() guarantees to complete the\n\t * operation before setup() and draw() are called.</p>\n\t *\n\t * <div><code>\n\t * var result;\n\t * function preload() {\n\t *   result = loadStrings('assets/test.txt');\n\t * }\n\t\n\t * function setup() {\n\t *   background(200);\n\t *   var ind = floor(random(result.length));\n\t *   text(result[ind], 10, 10, 80, 80);\n\t * }\n\t * </code></div>\n\t *\n\t * <p>Outside of preload(), you may supply a callback function to handle the\n\t * object:</p>\n\t *\n\t * <div><code>\n\t * function setup() {\n\t *   loadStrings('assets/test.txt', pickString);\n\t * }\n\t *\n\t * function pickString(result) {\n\t *   background(200);\n\t *   var ind = floor(random(result.length));\n\t *   text(result[ind], 10, 10, 80, 80);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * randomly generated text from a file, for example \"i smell like butter\"\n\t * randomly generated text from a file, for example \"i have three feet\"\n\t *\n\t */\n\tp5.prototype.loadStrings = function (path, callback, errorCallback) {\n\t  var ret = [];\n\t  var req = new XMLHttpRequest();\n\t  var decrementPreload = p5._getDecrementPreload.apply(this, arguments);\n\t\n\t  req.addEventListener('error', function (resp) {\n\t    if (errorCallback) {\n\t      errorCallback(resp);\n\t    } else {\n\t      console.log(resp.responseText);\n\t    }\n\t  });\n\t\n\t  req.open('GET', path, true);\n\t  req.onreadystatechange = function () {\n\t    if (req.readyState === 4) {\n\t      if (req.status === 200) {\n\t        var arr = req.responseText.match(/[^\\r\\n]+/g);\n\t        for (var k in arr) {\n\t          ret[k] = arr[k];\n\t        }\n\t        if (typeof callback !== 'undefined') {\n\t          callback(ret);\n\t        }\n\t        if (decrementPreload && (callback !== decrementPreload)) {\n\t          decrementPreload();\n\t        }\n\t      } else {\n\t        if (errorCallback) {\n\t          errorCallback(req);\n\t        } else {\n\t          console.log(req.statusText);\n\t        }\n\t        //p5._friendlyFileLoadError(3, path);\n\t      }\n\t    }\n\t  };\n\t  req.send(null);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * <p>Reads the contents of a file or URL and creates a p5.Table object with\n\t * its values. If a file is specified, it must be located in the sketch's\n\t * \"data\" folder. The filename parameter can also be a URL to a file found\n\t * online. By default, the file is assumed to be comma-separated (in CSV\n\t * format). Table only looks for a header row if the 'header' option is\n\t * included.</p>\n\t *\n\t * <p>Possible options include:\n\t * <ul>\n\t * <li>csv - parse the table as comma-separated values</li>\n\t * <li>tsv - parse the table as tab-separated values</li>\n\t * <li>header - this table has a header (title) row</li>\n\t * </ul>\n\t * </p>\n\t *\n\t * <p>When passing in multiple options, pass them in as separate parameters,\n\t * seperated by commas. For example:\n\t * <br><br>\n\t * <code>\n\t *   loadTable(\"my_csv_file.csv\", \"csv\", \"header\")\n\t * </code>\n\t * </p>\n\t *\n\t * <p> All files loaded and saved use UTF-8 encoding.</p>\n\t *\n\t * <p>This method is asynchronous, meaning it may not finish before the next\n\t * line in your sketch is executed. Calling loadTable() inside preload()\n\t * guarantees to complete the operation before setup() and draw() are called.\n\t * <p>Outside of preload(), you may supply a callback function to handle the\n\t * object:</p>\n\t * </p>\n\t *\n\t * @method loadTable\n\t * @param  {String}         filename   name of the file or URL to load\n\t * @param  {String|Strings} [options]  \"header\" \"csv\" \"tsv\"\n\t * @param  {Function}       [callback] function to be executed after\n\t *                                     loadTable() completes. On success, the\n\t *                                     Table object is passed in as the\n\t *                                     first argument; otherwise, false\n\t *                                     is passed in.\n\t * @return {Object}                    Table object containing data\n\t *\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * // Given the following CSV file called \"mammals.csv\"\n\t * // located in the project's \"assets\" folder:\n\t * //\n\t * // id,species,name\n\t * // 0,Capra hircus,Goat\n\t * // 1,Panthera pardus,Leopard\n\t * // 2,Equus zebra,Zebra\n\t *\n\t * var table;\n\t *\n\t * function preload() {\n\t *   //my table is comma separated value \"csv\"\n\t *   //and has a header specifying the columns labels\n\t *   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t *   //the file can be remote\n\t *   //table = loadTable(\"http://p5js.org/reference/assets/mammals.csv\",\n\t *   //                  \"csv\", \"header\");\n\t * }\n\t *\n\t * function setup() {\n\t *   //count the columns\n\t *   print(table.getRowCount() + \" total rows in table\");\n\t *   print(table.getColumnCount() + \" total columns in table\");\n\t *\n\t *   print(table.getColumn(\"name\"));\n\t *   //[\"Goat\", \"Leopard\", \"Zebra\"]\n\t *\n\t *   //cycle through the table\n\t *   for (var r = 0; r < table.getRowCount(); r++)\n\t *     for (var c = 0; c < table.getColumnCount(); c++) {\n\t *       print(table.getString(r, c));\n\t *     }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * randomly generated text from a file, for example \"i smell like butter\"\n\t * randomly generated text from a file, for example \"i have three feet\"\n\t *\n\t */\n\tp5.prototype.loadTable = function (path) {\n\t  var callback = null;\n\t  var options = [];\n\t  var header = false;\n\t  var sep = ',';\n\t  var separatorSet = false;\n\t  var decrementPreload = p5._getDecrementPreload.apply(this, arguments);\n\t\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    if ((typeof (arguments[i]) === 'function') &&\n\t      (arguments[i] !== decrementPreload)) {\n\t      callback = arguments[i];\n\t    } else if (typeof (arguments[i]) === 'string') {\n\t      options.push(arguments[i]);\n\t      if (arguments[i] === 'header') {\n\t        header = true;\n\t      }\n\t      if (arguments[i] === 'csv') {\n\t        if (separatorSet) {\n\t          throw new Error('Cannot set multiple separator types.');\n\t        } else {\n\t          sep = ',';\n\t          separatorSet = true;\n\t        }\n\t      } else if (arguments[i] === 'tsv') {\n\t        if (separatorSet) {\n\t          throw new Error('Cannot set multiple separator types.');\n\t        } else {\n\t          sep = '\\t';\n\t          separatorSet = true;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  var t = new p5.Table();\n\t  reqwest({\n\t      url: path,\n\t      crossOrigin: true,\n\t      type: 'csv'\n\t    })\n\t    .then(function (resp) {\n\t      resp = resp.responseText;\n\t\n\t      var state = {};\n\t\n\t      // define constants\n\t      var PRE_TOKEN = 0,\n\t        MID_TOKEN = 1,\n\t        POST_TOKEN = 2,\n\t        POST_RECORD = 4;\n\t\n\t      var QUOTE = '\\\"',\n\t        CR = '\\r',\n\t        LF = '\\n';\n\t\n\t      var records = [];\n\t      var offset = 0;\n\t      var currentRecord = null;\n\t      var currentChar;\n\t\n\t      var recordBegin = function () {\n\t        state.escaped = false;\n\t        currentRecord = [];\n\t        tokenBegin();\n\t      };\n\t\n\t      var recordEnd = function () {\n\t        state.currentState = POST_RECORD;\n\t        records.push(currentRecord);\n\t        currentRecord = null;\n\t      };\n\t\n\t      var tokenBegin = function () {\n\t        state.currentState = PRE_TOKEN;\n\t        state.token = '';\n\t      };\n\t\n\t      var tokenEnd = function () {\n\t        currentRecord.push(state.token);\n\t        tokenBegin();\n\t      };\n\t\n\t      while (true) {\n\t        currentChar = resp[offset++];\n\t\n\t        // EOF\n\t        if (currentChar == null) {\n\t          if (state.escaped) {\n\t            throw new Error('Unclosed quote in file.');\n\t          }\n\t          if (currentRecord) {\n\t            tokenEnd();\n\t            recordEnd();\n\t            break;\n\t          }\n\t        }\n\t        if (currentRecord === null) {\n\t          recordBegin();\n\t        }\n\t\n\t        // Handle opening quote\n\t        if (state.currentState === PRE_TOKEN) {\n\t          if (currentChar === QUOTE) {\n\t            state.escaped = true;\n\t            state.currentState = MID_TOKEN;\n\t            continue;\n\t          }\n\t          state.currentState = MID_TOKEN;\n\t        }\n\t\n\t        // mid-token and escaped, look for sequences and end quote\n\t        if (state.currentState === MID_TOKEN && state.escaped) {\n\t          if (currentChar === QUOTE) {\n\t            if (resp[offset] === QUOTE) {\n\t              state.token += QUOTE;\n\t              offset++;\n\t            } else {\n\t              state.escaped = false;\n\t              state.currentState = POST_TOKEN;\n\t            }\n\t          } else {\n\t            state.token += currentChar;\n\t          }\n\t          continue;\n\t        }\n\t\n\t        // fall-through: mid-token or post-token, not escaped\n\t        if (currentChar === CR) {\n\t          if (resp[offset] === LF) {\n\t            offset++;\n\t          }\n\t          tokenEnd();\n\t          recordEnd();\n\t        } else if (currentChar === LF) {\n\t          tokenEnd();\n\t          recordEnd();\n\t        } else if (currentChar === sep) {\n\t          tokenEnd();\n\t        } else if (state.currentState === MID_TOKEN) {\n\t          state.token += currentChar;\n\t        }\n\t      }\n\t\n\t      // set up column names\n\t      if (header) {\n\t        t.columns = records.shift();\n\t      } else {\n\t        for (i = 0; i < records[0].length; i++) {\n\t          t.columns[i] = 'null';\n\t        }\n\t      }\n\t      var row;\n\t      for (i = 0; i < records.length; i++) {\n\t        //Handles row of 'undefined' at end of some CSVs\n\t        if (i === records.length - 1 && records[i].length === 1) {\n\t          if (records[i][0] === 'undefined') {\n\t            break;\n\t          }\n\t        }\n\t        row = new p5.TableRow();\n\t        row.arr = records[i];\n\t        row.obj = makeObject(records[i], t.columns);\n\t        t.addRow(row);\n\t      }\n\t      if (callback !== null) {\n\t        callback(t);\n\t      }\n\t      if (decrementPreload && (callback !== decrementPreload)) {\n\t        decrementPreload();\n\t      }\n\t    })\n\t    .fail(function (err, msg) {\n\t      p5._friendlyFileLoadError(2, path);\n\t      // don't get error callback mixed up with decrementPreload\n\t      if ((typeof callback === 'function') &&\n\t        (callback !== decrementPreload)) {\n\t        callback(false);\n\t      }\n\t    });\n\t\n\t  return t;\n\t};\n\t\n\t// helper function to turn a row into a JSON object\n\tfunction makeObject(row, headers) {\n\t  var ret = {};\n\t  headers = headers || [];\n\t  if (typeof (headers) === 'undefined') {\n\t    for (var j = 0; j < row.length; j++) {\n\t      headers[j.toString()] = j;\n\t    }\n\t  }\n\t  for (var i = 0; i < headers.length; i++) {\n\t    var key = headers[i];\n\t    var val = row[i];\n\t    ret[key] = val;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/*global parseXML */\n\tp5.prototype.parseXML = function (two) {\n\t  var one = new p5.XML();\n\t  var i;\n\t  if (two.children.length) {\n\t    for ( i = 0; i < two.children.length; i++ ) {\n\t      var node = parseXML(two.children[i]);\n\t      one.addChild(node);\n\t    }\n\t    one.setName(two.nodeName);\n\t    one._setCont(two.textContent);\n\t    one._setAttributes(two);\n\t    for (var j = 0; j < one.children.length; j++) {\n\t      one.children[j].parent = one;\n\t    }\n\t    return one;\n\t  }\n\t  else {\n\t    one.setName(two.nodeName);\n\t    one._setCont(two.textContent);\n\t    one._setAttributes(two);\n\t    return one;\n\t  }\n\t};\n\t\n\t/**\n\t * Reads the contents of a file and creates an XML object with its values.\n\t * If the name of the file is used as the parameter, as in the above example,\n\t * the file must be located in the sketch directory/folder.\n\t *\n\t * Alternatively, the file maybe be loaded from anywhere on the local\n\t * computer using an absolute path (something that starts with / on Unix and\n\t * Linux, or a drive letter on Windows), or the filename parameter can be a\n\t * URL for a file found on a network.\n\t *\n\t * This method is asynchronous, meaning it may not finish before the next\n\t * line in your sketch is executed. Calling loadXML() inside preload()\n\t * guarantees to complete the operation before setup() and draw() are called.\n\t *\n\t * <p>Outside of preload(), you may supply a callback function to handle the\n\t * object:</p>\n\t *\n\t * @method loadXML\n\t * @param  {String}   filename   name of the file or URL to load\n\t * @param  {Function} [callback] function to be executed after loadXML()\n\t *                               completes, XML object is passed in as\n\t *                               first argument\n\t * @param  {Function} [errorCallback] function to be executed if\n\t *                               there is an error, response is passed\n\t *                               in as first argument\n\t * @return {Object}              XML object containing data\n\t */\n\tp5.prototype.loadXML = function (path, callback, errorCallback) {\n\t  var ret = {};\n\t  var decrementPreload = p5._getDecrementPreload.apply(this, arguments);\n\t  reqwest({\n\t      url: path,\n\t      type: 'xml',\n\t      crossOrigin: true,\n\t      error: function (resp) {\n\t        // pass to error callback if defined\n\t        if (errorCallback) {\n\t          errorCallback(resp);\n\t        } else { // otherwise log error msg\n\t          console.log(resp.statusText);\n\t        }\n\t        //p5._friendlyFileLoadError(1,path);\n\t      }\n\t    })\n\t    .then(function (resp) {\n\t      var xml = parseXML(resp.documentElement);\n\t      for(var key in xml) {\n\t        ret[key] = xml[key];\n\t      }\n\t      if (typeof callback !== 'undefined') {\n\t        callback(ret);\n\t      }\n\t      if (decrementPreload && (callback !== decrementPreload)) {\n\t        decrementPreload();\n\t      }\n\t    });\n\t  return ret;\n\t};\n\t\n\t// name clash with window.open\n\t// p5.prototype.open = function() {\n\t//   // TODO\n\t\n\t// };\n\t\n\tp5.prototype.selectFolder = function () {\n\t  // TODO\n\t  throw 'not yet implemented';\n\t\n\t};\n\t\n\tp5.prototype.selectInput = function () {\n\t  // TODO\n\t  throw 'not yet implemented';\n\t\n\t};\n\t\n\t/**\n\t * Method for executing an HTTP GET request. If data type is not specified,\n\t * p5 will try to guess based on the URL, defaulting to text.\n\t *\n\t * @method httpGet\n\t * @param  {String}        path       name of the file or url to load\n\t * @param  {Object}        [data]     param data passed sent with request\n\t * @param  {String}        [datatype] \"json\", \"jsonp\", \"xml\", or \"text\"\n\t * @param  {Function}      [callback] function to be executed after\n\t *                                    httpGet() completes, data is passed in\n\t *                                    as first argument\n\t * @param  {Function}      [errorCallback] function to be executed if\n\t *                                    there is an error, response is passed\n\t *                                    in as first argument\n\t */\n\tp5.prototype.httpGet = function () {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  args.push('GET');\n\t  p5.prototype.httpDo.apply(this, args);\n\t};\n\t\n\t/**\n\t * Method for executing an HTTP POST request. If data type is not specified,\n\t * p5 will try to guess based on the URL, defaulting to text.\n\t *\n\t * @method httpPost\n\t * @param  {String}        path       name of the file or url to load\n\t * @param  {Object}        [data]     param data passed sent with request\n\t * @param  {String}        [datatype] \"json\", \"jsonp\", \"xml\", or \"text\"\n\t * @param  {Function}      [callback] function to be executed after\n\t *                                    httpGet() completes, data is passed in\n\t *                                    as first argument\n\t * @param  {Function}      [errorCallback] function to be executed if\n\t *                                    there is an error, response is passed\n\t *                                    in as first argument\n\t */\n\tp5.prototype.httpPost = function () {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  args.push('POST');\n\t  p5.prototype.httpDo.apply(this, args);\n\t};\n\t\n\t/**\n\t * Method for executing an HTTP request. If data type is not specified,\n\t * p5 will try to guess based on the URL, defaulting to text.<br><br>\n\t * You may also pass a single object specifying all parameters for the\n\t * request following the examples inside the reqwest() calls here:\n\t * <a href='https://github.com/ded/reqwest#api'>\n\t * https://github.com/ded/reqwest#api</a>\n\t *\n\t * @method httpDo\n\t * @param  {String}        path       name of the file or url to load\n\t * @param  {String}        [method]   either \"GET\", \"POST\", or \"PUT\",\n\t *                                    defaults to \"GET\"\n\t * @param  {Object}        [data]     param data passed sent with request\n\t * @param  {String}        [datatype] \"json\", \"jsonp\", \"xml\", or \"text\"\n\t * @param  {Function}      [callback] function to be executed after\n\t *                                    httpGet() completes, data is passed in\n\t *                                    as first argument\n\t * @param  {Function}      [errorCallback] function to be executed if\n\t *                                    there is an error, response is passed\n\t *                                    in as first argument\n\t */\n\tp5.prototype.httpDo = function () {\n\t  if (typeof arguments[0] === 'object') {\n\t    reqwest(arguments[0]);\n\t  } else {\n\t    var method = 'GET';\n\t    var path = arguments[0];\n\t    var data = {};\n\t    var type = '';\n\t    var callback;\n\t    var errorCallback;\n\t\n\t    for (var i = 1; i < arguments.length; i++) {\n\t      var a = arguments[i];\n\t      if (typeof a === 'string') {\n\t        if (a === 'GET' || a === 'POST' || a === 'PUT') {\n\t          method = a;\n\t        } else {\n\t          type = a;\n\t        }\n\t      } else if (typeof a === 'object') {\n\t        data = a;\n\t      } else if (typeof a === 'function') {\n\t        if (!callback) {\n\t          callback = a;\n\t        } else {\n\t          errorCallback = a;\n\t        }\n\t      }\n\t    }\n\t\n\t    // do some sort of smart type checking\n\t    if (type === '') {\n\t      if (path.indexOf('json') !== -1) {\n\t        type = 'json';\n\t      } else if (path.indexOf('xml') !== -1) {\n\t        type = 'xml';\n\t      } else {\n\t        type = 'text';\n\t      }\n\t    }\n\t\n\t    reqwest({\n\t      url: path,\n\t      method: method,\n\t      data: data,\n\t      type: type,\n\t      crossOrigin: true,\n\t      success: function (resp) {\n\t        if (typeof callback !== 'undefined') {\n\t          if (type === 'text') {\n\t            callback(resp.response);\n\t          } else {\n\t            callback(resp);\n\t          }\n\t        }\n\t      },\n\t      error: function (resp) {\n\t        if (errorCallback) {\n\t          errorCallback(resp);\n\t        } else {\n\t          console.log(resp.statusText);\n\t        }\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * @module IO\n\t * @submodule Output\n\t * @for p5\n\t */\n\t\n\twindow.URL = window.URL || window.webkitURL;\n\t\n\t// private array of p5.PrintWriter objects\n\tp5.prototype._pWriters = [];\n\t\n\tp5.prototype.beginRaw = function () {\n\t  // TODO\n\t  throw 'not yet implemented';\n\t\n\t};\n\t\n\tp5.prototype.beginRecord = function () {\n\t  // TODO\n\t  throw 'not yet implemented';\n\t\n\t};\n\t\n\tp5.prototype.createOutput = function () {\n\t  // TODO\n\t\n\t  throw 'not yet implemented';\n\t};\n\t\n\tp5.prototype.createWriter = function (name, extension) {\n\t  var newPW;\n\t  // check that it doesn't already exist\n\t  for (var i in p5.prototype._pWriters) {\n\t    if (p5.prototype._pWriters[i].name === name) {\n\t      // if a p5.PrintWriter w/ this name already exists...\n\t      // return p5.prototype._pWriters[i]; // return it w/ contents intact.\n\t      // or, could return a new, empty one with a unique name:\n\t      newPW = new p5.PrintWriter(name + window.millis(), extension);\n\t      p5.prototype._pWriters.push(newPW);\n\t      return newPW;\n\t    }\n\t  }\n\t  newPW = new p5.PrintWriter(name, extension);\n\t  p5.prototype._pWriters.push(newPW);\n\t  return newPW;\n\t};\n\t\n\tp5.prototype.endRaw = function () {\n\t  // TODO\n\t\n\t  throw 'not yet implemented';\n\t};\n\t\n\tp5.prototype.endRecord = function () {\n\t  // TODO\n\t  throw 'not yet implemented';\n\t\n\t};\n\t\n\tp5.PrintWriter = function (filename, extension) {\n\t  var self = this;\n\t  this.name = filename;\n\t  this.content = '';\n\t  this.print = function (data) {\n\t    this.content += data;\n\t  };\n\t  this.print = function (data) {\n\t    this.content += data + '\\n';\n\t  };\n\t  this.flush = function () {\n\t    this.content = '';\n\t  };\n\t  this.close = function () {\n\t    // convert String to Array for the writeFile Blob\n\t    var arr = [];\n\t    arr.push(this.content);\n\t    p5.prototype.writeFile(arr, filename, extension);\n\t    // remove from _pWriters array and delete self\n\t    for (var i in p5.prototype._pWriters) {\n\t      if (p5.prototype._pWriters[i].name === this.name) {\n\t        // remove from _pWriters array\n\t        p5.prototype._pWriters.splice(i, 1);\n\t      }\n\t    }\n\t    self.flush();\n\t    self = {};\n\t  };\n\t};\n\t\n\tp5.prototype.saveBytes = function () {\n\t  // TODO\n\t  throw 'not yet implemented';\n\t\n\t};\n\t\n\t// object, filename, options --> saveJSON, saveStrings, saveTable\n\t// filename, [extension] [canvas] --> saveImage\n\t\n\t/**\n\t *  <p>Save an image, text, json, csv, wav, or html. Prompts download to\n\t *  the client's computer. <b>Note that it is not recommended to call save()\n\t *  within draw if it's looping, as the save() function will open a new save\n\t *  dialog every frame.</b></p>\n\t *  <p>The default behavior is to save the canvas as an image. You can\n\t *  optionally specify a filename.\n\t *  For example:</p>\n\t *  <pre class='language-javascript'><code>\n\t *  save();\n\t *  save('myCanvas.jpg'); // save a specific canvas with a filename\n\t *  </code></pre>\n\t *\n\t *  <p>Alternately, the first parameter can be a pointer to a canvas\n\t *  p5.Element, an Array of Strings,\n\t *  an Array of JSON, a JSON object, a p5.Table, a p5.Image, or a\n\t *  p5.SoundFile (requires p5.sound). The second parameter is a filename\n\t *  (including extension). The third parameter is for options specific\n\t *  to this type of object. This method will save a file that fits the\n\t *  given paramaters. For example:</p>\n\t *\n\t *  <pre class='language-javascript'><code>\n\t *\n\t *  save('myCanvas.jpg');           // Saves canvas as an image\n\t *\n\t *  var cnv = createCanvas(100, 100);\n\t *  save(cnv, 'myCanvas.jpg');      // Saves canvas as an image\n\t *\n\t *  var gb = createGraphics(100, 100);\n\t *  save(gb, 'myGraphics.jpg');      // Saves p5.Renderer object as an image\n\t *\n\t *  save(myTable, 'myTable.html');  // Saves table as html file\n\t *  save(myTable, 'myTable.csv',);  // Comma Separated Values\n\t *  save(myTable, 'myTable.tsv');   // Tab Separated Values\n\t *\n\t *  save(myJSON, 'my.json');        // Saves pretty JSON\n\t *  save(myJSON, 'my.json', true);  // Optimizes JSON filesize\n\t *\n\t *  save(img, 'my.png');            // Saves pImage as a png image\n\t *\n\t *  save(arrayOfStrings, 'my.txt'); // Saves strings to a text file with line\n\t *                                  // breaks after each item in the array\n\t *  </code></pre>\n\t *\n\t *  @method save\n\t *  @param  {[Object|String]} objectOrFilename  If filename is provided, will\n\t *                                             save canvas as an image with\n\t *                                             either png or jpg extension\n\t *                                             depending on the filename.\n\t *                                             If object is provided, will\n\t *                                             save depending on the object\n\t *                                             and filename (see examples\n\t *                                             above).\n\t *  @param  {[String]} filename If an object is provided as the first\n\t *                               parameter, then the second parameter\n\t *                               indicates the filename,\n\t *                               and should include an appropriate\n\t *                               file extension (see examples above).\n\t *  @param  {[Boolean/String]} options  Additional options depend on\n\t *                            filetype. For example, when saving JSON,\n\t *                            <code>true</code> indicates that the\n\t *                            output will be optimized for filesize,\n\t *                            rather than readability.\n\t */\n\tp5.prototype.save = function (object, _filename, _options) {\n\t  // parse the arguments and figure out which things we are saving\n\t  var args = arguments;\n\t  // =================================================\n\t  // OPTION 1: saveCanvas...\n\t\n\t  // if no arguments are provided, save canvas\n\t  var cnv = this._curElement.elt;\n\t  if (args.length === 0) {\n\t    p5.prototype.saveCanvas(cnv);\n\t    return;\n\t  }\n\t  // otherwise, parse the arguments\n\t\n\t  // if first param is a p5Graphics, then saveCanvas\n\t  else if (args[0] instanceof p5.Renderer ||\n\t    args[0] instanceof p5.Graphics) {\n\t    p5.prototype.saveCanvas(args[0].elt, args[1], args[2]);\n\t    return;\n\t  }\n\t\n\t  // if 1st param is String and only one arg, assume it is canvas filename\n\t  else if (args.length === 1 && typeof (args[0]) === 'string') {\n\t    p5.prototype.saveCanvas(cnv, args[0]);\n\t  }\n\t\n\t  // =================================================\n\t  // OPTION 2: extension clarifies saveStrings vs. saveJSON\n\t  else {\n\t    var extension = _checkFileExtension(args[1], args[2])[1];\n\t    switch (extension) {\n\t      case 'json':\n\t        p5.prototype.saveJSON(args[0], args[1], args[2]);\n\t        return;\n\t      case 'txt':\n\t        p5.prototype.saveStrings(args[0], args[1], args[2]);\n\t        return;\n\t        // =================================================\n\t        // OPTION 3: decide based on object...\n\t      default:\n\t        if (args[0] instanceof Array) {\n\t          p5.prototype.saveStrings(args[0], args[1], args[2]);\n\t        } else if (args[0] instanceof p5.Table) {\n\t          p5.prototype.saveTable(args[0], args[1], args[2], args[3]);\n\t        } else if (args[0] instanceof p5.Image) {\n\t          p5.prototype.saveCanvas(args[0].canvas, args[1]);\n\t        } else if (args[0] instanceof p5.SoundFile) {\n\t          p5.prototype.saveSound(args[0], args[1], args[2], args[3]);\n\t        }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t *  Writes the contents of an Array or a JSON object to a .json file.\n\t *  The file saving process and location of the saved file will\n\t *  vary between web browsers.\n\t *\n\t *  @method saveJSON\n\t *  @param  {Array|Object} json\n\t *  @param  {String} filename\n\t *  @param  {Boolean} [optimize]   If true, removes line breaks\n\t *                                 and spaces from the output\n\t *                                 file to optimize filesize\n\t *                                 (but not readability).\n\t *  @example\n\t *  <div><code>\n\t *  var json;\n\t *\n\t *  function setup() {\n\t *\n\t *    json = {}; // new JSON Object\n\t *\n\t *    json.id = 0;\n\t *    json.species = 'Panthera leo';\n\t *    json.name = 'Lion';\n\t *\n\t *  // To save, un-comment the line below, then click 'run'\n\t *  // saveJSON(json, 'lion.json');\n\t *  }\n\t *\n\t *  // Saves the following to a file called \"lion.json\":\n\t *  // {\n\t *  //   \"id\": 0,\n\t *  //   \"species\": \"Panthera leo\",\n\t *  //   \"name\": \"Lion\"\n\t *  // }\n\t *  </div></code>\n\t *\n\t * @alt\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype.saveJSON = function (json, filename, opt) {\n\t  var stringify;\n\t  if (opt) {\n\t    stringify = JSON.stringify(json);\n\t  } else {\n\t    stringify = JSON.stringify(json, undefined, 2);\n\t  }\n\t  console.log(stringify);\n\t  this.saveStrings(stringify.split('\\n'), filename, 'json');\n\t};\n\t\n\tp5.prototype.saveJSONObject = p5.prototype.saveJSON;\n\tp5.prototype.saveJSONArray = p5.prototype.saveJSON;\n\t\n\tp5.prototype.saveStream = function () {\n\t  // TODO\n\t  throw 'not yet implemented';\n\t\n\t};\n\t\n\t/**\n\t *  Writes an array of Strings to a text file, one line per String.\n\t *  The file saving process and location of the saved file will\n\t *  vary between web browsers.\n\t *\n\t *  @method saveStrings\n\t *  @param  {Array} list      string array to be written\n\t *  @param  {String} filename filename for output\n\t *  @example\n\t *  <div><code>\n\t *  var words = 'apple bear cat dog';\n\t *\n\t *  // .split() outputs an Array\n\t *  var list = split(words, ' ');\n\t *\n\t *  // To save the file, un-comment next line and click 'run'\n\t *  // saveStrings(list, 'nouns.txt');\n\t *\n\t *  // Saves the following to a file called 'nouns.txt':\n\t *  //\n\t *  // apple\n\t *  // bear\n\t *  // cat\n\t *  // dog\n\t *  </code></div>\n\t *\n\t * @alt\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype.saveStrings = function (list, filename, extension) {\n\t  var ext = extension || 'txt';\n\t  var pWriter = this.createWriter(filename, ext);\n\t  for (var i = 0; i < list.length; i++) {\n\t    if (i < list.length - 1) {\n\t      pWriter.print(list[i]);\n\t    } else {\n\t      pWriter.print(list[i]);\n\t    }\n\t  }\n\t  pWriter.close();\n\t  pWriter.flush();\n\t};\n\t\n\tp5.prototype.saveXML = function () {\n\t  // TODO\n\t  throw 'not yet implemented';\n\t\n\t};\n\t\n\tp5.prototype.selectOutput = function () {\n\t  // TODO\n\t  throw 'not yet implemented';\n\t\n\t};\n\t\n\t// =======\n\t// HELPERS\n\t// =======\n\t\n\tfunction escapeHelper(content) {\n\t  return content\n\t    .replace(/&/g, '&amp;')\n\t    .replace(/</g, '&lt;')\n\t    .replace(/>/g, '&gt;')\n\t    .replace(/\"/g, '&quot;')\n\t    .replace(/'/g, '&#039;');\n\t}\n\t\n\t/**\n\t *  Writes the contents of a Table object to a file. Defaults to a\n\t *  text file with comma-separated-values ('csv') but can also\n\t *  use tab separation ('tsv'), or generate an HTML table ('html').\n\t *  The file saving process and location of the saved file will\n\t *  vary between web browsers.\n\t *\n\t *  @method saveTable\n\t *  @param  {p5.Table} Table  the Table object to save to a file\n\t *  @param  {String} filename the filename to which the Table should be saved\n\t *  @param  {String} [options]  can be one of \"tsv\", \"csv\", or \"html\"\n\t *  @example\n\t *  <div><code>\n\t *  var table;\n\t *\n\t *  function setup() {\n\t *    table = new p5.Table();\n\t *\n\t *    table.addColumn('id');\n\t *    table.addColumn('species');\n\t *    table.addColumn('name');\n\t *\n\t *    var newRow = table.addRow();\n\t *    newRow.setNum('id', table.getRowCount() - 1);\n\t *    newRow.setString('species', 'Panthera leo');\n\t *    newRow.setString('name', 'Lion');\n\t *\n\t *    // To save, un-comment next line then click 'run'\n\t *    // saveTable(table, 'new.csv');\n\t *    }\n\t *\n\t *    // Saves the following to a file called 'new.csv':\n\t *    // id,species,name\n\t *    // 0,Panthera leo,Lion\n\t *  </code></div>\n\t *\n\t * @alt\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype.saveTable = function (table, filename, options) {\n\t  var pWriter = this.createWriter(filename, options);\n\t\n\t  var header = table.columns;\n\t\n\t  var sep = ','; // default to CSV\n\t  if (options === 'tsv') {\n\t    sep = '\\t';\n\t  }\n\t  if (options !== 'html') {\n\t    // make header if it has values\n\t    if (header[0] !== '0') {\n\t      for (var h = 0; h < header.length; h++) {\n\t        if (h < header.length - 1) {\n\t          pWriter.print(header[h] + sep);\n\t        } else {\n\t          pWriter.print(header[h]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // make rows\n\t    for (var i = 0; i < table.rows.length; i++) {\n\t      var j;\n\t      for (j = 0; j < table.rows[i].arr.length; j++) {\n\t        if (j < table.rows[i].arr.length - 1) {\n\t          pWriter.print(table.rows[i].arr[j] + sep);\n\t        } else if (i < table.rows.length - 1) {\n\t          pWriter.print(table.rows[i].arr[j]);\n\t        } else {\n\t          pWriter.print(table.rows[i].arr[j]); // no line break\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // otherwise, make HTML\n\t  else {\n\t    pWriter.print('<html>');\n\t    pWriter.print('<head>');\n\t    var str = '  <meta http-equiv=\\\"content-type\\\" content';\n\t    str += '=\\\"text/html;charset=utf-8\\\" />';\n\t    pWriter.print(str);\n\t    pWriter.print('</head>');\n\t\n\t    pWriter.print('<body>');\n\t    pWriter.print('  <table>');\n\t\n\t    // make header if it has values\n\t    if (header[0] !== '0') {\n\t      pWriter.print('    <tr>');\n\t      for (var k = 0; k < header.length; k++) {\n\t        var e = escapeHelper(header[k]);\n\t        pWriter.print('      <td>' + e);\n\t        pWriter.print('      </td>');\n\t      }\n\t      pWriter.print('    </tr>');\n\t    }\n\t\n\t    // make rows\n\t    for (var row = 0; row < table.rows.length; row++) {\n\t      pWriter.print('    <tr>');\n\t      for (var col = 0; col < table.columns.length; col++) {\n\t        var entry = table.rows[row].getString(col);\n\t        var htmlEntry = escapeHelper(entry);\n\t        pWriter.print('      <td>' + htmlEntry);\n\t        pWriter.print('      </td>');\n\t      }\n\t      pWriter.print('    </tr>');\n\t    }\n\t    pWriter.print('  </table>');\n\t    pWriter.print('</body>');\n\t    pWriter.print('</html>');\n\t  }\n\t  // close and flush the pWriter\n\t  pWriter.close();\n\t  pWriter.flush();\n\t}; // end saveTable()\n\t\n\t/**\n\t *  Generate a blob of file data as a url to prepare for download.\n\t *  Accepts an array of data, a filename, and an extension (optional).\n\t *  This is a private function because it does not do any formatting,\n\t *  but it is used by saveStrings, saveJSON, saveTable etc.\n\t *\n\t *  @param  {Array} dataToDownload\n\t *  @param  {String} filename\n\t *  @param  {[String]} extension\n\t *  @private\n\t */\n\tp5.prototype.writeFile = function (dataToDownload, filename, extension) {\n\t  var type = 'application\\/octet-stream';\n\t  if (p5.prototype._isSafari()) {\n\t    type = 'text\\/plain';\n\t  }\n\t  var blob = new Blob(dataToDownload, {\n\t    'type': type\n\t  });\n\t  var href = window.URL.createObjectURL(blob);\n\t  p5.prototype.downloadFile(href, filename, extension);\n\t};\n\t\n\t/**\n\t *  Forces download. Accepts a url to filedata/blob, a filename,\n\t *  and an extension (optional).\n\t *  This is a private function because it does not do any formatting,\n\t *  but it is used by saveStrings, saveJSON, saveTable etc.\n\t *\n\t *  @param  {String} href      i.e. an href generated by createObjectURL\n\t *  @param  {[String]} filename\n\t *  @param  {[String]} extension\n\t */\n\tp5.prototype.downloadFile = function (href, fName, extension) {\n\t  var fx = _checkFileExtension(fName, extension);\n\t  var filename = fx[0];\n\t  var ext = fx[1];\n\t\n\t  var a = document.createElement('a');\n\t  a.href = href;\n\t  a.download = filename;\n\t\n\t  // Firefox requires the link to be added to the DOM before click()\n\t  a.onclick = destroyClickedElement;\n\t  a.style.display = 'none';\n\t  document.body.appendChild(a);\n\t\n\t  // Safari will open this file in the same page as a confusing Blob.\n\t  if (p5.prototype._isSafari()) {\n\t    var aText = 'Hello, Safari user! To download this file...\\n';\n\t    aText += '1. Go to File --> Save As.\\n';\n\t    aText += '2. Choose \"Page Source\" as the Format.\\n';\n\t    aText += '3. Name it with this extension: .\\\"' + ext + '\\\"';\n\t    alert(aText);\n\t  }\n\t  a.click();\n\t  href = null;\n\t};\n\t\n\t/**\n\t *  Returns a file extension, or another string\n\t *  if the provided parameter has no extension.\n\t *\n\t *  @param   {String} filename\n\t *  @return  {Array} [fileName, fileExtension]\n\t *\n\t *  @private\n\t */\n\tfunction _checkFileExtension(filename, extension) {\n\t  if (!extension || extension === true || extension === 'true') {\n\t    extension = '';\n\t  }\n\t  if (!filename) {\n\t    filename = 'untitled';\n\t  }\n\t  var ext = '';\n\t  // make sure the file will have a name, see if filename needs extension\n\t  if (filename && filename.indexOf('.') > -1) {\n\t    ext = filename.split('.').pop();\n\t  }\n\t  // append extension if it doesn't exist\n\t  if (extension) {\n\t    if (ext !== extension) {\n\t      ext = extension;\n\t      filename = filename + '.' + ext;\n\t    }\n\t  }\n\t  return [filename, ext];\n\t}\n\tp5.prototype._checkFileExtension = _checkFileExtension;\n\t\n\t/**\n\t *  Returns true if the browser is Safari, false if not.\n\t *  Safari makes trouble for downloading files.\n\t *\n\t *  @return  {Boolean} [description]\n\t *  @private\n\t */\n\tp5.prototype._isSafari = function () {\n\t  var x = Object.prototype.toString.call(window.HTMLElement);\n\t  return x.indexOf('Constructor') > 0;\n\t};\n\t\n\t/**\n\t *  Helper function, a callback for download that deletes\n\t *  an invisible anchor element from the DOM once the file\n\t *  has been automatically downloaded.\n\t *\n\t *  @private\n\t */\n\tfunction destroyClickedElement(event) {\n\t  document.body.removeChild(event.target);\n\t}\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37,\"../core/error_helpers\":40,\"opentype.js\":8,\"reqwest\":27}],60:[function(_dereq_,module,exports){\n\t/**\n\t * @module IO\n\t * @submodule Table\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t\n\t/**\n\t *  Table Options\n\t *  <p>Generic class for handling tabular data, typically from a\n\t *  CSV, TSV, or other sort of spreadsheet file.</p>\n\t *  <p>CSV files are\n\t *  <a href=\"http://en.wikipedia.org/wiki/Comma-separated_values\">\n\t *  comma separated values</a>, often with the data in quotes. TSV\n\t *  files use tabs as separators, and usually don't bother with the\n\t *  quotes.</p>\n\t *  <p>File names should end with .csv if they're comma separated.</p>\n\t *  <p>A rough \"spec\" for CSV can be found\n\t *  <a href=\"http://tools.ietf.org/html/rfc4180\">here</a>.</p>\n\t *  <p>To load files, use the loadTable method.</p>\n\t *  <p>To save tables to your computer, use the save method\n\t *   or the saveTable method.</p>\n\t *\n\t *  Possible options include:\n\t *  <ul>\n\t *  <li>csv - parse the table as comma-separated values\n\t *  <li>tsv - parse the table as tab-separated values\n\t *  <li>header - this table has a header (title) row\n\t *  </ul>\n\t */\n\t\n\t/**\n\t *  Table objects store data with multiple rows and columns, much\n\t *  like in a traditional spreadsheet. Tables can be generated from\n\t *  scratch, dynamically, or using data from an existing file.\n\t *\n\t *  @class p5.Table\n\t *  @constructor\n\t *  @param  {Array}     [rows] An array of p5.TableRow objects\n\t *  @return {p5.Table}         p5.Table generated\n\t */\n\tp5.Table = function (rows) {\n\t  /**\n\t   *  @property columns\n\t   *  @type {Array}\n\t   */\n\t  this.columns = [];\n\t\n\t  /**\n\t   *  @property rows\n\t   *  @type {Array}\n\t   */\n\t  this.rows = [];\n\t};\n\t\n\t/**\n\t *  Use addRow() to add a new row of data to a p5.Table object. By default,\n\t *  an empty row is created. Typically, you would store a reference to\n\t *  the new row in a TableRow object (see newRow in the example above),\n\t *  and then set individual values using set().\n\t *\n\t *  If a p5.TableRow object is included as a parameter, then that row is\n\t *  duplicated and added to the table.\n\t *\n\t *  @method  addRow\n\t *  @param   {p5.TableRow} [row] row to be added to the table\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   //add a row\n\t\t*   var newRow = table.addRow();\n\t\t*   newRow.setString(\"id\", table.getRowCount() - 1);\n\t\t*   newRow.setString(\"species\", \"Canis Lupus\");\n\t\t*   newRow.setString(\"name\", \"Wolf\");\n\t\t*\n\t\t*   //print the results\n\t\t*   for (var r = 0; r < table.getRowCount(); r++)\n\t\t*     for (var c = 0; c < table.getColumnCount(); c++)\n\t\t*       print(table.getString(r, c));\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t * @alt\n\t * no image displayed\n\t *\n\t */\n\tp5.Table.prototype.addRow = function(row) {\n\t  // make sure it is a valid TableRow\n\t  var r = row || new p5.TableRow();\n\t\n\t  if (typeof(r.arr) === 'undefined' || typeof(r.obj) === 'undefined') {\n\t    //r = new p5.prototype.TableRow(r);\n\t    throw 'invalid TableRow: ' + r;\n\t  }\n\t  r.table = this;\n\t  this.rows.push(r);\n\t  return r;\n\t};\n\t\n\t/**\n\t * Removes a row from the table object.\n\t *\n\t * @method  removeRow\n\t * @param   {Number} id ID number of the row to remove\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   //remove the first row\n\t\t*   var r = table.removeRow(0);\n\t\t*\n\t\t*   //print the results\n\t\t*   for (var r = 0; r < table.getRowCount(); r++)\n\t\t*     for (var c = 0; c < table.getColumnCount(); c++)\n\t\t*       print(table.getString(r, c));\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t    * @alt\n\t \t* no image displayed\n\t \t*\n\t */\n\tp5.Table.prototype.removeRow = function(id) {\n\t  this.rows[id].table = null; // remove reference to table\n\t  var chunk = this.rows.splice(id+1, this.rows.length);\n\t  this.rows.pop();\n\t  this.rows = this.rows.concat(chunk);\n\t};\n\t\n\t\n\t/**\n\t * Returns a reference to the specified p5.TableRow. The reference\n\t * can then be used to get and set values of the selected row.\n\t *\n\t * @method  getRow\n\t * @param  {Number}   rowID ID number of the row to get\n\t * @return {TableRow} p5.TableRow object\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   var row = table.getRow(1);\n\t\t*   //print it column by column\n\t\t*   //note: a row is an object, not an array\n\t\t*   for (var c = 0; c < table.getColumnCount(); c++)\n\t\t*     print(row.getString(c));\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t \t*@alt\n\t \t* no image displayed\n\t \t*\n\t */\n\tp5.Table.prototype.getRow = function(r) {\n\t  return this.rows[r];\n\t};\n\t\n\t/**\n\t *  Gets all rows from the table. Returns an array of p5.TableRows.\n\t *\n\t *  @method  getRows\n\t *  @return {Array}   Array of p5.TableRows\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   var rows = table.getRows();\n\t\t*\n\t\t*   //warning: rows is an array of objects\n\t\t*   for (var r = 0; r < rows.length; r++)\n\t\t*     rows[r].set(\"name\", \"Unicorn\");\n\t\t*\n\t\t*   //print the results\n\t\t*   for (var r = 0; r < table.getRowCount(); r++)\n\t\t*     for (var c = 0; c < table.getColumnCount(); c++)\n\t\t*       print(table.getString(r, c));\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t    * @alt\n\t    * no image displayed\n\t    *\n\t */\n\tp5.Table.prototype.getRows = function() {\n\t  return this.rows;\n\t};\n\t\n\t/**\n\t *  Finds the first row in the Table that contains the value\n\t *  provided, and returns a reference to that row. Even if\n\t *  multiple rows are possible matches, only the first matching\n\t *  row is returned. The column to search may be specified by\n\t *  either its ID or title.\n\t *\n\t *  @method  findRow\n\t *  @param  {String} value  The value to match\n\t *  @param  {Number|String} column ID number or title of the\n\t *                                 column to search\n\t *  @return {TableRow}\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   //find the animal named zebra\n\t\t*   var row = table.findRow(\"Zebra\", \"name\");\n\t\t*   //find the corresponding species\n\t\t*   print(row.getString(\"species\"));\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t * @alt\n\t * no image displayed\n\t *\n\t */\n\tp5.Table.prototype.findRow = function(value, column) {\n\t  // try the Object\n\t  if (typeof(column) === 'string') {\n\t    for (var i = 0; i < this.rows.length; i++){\n\t      if (this.rows[i].obj[column] === value) {\n\t        return this.rows[i];\n\t      }\n\t    }\n\t  }\n\t  // try the Array\n\t  else {\n\t    for (var j = 0; j < this.rows.length; j++){\n\t      if (this.rows[j].arr[column] === value) {\n\t        return this.rows[j];\n\t      }\n\t    }\n\t  }\n\t  // otherwise...\n\t  return null;\n\t};\n\t\n\t/**\n\t *  Finds the rows in the Table that contain the value\n\t *  provided, and returns references to those rows. Returns an\n\t *  Array, so for must be used to iterate through all the rows,\n\t *  as shown in the example above. The column to search may be\n\t *  specified by either its ID or title.\n\t *\n\t *  @method  findRows\n\t *  @param  {String} value  The value to match\n\t *  @param  {Number|String} column ID number or title of the\n\t *                                 column to search\n\t *  @return {Array}        An Array of TableRow objects\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   //add another goat\n\t\t*   var newRow = table.addRow();\n\t\t*   newRow.setString(\"id\", table.getRowCount() - 1);\n\t\t*   newRow.setString(\"species\", \"Scape Goat\");\n\t\t*   newRow.setString(\"name\", \"Goat\");\n\t\t*\n\t\t*   //find the rows containing animals named Goat\n\t\t*   var rows = table.findRows(\"Goat\", \"name\");\n\t\t*   print(rows.length + \" Goats found\");\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t \t*@alt\n\t \t* no image displayed\n\t \t*\n\t */\n\tp5.Table.prototype.findRows = function(value, column) {\n\t  var ret = [];\n\t  if (typeof(column) === 'string') {\n\t    for (var i = 0; i < this.rows.length; i++){\n\t      if (this.rows[i].obj[column] === value) {\n\t        ret.push( this.rows[i] );\n\t      }\n\t    }\n\t  }\n\t  // try the Array\n\t  else {\n\t    for (var j = 0; j < this.rows.length; j++){\n\t      if (this.rows[j].arr[column] === value) {\n\t        ret.push( this.rows[j] );\n\t      }\n\t    }\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t *  Finds the first row in the Table that matches the regular\n\t *  expression provided, and returns a reference to that row.\n\t *  Even if multiple rows are possible matches, only the first\n\t *  matching row is returned. The column to search may be\n\t *  specified by either its ID or title.\n\t *\n\t *  @method  matchRow\n\t *  @param  {String} regexp The regular expression to match\n\t *  @param  {String|Number} column The column ID (number) or\n\t *                                   title (string)\n\t *  @return {TableRow}        TableRow object\n\t */\n\tp5.Table.prototype.matchRow = function(regexp, column) {\n\t  if (typeof(column) === 'number') {\n\t    for (var j = 0; j < this.rows.length; j++) {\n\t      if ( this.rows[j].arr[column].match(regexp) ) {\n\t        return this.rows[j];\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    for (var i = 0; i < this.rows.length; i++) {\n\t      if ( this.rows[i].obj[column].match(regexp) ) {\n\t        return this.rows[i];\n\t      }\n\t    }\n\t  }\n\t  return null;\n\t};\n\t\n\t/**\n\t *  Finds the rows in the Table that match the regular expression provided,\n\t *  and returns references to those rows. Returns an array, so for must be\n\t *  used to iterate through all the rows, as shown in the example. The\n\t *  column to search may be specified by either its ID or title.\n\t *\n\t *  @method  matchRows\n\t *  @param  {String} regexp The regular expression to match\n\t *  @param  {String|Number} [column] The column ID (number) or\n\t *                                   title (string)\n\t *  @return {Array}        An Array of TableRow objects\n\t *  @example\n\t *  var table;\n\t *\n\t *  function setup() {\n\t *\n\t *    table = new p5.Table();\n\t *\n\t *    table.addColumn('name');\n\t *    table.addColumn('type');\n\t *\n\t *    var newRow = table.addRow();\n\t *    newRow.setString('name', 'Lion');\n\t *    newRow.setString('type', 'Mammal');\n\t *\n\t *    newRow = table.addRow();\n\t *    newRow.setString('name', 'Snake');\n\t *    newRow.setString('type', 'Reptile');\n\t *\n\t *    newRow = table.addRow();\n\t *    newRow.setString('name', 'Mosquito');\n\t *    newRow.setString('type', 'Insect');\n\t *\n\t *    newRow = table.addRow();\n\t *    newRow.setString('name', 'Lizard');\n\t *    newRow.setString('type', 'Reptile');\n\t *\n\t *    var rows = table.matchRows('R.*', 'type');\n\t *    for (var i = 0; i < rows.length; i++) {\n\t *      print(rows[i].getString('name') + ': ' + rows[i].getString('type'));\n\t *    }\n\t *  }\n\t *  // Sketch prints:\n\t *  // Snake: Reptile\n\t *  // Lizard: Reptile\n\t */\n\tp5.Table.prototype.matchRows = function(regexp, column) {\n\t  var ret = [];\n\t  if (typeof(column) === 'number') {\n\t    for (var j = 0; j < this.rows.length; j++) {\n\t      if ( this.rows[j].arr[column].match(regexp) ) {\n\t        ret.push( this.rows[j] );\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    for (var i = 0; i < this.rows.length; i++) {\n\t      if ( this.rows[i].obj[column].match(regexp) ) {\n\t        ret.push( this.rows[i] );\n\t      }\n\t    }\n\t  }\n\t  return ret;\n\t};\n\t\n\t\n\t/**\n\t *  Retrieves all values in the specified column, and returns them\n\t *  as an array. The column may be specified by either its ID or title.\n\t *\n\t *  @method  getColumn\n\t *  @param  {String|Number} column String or Number of the column to return\n\t *  @return {Array}       Array of column values\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   //getColumn returns an array that can be printed directly\n\t\t*   print(table.getColumn(\"species\"));\n\t\t*   //outputs [\"Capra hircus\", \"Panthera pardus\", \"Equus zebra\"]\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t \t*@alt\n\t \t* no image displayed\n\t \t*\n\t */\n\tp5.Table.prototype.getColumn = function(value) {\n\t  var ret = [];\n\t  if (typeof(value) === 'string'){\n\t    for (var i = 0; i < this.rows.length; i++){\n\t      ret.push (this.rows[i].obj[value]);\n\t    }\n\t  } else {\n\t    for (var j = 0; j < this.rows.length; j++){\n\t      ret.push (this.rows[j].arr[value]);\n\t    }\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t *  Removes all rows from a Table. While all rows are removed,\n\t *  columns and column titles are maintained.\n\t *\n\t *  @method  clearRows\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   table.clearRows();\n\t\t*   print(table.getRowCount() + \" total rows in table\");\n\t\t*   print(table.getColumnCount() + \" total columns in table\");\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t \t*@alt\n\t \t* no image displayed\n\t \t*\n\t */\n\tp5.Table.prototype.clearRows = function() {\n\t  delete this.rows;\n\t  this.rows = [];\n\t};\n\t\n\t/**\n\t *  Use addColumn() to add a new column to a Table object.\n\t *  Typically, you will want to specify a title, so the column\n\t *  may be easily referenced later by name. (If no title is\n\t *  specified, the new column's title will be null.)\n\t *\n\t *  @method  addColumn\n\t *  @param {String} [title] title of the given column\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   table.addColumn(\"carnivore\");\n\t\t*   table.set(0, \"carnivore\", \"no\");\n\t\t*   table.set(1, \"carnivore\", \"yes\");\n\t\t*   table.set(2, \"carnivore\", \"no\");\n\t\t*\n\t\t*   //print the results\n\t\t*   for (var r = 0; r < table.getRowCount(); r++)\n\t\t*     for (var c = 0; c < table.getColumnCount(); c++)\n\t\t*       print(table.getString(r, c));\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t \t*@alt\n\t \t* no image displayed\n\t \t*\n\t */\n\tp5.Table.prototype.addColumn = function(title) {\n\t  var t = title || null;\n\t  this.columns.push(t);\n\t};\n\t\n\t/**\n\t *  Returns the total number of columns in a Table.\n\t *\n\t *  @return {Number} Number of columns in this table\n\t */\n\tp5.Table.prototype.getColumnCount = function() {\n\t  return this.columns.length;\n\t};\n\t\n\t/**\n\t *  Returns the total number of rows in a Table.\n\t *\n\t *  @method  getRowCount\n\t *  @return {Number} Number of rows in this table\n\t\n\t */\n\tp5.Table.prototype.getRowCount = function() {\n\t  return this.rows.length;\n\t};\n\t\n\t/**\n\t *  <p>Removes any of the specified characters (or \"tokens\").</p>\n\t *\n\t *  <p>If no column is specified, then the values in all columns and\n\t *  rows are processed. A specific column may be referenced by\n\t *  either its ID or title.</p>\n\t *\n\t *  @method  removeTokens\n\t *  @param  {String} chars  String listing characters to be removed\n\t *  @param  {String|Number} [column] Column ID (number)\n\t *                                   or name (string)\n\t */\n\tp5.Table.prototype.removeTokens = function(chars, column) {\n\t  var escape= function(s) {\n\t    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t  };\n\t  var charArray = [];\n\t  for (var i = 0; i < chars.length; i++) {\n\t    charArray.push( escape( chars.charAt(i) ) );\n\t  }\n\t  var regex = new RegExp(charArray.join('|'), 'g');\n\t\n\t  if (typeof(column) === 'undefined'){\n\t    for (var c = 0; c < this.columns.length; c++) {\n\t      for (var d = 0; d < this.rows.length; d++) {\n\t        var s = this.rows[d].arr[c];\n\t        s = s.replace(regex, '');\n\t        this.rows[d].arr[c] = s;\n\t        this.rows[d].obj[this.columns[c]] = s;\n\t      }\n\t    }\n\t  }\n\t  else if (typeof(column) === 'string'){\n\t    for (var j = 0; j < this.rows.length; j++) {\n\t      var val = this.rows[j].obj[column];\n\t      val = val.replace(regex, '');\n\t      this.rows[j].obj[column] = val;\n\t      var pos = this.columns.indexOf(column);\n\t      this.rows[j].arr[pos] = val;\n\t    }\n\t  }\n\t  else {\n\t    for (var k = 0; k < this.rows.length; k++) {\n\t      var str = this.rows[k].arr[column];\n\t      str = str.replace(regex, '');\n\t      this.rows[k].arr[column] = str;\n\t      this.rows[k].obj[this.columns[column]] = str;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t *  Trims leading and trailing whitespace, such as spaces and tabs,\n\t *  from String table values. If no column is specified, then the\n\t *  values in all columns and rows are trimmed. A specific column\n\t *  may be referenced by either its ID or title.\n\t *\n\t *  @method  trim\n\t *  @param  {String|Number} column Column ID (number)\n\t *                                   or name (string)\n\t */\n\tp5.Table.prototype.trim = function(column) {\n\t  var regex = new RegExp( (' '), 'g');\n\t\n\t  if (typeof(column) === 'undefined'){\n\t    for (var c = 0; c < this.columns.length; c++) {\n\t      for (var d = 0; d < this.rows.length; d++) {\n\t        var s = this.rows[d].arr[c];\n\t        s = s.replace(regex, '');\n\t        this.rows[d].arr[c] = s;\n\t        this.rows[d].obj[this.columns[c]] = s;\n\t      }\n\t    }\n\t  }\n\t  else if (typeof(column) === 'string'){\n\t    for (var j = 0; j < this.rows.length; j++) {\n\t      var val = this.rows[j].obj[column];\n\t      val = val.replace(regex, '');\n\t      this.rows[j].obj[column] = val;\n\t      var pos = this.columns.indexOf(column);\n\t      this.rows[j].arr[pos] = val;\n\t    }\n\t  }\n\t  else {\n\t    for (var k = 0; k < this.rows.length; k++) {\n\t      var str = this.rows[k].arr[column];\n\t      str = str.replace(regex, '');\n\t      this.rows[k].arr[column] = str;\n\t      this.rows[k].obj[this.columns[column]] = str;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t *  Use removeColumn() to remove an existing column from a Table\n\t *  object. The column to be removed may be identified by either\n\t *  its title (a String) or its index value (an int).\n\t *  removeColumn(0) would remove the first column, removeColumn(1)\n\t *  would remove the second column, and so on.\n\t *\n\t *  @method  removeColumn\n\t *  @param  {String|Number} column columnName (string) or ID (number)\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   table.removeColumn(\"id\");\n\t\t*   print(table.getColumnCount());\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t \t*@alt\n\t \t* no image displayed\n\t \t*\n\t */\n\tp5.Table.prototype.removeColumn = function(c) {\n\t  var cString;\n\t  var cNumber;\n\t  if (typeof(c) === 'string') {\n\t    // find the position of c in the columns\n\t    cString = c;\n\t    cNumber = this.columns.indexOf(c);\n\t    console.log('string');\n\t  }\n\t  else{\n\t    cNumber = c;\n\t    cString = this.columns[c];\n\t  }\n\t\n\t  var chunk = this.columns.splice(cNumber+1, this.columns.length);\n\t  this.columns.pop();\n\t  this.columns = this.columns.concat(chunk);\n\t\n\t  for (var i = 0; i < this.rows.length; i++){\n\t    var tempR = this.rows[i].arr;\n\t    var chip = tempR.splice(cNumber+1, tempR.length);\n\t    tempR.pop();\n\t    this.rows[i].arr = tempR.concat(chip);\n\t    delete this.rows[i].obj[cString];\n\t  }\n\t\n\t};\n\t\n\t\n\t/**\n\t * Stores a value in the Table's specified row and column.\n\t * The row is specified by its ID, while the column may be specified\n\t * by either its ID or title.\n\t *\n\t * @method  set\n\t * @param {String|Number} column column ID (Number)\n\t *                               or title (String)\n\t * @param {String|Number} value  value to assign\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   table.set(0, \"species\", \"Canis Lupus\");\n\t\t*   table.set(0, \"name\", \"Wolf\");\n\t\t*\n\t\t*   //print the results\n\t\t*   for (var r = 0; r < table.getRowCount(); r++)\n\t\t*     for (var c = 0; c < table.getColumnCount(); c++)\n\t\t*       print(table.getString(r, c));\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t \t*@alt\n\t \t* no image displayed\n\t \t*\n\t */\n\tp5.Table.prototype.set = function(row, column, value) {\n\t  this.rows[row].set(column, value);\n\t};\n\t\n\t/**\n\t * Stores a Float value in the Table's specified row and column.\n\t * The row is specified by its ID, while the column may be specified\n\t * by either its ID or title.\n\t *\n\t * @method setNum\n\t * @param {Number} row row ID\n\t * @param {String|Number} column column ID (Number)\n\t *                               or title (String)\n\t * @param {Number} value  value to assign\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   table.setNum(1, \"id\", 1);\n\t\t*\n\t\t*   print(table.getColumn(0));\n\t\t*   //[\"0\", 1, \"2\"]\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t \t*@alt\n\t \t* no image displayed\n\t */\n\tp5.Table.prototype.setNum = function(row, column, value){\n\t  this.rows[row].setNum(column, value);\n\t};\n\t\n\t\n\t/**\n\t * Stores a String value in the Table's specified row and column.\n\t * The row is specified by its ID, while the column may be specified\n\t * by either its ID or title.\n\t *\n\t * @method  setString\n\t * @param {Number} row row ID\n\t * @param {String|Number} column column ID (Number)\n\t *                               or title (String)\n\t * @param {String} value  value to assign\n\t */\n\tp5.Table.prototype.setString = function(row, column, value){\n\t  this.rows[row].setString(column, value);\n\t};\n\t\n\t/**\n\t * Retrieves a value from the Table's specified row and column.\n\t * The row is specified by its ID, while the column may be specified by\n\t * either its ID or title.\n\t *\n\t * @method  get\n\t * @param {Number} row row ID\n\t * @param  {String|Number} column columnName (string) or\n\t *                                   ID (number)\n\t * @return {String|Number}\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   print(table.get(0, 1));\n\t\t*   //Capra hircus\n\t\t*   print(table.get(0, \"species\"));\n\t\t*   //Capra hircus\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t \t*@alt\n\t \t* no image displayed\n\t \t*\n\t */\n\tp5.Table.prototype.get = function(row, column) {\n\t  return this.rows[row].get(column);\n\t};\n\t\n\t/**\n\t * Retrieves a Float value from the Table's specified row and column.\n\t * The row is specified by its ID, while the column may be specified by\n\t * either its ID or title.\n\t *\n\t * @method  getNum\n\t * @param {Number} row row ID\n\t * @param  {String|Number} column columnName (string) or\n\t *                                   ID (number)\n\t * @return {Number}\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   print(table.getNum(1, 0) + 100);\n\t\t*   //id 1 + 100 = 101\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t \t*@alt\n\t \t* no image displayed\n\t \t*\n\t */\n\tp5.Table.prototype.getNum = function(row, column) {\n\t  return this.rows[row].getNum(column);\n\t};\n\t\n\t/**\n\t * Retrieves a String value from the Table's specified row and column.\n\t * The row is specified by its ID, while the column may be specified by\n\t * either its ID or title.\n\t *\n\t * @method  getString\n\t * @param {Number} row row ID\n\t * @param  {String|Number} column columnName (string) or\n\t *                                   ID (number)\n\t * @return {String}\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   var tableArray = table.getArray();\n\t\t*\n\t\t*   //output each row as array\n\t\t*   for (var i = 0; i < tableArray.length; i++)\n\t\t*     print(tableArray[i]);\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t \t*@alt\n\t \t* no image displayed\n\t \t*\n\t */\n\tp5.Table.prototype.getString = function(row, column) {\n\t  return this.rows[row].getString(column);\n\t};\n\t\n\t/**\n\t * Retrieves all table data and returns as an object. If a column name is\n\t * passed in, each row object will be stored with that attribute as its\n\t * title.\n\t *\n\t * @method  getObject\n\t * @param {String} headerColumn Name of the column which should be used to\n\t *                              title each row object (optional)\n\t * @return {Object}\n\t *\n\t * @example\n\t\t* <div class=\"norender\">\n\t\t* <code>\n\t\t* // Given the CSV file \"mammals.csv\"\n\t\t* // in the project's \"assets\" folder:\n\t\t* //\n\t\t* // id,species,name\n\t\t* // 0,Capra hircus,Goat\n\t\t* // 1,Panthera pardus,Leopard\n\t\t* // 2,Equus zebra,Zebra\n\t\t*\n\t\t* var table;\n\t\t*\n\t\t* function preload() {\n\t\t*   //my table is comma separated value \"csv\"\n\t\t*   //and has a header specifying the columns labels\n\t\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t\t* }\n\t\t*\n\t\t* function setup() {\n\t\t*   var tableObject = table.getObject();\n\t\t*\n\t\t*   print(tableObject);\n\t\t*   //outputs an object\n\t\t* }\n\t\t* </code>\n\t\t* </div>\n\t\t*\n\t \t*@alt\n\t \t* no image displayed\n\t \t*\n\t */\n\tp5.Table.prototype.getObject = function (headerColumn) {\n\t  var tableObject = {};\n\t  var obj, cPos, index;\n\t\n\t  for(var i = 0; i < this.rows.length; i++) {\n\t    obj = this.rows[i].obj;\n\t\n\t    if (typeof(headerColumn) === 'string'){\n\t      cPos = this.columns.indexOf(headerColumn); // index of columnID\n\t      if (cPos >= 0) {\n\t        index = obj[headerColumn];\n\t        tableObject[index] = obj;\n\t      } else {\n\t        throw 'This table has no column named \"' + headerColumn +'\"';\n\t      }\n\t    } else {\n\t      tableObject[i] = this.rows[i].obj;\n\t    }\n\t  }\n\t  return tableObject;\n\t};\n\t\n\t/**\n\t * Retrieves all table data and returns it as a multidimensional array.\n\t *\n\t * @method  getArray\n\t * @return {Array}\n\t */\n\tp5.Table.prototype.getArray = function () {\n\t  var tableArray = [];\n\t  for(var i = 0; i < this.rows.length; i++) {\n\t    tableArray.push(this.rows[i].arr);\n\t  }\n\t  return tableArray;\n\t};\n\t\n\tmodule.exports = p5.Table;\n\t\n\t},{\"../core/core\":37}],61:[function(_dereq_,module,exports){\n\t/**\n\t * @module IO\n\t * @submodule Table\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/**\n\t *  A TableRow object represents a single row of data values,\n\t *  stored in columns, from a table.\n\t *\n\t *  A Table Row contains both an ordered array, and an unordered\n\t *  JSON object.\n\t *\n\t *  @class p5.TableRow\n\t *  @constructor\n\t *  @param {String} [str]       optional: populate the row with a\n\t *                              string of values, separated by the\n\t *                              separator\n\t *  @param {String} [separator] comma separated values (csv) by default\n\t */\n\tp5.TableRow = function (str, separator) {\n\t  var arr = [];\n\t  var obj = {};\n\t  if (str){\n\t    separator = separator || ',';\n\t    arr = str.split(separator);\n\t  }\n\t  for (var i = 0; i < arr.length; i++){\n\t    var key = i;\n\t    var val = arr[i];\n\t    obj[key] = val;\n\t  }\n\t  this.arr = arr;\n\t  this.obj = obj;\n\t  this.table = null;\n\t};\n\t\n\t/**\n\t *  Stores a value in the TableRow's specified column.\n\t *  The column may be specified by either its ID or title.\n\t *\n\t *  @method  set\n\t *  @param {String|Number} column Column ID (Number)\n\t *                                or Title (String)\n\t *  @param {String|Number} value  The value to be stored\n\t */\n\tp5.TableRow.prototype.set = function(column, value) {\n\t  // if typeof column is string, use .obj\n\t  if (typeof(column) === 'string'){\n\t    var cPos = this.table.columns.indexOf(column); // index of columnID\n\t    if (cPos >= 0) {\n\t      this.obj[column] = value;\n\t      this.arr[cPos] = value;\n\t    }\n\t    else {\n\t      throw 'This table has no column named \"' + column +'\"';\n\t    }\n\t  }\n\t\n\t  // if typeof column is number, use .arr\n\t  else {\n\t    if (column < this.table.columns.length) {\n\t      this.arr[column] = value;\n\t      var cTitle = this.table.columns[column];\n\t      this.obj[cTitle] = value;\n\t    }\n\t    else {\n\t      throw 'Column #' + column + ' is out of the range of this table';\n\t    }\n\t  }\n\t};\n\t\n\t\n\t/**\n\t *  Stores a Float value in the TableRow's specified column.\n\t *  The column may be specified by either its ID or title.\n\t *\n\t *  @method  setNum\n\t *  @param {String|Number} column Column ID (Number)\n\t *                                or Title (String)\n\t *  @param {Number} value  The value to be stored\n\t *                                as a Float\n\t */\n\tp5.TableRow.prototype.setNum = function(column, value){\n\t  var floatVal = parseFloat(value, 10);\n\t  this.set(column, floatVal);\n\t};\n\t\n\t\n\t/**\n\t *  Stores a String value in the TableRow's specified column.\n\t *  The column may be specified by either its ID or title.\n\t *\n\t *  @method  setString\n\t *  @param {String|Number} column Column ID (Number)\n\t *                                or Title (String)\n\t *  @param {String} value  The value to be stored\n\t *                                as a String\n\t */\n\tp5.TableRow.prototype.setString = function(column, value){\n\t  var stringVal = value.toString();\n\t  this.set(column, stringVal);\n\t};\n\t\n\t/**\n\t *  Retrieves a value from the TableRow's specified column.\n\t *  The column may be specified by either its ID or title.\n\t *\n\t *  @method  get\n\t *  @param  {String|Number} column columnName (string) or\n\t *                                   ID (number)\n\t *  @return {String|Number}\n\t */\n\tp5.TableRow.prototype.get = function(column) {\n\t  if (typeof(column) === 'string'){\n\t    return this.obj[column];\n\t  } else {\n\t    return this.arr[column];\n\t  }\n\t};\n\t\n\t/**\n\t *  Retrieves a Float value from the TableRow's specified\n\t *  column. The column may be specified by either its ID or\n\t *  title.\n\t *\n\t *  @method  getNum\n\t *  @param  {String|Number} column columnName (string) or\n\t *                                   ID (number)\n\t *  @return {Number}  Float Floating point number\n\t */\n\tp5.TableRow.prototype.getNum = function(column) {\n\t  var ret;\n\t  if (typeof(column) === 'string'){\n\t    ret = parseFloat(this.obj[column], 10);\n\t  } else {\n\t    ret = parseFloat(this.arr[column], 10);\n\t  }\n\t\n\t  if (ret.toString() === 'NaN') {\n\t    throw 'Error: ' + this.obj[column]+ ' is NaN (Not a Number)';\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t *  Retrieves an String value from the TableRow's specified\n\t *  column. The column may be specified by either its ID or\n\t *  title.\n\t *\n\t *  @method  getString\n\t *  @param  {String|Number} column columnName (string) or\n\t *                                   ID (number)\n\t *  @return {String}  String\n\t */\n\tp5.TableRow.prototype.getString = function(column) {\n\t  if (typeof(column) === 'string'){\n\t    return this.obj[column].toString();\n\t  } else {\n\t    return this.arr[column].toString();\n\t  }\n\t};\n\t\n\tmodule.exports = p5.TableRow;\n\t\n\t},{\"../core/core\":37}],62:[function(_dereq_,module,exports){\n\t/**\n\t * @module IO\n\t * @submodule XML\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/**\n\t * XML is a representation of an XML object, able to parse XML code. Use\n\t * loadXML() to load external XML files and create XML objects.\n\t *\n\t * @class p5.XML\n\t * @constructor\n\t * @return {p5.XML}    p5.XML object generated\n\t * @example\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var children = xml.getChildren(\"animal\");\n\t *\n\t *   for (var i = 0; i < children.length; i++) {\n\t *     var id = children[i].getNumber(\"id\");\n\t *     var coloring = children[i].getString(\"species\");\n\t *     var name = children[i].getContent();\n\t *     print(id + \", \" + coloring + \", \" + name);\n\t *   }\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // 0, Capra hircus, Goat\n\t * // 1, Panthera pardus, Leopard\n\t * // 2, Equus zebra, Zebra\n\t * </code></div>\n\t  *\n\t  * @alt\n\t  * no image displayed\n\t  *\n\t */\n\tp5.XML = function () {\n\t  this.name = null; //done\n\t  this.attributes = {}; //done\n\t  this.children = [];\n\t  this.parent = null;\n\t  this.content = null; //done\n\t};\n\t\n\t\n\t/**\n\t * Gets a copy of the element's parent. Returns the parent as another\n\t * p5.XML object.\n\t *\n\t * @method getParent\n\t * @return {Object}   element parent\n\t * @example\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var children = xml.getChildren(\"animal\");\n\t *   var parent = children[1].getParent();\n\t *   print(parent.getName());\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // mammals\n\t * </code></div>\n\t */\n\tp5.XML.prototype.getParent = function() {\n\t  return this.parent;\n\t};\n\t\n\t/**\n\t *  Gets the element's full name, which is returned as a String.\n\t *\n\t * @method getName\n\t * @return {String} the name of the node\n\t * @example&lt;animal\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   print(xml.getName());\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // mammals\n\t * </code></div>\n\t */\n\tp5.XML.prototype.getName = function() {\n\t  return this.name;\n\t};\n\t\n\t/**\n\t * Sets the element's name, which is specified as a String.\n\t *\n\t * @method setName\n\t * @param {String} the new name of the node\n\t * @example&lt;animal\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   print(xml.getName());\n\t *   xml.setName(\"fish\");\n\t *   print(xml.getName());\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // mammals\n\t * // fish\n\t * </code></div>\n\t */\n\tp5.XML.prototype.setName = function(name) {\n\t  this.name = name;\n\t};\n\t\n\t/**\n\t * Checks whether or not the element has any children, and returns the result\n\t * as a boolean.\n\t *\n\t * @method hasChildren\n\t * @return {boolean}\n\t * @example&lt;animal\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   print(xml.hasChildren());\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // true\n\t * </code></div>\n\t */\n\tp5.XML.prototype.hasChildren = function() {\n\t  return this.children.length > 0;\n\t};\n\t\n\t/**\n\t * Get the names of all of the element's children, and returns the names as an\n\t * array of Strings. This is the same as looping through and calling getName()\n\t * on each child element individually.\n\t *\n\t * @method listChildren\n\t * @return {Array} names of the children of the element\n\t * @example&lt;animal\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   print(xml.listChildren());\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // [\"animal\", \"animal\", \"animal\"]\n\t * </code></div>\n\t */\n\tp5.XML.prototype.listChildren = function() {\n\t  return this.children.map(function(c) { return c.name; });\n\t};\n\t\n\t/**\n\t * Returns all of the element's children as an array of p5.XML objects. When\n\t * the name parameter is specified, then it will return all children that match\n\t * that name.\n\t *\n\t * @method getChildren\n\t * @param {String} [name] element name\n\t * @return {Array} children of the element\n\t * @example&lt;animal\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var animals = xml.getChildren(\"animal\");\n\t *\n\t *   for (var i = 0; i < animals.length; i++) {\n\t *     print(animals[i].getContent());\n\t *   }\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // \"Goat\"\n\t * // \"Leopard\"\n\t * // \"Zebra\"\n\t * </code></div>\n\t */\n\tp5.XML.prototype.getChildren = function(param) {\n\t  if (param) {\n\t    return this.children.filter(function(c) { return c.name === param; });\n\t  }\n\t  else {\n\t    return this.children;\n\t  }\n\t};\n\t\n\t/**\n\t * Returns the first of the element's children that matches the name parameter\n\t * or the child of the given index.It returns undefined if no matching\n\t * child is found.\n\t *\n\t * @method getChild\n\t * @param {String|Number} name element name or index\n\t * @return {p5.XML}\n\t * @example&lt;animal\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var firstChild = xml.getChild(\"animal\");\n\t *   print(firstChild.getContent());\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // \"Goat\"\n\t * </code></div>\n\t * <div class='norender'><code>\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var secondChild = xml.getChild(1);\n\t *   print(secondChild.getContent());\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // \"Leopard\"\n\t * </code></div>\n\t */\n\tp5.XML.prototype.getChild = function(param) {\n\t  if(typeof param === 'string') {\n\t    return this.children.find(function(c) {\n\t      return c.name === param;\n\t    });\n\t  }\n\t  else {\n\t    return this.children[param];\n\t  }\n\t};\n\t\n\t/**\n\t * Appends a new child to the element. The child can be specified with\n\t * either a String, which will be used as the new tag's name, or as a\n\t * reference to an existing p5.XML object.\n\t * A reference to the newly created child is returned as an p5.XML object.\n\t *\n\t * @method addChild\n\t * @param {Object} a p5.XML Object which will be the child to be added\n\t */\n\tp5.XML.prototype.addChild = function(node) {\n\t  if (node instanceof p5.XML) {\n\t    this.children.push(node);\n\t  } else {\n\t    // PEND\n\t  }\n\t};\n\t\n\t/**\n\t * Removes the element specified by name or index.\n\t *\n\t * @method removeChild\n\t * @param {String|Number} name element name or index\n\t * @example\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   xml.removeChild(\"animal\");\n\t *   var children = xml.getChildren();\n\t *   for (var i=0; i<children.length; i++) {\n\t *     print(children[i].getContent());\n\t *   }\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // \"Leopard\"\n\t * // \"Zebra\"\n\t * </code></div>\n\t * <div class='norender'><code>\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   xml.removeChild(1);\n\t *   var children = xml.getChildren();\n\t *   for (var i=0; i<children.length; i++) {\n\t *     print(children[i].getContent());\n\t *   }\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // \"Goat\"\n\t * // \"Zebra\"\n\t * </code></div>\n\t */\n\tp5.XML.prototype.removeChild = function(param) {\n\t  var ind = -1;\n\t  if(typeof param === 'string') {\n\t    for (var i=0; i<this.children.length; i++) {\n\t      if (this.children[i].name === param) {\n\t        ind = i;\n\t        break;\n\t      }\n\t    }\n\t  } else {\n\t    ind = param;\n\t  }\n\t  if (ind !== -1) {\n\t    this.children.splice(ind, 1);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Counts the specified element's number of attributes, returned as an Number.\n\t *\n\t * @method getAttributeCount\n\t * @return {Number}\n\t * @example\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var firstChild = xml.getChild(\"animal\");\n\t *   print(firstChild.getAttributeCount());\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // 2\n\t * </code></div>\n\t */\n\tp5.XML.prototype.getAttributeCount = function() {\n\t  return Object.keys(this.attributes).length;\n\t};\n\t\n\t/**\n\t * Gets all of the specified element's attributes, and returns them as an\n\t * array of Strings.\n\t *\n\t * @method listAttributes\n\t * @return {Array} an array of strings containing the names of attributes\n\t * @example\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var firstChild = xml.getChild(\"animal\");\n\t *   print(firstChild.listAttributes());\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // [\"id\", \"species\"]\n\t * </code></div>\n\t */\n\tp5.XML.prototype.listAttributes = function() {\n\t  return Object.keys(this.attributes);\n\t};\n\t\n\t/**\n\t *  Checks whether or not an element has the specified attribute.\n\t *\n\t * @method hasAttribute\n\t * @param {String} the attribute to be checked\n\t * @return {boolean} true if attribute found else false\n\t * @example\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var firstChild = xml.getChild(\"animal\");\n\t *   print(firstChild.hasAttribute(\"species\"));\n\t *   print(firstChild.hasAttribute(\"color\"));\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // true\n\t * // false\n\t * </code></div>\n\t */\n\tp5.XML.prototype.hasAttribute = function(name) {\n\t  return this.attributes[name] ? true : false;\n\t};\n\t\n\t/**\n\t * Returns an attribute value of the element as an Number. If the defaultValue\n\t * parameter is specified and the attribute doesn't exist, then defaultValue\n\t * is returned. If no defaultValue is specified and the attribute doesn't\n\t * exist, the value 0 is returned.\n\t *\n\t * @method getNumber\n\t * @param {String} name            the non-null full name of the attribute\n\t * @param {Number} [defaultValue]  the default value of the attribute\n\t * @return {Number}\n\t * @example\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var firstChild = xml.getChild(\"animal\");\n\t *   print(firstChild.getNumber(\"id\"));\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // 0\n\t * </code></div>\n\t */\n\tp5.XML.prototype.getNumber = function(name, defaultValue) {\n\t  return Number(this.attributes[name]) || defaultValue || 0;\n\t};\n\t\n\t/**\n\t * Returns an attribute value of the element as an String. If the defaultValue\n\t * parameter is specified and the attribute doesn't exist, then defaultValue\n\t * is returned. If no defaultValue is specified and the attribute doesn't\n\t * exist, null is returned.\n\t *\n\t * @method getString\n\t * @param {String} name            the non-null full name of the attribute\n\t * @param {Number} [defaultValue]  the default value of the attribute\n\t * @return {Number}\n\t * @example\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var firstChild = xml.getChild(\"animal\");\n\t *   print(firstChild.getString(\"species\"));\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // \"Capra hircus\"\n\t * </code></div>\n\t */\n\tp5.XML.prototype.getString = function(name, defaultValue) {\n\t  return String(this.attributes[name]) || defaultValue || null;\n\t};\n\t\n\t/**\n\t * Sets the content of an element's attribute. The first parameter specifies\n\t * the attribute name, while the second specifies the new content.\n\t *\n\t * @method setAttribute\n\t * @param {String} name            the full name of the attribute\n\t * @param {Number} value           the value of the attribute\n\t * @example\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var firstChild = xml.getChild(\"animal\");\n\t *   print(firstChild.getString(\"species\"));\n\t *   firstChild.setAttribute(\"species\", \"Jamides zebra\");\n\t *   print(firstChild.getString(\"species\"));\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // \"Capra hircus\"\n\t * // \"Jamides zebra\"\n\t * </code></div>\n\t */\n\tp5.XML.prototype.setAttribute = function(name, value) {\n\t  if (this.attributes[name]) {\n\t    this.attributes[name] = value;\n\t  }\n\t};\n\t\n\t/**\n\t * Returns the content of an element. If there is no such content,\n\t * defaultValue is returned if specified, otherwise null is returned.\n\t *\n\t * @method getContent\n\t * @param {String} [defaultValue] value returned if no content is found\n\t * @return {String}\n\t * @example\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var firstChild = xml.getChild(\"animal\");\n\t *   print(firstChild.getContent());\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // \"Goat\"\n\t * </code></div>\n\t */\n\tp5.XML.prototype.getContent = function(defaultValue) {\n\t  return this.content || defaultValue || null;\n\t};\n\t\n\t/**\n\t * Sets the element's content.\n\t *\n\t * @method setContent\n\t * @param {String} text the new content\n\t * @example\n\t * <div class='norender'><code>\n\t * // The following short XML file called \"mammals.xml\" is parsed\n\t * // in the code below.\n\t * //\n\t * // <?xml version=\"1.0\"?>\n\t * // &lt;mammals&gt;\n\t * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n\t * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n\t * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n\t * // &lt;/mammals&gt;\n\t *\n\t * var xml;\n\t *\n\t * function preload() {\n\t *   xml = loadXML(\"assets/mammals.xml\");\n\t * }\n\t *\n\t * function setup() {\n\t *   var firstChild = xml.getChild(\"animal\");\n\t *   print(firstChild.getContent());\n\t *   firstChild.setContent(\"Mountain Goat\");\n\t *   print(firstChild.getContent());\n\t * }\n\t *\n\t * // Sketch prints:\n\t * // \"Goat\"\n\t * // \"Mountain Goat\"\n\t * </code></div>\n\t */\n\tp5.XML.prototype.setContent = function( content ) {\n\t  if(!this.children.length) {\n\t    this.content = content;\n\t  }\n\t};\n\t\n\t/* HELPERS */\n\t/**\n\t * This method is called while the parsing of XML (when loadXML() is\n\t * called). The difference between this method and the setContent()\n\t * method defined later is that this one is used to set the content\n\t * when the node in question has more nodes under it and so on and\n\t * not directly text content. While in the other one is used when\n\t * the node in question directly has text inside it.\n\t *\n\t */\n\tp5.XML.prototype._setCont = function(content) {\n\t  var str;\n\t  str = content;\n\t  str = str.replace(/\\s\\s+/g, ',');\n\t  //str = str.split(',');\n\t  this.content = str;\n\t};\n\t\n\t/**\n\t * This method is called while the parsing of XML (when loadXML() is\n\t * called). The XML node is passed and its attributes are stored in the\n\t * p5.XML's attribute Object.\n\t *\n\t */\n\tp5.XML.prototype._setAttributes = function(node) {\n\t  var  i, att = {};\n\t  for( i = 0; i < node.attributes.length; i++) {\n\t    att[node.attributes[i].nodeName] = node.attributes[i].nodeValue;\n\t  }\n\t  this.attributes = att;\n\t};\n\t\n\tmodule.exports = p5.XML;\n\t},{\"../core/core\":37}],63:[function(_dereq_,module,exports){\n\t/**\n\t * @module Math\n\t * @submodule Calculation\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/**\n\t * Calculates the absolute value (magnitude) of a number. Maps to Math.abs().\n\t * The absolute value of a number is always positive.\n\t *\n\t * @method abs\n\t * @param  {Number} n number to compute\n\t * @return {Number}   absolute value of given number\n\t * @example\n\t * <div class = \"norender\"><code>\n\t * function setup() {\n\t *   var x = -3;\n\t *   var y = abs(x);\n\t *\n\t *   print(x); // -3\n\t *   print(y); // 3\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * no image displayed\n\t *\n\t */\n\tp5.prototype.abs = Math.abs;\n\t\n\t/**\n\t * Calculates the closest int value that is greater than or equal to the\n\t * value of the parameter. Maps to Math.ceil(). For example, ceil(9.03)\n\t * returns the value 10.\n\t *\n\t * @method ceil\n\t * @param  {Number} n number to round up\n\t * @return {Number}   rounded up number\n\t * @example\n\t * <div><code>\n\t * function draw() {\n\t *   background(200);\n\t *   // map, mouseX between 0 and 5.\n\t *   var ax = map(mouseX, 0, 100, 0, 5);\n\t *   var ay = 66;\n\t *\n\t *   //Get the ceiling of the mapped number.\n\t *   var bx = ceil(map(mouseX, 0, 100, 0,5));\n\t *   var by = 33;\n\t *\n\t *   // Multiply the mapped numbers by 20 to more easily\n\t *   // see the changes.\n\t *   stroke(0);\n\t *   fill(0);\n\t *   line(0, ay, ax * 20, ay);\n\t *   line(0, by, bx * 20, by);\n\t *\n\t *   // Reformat the float returned by map and draw it.\n\t *   noStroke();\n\t *   text(nfc(ax, 2,2), ax, ay - 5);\n\t *   text(nfc(bx,1,1), bx, by - 5);\n\t * }\n\t * </code></div>\n\t  *\n\t * @alt\n\t * 2 horizontal lines & number sets. increase with mouse x. bottom to 2 decimals\n\t *\n\t */\n\tp5.prototype.ceil = Math.ceil;\n\t\n\t/**\n\t * Constrains a value between a minimum and maximum value.\n\t *\n\t * @method constrain\n\t * @param  {Number} n    number to constrain\n\t * @param  {Number} low  minimum limit\n\t * @param  {Number} high maximum limit\n\t * @return {Number}      constrained number\n\t * @example\n\t * <div><code>\n\t * function draw() {\n\t *   background(200);\n\t *\n\t *   var leftWall = 25;\n\t *   var rightWall = 75;\n\t *\n\t *   // xm is just the mouseX, while\n\t *   // xc is the mouseX, but constrained\n\t *   // between the leftWall and rightWall!\n\t *   var xm = mouseX;\n\t *   var xc = constrain(mouseX, leftWall, rightWall);\n\t *\n\t *   // Draw the walls.\n\t *   stroke(150);\n\t *   line(leftWall, 0, leftWall, height);\n\t *   line(rightWall, 0, rightWall, height);\n\t *\n\t *   // Draw xm and xc as circles.\n\t *   noStroke();\n\t *   fill(150);\n\t *   ellipse(xm, 33, 9,9); // Not Constrained\n\t *   fill(0);\n\t *   ellipse(xc, 66, 9,9); // Constrained\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * 2 vertical lines. 2 ellipses move with mouse X 1 does not move passed lines\n\t *\n\t */\n\tp5.prototype.constrain = function(n, low, high) {\n\t  return Math.max(Math.min(n, high), low);\n\t};\n\t\n\t/**\n\t * Calculates the distance between two points.\n\t *\n\t * @method dist\n\t * @param  {Number} x1 x-coordinate of the first point\n\t * @param  {Number} y1 y-coordinate of the first point\n\t * @param  {Number} [z1] z-coordinate of the first point\n\t * @param  {Number} x2 x-coordinate of the second point\n\t * @param  {Number} y2 y-coordinate of the second point\n\t * @param  {Number} [z2] z-coordinate of the second point\n\t * @return {Number}    distance between the two points\n\t * @example\n\t * <div><code>\n\t * // Move your mouse inside the canvas to see the\n\t * // change in distance between two points!\n\t * function draw() {\n\t *   background(200);\n\t *   fill(0);\n\t *\n\t *   var x1 = 10;\n\t *   var y1 = 90;\n\t *   var x2 = mouseX;\n\t *   var y2 = mouseY;\n\t *\n\t *   line(x1, y1, x2, y2);\n\t *   ellipse(x1, y1, 7, 7);\n\t *   ellipse(x2, y2, 7, 7);\n\t *\n\t *   // d is the length of the line\n\t *   // the distance from point 1 to point 2.\n\t *   var d = int(dist(x1, y1, x2, y2));\n\t *\n\t *   // Let's write d along the line we are drawing!\n\t *   push();\n\t *   translate( (x1+x2)/2, (y1+y2)/2 );\n\t *   rotate( atan2(y2-y1,x2-x1) );\n\t *   text(nfc(d,1,1), 0, -5);\n\t *   pop();\n\t *   // Fancy!\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * 2 ellipses joined by line. 1 ellipse moves with mouse X&Y. Distance displayed.\n\t *\n\t */\n\tp5.prototype.dist = function(x1, y1, z1, x2, y2, z2) {\n\t  if (arguments.length === 4) {\n\t    // In the case of 2d: z1 means x2 and x2 means y2\n\t    return Math.sqrt( (z1-x1)*(z1-x1) + (x2-y1)*(x2-y1) );\n\t  } else if (arguments.length === 6) {\n\t    return Math.sqrt( (x2-x1)*(x2-x1) + (y2-y1)*(y2-y1) + (z2-z1)*(z2-z1) );\n\t  }\n\t};\n\t\n\t/**\n\t * Returns Euler's number e (2.71828...) raised to the power of the n\n\t * parameter. Maps to Math.exp().\n\t *\n\t * @method exp\n\t * @param  {Number} n exponent to raise\n\t * @return {Number}   e^n\n\t * @example\n\t * <div><code>\n\t * function draw() {\n\t *   background(200);\n\t *\n\t *   // Compute the exp() function with a value between 0 and 2\n\t *   var xValue = map(mouseX, 0, width, 0, 2);\n\t *   var yValue = exp(xValue);\n\t *\n\t *   var y = map(yValue, 0, 8, height, 0);\n\t *\n\t *   var legend = \"exp (\" + nfc(xValue, 3) +\")\\n= \" + nf(yValue, 1, 4);\n\t *   stroke(150);\n\t *   line(mouseX, y, mouseX, height);\n\t *   fill(0);\n\t *   text(legend, 5, 15);\n\t *   noStroke();\n\t *   ellipse (mouseX,y, 7, 7);\n\t *\n\t *   // Draw the exp(x) curve,\n\t *   // over the domain of x from 0 to 2\n\t *   noFill();\n\t *   stroke(0);\n\t *   beginShape();\n\t *   for (var x = 0; x < width; x++) {\n\t *     xValue = map(x, 0, width, 0, 2);\n\t *     yValue = exp(xValue);\n\t *     y = map(yValue, 0, 8, height, 0);\n\t *     vertex(x, y);\n\t *   }\n\t *\n\t *   endShape();\n\t *   line(0, 0, 0, height);\n\t *   line(0, height-1, width, height-1);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * ellipse moves along a curve with mouse x. e^n displayed.\n\t *\n\t */\n\tp5.prototype.exp = Math.exp;\n\t\n\t/**\n\t * Calculates the closest int value that is less than or equal to the\n\t * value of the parameter. Maps to Math.floor().\n\t *\n\t * @method floor\n\t * @param  {Number} n number to round down\n\t * @return {Number}   rounded down number\n\t * @example\n\t * <div><code>\n\t * function draw() {\n\t *   background(200);\n\t *   //map, mouseX between 0 and 5.\n\t *   var ax = map(mouseX, 0, 100, 0, 5);\n\t *   var ay = 66;\n\t *\n\t *   //Get the floor of the mapped number.\n\t *   var bx = floor(map(mouseX, 0, 100, 0,5));\n\t *   var by = 33;\n\t *\n\t *   // Multiply the mapped numbers by 20 to more easily\n\t *   // see the changes.\n\t *   stroke(0);\n\t *   fill(0);\n\t *   line(0, ay, ax * 20, ay);\n\t *   line(0, by, bx * 20, by);\n\t *\n\t *   // Reformat the float returned by map and draw it.\n\t *   noStroke();\n\t *   text(nfc(ax, 2,2), ax, ay - 5);\n\t *   text(nfc(bx,1,1), bx, by - 5);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * 2 horizontal lines & number sets. increase with mouse x. bottom to 2 decimals\n\t *\n\t */\n\tp5.prototype.floor = Math.floor;\n\t\n\t/**\n\t * Calculates a number between two numbers at a specific increment. The amt\n\t * parameter is the amount to interpolate between the two values where 0.0\n\t * equal to the first point, 0.1 is very near the first point, 0.5 is\n\t * half-way in between, etc. The lerp function is convenient for creating\n\t * motion along a straight path and for drawing dotted lines.\n\t *\n\t * @method lerp\n\t * @param  {Number} start first value\n\t * @param  {Number} stop  second value\n\t * @param  {Number} amt   number between 0.0 and 1.0\n\t * @return {Number}       lerped value\n\t * @example\n\t * <div><code>\n\t * function setup() {\n\t *   background(200);\n\t *   var a = 20;\n\t *   var b = 80;\n\t *   var c = lerp(a,b, .2);\n\t *   var d = lerp(a,b, .5);\n\t *   var e = lerp(a,b, .8);\n\t *\n\t *   var y = 50\n\t *\n\t *   strokeWeight(5);\n\t *   stroke(0); // Draw the original points in black\n\t *   point(a, y);\n\t *   point(b, y);\n\t *\n\t *   stroke(100); // Draw the lerp points in gray\n\t *   point(c, y);\n\t *   point(d, y);\n\t *   point(e, y);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * 5 points horizontally staggered mid-canvas. mid 3 are grey, outer black\n\t *\n\t */\n\tp5.prototype.lerp = function(start, stop, amt) {\n\t  return amt*(stop-start)+start;\n\t};\n\t\n\t/**\n\t * Calculates the natural logarithm (the base-e logarithm) of a number. This\n\t * function expects the n parameter to be a value greater than 0.0. Maps to\n\t * Math.log().\n\t *\n\t * @method log\n\t * @param  {Number} n number greater than 0\n\t * @return {Number}   natural logarithm of n\n\t * @example\n\t * <div><code>\n\t * function draw() {\n\t *   background(200);\n\t *   var maxX = 2.8;\n\t *   var maxY = 1.5;\n\t *\n\t *   // Compute the natural log of a value between 0 and maxX\n\t *   var xValue = map(mouseX, 0, width, 0, maxX);\n\t *   if (xValue > 0) { // Cannot take the log of a negative number.\n\t *     var yValue = log(xValue);\n\t *     var y = map(yValue, -maxY, maxY, height, 0);\n\t *\n\t *     // Display the calculation occurring.\n\t *     var legend = \"log(\" + nf(xValue, 1, 2) + \")\\n= \" + nf(yValue, 1, 3);\n\t *     stroke(150);\n\t *     line(mouseX, y, mouseX, height);\n\t *     fill(0);\n\t *     text (legend, 5, 15);\n\t *     noStroke();\n\t *     ellipse (mouseX, y, 7, 7);\n\t *   }\n\t *\n\t *   // Draw the log(x) curve,\n\t *   // over the domain of x from 0 to maxX\n\t *   noFill();\n\t *   stroke(0);\n\t *   beginShape();\n\t *   for(var x=0; x < width; x++) {\n\t *     xValue = map(x, 0, width, 0, maxX);\n\t *     yValue = log(xValue);\n\t *     y = map(yValue, -maxY, maxY, height, 0);\n\t *     vertex(x, y);\n\t *   }\n\t *   endShape();\n\t *   line(0,0,0,height);\n\t *   line(0,height/2,width, height/2);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * ellipse moves along a curve with mouse x. natural logarithm of n displayed.\n\t *\n\t */\n\tp5.prototype.log = Math.log;\n\t\n\t/**\n\t * Calculates the magnitude (or length) of a vector. A vector is a direction\n\t * in space commonly used in computer graphics and linear algebra. Because it\n\t * has no \"start\" position, the magnitude of a vector can be thought of as\n\t * the distance from the coordinate 0,0 to its x,y value. Therefore, mag() is\n\t * a shortcut for writing dist(0, 0, x, y).\n\t *\n\t * @method mag\n\t * @param  {Number} a first value\n\t * @param  {Number} b second value\n\t * @return {Number}   magnitude of vector from (0,0) to (a,b)\n\t * @example\n\t * <div><code>\n\t * function setup() {\n\t *   var x1 = 20;\n\t *   var x2 = 80;\n\t *   var y1 = 30;\n\t *   var y2 = 70;\n\t *\n\t *   line(0, 0, x1, y1);\n\t *   print(mag(x1, y1));  // Prints \"36.05551\"\n\t *   line(0, 0, x2, y1);\n\t *   print(mag(x2, y1));  // Prints \"85.44004\"\n\t *   line(0, 0, x1, y2);\n\t *   print(mag(x1, y2));  // Prints \"72.8011\"\n\t *   line(0, 0, x2, y2);\n\t *   print(mag(x2, y2));  // Prints \"106.30146\"\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * 4 lines of different length radiate from top left of canvas.\n\t *\n\t */\n\tp5.prototype.mag = function(x, y) {\n\t  return Math.sqrt(x*x+y*y);\n\t};\n\t\n\t/**\n\t * Re-maps a number from one range to another.\n\t * <br><br>\n\t * In the first example above, the number 25 is converted from a value in the\n\t * range of 0 to 100 into a value that ranges from the left edge of the\n\t * window (0) to the right edge (width).\n\t *\n\t * @method map\n\t * @param  {Number} value  the incoming value to be converted\n\t * @param  {Number} start1 lower bound of the value's current range\n\t * @param  {Number} stop1  upper bound of the value's current range\n\t * @param  {Number} start2 lower bound of the value's target range\n\t * @param  {Number} stop2  upper bound of the value's target range\n\t * @return {Number}        remapped number\n\t * @example\n\t *   <div><code>\n\t *     var value = 25;\n\t *     var m = map(value, 0, 100, 0, width);\n\t *     ellipse(m, 50, 10, 10);\n\t *   </code></div>\n\t *\n\t *   <div><code>\n\t *     function setup() {\n\t *       noStroke();\n\t *     }\n\t *\n\t *     function draw() {\n\t *       background(204);\n\t *       var x1 = map(mouseX, 0, width, 25, 75);\n\t *       ellipse(x1, 25, 25, 25);\n\t *       var x2 = map(mouseX, 0, width, 0, 100);\n\t *       ellipse(x2, 75, 25, 25);\n\t *     }\n\t *   </code></div>\n\t *\n\t * @alt\n\t * 10 by 10 white ellipse with in mid left canvas\n\t * 2 25 by 25 white ellipses move with mouse x. Bottom has more range from X\n\t *\n\t */\n\tp5.prototype.map = function(n, start1, stop1, start2, stop2) {\n\t  return ((n-start1)/(stop1-start1))*(stop2-start2)+start2;\n\t};\n\t\n\t/**\n\t * Determines the largest value in a sequence of numbers, and then returns\n\t * that value. max() accepts any number of Number parameters, or an Array\n\t * of any length.\n\t *\n\t * @method max\n\t * @param  {Number|Array} n0 Numbers to compare\n\t * @return {Number}          maximum Number\n\t * @example\n\t * <div><code>\n\t * function setup() {\n\t *   // Change the elements in the array and run the sketch\n\t *   // to show how max() works!\n\t *   numArray = new Array(2,1,5,4,8,9);\n\t *   fill(0);\n\t *   noStroke();\n\t *   text(\"Array Elements\", 0, 10);\n\t *   // Draw all numbers in the array\n\t *   var spacing = 15;\n\t *   var elemsY = 25;\n\t *   for(var i = 0; i < numArray.length; i++) {\n\t *     text(numArray[i], i * spacing, elemsY);\n\t *   }\n\t *   maxX = 33;\n\t *   maxY = 80;\n\t *   // Draw the Maximum value in the array.\n\t *   textSize(32);\n\t *   text(max(numArray), maxX, maxY);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * Small text at top reads: Array Elements 2 1 5 4 8 9. Large text at center: 9\n\t *\n\t */\n\tp5.prototype.max = function() {\n\t  if (arguments[0] instanceof Array) {\n\t    return Math.max.apply(null,arguments[0]);\n\t  } else {\n\t    return Math.max.apply(null,arguments);\n\t  }\n\t};\n\t\n\t/**\n\t * Determines the smallest value in a sequence of numbers, and then returns\n\t * that value. min() accepts any number of Number parameters, or an Array\n\t * of any length.\n\t *\n\t * @method min\n\t * @param  {Number|Array} n0 Numbers to compare\n\t * @return {Number}          minimum Number\n\t * @example\n\t * <div><code>\n\t * function setup() {\n\t *   // Change the elements in the array and run the sketch\n\t *   // to show how min() works!\n\t *   numArray = new Array(2,1,5,4,8,9);\n\t *   fill(0);\n\t *   noStroke();\n\t *   text(\"Array Elements\", 0, 10);\n\t *   // Draw all numbers in the array\n\t *   var spacing = 15;\n\t *   var elemsY = 25;\n\t *   for(var i = 0; i < numArray.length; i++) {\n\t *     text(numArray[i], i * spacing, elemsY);\n\t *   }\n\t *   maxX = 33;\n\t *   maxY = 80;\n\t *   // Draw the Minimum value in the array.\n\t *   textSize(32);\n\t *   text(min(numArray), maxX, maxY);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * Small text at top reads: Array Elements 2 1 5 4 8 9. Large text at center: 1\n\t *\n\t */\n\tp5.prototype.min = function() {\n\t  if (arguments[0] instanceof Array) {\n\t    return Math.min.apply(null,arguments[0]);\n\t  } else {\n\t    return Math.min.apply(null,arguments);\n\t  }\n\t};\n\t\n\t/**\n\t * Normalizes a number from another range into a value between 0 and 1.\n\t * Identical to map(value, low, high, 0, 1).\n\t * Numbers outside of the range are not clamped to 0 and 1, because\n\t * out-of-range values are often intentional and useful. (See the second\n\t * example above.)\n\t *\n\t * @method norm\n\t * @param  {Number} value incoming value to be normalized\n\t * @param  {Number} start lower bound of the value's current range\n\t * @param  {Number} stop  upper bound of the value's current range\n\t * @return {Number}       normalized number\n\t * @example\n\t * <div><code>\n\t * function draw() {\n\t *   background(200);\n\t *   currentNum = mouseX;\n\t *   lowerBound = 0;\n\t *   upperBound = width; //100;\n\t *   normalized = norm(currentNum, lowerBound, upperBound);\n\t *   lineY = 70\n\t *   line(0, lineY, width, lineY);\n\t *   //Draw an ellipse mapped to the non-normalized value.\n\t *   noStroke();\n\t *   fill(50)\n\t *   var s = 7; // ellipse size\n\t *   ellipse(currentNum, lineY, s, s);\n\t *\n\t *   // Draw the guide\n\t *   guideY = lineY + 15;\n\t *   text(\"0\", 0, guideY);\n\t *   textAlign(RIGHT);\n\t *   text(\"100\", width, guideY);\n\t *\n\t *   // Draw the normalized value\n\t *   textAlign(LEFT);\n\t *   fill(0);\n\t *   textSize(32);\n\t *   normalY = 40;\n\t *   normalX = 20;\n\t *   text(normalized, normalX, normalY);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * ellipse moves with mouse. 0 shown left & 100 right and updating values center\n\t *\n\t */\n\tp5.prototype.norm = function(n, start, stop) {\n\t  return this.map(n, start, stop, 0, 1);\n\t};\n\t\n\t/**\n\t * Facilitates exponential expressions. The pow() function is an efficient\n\t * way of multiplying numbers by themselves (or their reciprocals) in large\n\t * quantities. For example, pow(3, 5) is equivalent to the expression\n\t * 3*3*3*3*3 and pow(3, -5) is equivalent to 1 / 3*3*3*3*3. Maps to\n\t * Math.pow().\n\t *\n\t * @method pow\n\t * @param  {Number} n base of the exponential expression\n\t * @param  {Number} e power by which to raise the base\n\t * @return {Number}   n^e\n\t * @example\n\t * <div><code>\n\t * function setup() {\n\t *   //Exponentially increase the size of an ellipse.\n\t *   eSize = 3; // Original Size\n\t *   eLoc = 10; // Original Location\n\t *\n\t *   ellipse(eLoc, eLoc, eSize, eSize);\n\t *\n\t *   ellipse(eLoc*2, eLoc*2, pow(eSize, 2), pow(eSize, 2));\n\t *\n\t *   ellipse(eLoc*4, eLoc*4, pow(eSize, 3), pow(eSize, 3));\n\t *\n\t *   ellipse(eLoc*8, eLoc*8, pow(eSize, 4), pow(eSize, 4));\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * small to large ellipses radiating from top left of canvas\n\t *\n\t */\n\tp5.prototype.pow = Math.pow;\n\t\n\t/**\n\t * Calculates the integer closest to the n parameter. For example,\n\t * round(133.8) returns the value 134. Maps to Math.round().\n\t *\n\t * @method round\n\t * @param  {Number} n number to round\n\t * @return {Number}   rounded number\n\t * @example\n\t * <div><code>\n\t * function draw() {\n\t *   background(200);\n\t *   //map, mouseX between 0 and 5.\n\t *   var ax = map(mouseX, 0, 100, 0, 5);\n\t *   var ay = 66;\n\t *\n\t *   // Round the mapped number.\n\t *   var bx = round(map(mouseX, 0, 100, 0,5));\n\t *   var by = 33;\n\t *\n\t *   // Multiply the mapped numbers by 20 to more easily\n\t *   // see the changes.\n\t *   stroke(0);\n\t *   fill(0);\n\t *   line(0, ay, ax * 20, ay);\n\t *   line(0, by, bx * 20, by);\n\t *\n\t *   // Reformat the float returned by map and draw it.\n\t *   noStroke();\n\t *   text(nfc(ax, 2,2), ax, ay - 5);\n\t *   text(nfc(bx,1,1), bx, by - 5);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * horizontal center line squared values displayed on top and regular on bottom.\n\t *\n\t */\n\tp5.prototype.round = Math.round;\n\t\n\t/**\n\t * Squares a number (multiplies a number by itself). The result is always a\n\t * positive number, as multiplying two negative numbers always yields a\n\t * positive result. For example, -1 * -1 = 1.\n\t *\n\t * @method sq\n\t * @param  {Number} n number to square\n\t * @return {Number}   squared number\n\t * @example\n\t * <div><code>\n\t * function draw() {\n\t *   background(200);\n\t *   eSize = 7;\n\t *   x1 = map(mouseX, 0, width, 0, 10);\n\t *   y1 = 80;\n\t *   x2 = sq(x1);\n\t *   y2 = 20;\n\t *\n\t *   // Draw the non-squared.\n\t *   line(0, y1, width, y1);\n\t *   ellipse(x1, y1, eSize, eSize);\n\t *\n\t *   // Draw the squared.\n\t *   line(0, y2, width, y2);\n\t *   ellipse(x2, y2, eSize, eSize);\n\t *\n\t *   // Draw dividing line.\n\t *   stroke(100)\n\t *   line(0, height/2, width, height/2);\n\t *\n\t *   // Draw text.\n\t *   var spacing = 15;\n\t *   noStroke();\n\t *   fill(0);\n\t *   text(\"x = \" + x1, 0, y1 + spacing);\n\t *   text(\"sq(x) = \" + x2, 0, y2 + spacing);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * horizontal center line squared values displayed on top and regular on bottom.\n\t *\n\t */\n\tp5.prototype.sq = function(n) { return n*n; };\n\t\n\t/**\n\t * Calculates the square root of a number. The square root of a number is\n\t * always positive, even though there may be a valid negative root. The\n\t * square root s of number a is such that s*s = a. It is the opposite of\n\t * squaring. Maps to Math.sqrt().\n\t *\n\t * @method sqrt\n\t * @param  {Number} n non-negative number to square root\n\t * @return {Number}   square root of number\n\t * @example\n\t * <div><code>\n\t * function draw() {\n\t *   background(200);\n\t *   eSize = 7;\n\t *   x1 = mouseX;\n\t *   y1 = 80;\n\t *   x2 = sqrt(x1);\n\t *   y2 = 20;\n\t *\n\t *   // Draw the non-squared.\n\t *   line(0, y1, width, y1);\n\t *   ellipse(x1, y1, eSize, eSize);\n\t *\n\t *   // Draw the squared.\n\t *   line(0, y2, width, y2);\n\t *   ellipse(x2, y2, eSize, eSize);\n\t *\n\t *   // Draw dividing line.\n\t *   stroke(100)\n\t *   line(0, height/2, width, height/2);\n\t *\n\t *   // Draw text.\n\t *   noStroke();\n\t *   fill(0);\n\t *   var spacing = 15;\n\t *   text(\"x = \" + x1, 0, y1 + spacing);\n\t *   text(\"sqrt(x) = \" + x2, 0, y2 + spacing);\n\t * }\n\t * </code></div>\n\t *\n\t * @alt\n\t * horizontal center line squareroot values displayed on top and regular on bottom.\n\t *\n\t */\n\tp5.prototype.sqrt = Math.sqrt;\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],64:[function(_dereq_,module,exports){\n\t/**\n\t * @module Math\n\t * @submodule Math\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t\n\t/**\n\t * Creates a new p5.Vector (the datatype for storing vectors). This provides a\n\t * two or three dimensional vector, specifically a Euclidean (also known as\n\t * geometric) vector. A vector is an entity that has both magnitude and\n\t * direction.\n\t *\n\t * @method createVector\n\t * @param {Number} [x] x component of the vector\n\t * @param {Number} [y] y component of the vector\n\t * @param {Number} [z] z component of the vector\n\t */\n\tp5.prototype.createVector = function (x, y, z) {\n\t  if (this instanceof p5) {\n\t    return new p5.Vector(this, arguments);\n\t  } else {\n\t    return new p5.Vector(x, y, z);\n\t  }\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],65:[function(_dereq_,module,exports){\n\t//////////////////////////////////////////////////////////////\n\t\n\t// http://mrl.nyu.edu/~perlin/noise/\n\t// Adapting from PApplet.java\n\t// which was adapted from toxi\n\t// which was adapted from the german demo group farbrausch\n\t// as used in their demo \"art\": http://www.farb-rausch.de/fr010src.zip\n\t\n\t// someday we might consider using \"improved noise\"\n\t// http://mrl.nyu.edu/~perlin/paper445.pdf\n\t// See: https://github.com/shiffman/The-Nature-of-Code-Examples-p5.js/\n\t//      blob/master/introduction/Noise1D/noise.js\n\t\n\t/**\n\t * @module Math\n\t * @submodule Noise\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\tvar PERLIN_YWRAPB = 4;\n\tvar PERLIN_YWRAP = 1<<PERLIN_YWRAPB;\n\tvar PERLIN_ZWRAPB = 8;\n\tvar PERLIN_ZWRAP = 1<<PERLIN_ZWRAPB;\n\tvar PERLIN_SIZE = 4095;\n\t\n\tvar perlin_octaves = 4; // default to medium smooth\n\tvar perlin_amp_falloff = 0.5; // 50% reduction/octave\n\t\n\tvar scaled_cosine = function(i) {\n\t  return 0.5*(1.0-Math.cos(i*Math.PI));\n\t};\n\t\n\tvar perlin; // will be initialized lazily by noise() or noiseSeed()\n\t\n\t\n\t/**\n\t * Returns the Perlin noise value at specified coordinates. Perlin noise is\n\t * a random sequence generator producing a more natural ordered, harmonic\n\t * succession of numbers compared to the standard <b>random()</b> function.\n\t * It was invented by Ken Perlin in the 1980s and been used since in\n\t * graphical applications to produce procedural textures, natural motion,\n\t * shapes, terrains etc.<br /><br /> The main difference to the\n\t * <b>random()</b> function is that Perlin noise is defined in an infinite\n\t * n-dimensional space where each pair of coordinates corresponds to a\n\t * fixed semi-random value (fixed only for the lifespan of the program; see\n\t * the noiseSeed() function). p5.js can compute 1D, 2D and 3D noise,\n\t * depending on the number of coordinates given. The resulting value will\n\t * always be between 0.0 and 1.0. The noise value can be animated by moving\n\t * through the noise space as demonstrated in the example above. The 2nd\n\t * and 3rd dimension can also be interpreted as time.<br /><br />The actual\n\t * noise is structured similar to an audio signal, in respect to the\n\t * function's use of frequencies. Similar to the concept of harmonics in\n\t * physics, perlin noise is computed over several octaves which are added\n\t * together for the final result. <br /><br />Another way to adjust the\n\t * character of the resulting sequence is the scale of the input\n\t * coordinates. As the function works within an infinite space the value of\n\t * the coordinates doesn't matter as such, only the distance between\n\t * successive coordinates does (eg. when using <b>noise()</b> within a\n\t * loop). As a general rule the smaller the difference between coordinates,\n\t * the smoother the resulting noise sequence will be. Steps of 0.005-0.03\n\t * work best for most applications, but this will differ depending on use.\n\t *\n\t *\n\t * @method noise\n\t * @param  {Number} x   x-coordinate in noise space\n\t * @param  {Number} y   y-coordinate in noise space\n\t * @param  {Number} z   z-coordinate in noise space\n\t * @return {Number}     Perlin noise value (between 0 and 1) at specified\n\t *                      coordinates\n\t * @example\n\t * <div>\n\t * <code>var xoff = 0.0;\n\t *\n\t * function draw() {\n\t *   background(204);\n\t *   xoff = xoff + .01;\n\t *   var n = noise(xoff) * width;\n\t *   line(n, 0, n, height);\n\t * }\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>var noiseScale=0.02;\n\t *\n\t * function draw() {\n\t *   background(0);\n\t *   for (var x=0; x < width; x++) {\n\t *     var noiseVal = noise((mouseX+x)*noiseScale, mouseY*noiseScale);\n\t *     stroke(noiseVal*255);\n\t *     line(x, mouseY+noiseVal*80, x, height);\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * vertical line moves left to right with updating noise values.\n\t * horizontal wave pattern effected by mouse x-position & updating noise values.\n\t *\n\t */\n\t\n\tp5.prototype.noise = function(x,y,z) {\n\t  y = y || 0;\n\t  z = z || 0;\n\t\n\t  if (perlin == null) {\n\t    perlin = new Array(PERLIN_SIZE + 1);\n\t    for (var i = 0; i < PERLIN_SIZE + 1; i++) {\n\t      perlin[i] = Math.random();\n\t    }\n\t  }\n\t\n\t  if (x<0) { x=-x; }\n\t  if (y<0) { y=-y; }\n\t  if (z<0) { z=-z; }\n\t\n\t  var xi=Math.floor(x), yi=Math.floor(y), zi=Math.floor(z);\n\t  var xf = x - xi;\n\t  var yf = y - yi;\n\t  var zf = z - zi;\n\t  var rxf, ryf;\n\t\n\t  var r=0;\n\t  var ampl=0.5;\n\t\n\t  var n1,n2,n3;\n\t\n\t  for (var o=0; o<perlin_octaves; o++) {\n\t    var of=xi+(yi<<PERLIN_YWRAPB)+(zi<<PERLIN_ZWRAPB);\n\t\n\t    rxf = scaled_cosine(xf);\n\t    ryf = scaled_cosine(yf);\n\t\n\t    n1  = perlin[of&PERLIN_SIZE];\n\t    n1 += rxf*(perlin[(of+1)&PERLIN_SIZE]-n1);\n\t    n2  = perlin[(of+PERLIN_YWRAP)&PERLIN_SIZE];\n\t    n2 += rxf*(perlin[(of+PERLIN_YWRAP+1)&PERLIN_SIZE]-n2);\n\t    n1 += ryf*(n2-n1);\n\t\n\t    of += PERLIN_ZWRAP;\n\t    n2  = perlin[of&PERLIN_SIZE];\n\t    n2 += rxf*(perlin[(of+1)&PERLIN_SIZE]-n2);\n\t    n3  = perlin[(of+PERLIN_YWRAP)&PERLIN_SIZE];\n\t    n3 += rxf*(perlin[(of+PERLIN_YWRAP+1)&PERLIN_SIZE]-n3);\n\t    n2 += ryf*(n3-n2);\n\t\n\t    n1 += scaled_cosine(zf)*(n2-n1);\n\t\n\t    r += n1*ampl;\n\t    ampl *= perlin_amp_falloff;\n\t    xi<<=1;\n\t    xf*=2;\n\t    yi<<=1;\n\t    yf*=2;\n\t    zi<<=1;\n\t    zf*=2;\n\t\n\t    if (xf>=1.0) { xi++; xf--; }\n\t    if (yf>=1.0) { yi++; yf--; }\n\t    if (zf>=1.0) { zi++; zf--; }\n\t  }\n\t  return r;\n\t};\n\t\n\t\n\t/**\n\t *\n\t * Adjusts the character and level of detail produced by the Perlin noise\n\t * function. Similar to harmonics in physics, noise is computed over\n\t * several octaves. Lower octaves contribute more to the output signal and\n\t * as such define the overall intensity of the noise, whereas higher octaves\n\t * create finer grained details in the noise sequence.\n\t * <br><br>\n\t * By default, noise is computed over 4 octaves with each octave contributing\n\t * exactly half than its predecessor, starting at 50% strength for the 1st\n\t * octave. This falloff amount can be changed by adding an additional function\n\t * parameter. Eg. a falloff factor of 0.75 means each octave will now have\n\t * 75% impact (25% less) of the previous lower octave. Any value between\n\t * 0.0 and 1.0 is valid, however note that values greater than 0.5 might\n\t * result in greater than 1.0 values returned by <b>noise()</b>.\n\t * <br><br>\n\t * By changing these parameters, the signal created by the <b>noise()</b>\n\t * function can be adapted to fit very specific needs and characteristics.\n\t *\n\t * @method noiseDetail\n\t * @param {Number} lod number of octaves to be used by the noise\n\t * @param {Number} falloff falloff factor for each octave\n\t * @example\n\t * <div>\n\t * <code>\n\t *\n\t * var noiseVal;\n\t * var noiseScale=0.02;\n\t *\n\t * function setup() {\n\t *   createCanvas(100,100);\n\t * }\n\t *\n\t * function draw() {\n\t *   background(0);\n\t *   for (var y = 0; y < height; y++) {\n\t *     for (var x = 0; x < width/2; x++) {\n\t *       noiseDetail(2,0.2);\n\t *       noiseVal = noise((mouseX+x) * noiseScale,\n\t *                        (mouseY+y) * noiseScale);\n\t *       stroke(noiseVal*255);\n\t *       point(x,y);\n\t *       noiseDetail(8,0.65);\n\t *       noiseVal = noise((mouseX + x + width/2) * noiseScale,\n\t *                        (mouseY + y) * noiseScale);\n\t *       stroke(noiseVal*255);\n\t *       point(x + width/2, y);\n\t *     }\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 2 vertical grey smokey patterns affected my mouse x-position and noise.\n\t *\n\t */\n\tp5.prototype.noiseDetail = function(lod, falloff) {\n\t  if (lod>0)     { perlin_octaves=lod; }\n\t  if (falloff>0) { perlin_amp_falloff=falloff; }\n\t};\n\t\n\t/**\n\t * Sets the seed value for <b>noise()</b>. By default, <b>noise()</b>\n\t * produces different results each time the program is run. Set the\n\t * <b>value</b> parameter to a constant to return the same pseudo-random\n\t * numbers each time the software is run.\n\t *\n\t * @method noiseSeed\n\t * @param {Number} seed   the seed value\n\t * @example\n\t * <div>\n\t * <code>var xoff = 0.0;\n\t *\n\t * function setup() {\n\t *   noiseSeed(99);\n\t *   stroke(0, 10);\n\t * }\n\t *\n\t * function draw() {\n\t *   xoff = xoff + .01;\n\t *   var n = noise(xoff) * width;\n\t *   line(n, 0, n, height);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * vertical grey lines drawing in pattern affected by noise.\n\t *\n\t */\n\tp5.prototype.noiseSeed = function(seed) {\n\t  // Linear Congruential Generator\n\t  // Variant of a Lehman Generator\n\t  var lcg = (function() {\n\t    // Set to values from http://en.wikipedia.org/wiki/Numerical_Recipes\n\t    // m is basically chosen to be large (as it is the max period)\n\t    // and for its relationships to a and c\n\t    var m = 4294967296,\n\t    // a - 1 should be divisible by m's prime factors\n\t    a = 1664525,\n\t     // c and m should be co-prime\n\t    c = 1013904223,\n\t    seed, z;\n\t    return {\n\t      setSeed : function(val) {\n\t        // pick a random seed if val is undefined or null\n\t        // the >>> 0 casts the seed to an unsigned 32-bit integer\n\t        z = seed = (val == null ? Math.random() * m : val) >>> 0;\n\t      },\n\t      getSeed : function() {\n\t        return seed;\n\t      },\n\t      rand : function() {\n\t        // define the recurrence relationship\n\t        z = (a * z + c) % m;\n\t        // return a float in [0, 1)\n\t        // if z = m then z / m = 0 therefore (z % m) / m < 1 always\n\t        return z / m;\n\t      }\n\t    };\n\t  }());\n\t\n\t  lcg.setSeed(seed);\n\t  perlin = new Array(PERLIN_SIZE + 1);\n\t  for (var i = 0; i < PERLIN_SIZE + 1; i++) {\n\t    perlin[i] = lcg.rand();\n\t  }\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],66:[function(_dereq_,module,exports){\n\t/**\n\t * @module Math\n\t * @submodule Math\n\t * @requires constants\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar polarGeometry = _dereq_('./polargeometry');\n\tvar constants = _dereq_('../core/constants');\n\t\n\t/**\n\t * A class to describe a two or three dimensional vector, specifically\n\t * a Euclidean (also known as geometric) vector. A vector is an entity\n\t * that has both magnitude and direction. The datatype, however, stores\n\t * the components of the vector (x, y for 2D, and x, y, z for 3D). The magnitude\n\t * and direction can be accessed via the methods mag() and heading().\n\t * <br><br>\n\t * In many of the p5.js examples, you will see p5.Vector used to describe a\n\t * position, velocity, or acceleration. For example, if you consider a rectangle\n\t * moving across the screen, at any given instant it has a position (a vector\n\t * that points from the origin to its location), a velocity (the rate at which\n\t * the object's position changes per time unit, expressed as a vector), and\n\t * acceleration (the rate at which the object's velocity changes per time\n\t * unit, expressed as a vector).\n\t * <br><br>\n\t * Since vectors represent groupings of values, we cannot simply use\n\t * traditional addition/multiplication/etc. Instead, we'll need to do some\n\t * \"vector\" math, which is made easy by the methods inside the p5.Vector class.\n\t *\n\t * @class p5.Vector\n\t * @constructor\n\t * @param {Number} [x] x component of the vector\n\t * @param {Number} [y] y component of the vector\n\t * @param {Number} [z] z component of the vector\n\t * @example\n\t * <div>\n\t * <code>\n\t * var v1 = createVector(40, 50);\n\t * var v2 = createVector(40, 50);\n\t *\n\t * ellipse(v1.x, v1.y, 50, 50);\n\t * ellipse(v2.x, v2.y, 50, 50);\n\t * v1.add(v2);\n\t * ellipse(v1.x, v1.y, 50, 50);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 2 white ellipses. One center-left the other bottom right and off canvas\n\t *\n\t */\n\tp5.Vector = function() {\n\t  var x,y,z;\n\t  // This is how it comes in with createVector()\n\t  if(arguments[0] instanceof p5) {\n\t    // save reference to p5 if passed in\n\t    this.p5 = arguments[0];\n\t    x  = arguments[1][0] || 0;\n\t    y  = arguments[1][1] || 0;\n\t    z  = arguments[1][2] || 0;\n\t  // This is what we'll get with new p5.Vector()\n\t  } else {\n\t    x = arguments[0] || 0;\n\t    y = arguments[1] || 0;\n\t    z = arguments[2] || 0;\n\t  }\n\t  /**\n\t   * The x component of the vector\n\t   * @property x\n\t   * @type {Number}\n\t   */\n\t  this.x = x;\n\t  /**\n\t   * The y component of the vector\n\t   * @property y\n\t   * @type {Number}\n\t   */\n\t  this.y = y;\n\t  /**\n\t   * The z component of the vector\n\t   * @property z\n\t   * @type {Number}\n\t   */\n\t  this.z = z;\n\t};\n\t\n\t/**\n\t * Returns a string representation of a vector v by calling String(v)\n\t * or v.toString(). This method is useful for logging vectors in the\n\t * console.\n\t * @method  toString\n\t * @example\n\t * <div class = \"norender\"><code>\n\t * function setup() {\n\t *   var v = createVector(20,30);\n\t *   print(String(v)); // prints \"p5.Vector Object : [20, 30, 0]\"\n\t * }\n\t * </div></code>\n\t *\n\t */\n\tp5.Vector.prototype.toString = function p5VectorToString() {\n\t  return 'p5.Vector Object : ['+ this.x +', '+ this.y +', '+ this.z + ']';\n\t};\n\t\n\t/**\n\t * Sets the x, y, and z component of the vector using two or three separate\n\t * variables, the data from a p5.Vector, or the values from a float array.\n\t * @method set\n\t *\n\t * @param {Number|p5.Vector|Array} [x] the x component of the vector or a\n\t *                                     p5.Vector or an Array\n\t * @param {Number}                 [y] the y component of the vector\n\t * @param {Number}                 [z] the z component of the vector\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * function setup() {\n\t *    var v = createVector(1, 2, 3);\n\t *    v.set(4,5,6); // Sets vector to [4, 5, 6]\n\t *\n\t *    var v1 = createVector(0, 0, 0);\n\t *    var arr = [1, 2, 3];\n\t *    v1.set(arr); // Sets vector to [1, 2, 3]\n\t * }\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.set = function (x, y, z) {\n\t  if (x instanceof p5.Vector) {\n\t    this.x = x.x || 0;\n\t    this.y = x.y || 0;\n\t    this.z = x.z || 0;\n\t    return this;\n\t  }\n\t  if (x instanceof Array) {\n\t    this.x = x[0] || 0;\n\t    this.y = x[1] || 0;\n\t    this.z = x[2] || 0;\n\t    return this;\n\t  }\n\t  this.x = x || 0;\n\t  this.y = y || 0;\n\t  this.z = z || 0;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Gets a copy of the vector, returns a p5.Vector object.\n\t *\n\t * @method copy\n\t * @return {p5.Vector} the copy of the p5.Vector object\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v1 = createVector(1, 2, 3);\n\t * var v2 = v1.copy();\n\t * print(v1.x == v2.x && v1.y == v2.y && v1.z == v2.z);\n\t * // Prints \"true\"\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.copy = function () {\n\t  if (this.p5) {\n\t    return new p5.Vector(this.p5,[this.x, this.y, this.z]);\n\t  } else {\n\t    return new p5.Vector(this.x,this.y,this.z);\n\t  }\n\t};\n\t\n\t/**\n\t * Adds x, y, and z components to a vector, adds one vector to another, or\n\t * adds two independent vectors together. The version of the method that adds\n\t * two vectors together is a static method and returns a p5.Vector, the others\n\t * acts directly on the vector. See the examples for more context.\n\t *\n\t * @method add\n\t * @chainable\n\t * @param  {Number|p5.Vector|Array} x   the x component of the vector to be\n\t *                                      added or a p5.Vector or an Array\n\t * @param  {Number}                 [y] the y component of the vector to be\n\t *                                      added\n\t * @param  {Number}                 [z] the z component of the vector to be\n\t *                                      added\n\t * @return {p5.Vector}                  the p5.Vector object.\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v = createVector(1, 2, 3);\n\t * v.add(4,5,6);\n\t * // v's compnents are set to [5, 7, 9]\n\t * </code>\n\t * </div>\n\t * <div class=\"norender\">\n\t * <code>\n\t * // Static method\n\t * var v1 = createVector(1, 2, 3);\n\t * var v2 = createVector(2, 3, 4);\n\t *\n\t * var v3 = p5.Vector.add(v1, v2);\n\t * // v3 has components [3, 5, 7]\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.add = function (x, y, z) {\n\t  if (x instanceof p5.Vector) {\n\t    this.x += x.x || 0;\n\t    this.y += x.y || 0;\n\t    this.z += x.z || 0;\n\t    return this;\n\t  }\n\t  if (x instanceof Array) {\n\t    this.x += x[0] || 0;\n\t    this.y += x[1] || 0;\n\t    this.z += x[2] || 0;\n\t    return this;\n\t  }\n\t  this.x += x || 0;\n\t  this.y += y || 0;\n\t  this.z += z || 0;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Subtracts x, y, and z components from a vector, subtracts one vector from\n\t * another, or subtracts two independent vectors. The version of the method\n\t * that subtracts two vectors is a static method and returns a p5.Vector, the\n\t * other acts directly on the vector. See the examples for more context.\n\t *\n\t * @method sub\n\t * @chainable\n\t * @param  {Number|p5.Vector|Array} x   the x component of the vector or a\n\t *                                      p5.Vector or an Array\n\t * @param  {Number}                 [y] the y component of the vector\n\t * @param  {Number}                 [z] the z component of the vector\n\t * @return {p5.Vector}                  p5.Vector object.\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v = createVector(4, 5, 6);\n\t * v.sub(1, 1, 1);\n\t * // v's compnents are set to [3, 4, 5]\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * // Static method\n\t * var v1 = createVector(2, 3, 4);\n\t * var v2 = createVector(1, 2, 3);\n\t *\n\t * var v3 = p5.Vector.sub(v1, v2);\n\t * // v3 has compnents [1, 1, 1]\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.sub = function (x, y, z) {\n\t  if (x instanceof p5.Vector) {\n\t    this.x -= x.x || 0;\n\t    this.y -= x.y || 0;\n\t    this.z -= x.z || 0;\n\t    return this;\n\t  }\n\t  if (x instanceof Array) {\n\t    this.x -= x[0] || 0;\n\t    this.y -= x[1] || 0;\n\t    this.z -= x[2] || 0;\n\t    return this;\n\t  }\n\t  this.x -= x || 0;\n\t  this.y -= y || 0;\n\t  this.z -= z || 0;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Multiply the vector by a scalar. The static version of this method\n\t * creates a new p5.Vector while the non static version acts on the vector\n\t * directly. See the examples for more context.\n\t *\n\t * @method mult\n\t * @chainable\n\t * @param  {Number}    n the number to multiply with the vector\n\t * @return {p5.Vector} a reference to the p5.Vector object (allow chaining)\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v = createVector(1, 2, 3);\n\t * v.mult(2);\n\t * // v's compnents are set to [2, 4, 6]\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * // Static method\n\t * var v1 = createVector(1, 2, 3);\n\t * var v2 = p5.Vector.mult(v1, 2);\n\t * // v2 has compnents [2, 4, 6]\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.mult = function (n) {\n\t  this.x *= n || 0;\n\t  this.y *= n || 0;\n\t  this.z *= n || 0;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Divide the vector by a scalar. The static version of this method creates a\n\t * new p5.Vector while the non static version acts on the vector directly.\n\t * See the examples for more context.\n\t *\n\t * @method div\n\t * @chainable\n\t * @param  {number}    n the number to divide the vector by\n\t * @return {p5.Vector} a reference to the p5.Vector object (allow chaining)\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v = createVector(6, 4, 2);\n\t * v.div(2); //v's compnents are set to [3, 2, 1]\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * // Static method\n\t * var v1  = createVector(6, 4, 2);\n\t * var v2 = p5.Vector.div(v, 2);\n\t * // v2 has compnents [3, 2, 1]\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.div = function (n) {\n\t  this.x /= n;\n\t  this.y /= n;\n\t  this.z /= n;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Calculates the magnitude (length) of the vector and returns the result as\n\t * a float (this is simply the equation sqrt(x*x + y*y + z*z).)\n\t *\n\t * @method mag\n\t * @return {Number} magnitude of the vector\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v = createVector(20.0, 30.0, 40.0);\n\t * var m = v.mag();\n\t * print(m); // Prints \"53.85164807134504\"\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.mag = function () {\n\t  return Math.sqrt(this.magSq());\n\t};\n\t\n\t/**\n\t * Calculates the squared magnitude of the vector and returns the result\n\t * as a float (this is simply the equation <em>(x*x + y*y + z*z)</em>.)\n\t * Faster if the real length is not required in the\n\t * case of comparing vectors, etc.\n\t *\n\t * @method magSq\n\t * @return {number} squared magnitude of the vector\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * // Static method\n\t * var v1 = createVector(6, 4, 2);\n\t * print(v1.magSq()); // Prints \"56\"\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.magSq = function () {\n\t  var x = this.x, y = this.y, z = this.z;\n\t  return (x * x + y * y + z * z);\n\t};\n\t\n\t/**\n\t * Calculates the dot product of two vectors. The version of the method\n\t * that computes the dot product of two independent vectors is a static\n\t * method. See the examples for more context.\n\t *\n\t *\n\t * @method dot\n\t * @param  {Number|p5.Vector} x   x component of the vector or a p5.Vector\n\t * @param  {Number}           [y] y component of the vector\n\t * @param  {Number}           [z] z component of the vector\n\t * @return {Number}                 the dot product\n\t *\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v1 = createVector(1, 2, 3);\n\t * var v2 = createVector(2, 3, 4);\n\t *\n\t * print(v1.dot(v2)); // Prints \"20\"\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * //Static method\n\t * var v1 = createVector(1, 2, 3);\n\t * var v2 = createVector(3, 2, 1);\n\t * print (p5.Vector.dot(v1, v2)); // Prints \"10\"\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.dot = function (x, y, z) {\n\t  if (x instanceof p5.Vector) {\n\t    return this.dot(x.x, x.y, x.z);\n\t  }\n\t  return this.x * (x || 0) +\n\t         this.y * (y || 0) +\n\t         this.z * (z || 0);\n\t};\n\t\n\t/**\n\t * Calculates and returns a vector composed of the cross product between\n\t * two vectors. Both the static and non static methods return a new p5.Vector.\n\t * See the examples for more context.\n\t *\n\t * @method cross\n\t * @param  {p5.Vector} v p5.Vector to be crossed\n\t * @return {p5.Vector}   p5.Vector composed of cross product\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v1 = createVector(1, 2, 3);\n\t * var v2 = createVector(1, 2, 3);\n\t *\n\t * v1.cross(v2); // v's components are [0, 0, 0]\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * // Static method\n\t * var v1 = createVector(1, 0, 0);\n\t * var v2 = createVector(0, 1, 0);\n\t *\n\t * var crossProduct = p5.Vector.cross(v1, v2);\n\t * // crossProduct has components [0, 0, 1]\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.cross = function (v) {\n\t  var x = this.y * v.z - this.z * v.y;\n\t  var y = this.z * v.x - this.x * v.z;\n\t  var z = this.x * v.y - this.y * v.x;\n\t  if (this.p5) {\n\t    return new p5.Vector(this.p5,[x,y,z]);\n\t  } else {\n\t    return new p5.Vector(x,y,z);\n\t  }\n\t};\n\t\n\t/**\n\t * Calculates the Euclidean distance between two points (considering a\n\t * point as a vector object).\n\t *\n\t * @method dist\n\t * @param  {p5.Vector} v the x, y, and z coordinates of a p5.Vector\n\t * @return {Number}      the distance\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v1 = createVector(1, 0, 0);\n\t * var v2 = createVector(0, 1, 0);\n\t *\n\t * var distance = v1.dist(v2); // distance is 1.4142...\n\t * </code>\n\t * </div>\n\t * <div class=\"norender\">\n\t * <code>\n\t * // Static method\n\t * var v1 = createVector(1, 0, 0);\n\t * var v2 = createVector(0, 1, 0);\n\t *\n\t * var distance = p5.Vector.dist(v1,v2);\n\t * // distance is 1.4142...\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.dist = function (v) {\n\t  var d = v.copy().sub(this);\n\t  return d.mag();\n\t};\n\t\n\t/**\n\t * Normalize the vector to length 1 (make it a unit vector).\n\t *\n\t * @method normalize\n\t * @return {p5.Vector} normalized p5.Vector\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v = createVector(10, 20, 2);\n\t * // v has compnents [10.0, 20.0, 2.0]\n\t * v.normalize();\n\t * // v's compnents are set to\n\t * // [0.4454354, 0.8908708, 0.089087084]\n\t * </code>\n\t * </div>\n\t *\n\t */\n\tp5.Vector.prototype.normalize = function () {\n\t  return this.mag() === 0 ? this : this.div(this.mag());\n\t};\n\t\n\t/**\n\t * Limit the magnitude of this vector to the value used for the <b>max</b>\n\t * parameter.\n\t *\n\t * @method limit\n\t * @param  {Number}    max the maximum magnitude for the vector\n\t * @return {p5.Vector}     the modified p5.Vector\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v = createVector(10, 20, 2);\n\t * // v has compnents [10.0, 20.0, 2.0]\n\t * v.limit(5);\n\t * // v's compnents are set to\n\t * // [2.2271771, 4.4543543, 0.4454354]\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.limit = function (max) {\n\t  var mSq = this.magSq();\n\t  if(mSq > max*max) {\n\t    this.div(Math.sqrt(mSq)); //normalize it\n\t    this.mult(max);\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set the magnitude of this vector to the value used for the <b>len</b>\n\t * parameter.\n\t *\n\t * @method setMag\n\t * @param  {number}    len the new length for this vector\n\t * @return {p5.Vector}     the modified p5.Vector\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v1 = createVector(10, 20, 2);\n\t * // v has compnents [10.0, 20.0, 2.0]\n\t * v1.setMag(10);\n\t * // v's compnents are set to [6.0, 8.0, 0.0]\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.setMag = function (n) {\n\t  return this.normalize().mult(n);\n\t};\n\t\n\t/**\n\t * Calculate the angle of rotation for this vector (only 2D vectors)\n\t *\n\t * @method heading\n\t * @return {Number} the angle of rotation\n\t * @example\n\t * <div class = \"norender\"><code>\n\t * function setup() {\n\t *   var v1 = createVector(30,50);\n\t *   print(v1.heading()); // 1.0303768265243125\n\t *\n\t *   var v1 = createVector(40,50);\n\t *   print(v1.heading()); // 0.8960553845713439\n\t *\n\t *   var v1 = createVector(30,70);\n\t *   print(v1.heading()); // 1.1659045405098132\n\t * }\n\t * </div></code>\n\t */\n\tp5.Vector.prototype.heading = function () {\n\t  var h = Math.atan2(this.y, this.x);\n\t  if (this.p5) {\n\t    if (this.p5._angleMode === constants.RADIANS) {\n\t      return h;\n\t    } else {\n\t      return polarGeometry.radiansToDegrees(h);\n\t    }\n\t  } else {\n\t    return h;\n\t  }\n\t};\n\t\n\t/**\n\t * Rotate the vector by an angle (only 2D vectors), magnitude remains the\n\t * same\n\t *\n\t * @method rotate\n\t * @param  {number}    angle the angle of rotation\n\t * @return {p5.Vector} the modified p5.Vector\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v = createVector(10.0, 20.0);\n\t * // v has compnents [10.0, 20.0, 0.0]\n\t * v.rotate(HALF_PI);\n\t * // v's compnents are set to [-20.0, 9.999999, 0.0]\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.rotate = function (a) {\n\t  if (this.p5) {\n\t    if (this.p5._angleMode === constants.DEGREES) {\n\t      a = polarGeometry.degreesToRadians(a);\n\t    }\n\t  }\n\t  var newHeading = this.heading() + a;\n\t  var mag = this.mag();\n\t  this.x = Math.cos(newHeading) * mag;\n\t  this.y = Math.sin(newHeading) * mag;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Linear interpolate the vector to another vector\n\t *\n\t * @method lerp\n\t * @param  {p5.Vector} x   the x component or the p5.Vector to lerp to\n\t * @param  {p5.Vector} [y] y the y component\n\t * @param  {p5.Vector} [z] z the z component\n\t * @param  {Number}    amt the amount of interpolation; some value between 0.0\n\t *                         (old vector) and 1.0 (new vector). 0.1 is very near\n\t *                         the new vector. 0.5 is halfway in between.\n\t * @return {p5.Vector}     the modified p5.Vector\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v = createVector(1, 1, 0);\n\t *\n\t * v.lerp(3, 3, 0, 0.5); // v now has components [2,2,0]\n\t * </code>\n\t * </div>\n\t *\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v1 = createVector(0, 0, 0);\n\t * var v2 = createVector(100, 100, 0);\n\t *\n\t * var v3 = p5.Vector.lerp(v1, v2, 0.5);\n\t * // v3 has components [50,50,0]\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.lerp = function (x, y, z, amt) {\n\t  if (x instanceof p5.Vector) {\n\t    return this.lerp(x.x, x.y, x.z, y);\n\t  }\n\t  this.x += (x - this.x) * amt || 0;\n\t  this.y += (y - this.y) * amt || 0;\n\t  this.z += (z - this.z) * amt || 0;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return a representation of this vector as a float array. This is only\n\t * for temporary use. If used in any other fashion, the contents should be\n\t * copied by using the <b>p5.Vector.copy()</b> method to copy into your own\n\t * array.\n\t *\n\t * @method array\n\t * @return {Array} an Array with the 3 values\n\t * @example\n\t * <div class = \"norender\"><code>\n\t * function setup() {\n\t *   var v = createVector(20,30);\n\t *   print(v.array()); // Prints : Array [20, 30, 0]\n\t * }\n\t * </div></code>\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v = createVector(10.0, 20.0, 30.0);\n\t * var f = v.array();\n\t * print(f[0]); // Prints \"10.0\"\n\t * print(f[1]); // Prints \"20.0\"\n\t * print(f[2]); // Prints \"30.0\"\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.array = function () {\n\t  return [this.x || 0, this.y || 0, this.z || 0];\n\t};\n\t\n\t/**\n\t * Equality check against a p5.Vector\n\t *\n\t * @method equals\n\t * @param {Number|p5.Vector|Array} [x] the x component of the vector or a\n\t *                                     p5.Vector or an Array\n\t * @param {Number}                 [y] the y component of the vector\n\t * @param {Number}                 [z] the z component of the vector\n\t * @return {Boolean} whether the vectors are equals\n\t * @example\n\t * <div class = \"norender\"><code>\n\t * v1 = createVector(5,10,20);\n\t * v2 = createVector(5,10,20);\n\t * v3 = createVector(13,10,19);\n\t *\n\t * print(v1.equals(v2.x,v2.y,v2.z)); // true\n\t * print(v1.equals(v3.x,v3.y,v3.z)); // false\n\t * </div></code>\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v1 = createVector(10.0, 20.0, 30.0);\n\t * var v2 = createVector(10.0, 20.0, 30.0);\n\t * var v3 = createVector(0.0, 0.0, 0.0);\n\t * print (v1.equals(v2)) // true\n\t * print (v1.equals(v3)) // false\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.prototype.equals = function (x, y, z) {\n\t  var a, b, c;\n\t  if (x instanceof p5.Vector) {\n\t    a = x.x || 0;\n\t    b = x.y || 0;\n\t    c = x.z || 0;\n\t  } else if (x instanceof Array) {\n\t    a = x[0] || 0;\n\t    b = x[1] || 0;\n\t    c = x[2] || 0;\n\t  } else {\n\t    a = x || 0;\n\t    b = y || 0;\n\t    c = z || 0;\n\t  }\n\t  return this.x === a && this.y === b && this.z === c;\n\t};\n\t\n\t\n\t// Static Methods\n\t\n\t\n\t/**\n\t * Make a new 2D unit vector from an angle\n\t *\n\t * @method fromAngle\n\t * @static\n\t * @param {Number}     angle the desired angle\n\t * @return {p5.Vector}       the new p5.Vector object\n\t * @example\n\t * <div>\n\t * <code>\n\t * function draw() {\n\t *   background (200);\n\t *\n\t *   // Create a variable, proportional to the mouseX,\n\t *   // varying from 0-360, to represent an angle in degrees.\n\t *   angleMode(DEGREES);\n\t *   var myDegrees = map(mouseX, 0,width, 0,360);\n\t *\n\t *   // Display that variable in an onscreen text.\n\t *   // (Note the nfc() function to truncate additional decimal places,\n\t *   // and the \"\\xB0\" character for the degree symbol.)\n\t *   var readout = \"angle = \" + nfc(myDegrees,1,1) + \"\\xB0\"\n\t *   noStroke();\n\t *   fill (0);\n\t *   text (readout, 5, 15);\n\t *\n\t *   // Create a p5.Vector using the fromAngle function,\n\t *   // and extract its x and y components.\n\t *   var v = p5.Vector.fromAngle(radians(myDegrees));\n\t *   var vx = v.x;\n\t *   var vy = v.y;\n\t *\n\t *   push();\n\t *   translate (width/2, height/2);\n\t *   noFill();\n\t *   stroke (150);\n\t *   line (0,0, 30,0);\n\t *   stroke (0);\n\t *   line (0,0, 30*vx, 30*vy);\n\t *   pop()\n\t * }\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.fromAngle = function(angle) {\n\t  if (this.p5) {\n\t    if (this.p5._angleMode === constants.DEGREES) {\n\t      angle = polarGeometry.degreesToRadians(angle);\n\t    }\n\t  }\n\t  if (this.p5) {\n\t    return new p5.Vector(this.p5,[Math.cos(angle),Math.sin(angle),0]);\n\t  } else {\n\t    return new p5.Vector(Math.cos(angle),Math.sin(angle),0);\n\t  }\n\t};\n\t\n\t/**\n\t * Make a new 2D unit vector from a random angle\n\t *\n\t * @method random2D\n\t * @static\n\t * @return {p5.Vector} the new p5.Vector object\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v = p5.Vector.random2D();\n\t * // May make v's attributes something like:\n\t * // [0.61554617, -0.51195765, 0.0] or\n\t * // [-0.4695841, -0.14366731, 0.0] or\n\t * // [0.6091097, -0.22805278, 0.0]\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.random2D = function () {\n\t  var angle;\n\t  // A lot of nonsense to determine if we know about a\n\t  // p5 sketch and whether we should make a random angle in degrees or radians\n\t  if (this.p5) {\n\t    if (this.p5._angleMode === constants.DEGREES) {\n\t      angle = this.p5.random(360);\n\t    } else {\n\t      angle = this.p5.random(constants.TWO_PI);\n\t    }\n\t  } else {\n\t    angle = Math.random()*Math.PI*2;\n\t  }\n\t  return this.fromAngle(angle);\n\t};\n\t\n\t/**\n\t * Make a new random 3D unit vector.\n\t *\n\t * @method random3D\n\t * @static\n\t * @return {p5.Vector} the new p5.Vector object\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v = p5.Vector.random3D();\n\t * // May make v's attributes something like:\n\t * // [0.61554617, -0.51195765, 0.599168] or\n\t * // [-0.4695841, -0.14366731, -0.8711202] or\n\t * // [0.6091097, -0.22805278, -0.7595902]\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.random3D = function () {\n\t  var angle,vz;\n\t  // If we know about p5\n\t  if (this.p5) {\n\t    angle = this.p5.random(0,constants.TWO_PI);\n\t    vz = this.p5.random(-1,1);\n\t  } else {\n\t    angle = Math.random()*Math.PI*2;\n\t    vz = Math.random()*2-1;\n\t  }\n\t  var vx = Math.sqrt(1-vz*vz)*Math.cos(angle);\n\t  var vy = Math.sqrt(1-vz*vz)*Math.sin(angle);\n\t  if (this.p5) {\n\t    return new p5.Vector(this.p5,[vx,vy,vz]);\n\t  } else {\n\t    return new p5.Vector(vx,vy,vz);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Adds two vectors together and returns a new one.\n\t *\n\t * @static\n\t * @param  {p5.Vector} v1 a p5.Vector to add\n\t * @param  {p5.Vector} v2 a p5.Vector to add\n\t * @param  {p5.Vector} target if undefined a new vector will be created\n\t * @return {p5.Vector} the resulting p5.Vector\n\t *\n\t */\n\t\n\tp5.Vector.add = function (v1, v2, target) {\n\t  if (!target) {\n\t    target = v1.copy();\n\t  } else {\n\t    target.set(v1);\n\t  }\n\t  target.add(v2);\n\t  return target;\n\t};\n\t\n\t/**\n\t * Subtracts one p5.Vector from another and returns a new one.  The second\n\t * vector (v2) is subtracted from the first (v1), resulting in v1-v2.\n\t *\n\t * @static\n\t * @param  {p5.Vector} v1 a p5.Vector to subtract from\n\t * @param  {p5.Vector} v2 a p5.Vector to subtract\n\t * @param  {p5.Vector} target if undefined a new vector will be created\n\t * @return {p5.Vector} the resulting p5.Vector\n\t */\n\t\n\tp5.Vector.sub = function (v1, v2, target) {\n\t  if (!target) {\n\t    target = v1.copy();\n\t  } else {\n\t    target.set(v1);\n\t  }\n\t  target.sub(v2);\n\t  return target;\n\t};\n\t\n\t\n\t/**\n\t * Multiplies a vector by a scalar and returns a new vector.\n\t *\n\t * @static\n\t * @param  {p5.Vector} v the p5.Vector to multiply\n\t * @param  {Number}  n the scalar\n\t * @param  {p5.Vector} target if undefined a new vector will be created\n\t * @return {p5.Vector}  the resulting new p5.Vector\n\t */\n\tp5.Vector.mult = function (v, n, target) {\n\t  if (!target) {\n\t    target = v.copy();\n\t  } else {\n\t    target.set(v);\n\t  }\n\t  target.mult(n);\n\t  return target;\n\t};\n\t\n\t/**\n\t * Divides a vector by a scalar and returns a new vector.\n\t *\n\t * @static\n\t * @param  {p5.Vector} v the p5.Vector to divide\n\t * @param  {Number}  n the scalar\n\t * @param  {p5.Vector} target if undefined a new vector will be created\n\t * @return {p5.Vector} the resulting new p5.Vector\n\t */\n\tp5.Vector.div = function (v, n, target) {\n\t  if (!target) {\n\t    target = v.copy();\n\t  } else {\n\t    target.set(v);\n\t  }\n\t  target.div(n);\n\t  return target;\n\t};\n\t\n\t\n\t/**\n\t * Calculates the dot product of two vectors.\n\t *\n\t * @static\n\t * @param  {p5.Vector} v1 the first p5.Vector\n\t * @param  {p5.Vector} v2 the second p5.Vector\n\t * @return {Number}     the dot product\n\t */\n\tp5.Vector.dot = function (v1, v2) {\n\t  return v1.dot(v2);\n\t};\n\t\n\t/**\n\t * Calculates the cross product of two vectors.\n\t *\n\t * @static\n\t * @param  {p5.Vector} v1 the first p5.Vector\n\t * @param  {p5.Vector} v2 the second p5.Vector\n\t * @return {Number}     the cross product\n\t */\n\tp5.Vector.cross = function (v1, v2) {\n\t  return v1.cross(v2);\n\t};\n\t\n\t/**\n\t * Calculates the Euclidean distance between two points (considering a\n\t * point as a vector object).\n\t *\n\t * @static\n\t * @param  {p5.Vector} v1 the first p5.Vector\n\t * @param  {p5.Vector} v2 the second p5.Vector\n\t * @return {Number}     the distance\n\t */\n\tp5.Vector.dist = function (v1,v2) {\n\t  return v1.dist(v2);\n\t};\n\t\n\t/**\n\t * Linear interpolate a vector to another vector and return the result as a\n\t * new vector.\n\t *\n\t * @static\n\t * @param {p5.Vector} v1 a starting p5.Vector\n\t * @param {p5.Vector} v2 the p5.Vector to lerp to\n\t * @param {Number}       the amount of interpolation; some value between 0.0\n\t *                       (old vector) and 1.0 (new vector). 0.1 is very near\n\t *                       the new vector. 0.5 is halfway in between.\n\t */\n\tp5.Vector.lerp = function (v1, v2, amt, target) {\n\t  if (!target) {\n\t    target = v1.copy();\n\t  } else {\n\t    target.set(v1);\n\t  }\n\t  target.lerp(v2, amt);\n\t  return target;\n\t};\n\t\n\t/**\n\t * Calculates and returns the angle (in radians) between two vectors.\n\t * @method angleBetween\n\t * @static\n\t * @param  {p5.Vector} v1 the x, y, and z components of a p5.Vector\n\t * @param  {p5.Vector} v2 the x, y, and z components of a p5.Vector\n\t * @return {Number}       the angle between (in radians)\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var v1 = createVector(1, 0, 0);\n\t * var v2 = createVector(0, 1, 0);\n\t *\n\t * var angle = p5.Vector.angleBetween(v1, v2);\n\t * // angle is PI/2\n\t * </code>\n\t * </div>\n\t */\n\tp5.Vector.angleBetween = function (v1, v2) {\n\t  var angle = Math.acos(v1.dot(v2) / (v1.mag() * v2.mag()));\n\t  if (this.p5) {\n\t    if (this.p5._angleMode === constants.DEGREES) {\n\t      angle = polarGeometry.radiansToDegrees(angle);\n\t    }\n\t  }\n\t  return angle;\n\t};\n\t\n\t/**\n\t * @static\n\t */\n\tp5.Vector.mag = function (vecT){\n\t  var x = vecT.x,\n\t    y = vecT.y,\n\t    z = vecT.z;\n\t  var magSq = x * x + y * y + z * z;\n\t  return Math.sqrt(magSq);\n\t};\n\t\n\tmodule.exports = p5.Vector;\n\t\n\t},{\"../core/constants\":36,\"../core/core\":37,\"./polargeometry\":67}],67:[function(_dereq_,module,exports){\n\t\n\tmodule.exports = {\n\t\n\t  degreesToRadians: function(x) {\n\t    return 2 * Math.PI * x / 360;\n\t  },\n\t\n\t  radiansToDegrees: function(x) {\n\t    return 360 * x / (2 * Math.PI);\n\t  }\n\t\n\t};\n\t\n\t},{}],68:[function(_dereq_,module,exports){\n\t/**\n\t * @module Math\n\t * @submodule Random\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\tvar seeded = false;\n\t\n\t// Linear Congruential Generator\n\t// Variant of a Lehman Generator\n\tvar lcg = (function() {\n\t  // Set to values from http://en.wikipedia.org/wiki/Numerical_Recipes\n\t  // m is basically chosen to be large (as it is the max period)\n\t  // and for its relationships to a and c\n\t  var m = 4294967296,\n\t    // a - 1 should be divisible by m's prime factors\n\t    a = 1664525,\n\t    // c and m should be co-prime\n\t    c = 1013904223,\n\t    seed, z;\n\t  return {\n\t    setSeed : function(val) {\n\t      // pick a random seed if val is undefined or null\n\t      // the >>> 0 casts the seed to an unsigned 32-bit integer\n\t      z = seed = (val == null ? Math.random() * m : val) >>> 0;\n\t    },\n\t    getSeed : function() {\n\t      return seed;\n\t    },\n\t    rand : function() {\n\t      // define the recurrence relationship\n\t      z = (a * z + c) % m;\n\t      // return a float in [0, 1)\n\t      // if z = m then z / m = 0 therefore (z % m) / m < 1 always\n\t      return z / m;\n\t    }\n\t  };\n\t}());\n\t\n\t/**\n\t * Sets the seed value for random().\n\t *\n\t * By default, random() produces different results each time the program\n\t * is run. Set the seed parameter to a constant to return the same\n\t * pseudo-random numbers each time the software is run.\n\t *\n\t * @method randomSeed\n\t * @param {Number} seed   the seed value\n\t * @example\n\t * <div>\n\t * <code>\n\t * randomSeed(99);\n\t * for (var i=0; i < 100; i++) {\n\t *   var r = random(0, 255);\n\t *   stroke(r);\n\t *   line(i, 0, i, 100);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * many vertical lines drawn in white, black or grey.\n\t *\n\t */\n\tp5.prototype.randomSeed = function(seed) {\n\t  lcg.setSeed(seed);\n\t  seeded = true;\n\t};\n\t\n\t/**\n\t * Return a random floating-point number.\n\t *\n\t * Takes either 0, 1 or 2 arguments.\n\t *\n\t * If no argument is given, returns a random number from 0\n\t * up to (but not including) 1.\n\t *\n\t * If one argument is given and it is a number, returns a random number from 0\n\t * up to (but not including) the number.\n\t *\n\t * If one argument is given and it is an array, returns a random element from\n\t * that array.\n\t *\n\t * If two arguments are given, returns a random number from the\n\t * first argument up to (but not including) the second argument.\n\t *\n\t * @method random\n\t * @param  {Number} [min]   the lower bound (inclusive)\n\t * @param  {Number} [max]   the upper bound (exclusive)\n\t * @return {Number|mixed} the random number or a random element in choices\n\t * @example\n\t * <div>\n\t * <code>\n\t * for (var i = 0; i < 100; i++) {\n\t *   var r = random(50);\n\t *   stroke(r*5);\n\t *   line(50, i, 50+r, i);\n\t * }\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * for (var i = 0; i < 100; i++) {\n\t *   var r = random(-50, 50);\n\t *   line(50,i,50+r,i);\n\t * }\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * // Get a random element from an array using the random(Array) syntax\n\t * var words = [ \"apple\", \"bear\", \"cat\", \"dog\" ];\n\t * var word = random(words);  // select random word\n\t * text(word,10,50);  // draw the word\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 100 horizontal lines from center canvas to right. size+fill change each time\n\t * 100 horizontal lines from center of canvas. height & side change each render\n\t * word displayed at random. Either apple, bear, cat, or dog\n\t *\n\t */\n\t/**\n\t * @method random\n\t * @param  {Array} choices   the array to choose from\n\t * @return {mixed} the random element from the array\n\t * @example\n\t */\n\tp5.prototype.random = function (min, max) {\n\t\n\t  var rand;\n\t\n\t  if (seeded) {\n\t    rand  = lcg.rand();\n\t  } else {\n\t    rand = Math.random();\n\t  }\n\t  if (typeof min === 'undefined') {\n\t    return rand;\n\t  } else\n\t  if (typeof max === 'undefined') {\n\t    if (min instanceof Array) {\n\t      return min[Math.floor(rand * min.length)];\n\t    } else {\n\t      return rand * min;\n\t    }\n\t  } else {\n\t    if (min > max) {\n\t      var tmp = min;\n\t      min = max;\n\t      max = tmp;\n\t    }\n\t\n\t    return rand * (max-min) + min;\n\t  }\n\t};\n\t\n\t\n\t/**\n\t *\n\t * Returns a random number fitting a Gaussian, or\n\t * normal, distribution. There is theoretically no minimum or maximum\n\t * value that randomGaussian() might return. Rather, there is\n\t * just a very low probability that values far from the mean will be\n\t * returned; and a higher probability that numbers near the mean will\n\t * be returned.\n\t * <br><br>\n\t * Takes either 0, 1 or 2 arguments.<br>\n\t * If no args, returns a mean of 0 and standard deviation of 1.<br>\n\t * If one arg, that arg is the mean (standard deviation is 1).<br>\n\t * If two args, first is mean, second is standard deviation.\n\t *\n\t * @method randomGaussian\n\t * @param  {Number} mean  the mean\n\t * @param  {Number} sd    the standard deviation\n\t * @return {Number} the random number\n\t * @example\n\t * <div>\n\t * <code>for (var y = 0; y < 100; y++) {\n\t *  var x = randomGaussian(50,15);\n\t *  line(50, y, x, y);\n\t *}\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t *var distribution = new Array(360);\n\t *\n\t *function setup() {\n\t *  createCanvas(100, 100);\n\t *  for (var i = 0; i < distribution.length; i++) {\n\t *    distribution[i] = floor(randomGaussian(0,15));\n\t *  }\n\t *}\n\t *\n\t *function draw() {\n\t *  background(204);\n\t *\n\t *  translate(width/2, width/2);\n\t *\n\t *  for (var i = 0; i < distribution.length; i++) {\n\t *    rotate(TWO_PI/distribution.length);\n\t *    stroke(0);\n\t *    var dist = abs(distribution[i]);\n\t *    line(0, 0, dist, 0);\n\t *  }\n\t *}\n\t * </code>\n\t * </div>\n\t * @alt\n\t * 100 horizontal lines from center of canvas. height & side change each render\n\t * black lines radiate from center of canvas. size determined each render\n\t */\n\tvar y2;\n\tvar previous = false;\n\tp5.prototype.randomGaussian = function(mean, sd)  {\n\t  var y1,x1,x2,w;\n\t  if (previous) {\n\t    y1 = y2;\n\t    previous = false;\n\t  } else {\n\t    do {\n\t      x1 = this.random(2) - 1;\n\t      x2 = this.random(2) - 1;\n\t      w = x1 * x1 + x2 * x2;\n\t    } while (w >= 1);\n\t    w = Math.sqrt((-2 * Math.log(w))/w);\n\t    y1 = x1 * w;\n\t    y2 = x2 * w;\n\t    previous = true;\n\t  }\n\t\n\t  var m = mean || 0;\n\t  var s = sd || 1;\n\t  return y1*s + m;\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],69:[function(_dereq_,module,exports){\n\t/**\n\t * @module Math\n\t * @submodule Trigonometry\n\t * @for p5\n\t * @requires core\n\t * @requires polargeometry\n\t * @requires constants\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar polarGeometry = _dereq_('./polargeometry');\n\tvar constants = _dereq_('../core/constants');\n\t\n\tp5.prototype._angleMode = constants.RADIANS;\n\t\n\t/**\n\t * The inverse of cos(), returns the arc cosine of a value. This function\n\t * expects the values in the range of -1 to 1 and values are returned in\n\t * the range 0 to PI (3.1415927).\n\t *\n\t * @method acos\n\t * @param  {Number} value the value whose arc cosine is to be returned\n\t * @return {Number}       the arc cosine of the given value\n\t *\n\t * @example\n\t * <div class= “norender\">\n\t * <code>\n\t * var a = PI;\n\t * var c = cos(a);\n\t * var ac = acos(c);\n\t * // Prints: \"3.1415927 : -1.0 : 3.1415927\"\n\t * print(a + \" : \" + c + \" : \" +  ac);\n\t * </code>\n\t * </div>\n\t *\n\t * <div class= “norender\">\n\t * <code>\n\t * var a = PI + PI/4.0;\n\t * var c = cos(a);\n\t * var ac = acos(c);\n\t * // Prints: \"3.926991 : -0.70710665 : 2.3561943\"\n\t * print(a + \" : \" + c + \" : \" +  ac);\n\t * </code>\n\t * </div>\n\t */\n\tp5.prototype.acos = function(ratio) {\n\t  if (this._angleMode === constants.RADIANS) {\n\t    return Math.acos(ratio);\n\t  } else {\n\t    return polarGeometry.radiansToDegrees(Math.acos(ratio));\n\t  }\n\t};\n\t\n\t/**\n\t * The inverse of sin(), returns the arc sine of a value. This function\n\t * expects the values in the range of -1 to 1 and values are returned\n\t * in the range -PI/2 to PI/2.\n\t *\n\t * @method asin\n\t * @param  {Number} value the value whose arc sine is to be returned\n\t * @return {Number}       the arc sine of the given value\n\t *\n\t * @example\n\t * <div class= “norender\">\n\t * <code>\n\t * var a = PI + PI/3;\n\t * var s = sin(a);\n\t * var as = asin(s);\n\t * // Prints: \"1.0471976 : 0.86602545 : 1.0471976\"\n\t * print(a + \" : \" + s + \" : \" +  as);\n\t * </code>\n\t * </div>\n\t *\n\t * <div class= “norender\">\n\t * <code>\n\t * var a = PI + PI/3.0;\n\t * var s = sin(a);\n\t * var as = asin(s);\n\t * // Prints: \"4.1887903 : -0.86602545 : -1.0471976\"\n\t * print(a + \" : \" + s + \" : \" +  as);\n\t * </code>\n\t * </div>\n\t *\n\t */\n\tp5.prototype.asin = function(ratio) {\n\t  if (this._angleMode === constants.RADIANS) {\n\t    return Math.asin(ratio);\n\t  } else {\n\t    return polarGeometry.radiansToDegrees(Math.asin(ratio));\n\t  }\n\t};\n\t\n\t/**\n\t * The inverse of tan(), returns the arc tangent of a value. This function\n\t * expects the values in the range of -Infinity to Infinity (exclusive) and\n\t * values are returned in the range -PI/2 to PI/2.\n\t *\n\t * @method atan\n\t * @param  {Number} value the value whose arc tangent is to be returned\n\t * @return {Number}       the arc tangent of the given value\n\t *\n\t * @example\n\t * <div class= “norender\">\n\t * <code>\n\t * var a = PI + PI/3;\n\t * var t = tan(a);\n\t * var at = atan(t);\n\t * // Prints: \"1.0471976 : 1.7320509 : 1.0471976\"\n\t * print(a + \" : \" + t + \" : \" +  at);\n\t * </code>\n\t * </div>\n\t *\n\t * <div class= “norender\">\n\t * <code>\n\t * var a = PI + PI/3.0;\n\t * var t = tan(a);\n\t * var at = atan(t);\n\t * // Prints: \"4.1887903 : 1.7320513 : 1.0471977\"\n\t * print(a + \" : \" + t + \" : \" +  at);\n\t * </code>\n\t * </div>\n\t *\n\t */\n\tp5.prototype.atan = function(ratio) {\n\t  if (this._angleMode === constants.RADIANS) {\n\t    return Math.atan(ratio);\n\t  } else {\n\t    return polarGeometry.radiansToDegrees(Math.atan(ratio));\n\t  }\n\t};\n\t\n\t/**\n\t * Calculates the angle (in radians) from a specified point to the coordinate\n\t * origin as measured from the positive x-axis. Values are returned as a\n\t * float in the range from PI to -PI. The atan2() function is most often used\n\t * for orienting geometry to the position of the cursor.\n\t * <br><br>\n\t * Note: The y-coordinate of the point is the first parameter, and the\n\t * x-coordinate is the second parameter, due the the structure of calculating\n\t * the tangent.\n\t *\n\t * @method atan2\n\t * @param  {Number} y y-coordinate of the point\n\t * @param  {Number} x x-coordinate of the point\n\t * @return {Number}   the arc tangent of the given point\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * function draw() {\n\t *   background(204);\n\t *   translate(width/2, height/2);\n\t *   var a = atan2(mouseY-height/2, mouseX-width/2);\n\t *   rotate(a);\n\t *   rect(-30, -5, 60, 10);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 60 by 10 rect at center of canvas rotates with mouse movements\n\t *\n\t */\n\tp5.prototype.atan2 = function (y, x) {\n\t  if (this._angleMode === constants.RADIANS) {\n\t    return Math.atan2(y, x);\n\t  } else {\n\t    return polarGeometry.radiansToDegrees(Math.atan2(y, x));\n\t  }\n\t};\n\t\n\t/**\n\t * Calculates the cosine of an angle. This function takes into account the\n\t * current angleMode. Values are returned in the range -1 to 1.\n\t *\n\t * @method cos\n\t * @param  {Number} angle the angle\n\t * @return {Number}       the cosine of the angle\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * var a = 0.0;\n\t * var inc = TWO_PI/25.0;\n\t * for (var i = 0; i < 25; i++) {\n\t *   line(i*4, 50, i*4, 50+cos(a)*40.0);\n\t *   a = a + inc;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * vertical black lines form wave patterns, extend-down on left and right side\n\t *\n\t */\n\tp5.prototype.cos = function(angle) {\n\t  if (this._angleMode === constants.RADIANS) {\n\t    return Math.cos(angle);\n\t  } else {\n\t    return Math.cos(this.radians(angle));\n\t  }\n\t};\n\t\n\t/**\n\t * Calculates the sine of an angle. This function takes into account the\n\t * current angleMode. Values are returned in the range -1 to 1.\n\t *\n\t * @method sin\n\t * @param  {Number} angle the angle\n\t * @return {Number}       the sine of the angle\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * var a = 0.0;\n\t * var inc = TWO_PI/25.0;\n\t * for (var i = 0; i < 25; i++) {\n\t *   line(i*4, 50, i*4, 50+sin(a)*40.0);\n\t *   a = a + inc;\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * vertical black lines extend down and up from center to form wave pattern\n\t *\n\t */\n\tp5.prototype.sin = function(angle) {\n\t  if (this._angleMode === constants.RADIANS) {\n\t    return Math.sin(angle);\n\t  } else {\n\t    return Math.sin(this.radians(angle));\n\t  }\n\t};\n\t\n\t/**\n\t * Calculates the tangent of an angle. This function takes into account\n\t * the current angleMode. Values are returned in the range -1 to 1.\n\t *\n\t * @method tan\n\t * @param  {Number} angle the angle\n\t * @return {Number}       the tangent of the angle\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t *   var a = 0.0;\n\t *   var inc = TWO_PI/50.0;\n\t *   for (var i = 0; i < 100; i = i+2) {\n\t *     line(i, 50, i, 50+tan(a)*2.0);\n\t *     a = a + inc;\n\t *   }\n\t * </code>\n\t *\n\t *\n\t * @alt\n\t * vertical black lines end down and up from center to form spike pattern\n\t *\n\t */\n\tp5.prototype.tan = function(angle) {\n\t  if (this._angleMode === constants.RADIANS) {\n\t    return Math.tan(angle);\n\t  } else {\n\t    return Math.tan(this.radians(angle));\n\t  }\n\t};\n\t\n\t/**\n\t * Converts a radian measurement to its corresponding value in degrees.\n\t * Radians and degrees are two ways of measuring the same thing. There are\n\t * 360 degrees in a circle and 2*PI radians in a circle. For example,\n\t * 90° = PI/2 = 1.5707964.\n\t *\n\t * @method degrees\n\t * @param  {Number} radians the radians value to convert to degrees\n\t * @return {Number}         the converted angle\n\t *\n\t *\n\t * @example\n\t * <div class= “norender\">\n\t * <code>\n\t * var rad = PI/4;\n\t * var deg = degrees(rad);\n\t * print(rad + \" radians is \" + deg + \" degrees\");\n\t * // Prints: 0.7853981633974483 radians is 45 degrees\n\t * </code>\n\t * </div>\n\t *\n\t */\n\tp5.prototype.degrees = function(angle) {\n\t  return polarGeometry.radiansToDegrees(angle);\n\t};\n\t\n\t/**\n\t * Converts a degree measurement to its corresponding value in radians.\n\t * Radians and degrees are two ways of measuring the same thing. There are\n\t * 360 degrees in a circle and 2*PI radians in a circle. For example,\n\t * 90° = PI/2 = 1.5707964.\n\t *\n\t * @method radians\n\t * @param  {Number} degrees the degree value to convert to radians\n\t * @return {Number}         the converted angle\n\t *\n\t * @example\n\t * <div class= “norender\">\n\t * <code>\n\t * var deg = 45.0;\n\t * var rad = radians(deg);\n\t * print(deg + \" degrees is \" + rad + \" radians\");\n\t * // Prints: 45 degrees is 0.7853981633974483 radians\n\t * </code>\n\t * </div>\n\t */\n\tp5.prototype.radians = function(angle) {\n\t  return polarGeometry.degreesToRadians(angle);\n\t};\n\t\n\t/**\n\t * Sets the current mode of p5 to given mode. Default mode is RADIANS.\n\t *\n\t * @method angleMode\n\t * @param {Constant} mode either RADIANS or DEGREES\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * function draw(){\n\t *   background(204);\n\t *   angleMode(DEGREES); // Change the mode to DEGREES\n\t *   var a = atan2(mouseY-height/2, mouseX-width/2);\n\t *   translate(width/2, height/2);\n\t *   push();\n\t *   rotate(a);\n\t *   rect(-20, -5, 40, 10); // Larger rectangle is rotating in degrees\n\t *   pop();\n\t *   angleMode(RADIANS); // Change the mode to RADIANS\n\t *   rotate(a); // var a stays the same\n\t *   rect(-40, -5, 20, 10); // Smaller rectangle is rotating in radians\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 40 by 10 rect in center rotates with mouse moves. 20 by 10 rect moves faster.\n\t *\n\t *\n\t */\n\tp5.prototype.angleMode = function(mode) {\n\t  if (mode === constants.DEGREES || mode === constants.RADIANS) {\n\t    this._angleMode = mode;\n\t  }\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/constants\":36,\"../core/core\":37,\"./polargeometry\":67}],70:[function(_dereq_,module,exports){\n\t/**\n\t * @module Typography\n\t * @submodule Attributes\n\t * @for p5\n\t * @requires core\n\t * @requires constants\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/**\n\t * Sets the current alignment for drawing text. Accepts two\n\t * arguments: horizAlign (LEFT, CENTER, or RIGHT) and\n\t * vertAlign (TOP, BOTTOM, CENTER, or BASELINE).\n\t *\n\t * The horizAlign parameter is in reference to the x value\n\t * of the text() function, while the vertAlign parameter is\n\t * in reference to the y value.\n\t *\n\t * So if you write textAlign(LEFT), you are aligning the left\n\t * edge of your text to the x value you give in text(). If you\n\t * write textAlign(RIGHT, TOP), you are aligning the right edge\n\t * of your text to the x value and the top of edge of the text\n\t * to the y value.\n\t *\n\t * @method textAlign\n\t * @param {Constant} horizAlign horizontal alignment, either LEFT,\n\t *                            CENTER, or RIGHT\n\t * @param {Constant} vertAlign vertical alignment, either TOP,\n\t *                            BOTTOM, CENTER, or BASELINE\n\t * @return {Number}\n\t * @example\n\t * <div>\n\t * <code>\n\t * textSize(16);\n\t * textAlign(RIGHT);\n\t * text(\"ABCD\", 50, 30);\n\t * textAlign(CENTER);\n\t * text(\"EFGH\", 50, 50);\n\t * textAlign(LEFT);\n\t * text(\"IJKL\", 50, 70);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *Letters ABCD displayed at top right, EFGH at center and IJKL at bottom left.\n\t *\n\t */\n\tp5.prototype.textAlign = function(horizAlign, vertAlign) {\n\t  return this._renderer.textAlign.apply(this._renderer, arguments);\n\t};\n\t\n\t/**\n\t * Sets/gets the spacing, in pixels, between lines of text. This\n\t * setting will be used in all subsequent calls to the text() function.\n\t *\n\t * @method textLeading\n\t * @param {Number} leading the size in pixels for spacing between lines\n\t * @return {Object|Number}\n\t * @example\n\t * <div>\n\t * <code>\n\t * // Text to display. The \"\\n\" is a \"new line\" character\n\t * lines = \"L1\\nL2\\nL3\";\n\t * textSize(12);\n\t *\n\t * textLeading(10);  // Set leading to 10\n\t * text(lines, 10, 25);\n\t *\n\t * textLeading(20);  // Set leading to 20\n\t * text(lines, 40, 25);\n\t *\n\t * textLeading(30);  // Set leading to 30\n\t * text(lines, 70, 25);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *set L1 L2 & L3 displayed vertically 3 times. spacing increases for each set\n\t *\n\t */\n\tp5.prototype.textLeading = function(theLeading) {\n\t  return this._renderer.textLeading.apply(this._renderer, arguments);\n\t};\n\t\n\t/**\n\t * Sets/gets the current font size. This size will be used in all subsequent\n\t * calls to the text() function. Font size is measured in pixels.\n\t *\n\t * @method textSize\n\t * @param {Number} theSize the size of the letters in units of pixels\n\t * @return {Object|Number}\n\t * @example\n\t * <div>\n\t * <code>\n\t * textSize(12);\n\t * text(\"Font Size 12\", 10, 30);\n\t * textSize(14);\n\t * text(\"Font Size 14\", 10, 60);\n\t * textSize(16);\n\t * text(\"Font Size 16\", 10, 90);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *Font Size 12 displayed small, Font Size 14 medium & Font Size 16 large\n\t *\n\t */\n\tp5.prototype.textSize = function(theSize) {\n\t  return this._renderer.textSize.apply(this._renderer, arguments);\n\t};\n\t\n\t/**\n\t * Sets/gets the style of the text for system fonts to NORMAL, ITALIC, or BOLD.\n\t * Note: this may be is overridden by CSS styling. For non-system fonts\n\t * (opentype, truetype, etc.) please load styled fonts instead.\n\t *\n\t * @method textStyle\n\t * @param {Number/Constant} theStyle styling for text, either NORMAL,\n\t *                            ITALIC, or BOLD\n\t * @return {Object|String}\n\t * @example\n\t * <div>\n\t * <code>\n\t * strokeWeight(0);\n\t * textSize(12);\n\t * textStyle(NORMAL);\n\t * text(\"Font Style Normal\", 10, 30);\n\t * textStyle(ITALIC);\n\t * text(\"Font Style Italic\", 10, 60);\n\t * textStyle(BOLD);\n\t * text(\"Font Style Bold\", 10, 90);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *words Font Style Normal displayed normally, Italic in italic and bold in bold\n\t *\n\t */\n\tp5.prototype.textStyle = function(theStyle) {\n\t  return this._renderer.textStyle.apply(this._renderer, arguments);\n\t};\n\t\n\t/**\n\t * Calculates and returns the width of any character or text string.\n\t *\n\t * @method textWidth\n\t * @param {String} theText the String of characters to measure\n\t * @return {Number}\n\t * @example\n\t * <div>\n\t * <code>\n\t * textSize(28);\n\t *\n\t * var aChar = 'P';\n\t * var cWidth = textWidth(aChar);\n\t * text(aChar, 0, 40);\n\t * line(cWidth, 0, cWidth, 50);\n\t *\n\t * var aString = \"p5.js\";\n\t * var sWidth = textWidth(aString);\n\t * text(aString, 0, 85);\n\t * line(sWidth, 50, sWidth, 100);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *Letter P and p5.js are displayed with vertical lines at end. P is wide\n\t *\n\t */\n\tp5.prototype.textWidth = function(theText) {\n\t  if (theText.length === 0) {\n\t    return 0;\n\t  }\n\t  return this._renderer.textWidth.apply(this._renderer, arguments);\n\t};\n\t\n\t/**\n\t * Returns the ascent of the current font at its current size. The ascent\n\t * represents the distance, in pixels, of the tallest character above\n\t * the baseline.\n\t *\n\t * @return {Number}\n\t * @example\n\t * <div>\n\t * <code>\n\t * var base = height * 0.75;\n\t * var scalar = 0.8; // Different for each font\n\t *\n\t * textSize(32);  // Set initial text size\n\t * var asc = textAscent() * scalar;  // Calc ascent\n\t * line(0, base - asc, width, base - asc);\n\t * text(\"dp\", 0, base);  // Draw text on baseline\n\t *\n\t * textSize(64);  // Increase text size\n\t * asc = textAscent() * scalar;  // Recalc ascent\n\t * line(40, base - asc, width, base - asc);\n\t * text(\"dp\", 40, base);  // Draw text on baseline\n\t * </code>\n\t * </div>\n\t */\n\tp5.prototype.textAscent = function() {\n\t  return this._renderer.textAscent();\n\t};\n\t\n\t/**\n\t * Returns the descent of the current font at its current size. The descent\n\t * represents the distance, in pixels, of the character with the longest\n\t * descender below the baseline.\n\t *\n\t * @return {Number}\n\t * @example\n\t * <div>\n\t * <code>\n\t * var base = height * 0.75;\n\t * var scalar = 0.8; // Different for each font\n\t *\n\t * textSize(32);  // Set initial text size\n\t * var desc = textDescent() * scalar;  // Calc ascent\n\t * line(0, base+desc, width, base+desc);\n\t * text(\"dp\", 0, base);  // Draw text on baseline\n\t *\n\t * textSize(64);  // Increase text size\n\t * desc = textDescent() * scalar;  // Recalc ascent\n\t * line(40, base + desc, width, base + desc);\n\t * text(\"dp\", 40, base);  // Draw text on baseline\n\t * </code>\n\t * </div>\n\t */\n\tp5.prototype.textDescent = function() {\n\t  return this._renderer.textDescent();\n\t};\n\t\n\t/**\n\t * Helper function to measure ascent and descent.\n\t */\n\tp5.prototype._updateTextMetrics = function() {\n\t  return this._renderer._updateTextMetrics();\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],71:[function(_dereq_,module,exports){\n\t/**\n\t * @module Typography\n\t * @submodule Loading & Displaying\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar constants = _dereq_('../core/constants');\n\t\n\t_dereq_('../core/error_helpers');\n\t\n\t\n\t/**\n\t * Draws text to the screen. Displays the information specified in the first\n\t * parameter on the screen in the position specified by the additional\n\t * parameters. A default font will be used unless a font is set with the\n\t * textFont() function and a default size will be used unless a font is set\n\t * with textSize(). Change the color of the text with the fill() function.\n\t * Change the outline of the text with the stroke() and strokeWeight()\n\t * functions.\n\t * <br><br>\n\t * The text displays in relation to the textAlign() function, which gives the\n\t * option to draw to the left, right, and center of the coordinates.\n\t * <br><br>\n\t * The x2 and y2 parameters define a rectangular area to display within and\n\t * may only be used with string data. When these parameters are specified,\n\t * they are interpreted based on the current rectMode() setting. Text that\n\t * does not fit completely within the rectangle specified will not be drawn\n\t * to the screen.\n\t *\n\t * @method text\n\t * @param {String} str the alphanumeric symbols to be displayed\n\t * @param {Number} x   x-coordinate of text\n\t * @param {Number} y   y-coordinate of text\n\t * @param {Number} x2  by default, the width of the text box,\n\t *                     see rectMode() for more info\n\t * @param {Number} y2  by default, the height of the text box,\n\t *                     see rectMode() for more info\n\t * @return {Object} this\n\t * @example\n\t * <div>\n\t * <code>\n\t * textSize(32);\n\t * text(\"word\", 10, 30);\n\t * fill(0, 102, 153);\n\t * text(\"word\", 10, 60);\n\t * fill(0, 102, 153, 51);\n\t * text(\"word\", 10, 90);\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * s = \"The quick brown fox jumped over the lazy dog.\";\n\t * fill(50);\n\t * text(s, 10, 10, 70, 80); // Text wraps within text box\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *'word' displayed 3 times going from black, blue to translucent blue\n\t * The quick brown fox jumped over the lazy dog.\n\t *\n\t */\n\tp5.prototype.text = function(str, x, y, maxWidth, maxHeight) {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  this._validateParameters(\n\t    'text',\n\t    args,\n\t    [\n\t      ['*', 'Number', 'Number'],\n\t      ['*', 'Number', 'Number', 'Number', 'Number']\n\t    ]\n\t  );\n\t\n\t  return (!(this._renderer._doFill || this._renderer._doStroke)) ? this :\n\t    this._renderer.text.apply(this._renderer, arguments);\n\t};\n\t\n\t/**\n\t * Sets the current font that will be drawn with the text() function.\n\t *\n\t * @method textFont\n\t * @param {Object|String} f a font loaded via loadFont(), or a String\n\t * representing a <a href=\"https://mzl.la/2dOw8WD\">web safe font</a> (a font\n\t * that is generally available across all systems).\n\t * @return {Object} this\n\t * @example\n\t * <div>\n\t * <code>\n\t * fill(0);\n\t * textSize(12);\n\t * textFont(\"Georgia\");\n\t * text(\"Georgia\", 12, 30);\n\t * textFont(\"Helvetica\");\n\t * text(\"Helvetica\", 12, 60);\n\t * </code>\n\t * </div>\n\t * <div>\n\t * <code>\n\t * var fontRegular, fontItalic, fontBold;\n\t * function preload() {\n\t *    fontRegular = loadFont(\"assets/Regular.otf\");\n\t *    fontItalic = loadFont(\"assets/Italic.ttf\");\n\t *    fontBold = loadFont(\"assets/Bold.ttf\");\n\t * }\n\t * function setup() {\n\t *    background(210);\n\t *    fill(0).strokeWeight(0).textSize(10);\n\t *    textFont(fontRegular);\n\t *    text(\"Font Style Normal\", 10, 30);\n\t *    textFont(fontItalic);\n\t *    text(\"Font Style Italic\", 10, 50);\n\t *    textFont(fontBold);\n\t *    text(\"Font Style Bold\", 10, 70);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *words Font Style Normal displayed normally, Italic in italic and bold in bold\n\t *\n\t */\n\tp5.prototype.textFont = function(theFont, theSize) {\n\t\n\t  if (arguments.length) {\n\t\n\t    if (!theFont) {\n\t\n\t      throw Error('null font passed to textFont');\n\t    }\n\t\n\t    this._renderer._setProperty('_textFont', theFont);\n\t\n\t    if (theSize) {\n\t\n\t      this._renderer._setProperty('_textSize', theSize);\n\t      this._renderer._setProperty('_textLeading',\n\t        theSize * constants._DEFAULT_LEADMULT);\n\t    }\n\t\n\t    return this._renderer._applyTextProperties();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/constants\":36,\"../core/core\":37,\"../core/error_helpers\":40}],72:[function(_dereq_,module,exports){\n\t/**\n\t * This module defines the p5.Font class and functions for\n\t * drawing text to the display canvas.\n\t * @module Typography\n\t * @submodule Font\n\t * @requires core\n\t * @requires constants\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar constants = _dereq_('../core/constants');\n\t\n\t/*\n\t * TODO:\n\t *\n\t * API:\n\t * -- textBounds()\n\t * -- getPath()\n\t * -- getPoints()\n\t *\n\t * ===========================================\n\t * -- PFont functions:\n\t *    PFont.list()\n\t *\n\t * -- kerning\n\t * -- alignment: justified?\n\t * -- integrate p5.dom? (later)\n\t */\n\t\n\t/**\n\t * Base class for font handling\n\t * @class p5.Font\n\t * @constructor\n\t * @param {Object} [pInst] pointer to p5 instance\n\t */\n\tp5.Font = function(p) {\n\t\n\t  this.parent = p;\n\t\n\t  this.cache = {};\n\t\n\t  /**\n\t   * Underlying opentype font implementation\n\t   * @property font\n\t   */\n\t  this.font = undefined;\n\t};\n\t\n\tp5.Font.prototype.list = function() {\n\t\n\t  // TODO\n\t  throw 'not yet implemented';\n\t};\n\t\n\t/**\n\t * Returns a tight bounding box for the given text string using this\n\t * font (currently only supports single lines)\n\t *\n\t * @method textBounds\n\t * @param  {String} line     a line of text\n\t * @param  {Number} x        x-position\n\t * @param  {Number} y        y-position\n\t * @param  {Number} fontSize font size to use (optional)\n\t * @param  {Object} options opentype options (optional)\n\t *\n\t * @return {Object}          a rectangle object with properties: x, y, w, h\n\t *\n\t * @example\n\t * <div>\n\t * <code>\n\t * var font;\n\t * var textString = 'Lorem ipsum dolor sit amet.';\n\t * function preload() {\n\t *    font = loadFont('./assets/Regular.otf');\n\t * };\n\t * function setup() {\n\t *    background(210);\n\t *\n\t *    var bbox = font.textBounds(textString, 10, 30, 12);\n\t *    fill(255);\n\t *    stroke(0);\n\t *    rect(bbox.x, bbox.y, bbox.w, bbox.h);\n\t *    fill(0);\n\t *    noStroke();\n\t *\n\t *    textFont(font);\n\t *    textSize(12);\n\t *    text(textString, 10, 30);\n\t * };\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t *words Lorem ipsum dol go off canvas and contained by white bounding box\n\t *\n\t */\n\tp5.Font.prototype.textBounds = function(str, x, y, fontSize, options) {\n\t\n\t  x = x !== undefined ? x : 0;\n\t  y = y !== undefined ? y : 0;\n\t  fontSize = fontSize || this.parent._renderer._textSize;\n\t\n\t  // Check cache for existing bounds. Take into consideration the text alignment\n\t  // settings. Default alignment should match opentype's origin: left-aligned &\n\t  // alphabetic baseline.\n\t  var p = (options && options.renderer && options.renderer._pInst) ||\n\t    this.parent,\n\t    ctx = p._renderer.drawingContext,\n\t    alignment = ctx.textAlign || constants.LEFT,\n\t    baseline = ctx.textBaseline || constants.BASELINE;\n\t  var result = this.cache[cacheKey('textBounds', str, x, y, fontSize, alignment,\n\t    baseline)];\n\t\n\t  if (!result) {\n\t\n\t    var xCoords = [], yCoords = [], self = this,\n\t      scale = this._scale(fontSize), minX, minY, maxX, maxY;\n\t\n\t    this.font.forEachGlyph(str, x, y, fontSize, options,\n\t      function(glyph, gX, gY, gFontSize) {\n\t\n\t        xCoords.push(gX);\n\t        yCoords.push(gY);\n\t\n\t        var gm = glyph.getMetrics();\n\t\n\t        if (glyph.name !== 'space') {\n\t\n\t          xCoords.push(gX + (gm.xMax * scale));\n\t          yCoords.push(gY + (-gm.yMin * scale));\n\t          yCoords.push(gY + (-gm.yMax * scale));\n\t\n\t        } else { // NOTE: deals with broken metrics for spaces in opentype.js\n\t\n\t          xCoords.push(gX + self.font.charToGlyph(' ').advanceWidth *\n\t            self._scale(fontSize));\n\t        }\n\t      });\n\t\n\t    // fix to #1409 (not sure why these max() functions were here)\n\t    /*minX = Math.max(0, Math.min.apply(null, xCoords));\n\t    minY = Math.max(0, Math.min.apply(null, yCoords));\n\t    maxX = Math.max(0, Math.max.apply(null, xCoords));\n\t    maxY = Math.max(0, Math.max.apply(null, yCoords));*/\n\t    minX = Math.min.apply(null, xCoords);\n\t    minY = Math.min.apply(null, yCoords);\n\t    maxX = Math.max.apply(null, xCoords);\n\t    maxY = Math.max.apply(null, yCoords);\n\t\n\t    result = {\n\t      x: minX,\n\t      y: minY,\n\t      h: maxY - minY,\n\t      w: maxX - minX,\n\t      advance: minX - x\n\t    };\n\t\n\t    // Bounds are now calculated, so shift the x & y to match alignment settings\n\t    var textWidth = result.w + result.advance;\n\t    var pos = this._handleAlignment(p, ctx, str, result.x, result.y, textWidth);\n\t    result.x = pos.x;\n\t    result.y = pos.y;\n\t\n\t    this.cache[cacheKey('textBounds', str, x, y, fontSize, alignment,\n\t      baseline)] = result;\n\t  }\n\t  //else console.log('cache-hit');\n\t\n\t  return result;\n\t};\n\t\n\t\n\t/**\n\t * Computes an array of points following the path for specified text\n\t *\n\t * @param  {String} txt     a line of text\n\t * @param  {Number} x        x-position\n\t * @param  {Number} y        y-position\n\t * @param  {Number} fontSize font size to use (optional)\n\t * @param  {Object} options  an (optional) object that can contain:\n\t *\n\t * <br>sampleFactor - the ratio of path-length to number of samples\n\t * (default=.25); higher values yield more points and are therefore\n\t * more precise\n\t *\n\t * <br>simplifyThreshold - if set to a non-zero value, collinear points will be\n\t * be removed from the polygon; the value represents the threshold angle to use\n\t * when determining whether two edges are collinear\n\t *\n\t * @return {Array}  an array of points, each with x, y, alpha (the path angle)\n\t */\n\tp5.Font.prototype.textToPoints = function(txt, x, y, fontSize, options) {\n\t\n\t  var xoff = 0, result = [], glyphs = this._getGlyphs(txt);\n\t\n\t  fontSize = fontSize || this.parent._renderer._textSize;\n\t\n\t  for (var i = 0; i < glyphs.length; i++) {\n\t\n\t    var gpath = glyphs[i].getPath(x, y, fontSize),\n\t      paths = splitPaths(gpath.commands);\n\t\n\t    for (var j = 0; j < paths.length; j++) {\n\t\n\t      var pts = pathToPoints(paths[j], options);\n\t\n\t      for (var k = 0; k < pts.length; k++) {\n\t        pts[k].x += xoff;\n\t        result.push(pts[k]);\n\t      }\n\t    }\n\t\n\t    xoff += glyphs[i].advanceWidth * this._scale(fontSize);\n\t  }\n\t\n\t  return result;\n\t};\n\t\n\t// ----------------------------- End API ------------------------------\n\t\n\t/**\n\t * Returns the set of opentype glyphs for the supplied string.\n\t *\n\t * Note that there is not a strict one-to-one mapping between characters\n\t * and glyphs, so the list of returned glyphs can be larger or smaller\n\t *  than the length of the given string.\n\t *\n\t * @param  {String} str the string to be converted\n\t * @return {array}     the opentype glyphs\n\t */\n\tp5.Font.prototype._getGlyphs = function(str) {\n\t\n\t  return this.font.stringToGlyphs(str);\n\t};\n\t\n\t/**\n\t * Returns an opentype path for the supplied string and position.\n\t *\n\t * @param  {String} line     a line of text\n\t * @param  {Number} x        x-position\n\t * @param  {Number} y        y-position\n\t * @param  {Object} options opentype options (optional)\n\t * @return {Object}     the opentype path\n\t */\n\tp5.Font.prototype._getPath = function(line, x, y, options) {\n\t\n\t  var p = (options && options.renderer && options.renderer._pInst) ||\n\t    this.parent,\n\t    ctx = p._renderer.drawingContext,\n\t    pos = this._handleAlignment(p, ctx, line, x, y);\n\t\n\t  return this.font.getPath(line, pos.x, pos.y, p._renderer._textSize, options);\n\t};\n\t\n\t/*\n\t * Creates an SVG-formatted path-data string\n\t * (See http://www.w3.org/TR/SVG/paths.html#PathData)\n\t * from the given opentype path or string/position\n\t *\n\t * @param  {Object} path    an opentype path, OR the following:\n\t *\n\t * @param  {String} line     a line of text\n\t * @param  {Number} x        x-position\n\t * @param  {Number} y        y-position\n\t * @param  {Object} options opentype options (optional), set options.decimals\n\t * to set the decimal precision of the path-data\n\t *\n\t * @return {Object}     this p5.Font object\n\t */\n\tp5.Font.prototype._getPathData = function(line, x, y, options) {\n\t\n\t  var decimals = 3;\n\t\n\t  // create path from string/position\n\t  if (typeof line === 'string' && arguments.length > 2) {\n\t\n\t    line = this._getPath(line, x, y, options);\n\t  }\n\t  // handle options specified in 2nd arg\n\t  else if (typeof x === 'object') {\n\t\n\t    options = x;\n\t  }\n\t\n\t  // handle svg arguments\n\t  if (options && typeof options.decimals === 'number') {\n\t\n\t    decimals = options.decimals;\n\t  }\n\t\n\t  return line.toPathData(decimals);\n\t};\n\t\n\t/*\n\t * Creates an SVG <path> element, as a string,\n\t * from the given opentype path or string/position\n\t *\n\t * @param  {Object} path    an opentype path, OR the following:\n\t *\n\t * @param  {String} line     a line of text\n\t * @param  {Number} x        x-position\n\t * @param  {Number} y        y-position\n\t * @param  {Object} options opentype options (optional), set options.decimals\n\t * to set the decimal precision of the path-data in the <path> element,\n\t *  options.fill to set the fill color for the <path> element,\n\t *  options.stroke to set the stroke color for the <path> element,\n\t *  options.strokeWidth to set the strokeWidth for the <path> element.\n\t *\n\t * @return {Object}     this p5.Font object\n\t */\n\tp5.Font.prototype._getSVG = function(line, x, y, options) {\n\t\n\t  var decimals = 3;\n\t\n\t  // create path from string/position\n\t  if (typeof line === 'string' && arguments.length > 2) {\n\t\n\t    line = this._getPath(line, x, y, options);\n\t  }\n\t  // handle options specified in 2nd arg\n\t  else if (typeof x === 'object') {\n\t\n\t    options = x;\n\t  }\n\t\n\t  // handle svg arguments\n\t  if (options) {\n\t    if (typeof options.decimals === 'number') {\n\t      decimals = options.decimals;\n\t    }\n\t    if (typeof options.strokeWidth === 'number') {\n\t      line.strokeWidth = options.strokeWidth;\n\t    }\n\t    if (typeof options.fill !== 'undefined') {\n\t      line.fill = options.fill;\n\t    }\n\t    if (typeof options.stroke !== 'undefined') {\n\t      line.stroke = options.stroke;\n\t    }\n\t  }\n\t\n\t  return line.toSVG(decimals);\n\t};\n\t\n\t/*\n\t * Renders an opentype path or string/position\n\t * to the current graphics context\n\t *\n\t * @param  {Object} path    an opentype path, OR the following:\n\t *\n\t * @param  {String} line     a line of text\n\t * @param  {Number} x        x-position\n\t * @param  {Number} y        y-position\n\t * @param  {Object} options opentype options (optional)\n\t *\n\t * @return {Object}     this p5.Font object\n\t */\n\tp5.Font.prototype._renderPath = function(line, x, y, options) {\n\t\n\t  var pdata, pg = (options && options.renderer) || this.parent._renderer,\n\t    ctx = pg.drawingContext;\n\t\n\t  if (typeof line === 'object' && line.commands) {\n\t\n\t    pdata = line.commands;\n\t  } else {\n\t\n\t    //pos = handleAlignment(p, ctx, line, x, y);\n\t    pdata = this._getPath(line, x, y, options).commands;\n\t  }\n\t\n\t  ctx.beginPath();\n\t  for (var i = 0; i < pdata.length; i += 1) {\n\t\n\t    var cmd = pdata[i];\n\t    if (cmd.type === 'M') {\n\t      ctx.moveTo(cmd.x, cmd.y);\n\t    } else if (cmd.type === 'L') {\n\t      ctx.lineTo(cmd.x, cmd.y);\n\t    } else if (cmd.type === 'C') {\n\t      ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n\t    } else if (cmd.type === 'Q') {\n\t      ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n\t    } else if (cmd.type === 'Z') {\n\t      ctx.closePath();\n\t    }\n\t  }\n\t\n\t  // only draw stroke if manually set by user\n\t  if (pg._doStroke && pg._strokeSet) {\n\t\n\t    ctx.stroke();\n\t  }\n\t\n\t  if (pg._doFill) {\n\t\n\t    // if fill hasn't been set by user, use default-text-fill\n\t    ctx.fillStyle = pg._fillSet ? ctx.fillStyle : constants._DEFAULT_TEXT_FILL;\n\t    ctx.fill();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tp5.Font.prototype._textWidth = function(str, fontSize) {\n\t\n\t  if (str === ' ') { // special case for now\n\t\n\t    return this.font.charToGlyph(' ').advanceWidth * this._scale(fontSize);\n\t  }\n\t\n\t  var bounds = this.textBounds(str, 0, 0, fontSize);\n\t  return bounds.w + bounds.advance;\n\t};\n\t\n\tp5.Font.prototype._textAscent = function(fontSize) {\n\t\n\t  return this.font.ascender * this._scale(fontSize);\n\t};\n\t\n\tp5.Font.prototype._textDescent = function(fontSize) {\n\t\n\t  return -this.font.descender * this._scale(fontSize);\n\t};\n\t\n\tp5.Font.prototype._scale = function(fontSize) {\n\t\n\t  return (1 / this.font.unitsPerEm) * (fontSize ||\n\t    this.parent._renderer._textSize);\n\t};\n\t\n\tp5.Font.prototype._handleAlignment = function(p, ctx, line, x, y, textWidth) {\n\t  var fontSize = p._renderer._textSize,\n\t    textAscent = this._textAscent(fontSize),\n\t    textDescent = this._textDescent(fontSize);\n\t\n\t  textWidth = textWidth !== undefined ? textWidth :\n\t    this._textWidth(line, fontSize);\n\t\n\t  if (ctx.textAlign === constants.CENTER) {\n\t    x -= textWidth / 2;\n\t  } else if (ctx.textAlign === constants.RIGHT) {\n\t    x -= textWidth;\n\t  }\n\t\n\t  if (ctx.textBaseline === constants.TOP) {\n\t    y += textAscent;\n\t  } else if (ctx.textBaseline === constants._CTX_MIDDLE) {\n\t    y += textAscent / 2;\n\t  } else if (ctx.textBaseline === constants.BOTTOM) {\n\t    y -= textDescent;\n\t  }\n\t\n\t  return { x: x, y: y };\n\t};\n\t\n\t// path-utils\n\t\n\tfunction pathToPoints(cmds, options) {\n\t\n\t  var opts = parseOpts(options, {\n\t    sampleFactor: 0.1,\n\t    simplifyThreshold: 0,\n\t  });\n\t\n\t  var len = pointAtLength(cmds,0,1), // total-length\n\t    t = len / (len * opts.sampleFactor),\n\t    pts = [];\n\t\n\t  for (var i = 0; i < len; i += t) {\n\t    pts.push(pointAtLength(cmds, i));\n\t  }\n\t\n\t  if (opts.simplifyThreshold) {\n\t    /*var count = */simplify(pts, opts.simplifyThreshold);\n\t    //console.log('Simplify: removed ' + count + ' pts');\n\t  }\n\t\n\t  return pts;\n\t}\n\t\n\tfunction simplify(pts, angle) {\n\t\n\t  angle = (typeof angle === 'undefined') ? 0 : angle;\n\t\n\t  var num = 0;\n\t  for (var i = pts.length - 1; pts.length > 3 && i >= 0; --i) {\n\t\n\t    if (collinear(at(pts, i - 1), at(pts, i), at(pts, i + 1), angle)) {\n\t\n\t      // Remove the middle point\n\t      pts.splice(i % pts.length, 1);\n\t      num++;\n\t    }\n\t  }\n\t  return num;\n\t}\n\t\n\tfunction splitPaths(cmds) {\n\t\n\t  var paths = [], current;\n\t  for (var i = 0; i < cmds.length; i++) {\n\t    if (cmds[i].type === 'M') {\n\t      if (current) {\n\t        paths.push(current);\n\t      }\n\t      current = [];\n\t    }\n\t    current.push(cmdToArr(cmds[i]));\n\t  }\n\t  paths.push(current);\n\t\n\t  return paths;\n\t}\n\t\n\tfunction cmdToArr(cmd) {\n\t\n\t  var arr = [ cmd.type ];\n\t  if (cmd.type === 'M' || cmd.type === 'L') { // moveto or lineto\n\t    arr.push(cmd.x, cmd.y);\n\t  } else if (cmd.type === 'C') {\n\t    arr.push(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n\t  } else if (cmd.type === 'Q') {\n\t    arr.push(cmd.x1, cmd.y1, cmd.x, cmd.y);\n\t  }\n\t  // else if (cmd.type === 'Z') { /* no-op */ }\n\t  return arr;\n\t}\n\t\n\tfunction parseOpts(options, defaults) {\n\t\n\t  if (typeof options !== 'object') {\n\t    options = defaults;\n\t  }\n\t  else {\n\t    for (var key in defaults) {\n\t      if (typeof options[key] === 'undefined') {\n\t        options[key] = defaults[key];\n\t      }\n\t    }\n\t  }\n\t  return options;\n\t}\n\t\n\t//////////////////////// Helpers ////////////////////////////\n\t\n\tfunction at(v, i) {\n\t  var s = v.length;\n\t  return v[i < 0 ? i % s + s : i % s];\n\t}\n\t\n\tfunction collinear(a, b, c, thresholdAngle) {\n\t\n\t  if (!thresholdAngle) {\n\t    return areaTriangle(a, b, c) === 0;\n\t  }\n\t\n\t  if (typeof collinear.tmpPoint1 === 'undefined') {\n\t    collinear.tmpPoint1 = [];\n\t    collinear.tmpPoint2 = [];\n\t  }\n\t\n\t  var ab = collinear.tmpPoint1, bc = collinear.tmpPoint2;\n\t  ab.x = b.x - a.x;\n\t  ab.y = b.y - a.y;\n\t  bc.x = c.x - b.x;\n\t  bc.y = c.y - b.y;\n\t\n\t  var dot = ab.x * bc.x + ab.y * bc.y,\n\t    magA = Math.sqrt(ab.x * ab.x + ab.y * ab.y),\n\t    magB = Math.sqrt(bc.x * bc.x + bc.y * bc.y),\n\t    angle = Math.acos(dot / (magA * magB));\n\t\n\t  return angle < thresholdAngle;\n\t}\n\t\n\tfunction areaTriangle(a, b, c) {\n\t  return (((b[0] - a[0]) * (c[1] - a[1])) - ((c[0] - a[0]) * (b[1] - a[1])));\n\t}\n\t\n\t// Portions of below code copyright 2008 Dmitry Baranovskiy (via MIT license)\n\t\n\tfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t\n\t  var t1 = 1 - t, t13 = Math.pow(t1, 3), t12 = Math.pow(t1, 2), t2 = t * t,\n\t    t3 = t2 * t, x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x +\n\t    t3 * p2x, y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y +\n\t    t3 * p2y, mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n\t    my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n\t    nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n\t    ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n\t    ax = t1 * p1x + t * c1x, ay = t1 * p1y + t * c1y,\n\t    cx = t1 * c2x + t * p2x, cy = t1 * c2y + t * p2y,\n\t    alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\n\t\n\t  if (mx > nx || my < ny) { alpha += 180; }\n\t\n\t  return { x: x, y: y, m: { x: mx, y: my }, n: { x: nx, y: ny },\n\t    start: { x: ax, y: ay }, end: { x: cx, y: cy }, alpha: alpha\n\t  };\n\t}\n\t\n\tfunction getPointAtSegmentLength(p1x,p1y,c1x,c1y,c2x,c2y,p2x,p2y,length) {\n\t  return (length == null) ? bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) :\n\t    findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n\t      getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n\t}\n\t\n\tfunction pointAtLength(path, length, istotal) {\n\t  path = path2curve(path);\n\t  var x, y, p, l, sp = '', subpaths = {}, point, len = 0;\n\t  for (var i = 0, ii = path.length; i < ii; i++) {\n\t    p = path[i];\n\t    if (p[0] === 'M') {\n\t      x = +p[1];\n\t      y = +p[2];\n\t    } else {\n\t      l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t      if (len + l > length) {\n\t        if (!istotal) {\n\t          point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5],\n\t            p[6], length - len);\n\t          return { x: point.x, y: point.y, alpha: point.alpha };\n\t        }\n\t      }\n\t      len += l;\n\t      x = +p[5];\n\t      y = +p[6];\n\t    }\n\t    sp += p.shift() + p;\n\t  }\n\t  subpaths.end = sp;\n\t\n\t  point = istotal ? len : findDotsAtSegment\n\t    (x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n\t\n\t  if (point.alpha) {\n\t    point = { x: point.x, y: point.y, alpha: point.alpha };\n\t  }\n\t\n\t  return point;\n\t}\n\t\n\tfunction pathToAbsolute(pathArray) {\n\t\n\t  var res = [], x = 0, y = 0, mx = 0, my = 0, start = 0;\n\t  if (pathArray[0][0] === 'M') {\n\t    x = +pathArray[0][1];\n\t    y = +pathArray[0][2];\n\t    mx = x;\n\t    my = y;\n\t    start++;\n\t    res[0] = ['M', x, y];\n\t  }\n\t\n\t  var dots,crz = pathArray.length===3 && pathArray[0][0]==='M' &&\n\t    pathArray[1][0].toUpperCase()==='R' && pathArray[2][0].toUpperCase()==='Z';\n\t\n\t  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n\t    res.push(r = []);\n\t    pa = pathArray[i];\n\t    if (pa[0] !== String.prototype.toUpperCase.call(pa[0])) {\n\t      r[0] = String.prototype.toUpperCase.call(pa[0]);\n\t      switch (r[0]) {\n\t        case 'A':\n\t          r[1] = pa[1];\n\t          r[2] = pa[2];\n\t          r[3] = pa[3];\n\t          r[4] = pa[4];\n\t          r[5] = pa[5];\n\t          r[6] = +(pa[6] + x);\n\t          r[7] = +(pa[7] + y);\n\t          break;\n\t        case 'V':\n\t          r[1] = +pa[1] + y;\n\t          break;\n\t        case 'H':\n\t          r[1] = +pa[1] + x;\n\t          break;\n\t        case 'R':\n\t          dots = [x, y].concat(pa.slice(1));\n\t          for (var j = 2, jj = dots.length; j < jj; j++) {\n\t            dots[j] = +dots[j] + x;\n\t            dots[++j] = +dots[j] + y;\n\t          }\n\t          res.pop();\n\t          res = res.concat(catmullRom2bezier(dots, crz));\n\t          break;\n\t        case 'M':\n\t          mx = +pa[1] + x;\n\t          my = +pa[2] + y;\n\t          break;\n\t        default:\n\t          for (j = 1, jj = pa.length; j < jj; j++) {\n\t            r[j] = +pa[j] + ((j % 2) ? x : y);\n\t          }\n\t      }\n\t    } else if (pa[0] === 'R') {\n\t      dots = [x, y].concat(pa.slice(1));\n\t      res.pop();\n\t      res = res.concat(catmullRom2bezier(dots, crz));\n\t      r = ['R'].concat(pa.slice(-2));\n\t    } else {\n\t      for (var k = 0, kk = pa.length; k < kk; k++) {\n\t        r[k] = pa[k];\n\t      }\n\t    }\n\t    switch (r[0]) {\n\t      case 'Z':\n\t        x = mx;\n\t        y = my;\n\t        break;\n\t      case 'H':\n\t        x = r[1];\n\t        break;\n\t      case 'V':\n\t        y = r[1];\n\t        break;\n\t      case 'M':\n\t        mx = r[r.length - 2];\n\t        my = r[r.length - 1];\n\t        break;\n\t      default:\n\t        x = r[r.length - 2];\n\t        y = r[r.length - 1];\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction path2curve(path, path2) {\n\t\n\t  var p = pathToAbsolute(path), p2 = path2 && pathToAbsolute(path2),\n\t    attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n\t    attrs2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n\t\n\t    processPath = function(path, d, pcom) {\n\t      var nx, ny, tq = { T: 1, Q: 1 };\n\t      if (!path) { return ['C', d.x, d.y, d.x, d.y, d.x, d.y]; }\n\t      if (!(path[0] in tq)) { d.qx = d.qy = null; }\n\t      switch (path[0]) {\n\t        case 'M':\n\t          d.X = path[1];\n\t          d.Y = path[2];\n\t          break;\n\t        case 'A':\n\t          path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n\t          break;\n\t        case 'S':\n\t          if (pcom === 'C' || pcom === 'S') {\n\t            nx = d.x * 2 - d.bx;\n\t            ny = d.y * 2 - d.by;\n\t          } else {\n\t            nx = d.x;\n\t            ny = d.y;\n\t          }\n\t          path = ['C', nx, ny].concat(path.slice(1));\n\t          break;\n\t        case 'T':\n\t          if (pcom === 'Q' || pcom === 'T') {\n\t            d.qx = d.x * 2 - d.qx;\n\t            d.qy = d.y * 2 - d.qy;\n\t          } else {\n\t            d.qx = d.x;\n\t            d.qy = d.y;\n\t          }\n\t          path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n\t          break;\n\t        case 'Q':\n\t          d.qx = path[1];\n\t          d.qy = path[2];\n\t          path = ['C'].concat(q2c(d.x,d.y,path[1],path[2],path[3],path[4]));\n\t          break;\n\t        case 'L':\n\t          path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\n\t          break;\n\t        case 'H':\n\t          path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\n\t          break;\n\t        case 'V':\n\t          path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\n\t          break;\n\t        case 'Z':\n\t          path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\n\t          break;\n\t      }\n\t      return path;\n\t    },\n\t\n\t    fixArc = function(pp, i) {\n\t      if (pp[i].length > 7) {\n\t        pp[i].shift();\n\t        var pi = pp[i];\n\t        while (pi.length) {\n\t          pcoms1[i] = 'A';\n\t          if (p2) { pcoms2[i] = 'A'; }\n\t          pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n\t        }\n\t        pp.splice(i, 1);\n\t        ii = Math.max(p.length, p2 && p2.length || 0);\n\t      }\n\t    },\n\t\n\t    fixM = function(path1, path2, a1, a2, i) {\n\t      if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {\n\t        path2.splice(i, 0, ['M', a2.x, a2.y]);\n\t        a1.bx = 0;\n\t        a1.by = 0;\n\t        a1.x = path1[i][1];\n\t        a1.y = path1[i][2];\n\t        ii = Math.max(p.length, p2 && p2.length || 0);\n\t      }\n\t    },\n\t\n\t    pcoms1 = [], // path commands of original path p\n\t    pcoms2 = [], // path commands of original path p2\n\t    pfirst = '', // temporary holder for original path command\n\t    pcom = ''; // holder for previous path command of original path\n\t\n\t  for (var i = 0, ii = Math.max(p.length, p2 && p2.length || 0); i < ii; i++) {\n\t    if (p[i]) { pfirst = p[i][0]; } // save current path command\n\t\n\t    if (pfirst !== 'C') {\n\t      pcoms1[i] = pfirst; // Save current path command\n\t      if (i) { pcom = pcoms1[i - 1]; } // Get previous path command pcom\n\t    }\n\t    p[i] = processPath(p[i], attrs, pcom);\n\t\n\t    if (pcoms1[i] !== 'A' && pfirst === 'C') { pcoms1[i] = 'C'; }\n\t\n\t    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\t\n\t    if (p2) { // the same procedures is done to p2\n\t      if (p2[i]) { pfirst = p2[i][0]; }\n\t      if (pfirst !== 'C') {\n\t        pcoms2[i] = pfirst;\n\t        if (i) { pcom = pcoms2[i - 1]; }\n\t      }\n\t      p2[i] = processPath(p2[i], attrs2, pcom);\n\t\n\t      if (pcoms2[i] !== 'A' && pfirst === 'C') { pcoms2[i] = 'C'; }\n\t\n\t      fixArc(p2, i);\n\t    }\n\t    fixM(p, p2, attrs, attrs2, i);\n\t    fixM(p2, p, attrs2, attrs, i);\n\t    var seg = p[i], seg2 = p2 && p2[i], seglen = seg.length,\n\t      seg2len = p2 && seg2.length;\n\t    attrs.x = seg[seglen - 2];\n\t    attrs.y = seg[seglen - 1];\n\t    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n\t    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n\t    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n\t    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n\t    attrs2.x = p2 && seg2[seg2len - 2];\n\t    attrs2.y = p2 && seg2[seg2len - 1];\n\t  }\n\t\n\t  return p2 ? [p, p2] : p;\n\t}\n\t\n\tfunction a2c(x1, y1, rx, ry, angle, lac, sweep_flag, x2, y2, recursive) {\n\t  // for more information of where this Math came from visit:\n\t  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n\t  var PI = Math.PI, _120 = PI * 120 / 180, f1, f2, cx, cy,\n\t    rad = PI / 180 * (+angle || 0), res = [], xy,\n\t    rotate = function (x, y, rad) {\n\t      var X = x * Math.cos(rad) - y * Math.sin(rad),\n\t        Y = x * Math.sin(rad) + y * Math.cos(rad);\n\t      return { x: X, y: Y };\n\t    };\n\t  if (!recursive) {\n\t    xy = rotate(x1, y1, -rad);\n\t    x1 = xy.x;\n\t    y1 = xy.y;\n\t    xy = rotate(x2, y2, -rad);\n\t    x2 = xy.x;\n\t    y2 = xy.y;\n\t    var x = (x1 - x2) / 2, y = (y1 - y2) / 2,\n\t      h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n\t    if (h > 1) {\n\t      h = Math.sqrt(h);\n\t      rx = h * rx;\n\t      ry = h * ry;\n\t    }\n\t    var rx2 = rx * rx, ry2 = ry * ry,\n\t      k = (lac === sweep_flag ? -1 : 1) * Math.sqrt(Math.abs\n\t        ((rx2 * ry2 - rx2 * y * y - ry2 * x * x)/(rx2 * y * y + ry2 * x * x)));\n\t\n\t    cx = k * rx * y / ry + (x1 + x2) / 2;\n\t    cy = k * -ry * x / rx + (y1 + y2) / 2;\n\t    f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\n\t    f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n\t\n\t    f1 = x1 < cx ? PI - f1 : f1;\n\t    f2 = x2 < cx ? PI - f2 : f2;\n\t\n\t    if (f1 < 0) { f1 = PI * 2 + f1; }\n\t    if (f2 < 0) { f2 = PI * 2 + f2; }\n\t\n\t    if (sweep_flag && f1 > f2) {\n\t      f1 = f1 - PI * 2;\n\t    }\n\t    if (!sweep_flag && f2 > f1) {\n\t      f2 = f2 - PI * 2;\n\t    }\n\t  } else {\n\t    f1 = recursive[0];\n\t    f2 = recursive[1];\n\t    cx = recursive[2];\n\t    cy = recursive[3];\n\t  }\n\t  var df = f2 - f1;\n\t  if (Math.abs(df) > _120) {\n\t    var f2old = f2, x2old = x2, y2old = y2;\n\t    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n\t    x2 = cx + rx * Math.cos(f2);\n\t    y2 = cy + ry * Math.sin(f2);\n\t    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old,\n\t      [f2, f2old, cx, cy]);\n\t  }\n\t  df = f2 - f1;\n\t  var c1 = Math.cos(f1),\n\t    s1 = Math.sin(f1),\n\t    c2 = Math.cos(f2),\n\t    s2 = Math.sin(f2),\n\t    t = Math.tan(df / 4),\n\t    hx = 4 / 3 * rx * t,\n\t    hy = 4 / 3 * ry * t,\n\t    m1 = [x1, y1],\n\t    m2 = [x1 + hx * s1, y1 - hy * c1],\n\t    m3 = [x2 + hx * s2, y2 - hy * c2],\n\t    m4 = [x2, y2];\n\t  m2[0] = 2 * m1[0] - m2[0];\n\t  m2[1] = 2 * m1[1] - m2[1];\n\t  if (recursive) {\n\t    return [m2, m3, m4].concat(res);\n\t  } else {\n\t    res = [m2, m3, m4].concat(res).join().split(',');\n\t    var newres = [];\n\t    for (var i = 0, ii = res.length; i < ii; i++) {\n\t      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i],\n\t        res[i + 1], rad).x;\n\t    }\n\t    return newres;\n\t  }\n\t}\n\t\n\t// http://schepers.cc/getting-to-the-point\n\tfunction catmullRom2bezier(crp, z) {\n\t  var d = [];\n\t  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n\t    var p = [{\n\t      x: +crp[i - 2],\n\t      y: +crp[i - 1]\n\t    }, {\n\t      x: +crp[i],\n\t      y: +crp[i + 1]\n\t    }, {\n\t      x: +crp[i + 2],\n\t      y: +crp[i + 3]\n\t    }, {\n\t      x: +crp[i + 4],\n\t      y: +crp[i + 5]\n\t    }];\n\t    if (z) {\n\t      if (!i) {\n\t        p[0] = {\n\t          x: +crp[iLen - 2],\n\t          y: +crp[iLen - 1]\n\t        };\n\t      } else if (iLen - 4 === i) {\n\t        p[3] = {\n\t          x: +crp[0],\n\t          y: +crp[1]\n\t        };\n\t      } else if (iLen - 2 === i) {\n\t        p[2] = {\n\t          x: +crp[0],\n\t          y: +crp[1]\n\t        };\n\t        p[3] = {\n\t          x: +crp[2],\n\t          y: +crp[3]\n\t        };\n\t      }\n\t    } else {\n\t      if (iLen - 4 === i) {\n\t        p[3] = p[2];\n\t      } else if (!i) {\n\t        p[0] = {\n\t          x: +crp[i],\n\t          y: +crp[i + 1]\n\t        };\n\t      }\n\t    }\n\t    d.push(['C', (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y +\n\t      p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y -\n\t      p[3].y) / 6, p[2].x, p[2].y ]);\n\t  }\n\t\n\t  return d;\n\t}\n\t\n\tfunction l2c(x1, y1, x2, y2) { return [x1, y1, x2, y2, x2, y2]; }\n\t\n\tfunction q2c(x1, y1, ax, ay, x2, y2) {\n\t  var _13 = 1 / 3, _23 = 2 / 3;\n\t  return [\n\t    _13 * x1 + _23 * ax, _13 * y1 + _23 * ay,\n\t    _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2\n\t  ];\n\t}\n\t\n\tfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n\t  if (z == null) { z = 1; }\n\t  z = z > 1 ? 1 : z < 0 ? 0 : z;\n\t  var z2 = z / 2,\n\t    n = 12, Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873,\n\t       -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816],\n\t    sum = 0, Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032,\n\t      0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472 ];\n\t  for (var i = 0; i < n; i++) {\n\t    var ct = z2 * Tvalues[i] + z2,\n\t      xbase = base3(ct, x1, x2, x3, x4),\n\t      ybase = base3(ct, y1, y2, y3, y4),\n\t      comb = xbase * xbase + ybase * ybase;\n\t    sum += Cvalues[i] * Math.sqrt(comb);\n\t  }\n\t  return z2 * sum;\n\t}\n\t\n\tfunction getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n\t  if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n\t    return;\n\t  }\n\t  var t = 1, step = t / 2, t2 = t - step, l, e = 0.01;\n\t  l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t  while (Math.abs(l - ll) > e) {\n\t    step /= 2;\n\t    t2 += (l < ll ? 1 : -1) * step;\n\t    l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t  }\n\t  return t2;\n\t}\n\t\n\tfunction base3(t, p1, p2, p3, p4) {\n\t  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n\t    t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n\t  return t * t2 - 3 * p1 + 3 * p2;\n\t}\n\t\n\tfunction cacheKey() {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  i = args.length;\n\t  var hash = '';\n\t  while (i--) {\n\t    hash += (args[i] === Object(args[i])) ?\n\t      JSON.stringify(args[i]) : args[i];\n\t  }\n\t  return hash;\n\t}\n\t\n\tmodule.exports = p5.Font;\n\t\n\t},{\"../core/constants\":36,\"../core/core\":37}],73:[function(_dereq_,module,exports){\n\t/**\n\t * @module Data\n\t * @submodule Array Functions\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/**\n\t * Adds a value to the end of an array. Extends the length of\n\t * the array by one. Maps to Array.push().\n\t *\n\t * @method append\n\t * @param {Array} array Array to append\n\t * @param {any} value to be added to the Array\n\t * @example\n\t * <div class = \"norender\"><code>\n\t * function setup() {\n\t *\n\t * var myArray = new Array(\"Mango\", \"Apple\", \"Papaya\")\n\t * print(myArray) // [\"Mango\", \"Apple\", \"Papaya\"]\n\t *\n\t * append(myArray, \"Peach\")\n\t * print(myArray) // [\"Mango\", \"Apple\", \"Papaya\", \"Peach\"]\n\t *\n\t * }\n\t * </div></code>\n\t */\n\tp5.prototype.append = function(array, value) {\n\t  array.push(value);\n\t  return array;\n\t};\n\t\n\t/**\n\t * Copies an array (or part of an array) to another array. The src array is\n\t * copied to the dst array, beginning at the position specified by\n\t * srcPosition and into the position specified by dstPosition. The number of\n\t * elements to copy is determined by length. Note that copying values\n\t * overwrites existing values in the destination array. To append values\n\t * instead of overwriting them, use concat().\n\t * <br><br>\n\t * The simplified version with only two arguments, arrayCopy(src, dst),\n\t * copies an entire array to another of the same size. It is equivalent to\n\t * arrayCopy(src, 0, dst, 0, src.length).\n\t * <br><br>\n\t * Using this function is far more efficient for copying array data than\n\t * iterating through a for() loop and copying each element individually.\n\t *\n\t * @method arrayCopy\n\t * @param {Array}  src           the source Array\n\t * @param {Number} [srcPosition] starting position in the source Array\n\t * @param {Array}  dst           the destination Array\n\t * @param {Number} [dstPosition] starting position in the destination Array\n\t * @param {Number} [length]      number of Array elements to be copied\n\t *\n\t * @example\n\t *  <div class=\"norender\"><code>\n\t *  function setup() {\n\t *\n\t *    var src = new Array(\"A\", \"B\", \"C\");\n\t *    var dst = new Array( 1 ,  2 ,  3 );\n\t *    var srcPosition = 1;\n\t *    var dstPosition = 0;\n\t *    var length = 2;\n\t *\n\t *    print(src); // [\"A\", \"B\", \"C\"]\n\t *    print(dst); // [ 1 ,  2 ,  3 ]\n\t *\n\t *    arrayCopy(src, srcPosition, dst, dstPosition, length);\n\t *    print(dst); // [\"B\", \"C\", 3]\n\t *\n\t *    }\n\t *  </div></code>\n\t */\n\tp5.prototype.arrayCopy = function(\n\t  src,\n\t  srcPosition,\n\t  dst,\n\t  dstPosition,\n\t  length) {\n\t\n\t  // the index to begin splicing from dst array\n\t  var start,\n\t      end;\n\t\n\t  if (typeof length !== 'undefined') {\n\t\n\t    end = Math.min(length, src.length);\n\t    start = dstPosition;\n\t    src = src.slice(srcPosition, end + srcPosition);\n\t\n\t  } else {\n\t\n\t    if (typeof dst !== 'undefined') { // src, dst, length\n\t      // rename  so we don't get confused\n\t      end = dst;\n\t      end = Math.min(end, src.length);\n\t    } else { // src, dst\n\t      end = src.length;\n\t    }\n\t\n\t    start = 0;\n\t    // rename  so we don't get confused\n\t    dst = srcPosition;\n\t    src = src.slice(0, end);\n\t  }\n\t\n\t  // Since we are not returning the array and JavaScript is pass by reference\n\t  // we must modify the actual values of the array\n\t  // instead of reassigning arrays\n\t  Array.prototype.splice.apply(dst, [start, end].concat(src));\n\t\n\t};\n\t\n\t/**\n\t * Concatenates two arrays, maps to Array.concat(). Does not modify the\n\t * input arrays.\n\t *\n\t * @method concat\n\t * @param {Array} a first Array to concatenate\n\t * @param {Array} b second Array to concatenate\n\t * @return {Array} concatenated array\n\t *\n\t * @example\n\t * <div class = \"norender\"><code>\n\t * function setup() {\n\t *   var arr1 = new Array(\"A\", \"B\", \"C\");\n\t *   var arr2 = new Array( 1 ,  2 ,  3 );\n\t *\n\t *   print(arr1); // [\"A\",\"B\",\"C\"]\n\t *   print(arr2); // [1,2,3]\n\t *\n\t *   var arr3 = concat(arr1, arr2);\n\t *\n\t *   print(arr1); // [\"A\",\"B\",\"C\"]\n\t *   print(arr2); // [1,2,3]\n\t *   print(arr3); // [\"A\",\"B\",\"C\",1,2,3]\n\t *\n\t * }\n\t * </div></code>\n\t */\n\tp5.prototype.concat = function(list0, list1) {\n\t  return list0.concat(list1);\n\t};\n\t\n\t/**\n\t * Reverses the order of an array, maps to Array.reverse()\n\t *\n\t * @method reverse\n\t * @param {Array} list Array to reverse\n\t * @example\n\t * <div class=\"norender\"><code>\n\t * function setup() {\n\t *   var myArray = new Array(\"A\", \"B\", \"C\");\n\t *   print(myArray); // [\"A\",\"B\",\"C\"]\n\t *\n\t *   reverse(myArray);\n\t *   print(myArray); // [\"C\",\"B\",\"A\"]\n\t * }\n\t * </div></code>\n\t */\n\tp5.prototype.reverse = function(list) {\n\t  return list.reverse();\n\t};\n\t\n\t/**\n\t * Decreases an array by one element and returns the shortened array,\n\t * maps to Array.pop().\n\t *\n\t * @method shorten\n\t * @param  {Array} list Array to shorten\n\t * @return {Array} shortened Array\n\t * @example\n\t * <div class = \"norender\"><code>\n\t * function setup() {\n\t *   var myArray = new Array(\"A\", \"B\", \"C\");\n\t *   print(myArray); // [\"A\",\"B\",\"C\"]\n\t *\n\t *   var newArray = shorten(myArray);\n\t *   print(myArray); // [\"A\",\"B\",\"C\"]\n\t *   print(newArray); // [\"A\",\"B\"]\n\t * }\n\t * </div></code>\n\t */\n\tp5.prototype.shorten = function(list) {\n\t  list.pop();\n\t  return list;\n\t};\n\t\n\t/**\n\t * Randomizes the order of the elements of an array. Implements\n\t * <a href=\"http://Bost.Ocks.org/mike/shuffle/\" target=_blank>\n\t * Fisher-Yates Shuffle Algorithm</a>.\n\t *\n\t * @method shuffle\n\t * @param  {Array}   array  Array to shuffle\n\t * @param  {Boolean} [bool] modify passed array\n\t * @return {Array}   shuffled Array\n\t * @example\n\t * <div><code>\n\t * function setup() {\n\t *   var regularArr = ['ABC', 'def', createVector(), TAU, Math.E];\n\t *   print(regularArr);\n\t *   shuffle(regularArr, true); // force modifications to passed array\n\t *   print(regularArr);\n\t *\n\t *   // By default shuffle() returns a shuffled cloned array:\n\t *   var newArr = shuffle(regularArr);\n\t *   print(regularArr);\n\t *   print(newArr);\n\t * }\n\t * </code></div>\n\t */\n\tp5.prototype.shuffle = function(arr, bool) {\n\t  var isView = ArrayBuffer && ArrayBuffer.isView && ArrayBuffer.isView(arr);\n\t  arr = bool || isView ? arr : arr.slice();\n\t\n\t  var rnd, tmp, idx = arr.length;\n\t  while (idx > 1) {\n\t    rnd = Math.random()*idx | 0;\n\t\n\t    tmp = arr[--idx];\n\t    arr[idx] = arr[rnd];\n\t    arr[rnd] = tmp;\n\t  }\n\t\n\t  return arr;\n\t};\n\t\n\t/**\n\t * Sorts an array of numbers from smallest to largest, or puts an array of\n\t * words in alphabetical order. The original array is not modified; a\n\t * re-ordered array is returned. The count parameter states the number of\n\t * elements to sort. For example, if there are 12 elements in an array and\n\t * count is set to 5, only the first 5 elements in the array will be sorted.\n\t *\n\t * @method sort\n\t * @param {Array} list Array to sort\n\t * @param {Number} [count] number of elements to sort, starting from 0\n\t *\n\t * @example\n\t * <div class = \"norender\"><code>\n\t * function setup() {\n\t *   var words = new Array(\"banana\", \"apple\", \"pear\",\"lime\");\n\t *   print(words); // [\"banana\", \"apple\", \"pear\", \"lime\"]\n\t *   var count = 4; // length of array\n\t *\n\t *   words = sort(words, count);\n\t *   print(words); // [\"apple\", \"banana\", \"lime\", \"pear\"]\n\t * }\n\t * </div></code>\n\t * <div class = \"norender\"><code>\n\t * function setup() {\n\t *   var numbers = new Array(2,6,1,5,14,9,8,12);\n\t *   print(numbers); // [2,6,1,5,14,9,8,12]\n\t *   var count = 5; // Less than the length of the array\n\t *\n\t *   numbers = sort(numbers, count);\n\t *   print(numbers); // [1,2,5,6,14,9,8,12]\n\t * }\n\t * </div></code>\n\t */\n\tp5.prototype.sort = function(list, count) {\n\t  var arr = count ? list.slice(0, Math.min(count, list.length)) : list;\n\t  var rest = count ? list.slice(Math.min(count, list.length)) : [];\n\t  if (typeof arr[0] === 'string') {\n\t    arr = arr.sort();\n\t  } else {\n\t    arr = arr.sort(function(a,b){return a-b;});\n\t  }\n\t  return arr.concat(rest);\n\t};\n\t\n\t/**\n\t * Inserts a value or an array of values into an existing array. The first\n\t * parameter specifies the initial array to be modified, and the second\n\t * parameter defines the data to be inserted. The third parameter is an index\n\t * value which specifies the array position from which to insert data.\n\t * (Remember that array index numbering starts at zero, so the first position\n\t * is 0, the second position is 1, and so on.)\n\t *\n\t * @method splice\n\t * @param {Array}  list Array to splice into\n\t * @param {any}    value value to be spliced in\n\t * @param {Number} position in the array from which to insert data\n\t *\n\t * @example\n\t * <div class = \"norender\"><code>\n\t * function setup() {\n\t *   var myArray = new Array(0,1,2,3,4);\n\t *   var insArray = new Array(\"A\",\"B\",\"C\");\n\t *   print(myArray); // [0,1,2,3,4]\n\t *   print(insArray); // [\"A\",\"B\",\"C\"]\n\t *\n\t *   splice(myArray, insArray, 3);\n\t *   print(myArray); // [0,1,2,\"A\",\"B\",\"C\",3,4]\n\t * }\n\t * </div></code>\n\t */\n\tp5.prototype.splice = function(list, value, index) {\n\t\n\t  // note that splice returns spliced elements and not an array\n\t  Array.prototype.splice.apply(list, [index, 0].concat(value));\n\t\n\t  return list;\n\t};\n\t\n\t/**\n\t * Extracts an array of elements from an existing array. The list parameter\n\t * defines the array from which the elements will be copied, and the start\n\t * and count parameters specify which elements to extract. If no count is\n\t * given, elements will be extracted from the start to the end of the array.\n\t * When specifying the start, remember that the first array element is 0.\n\t * This function does not change the source array.\n\t *\n\t * @method subset\n\t * @param  {Array}  list    Array to extract from\n\t * @param  {Number} start   position to begin\n\t * @param  {Number} [count] number of values to extract\n\t * @return {Array}          Array of extracted elements\n\t *\n\t * @example\n\t * <div class = \"norender\"><code>\n\t * function setup() {\n\t *   var myArray = new Array(1,2,3,4,5);\n\t *   print(myArray); // [1,2,3,4,5]\n\t *\n\t *   var sub1 = subset(myArray, 0, 3);\n\t *   var sub2 = subset(myArray, 2, 2);\n\t *   print(sub1); // [1,2,3]\n\t *   print(sub2); // [3,4]\n\t * }\n\t * </div></code>\n\t */\n\tp5.prototype.subset = function(list, start, count) {\n\t  if (typeof count !== 'undefined') {\n\t    return list.slice(start, start + count);\n\t  } else {\n\t    return list.slice(start, list.length);\n\t  }\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],74:[function(_dereq_,module,exports){\n\t/**\n\t * @module Data\n\t * @submodule Conversion\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/**\n\t * Converts a string to its floating point representation. The contents of a\n\t * string must resemble a number, or NaN (not a number) will be returned.\n\t * For example, float(\"1234.56\") evaluates to 1234.56, but float(\"giraffe\")\n\t * will return NaN.\n\t *\n\t * @method float\n\t * @param {String}  str float string to parse\n\t * @return {Number}     floating point representation of string\n\t * @example\n\t * <div><code>\n\t * var str = '20';\n\t * var diameter = float(str);\n\t * ellipse(width/2, height/2, diameter, diameter);\n\t * </code></div>\n\t *\n\t * @alt\n\t * 20 by 20 white ellipse in the center of the canvas\n\t *\n\t */\n\tp5.prototype.float = function(str) {\n\t  return parseFloat(str);\n\t};\n\t\n\t/**\n\t * Converts a boolean, string, or float to its integer representation.\n\t * When an array of values is passed in, then an int array of the same length\n\t * is returned.\n\t *\n\t * @method int\n\t * @param {String|Boolean|Number|Array} n value to parse\n\t * @return {Number}                     integer representation of value\n\t * @example\n\t * <div class='norender'><code>\n\t * print(int(\"10\")); // 10\n\t * print(int(10.31)); // 10\n\t * print(int(-10)); // -10\n\t * print(int(true)); // 1\n\t * print(int(false)); // 0\n\t * print(int([false, true, \"10.3\", 9.8])); // [0, 1, 10, 9]\n\t * </code></div>\n\t */\n\tp5.prototype.int = function(n, radix) {\n\t  if (typeof n === 'string') {\n\t    radix = radix || 10;\n\t    return parseInt(n, radix);\n\t  } else if (typeof n === 'number') {\n\t    return n | 0;\n\t  } else if (typeof n === 'boolean') {\n\t    return n ? 1 : 0;\n\t  } else if (n instanceof Array) {\n\t    return n.map(function(n) { return p5.prototype.int(n, radix); });\n\t  }\n\t};\n\t\n\t/**\n\t * Converts a boolean, string or number to its string representation.\n\t * When an array of values is passed in, then an array of strings of the same\n\t * length is returned.\n\t *\n\t * @method str\n\t * @param {String|Boolean|Number|Array} n value to parse\n\t * @return {String}                     string representation of value\n\t * @example\n\t * <div class='norender'><code>\n\t * print(str(\"10\"));  // \"10\"\n\t * print(str(10.31)); // \"10.31\"\n\t * print(str(-10));   // \"-10\"\n\t * print(str(true));  // \"true\"\n\t * print(str(false)); // \"false\"\n\t * print(str([true, \"10.3\", 9.8])); // [ \"true\", \"10.3\", \"9.8\" ]\n\t * </code></div>\n\t */\n\tp5.prototype.str = function(n) {\n\t  if (n instanceof Array) {\n\t    return n.map(p5.prototype.str);\n\t  } else {\n\t    return String(n);\n\t  }\n\t};\n\t\n\t/**\n\t * Converts a number or string to its boolean representation.\n\t * For a number, any non-zero value (positive or negative) evaluates to true,\n\t * while zero evaluates to false. For a string, the value \"true\" evaluates to\n\t * true, while any other value evaluates to false. When an array of number or\n\t * string values is passed in, then a array of booleans of the same length is\n\t * returned.\n\t *\n\t * @method boolean\n\t * @param {String|Boolean|Number|Array} n value to parse\n\t * @return {Boolean}                    boolean representation of value\n\t * @example\n\t * <div class='norender'><code>\n\t * print(boolean(0));               // false\n\t * print(boolean(1));               // true\n\t * print(boolean(\"true\"));          // true\n\t * print(boolean(\"abcd\"));          // false\n\t * print(boolean([0, 12, \"true\"])); // [false, true, false]\n\t * </code></div>\n\t */\n\tp5.prototype.boolean = function(n) {\n\t  if (typeof n === 'number') {\n\t    return n !== 0;\n\t  } else if (typeof n === 'string') {\n\t    return n.toLowerCase() === 'true';\n\t  } else if (typeof n === 'boolean') {\n\t    return n;\n\t  } else if (n instanceof Array) {\n\t    return n.map(p5.prototype.boolean);\n\t  }\n\t};\n\t\n\t/**\n\t * Converts a number, string or boolean to its byte representation.\n\t * A byte can be only a whole number between -128 and 127, so when a value\n\t * outside of this range is converted, it wraps around to the corresponding\n\t * byte representation. When an array of number, string or boolean values is\n\t * passed in, then an array of bytes the same length is returned.\n\t *\n\t * @method byte\n\t * @param {String|Boolean|Number|Array} n value to parse\n\t * @return {Number}                     byte representation of value\n\t * @example\n\t * <div class='norender'><code>\n\t * print(byte(127));               // 127\n\t * print(byte(128));               // -128\n\t * print(byte(23.4));              // 23\n\t * print(byte(\"23.4\"));            // 23\n\t * print(byte(true));              // 1\n\t * print(byte([0, 255, \"100\"]));   // [0, -1, 100]\n\t * </code></div>\n\t */\n\tp5.prototype.byte = function(n) {\n\t  var nn = p5.prototype.int(n, 10);\n\t  if (typeof nn === 'number') {\n\t    return ((nn + 128) % 256) - 128;\n\t  } else if (nn instanceof Array) {\n\t    return nn.map(p5.prototype.byte);\n\t  }\n\t};\n\t\n\t/**\n\t * Converts a number or string to its corresponding single-character\n\t * string representation. If a string parameter is provided, it is first\n\t * parsed as an integer and then translated into a single-character string.\n\t * When an array of number or string values is passed in, then an array of\n\t * single-character strings of the same length is returned.\n\t *\n\t * @method char\n\t * @param {String|Number|Array} n value to parse\n\t * @return {String}             string representation of value\n\t * @example\n\t * <div class='norender'><code>\n\t * print(char(65));                     // \"A\"\n\t * print(char(\"65\"));                   // \"A\"\n\t * print(char([65, 66, 67]));           // [ \"A\", \"B\", \"C\" ]\n\t * print(join(char([65, 66, 67]), '')); // \"ABC\"\n\t * </code></div>\n\t */\n\tp5.prototype.char = function(n) {\n\t  if (typeof n === 'number' && !isNaN(n)) {\n\t    return String.fromCharCode(n);\n\t  } else if (n instanceof Array) {\n\t    return n.map(p5.prototype.char);\n\t  } else if (typeof n === 'string') {\n\t    return p5.prototype.char(parseInt(n, 10));\n\t  }\n\t};\n\t\n\t/**\n\t * Converts a single-character string to its corresponding integer\n\t * representation. When an array of single-character string values is passed\n\t * in, then an array of integers of the same length is returned.\n\t *\n\t * @method unchar\n\t * @param {String|Array} n value to parse\n\t * @return {Number}      integer representation of value\n\t * @example\n\t * <div class='norender'><code>\n\t * print(unchar(\"A\"));               // 65\n\t * print(unchar([\"A\", \"B\", \"C\"]));   // [ 65, 66, 67 ]\n\t * print(unchar(split(\"ABC\", \"\")));  // [ 65, 66, 67 ]\n\t * </code></div>\n\t */\n\tp5.prototype.unchar = function(n) {\n\t  if (typeof n === 'string' && n.length === 1) {\n\t    return n.charCodeAt(0);\n\t  } else if (n instanceof Array) {\n\t    return n.map(p5.prototype.unchar);\n\t  }\n\t};\n\t\n\t/**\n\t * Converts a number to a string in its equivalent hexadecimal notation. If a\n\t * second parameter is passed, it is used to set the number of characters to\n\t * generate in the hexadecimal notation. When an array is passed in, an\n\t * array of strings in hexadecimal notation of the same length is returned.\n\t *\n\t * @method hex\n\t * @param {Number|Array} n value to parse\n\t * @return {String}      hexadecimal string representation of value\n\t * @example\n\t * <div class='norender'><code>\n\t * print(hex(255));               // \"000000FF\"\n\t * print(hex(255, 6));            // \"0000FF\"\n\t * print(hex([0, 127, 255], 6));  // [ \"000000\", \"00007F\", \"0000FF\" ]\n\t * </code></div>\n\t */\n\tp5.prototype.hex = function(n, digits) {\n\t  digits = (digits === undefined || digits === null) ? digits = 8 : digits;\n\t  if (n instanceof Array) {\n\t    return n.map(function(n) { return p5.prototype.hex(n, digits); });\n\t  } else if (typeof n === 'number') {\n\t    if (n < 0) {\n\t      n = 0xFFFFFFFF + n + 1;\n\t    }\n\t    var hex = Number(n).toString(16).toUpperCase();\n\t    while (hex.length < digits) {\n\t      hex = '0' + hex;\n\t    }\n\t    if (hex.length >= digits) {\n\t      hex = hex.substring(hex.length - digits, hex.length);\n\t    }\n\t    return hex;\n\t  }\n\t};\n\t\n\t/**\n\t * Converts a string representation of a hexadecimal number to its equivalent\n\t * integer value. When an array of strings in hexadecimal notation is passed\n\t * in, an array of integers of the same length is returned.\n\t *\n\t * @method unhex\n\t * @param {String|Array} n value to parse\n\t * @return {Number}      integer representation of hexadecimal value\n\t * @example\n\t * <div class='norender'><code>\n\t * print(unhex(\"A\"));                // 10\n\t * print(unhex(\"FF\"));               // 255\n\t * print(unhex([\"FF\", \"AA\", \"00\"])); // [ 255, 170, 0 ]\n\t * </code></div>\n\t */\n\tp5.prototype.unhex = function(n) {\n\t  if (n instanceof Array) {\n\t    return n.map(p5.prototype.unhex);\n\t  } else {\n\t    return parseInt('0x' + n, 16);\n\t  }\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],75:[function(_dereq_,module,exports){\n\t/**\n\t * @module Data\n\t * @submodule String Functions\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t//return p5; //LM is this a mistake?\n\t\n\t/**\n\t * Combines an array of Strings into one String, each separated by the\n\t * character(s) used for the separator parameter. To join arrays of ints or\n\t * floats, it's necessary to first convert them to Strings using nf() or\n\t * nfs().\n\t *\n\t * @method join\n\t * @param  {Array}  list      array of Strings to be joined\n\t * @param  {String} separator String to be placed between each item\n\t * @return {String}           joined String\n\t * @example\n\t * <div>\n\t * <code>\n\t * var array = [\"Hello\", \"world!\"]\n\t * var separator = \" \"\n\t * var message = join(array, separator);\n\t * text(message, 5, 50);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * \"hello world!\" displayed middle left of canvas.\n\t *\n\t */\n\tp5.prototype.join = function(list, separator) {\n\t  return list.join(separator);\n\t};\n\t\n\t/**\n\t * This function is used to apply a regular expression to a piece of text,\n\t * and return matching groups (elements found inside parentheses) as a\n\t * String array. If there are no matches, a null value will be returned.\n\t * If no groups are specified in the regular expression, but the sequence\n\t * matches, an array of length 1 (with the matched text as the first element\n\t * of the array) will be returned.\n\t * <br><br>\n\t * To use the function, first check to see if the result is null. If the\n\t * result is null, then the sequence did not match at all. If the sequence\n\t * did match, an array is returned.\n\t * <br><br>\n\t * If there are groups (specified by sets of parentheses) in the regular\n\t * expression, then the contents of each will be returned in the array.\n\t * Element [0] of a regular expression match returns the entire matching\n\t * string, and the match groups start at element [1] (the first group is [1],\n\t * the second [2], and so on).\n\t *\n\t * @method match\n\t * @param  {String} str    the String to be searched\n\t * @param  {String} regexp the regexp to be used for matching\n\t * @return {Array}         Array of Strings found\n\t * @example\n\t * <div>\n\t * <code>\n\t * var string = \"Hello p5js*!\"\n\t * var regexp = \"p5js\\\\*\"\n\t * var match = match(string, regexp);\n\t * text(match, 5, 50);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * \"p5js*\" displayed middle left of canvas.\n\t *\n\t */\n\tp5.prototype.match =  function(str, reg) {\n\t  return str.match(reg);\n\t};\n\t\n\t/**\n\t * This function is used to apply a regular expression to a piece of text,\n\t * and return a list of matching groups (elements found inside parentheses)\n\t * as a two-dimensional String array. If there are no matches, a null value\n\t * will be returned. If no groups are specified in the regular expression,\n\t * but the sequence matches, a two dimensional array is still returned, but\n\t * the second dimension is only of length one.\n\t * <br><br>\n\t * To use the function, first check to see if the result is null. If the\n\t * result is null, then the sequence did not match at all. If the sequence\n\t * did match, a 2D array is returned.\n\t * <br><br>\n\t * If there are groups (specified by sets of parentheses) in the regular\n\t * expression, then the contents of each will be returned in the array.\n\t * Assuming a loop with counter variable i, element [i][0] of a regular\n\t * expression match returns the entire matching string, and the match groups\n\t * start at element [i][1] (the first group is [i][1], the second [i][2],\n\t * and so on).\n\t *\n\t * @method matchAll\n\t * @param  {String} str    the String to be searched\n\t * @param  {String} regexp the regexp to be used for matching\n\t * @return {Array}         2d Array of Strings found\n\t * @example\n\t * <div class=\"norender\">\n\t * <code>\n\t * var string = \"Hello p5js*! Hello world!\"\n\t * var regexp = \"Hello\"\n\t * matchAll(string, regexp);\n\t * </code>\n\t * </div>\n\t\n\t */\n\tp5.prototype.matchAll = function(str, reg) {\n\t  var re = new RegExp(reg, 'g');\n\t  var match = re.exec(str);\n\t  var matches = [];\n\t  while (match !== null) {\n\t    matches.push(match);\n\t    // matched text: match[0]\n\t    // match start: match.index\n\t    // capturing group n: match[n]\n\t    match = re.exec(str);\n\t  }\n\t  return matches;\n\t};\n\t\n\t/**\n\t * Utility function for formatting numbers into strings. There are two\n\t * versions: one for formatting floats, and one for formatting ints.\n\t * The values for the digits, left, and right parameters should always\n\t * be positive integers.\n\t *\n\t * @method nf\n\t * @param {Number|Array} num      the Number to format\n\t * @param {Number}       [left]   number of digits to the left of the\n\t *                                decimal point\n\t * @param {Number}       [right]  number of digits to the right of the\n\t *                                decimal point\n\t * @return {String|Array}         formatted String\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup() {\n\t *   background(200);\n\t *   var num = 112.53106115;\n\t *\n\t *   noStroke();\n\t *   fill(0);\n\t *   textSize(14);\n\t *   // Draw formatted numbers\n\t *   text(nf(num, 5, 2), 10, 20);\n\t *\n\t *   text(nf(num, 4, 3), 10, 55);\n\t *\n\t *   text(nf(num, 3, 6), 10, 85);\n\t *\n\t *   // Draw dividing lines\n\t *   stroke(120);\n\t *   line(0, 30, width, 30);\n\t *   line(0, 65, width, 65);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * \"0011253\" top left, \"0112.531\" mid left, \"112.531061\" bottom left canvas\n\t *\n\t */\n\tp5.prototype.nf = function () {\n\t  if (arguments[0] instanceof Array) {\n\t    var a = arguments[1];\n\t    var b = arguments[2];\n\t    return arguments[0].map(function (x) {\n\t      return doNf(x, a, b);\n\t    });\n\t  }\n\t  else{\n\t    var typeOfFirst = Object.prototype.toString.call(arguments[0]);\n\t    if(typeOfFirst === '[object Arguments]'){\n\t      if(arguments[0].length===3){\n\t        return this.nf(arguments[0][0],arguments[0][1],arguments[0][2]);\n\t      }\n\t      else if(arguments[0].length===2){\n\t        return this.nf(arguments[0][0],arguments[0][1]);\n\t      }\n\t      else{\n\t        return this.nf(arguments[0][0]);\n\t      }\n\t    }\n\t    else {\n\t      return doNf.apply(this, arguments);\n\t    }\n\t  }\n\t};\n\t\n\tfunction doNf() {\n\t  var num = arguments[0];\n\t  var neg = num < 0;\n\t  var n = neg ? num.toString().substring(1) : num.toString();\n\t  var decimalInd = n.indexOf('.');\n\t  var intPart = decimalInd !== -1 ? n.substring(0, decimalInd) : n;\n\t  var decPart = decimalInd !== -1 ? n.substring(decimalInd + 1) : '';\n\t  var str = neg ? '-' : '';\n\t  if (arguments.length === 3) {\n\t    var decimal = '';\n\t    if(decimalInd !== -1 || arguments[2] - decPart.length > 0){\n\t      decimal = '.';\n\t    }\n\t    if (decPart.length > arguments[2]) {\n\t      decPart = decPart.substring(0, arguments[2]);\n\t    }\n\t    for (var i = 0; i < arguments[1] - intPart.length; i++) {\n\t      str += '0';\n\t    }\n\t    str += intPart;\n\t    str += decimal;\n\t    str += decPart;\n\t    for (var j = 0; j < arguments[2] - decPart.length; j++) {\n\t      str += '0';\n\t    }\n\t    return str;\n\t  }\n\t  else {\n\t    for (var k = 0; k < Math.max(arguments[1] - intPart.length, 0); k++) {\n\t      str += '0';\n\t    }\n\t    str += n;\n\t    return str;\n\t  }\n\t}\n\t\n\t/**\n\t * Utility function for formatting numbers into strings and placing\n\t * appropriate commas to mark units of 1000. There are two versions: one\n\t * for formatting ints, and one for formatting an array of ints. The value\n\t * for the right parameter should always be a positive integer.\n\t *\n\t * @method nfc\n\t * @param  {Number|Array}   num     the Number to format\n\t * @param  {Number}         [right] number of digits to the right of the\n\t *                                  decimal point\n\t * @return {String|Array}           formatted String\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup() {\n\t *   background(200);\n\t *   var num = 11253106.115;\n\t *   var numArr = new Array(1,1,2);\n\t *\n\t *   noStroke();\n\t *   fill(0);\n\t *   textSize(12);\n\t *\n\t *   // Draw formatted numbers\n\t *   text(nfc(num, 4, 2), 10, 30);\n\t *   text(nfc(numArr, 2, 1), 10, 80);\n\t *\n\t *   // Draw dividing line\n\t *   stroke(120);\n\t *   line(0, 50, width, 50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * \"11,253,106.115\" top middle and \"1.00,1.00,2.00\" displayed bottom mid\n\t *\n\t */\n\tp5.prototype.nfc = function () {\n\t  if (arguments[0] instanceof Array) {\n\t    var a = arguments[1];\n\t    return arguments[0].map(function (x) {\n\t      return doNfc(x, a);\n\t    });\n\t  } else {\n\t    return doNfc.apply(this, arguments);\n\t  }\n\t};\n\tfunction doNfc() {\n\t  var num = arguments[0].toString();\n\t  var dec = num.indexOf('.');\n\t  var rem = dec !== -1 ? num.substring(dec) : '';\n\t  var n = dec !== -1 ? num.substring(0, dec) : num;\n\t  n = n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\t  if (arguments[1] === 0) {\n\t    rem = '';\n\t  }\n\t  else if(arguments[1] !== undefined){\n\t    if(arguments[1] > rem.length){\n\t      rem+= dec === -1 ? '.' : '';\n\t      var len = arguments[1] - rem.length + 1;\n\t      for(var i =0; i< len; i++){\n\t        rem += '0';\n\t      }\n\t    }\n\t    else{\n\t      rem = rem.substring(0, arguments[1] + 1);\n\t    }\n\t  }\n\t  return n + rem;\n\t}\n\t\n\t/**\n\t * Utility function for formatting numbers into strings. Similar to nf() but\n\t * puts a \"+\" in front of positive numbers and a \"-\" in front of negative\n\t * numbers. There are two versions: one for formatting floats, and one for\n\t * formatting ints. The values for left, and right parameters\n\t * should always be positive integers.\n\t *\n\t * @method nfp\n\t * @param {Number|Array} num      the Number to format\n\t * @param {Number}       [left]   number of digits to the left of the decimal\n\t *                                point\n\t * @param {Number}       [right]  number of digits to the right of the\n\t *                                decimal point\n\t * @return {String|Array}         formatted String\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup() {\n\t *   background(200);\n\t *   var num1 = 11253106.115;\n\t *   var num2 = -11253106.115;\n\t *\n\t *   noStroke();\n\t *   fill(0);\n\t *   textSize(12);\n\t *\n\t *   // Draw formatted numbers\n\t *   text(nfp(num1, 4, 2), 10, 30);\n\t *   text(nfp(num2, 4, 2), 10, 80);\n\t *\n\t *   // Draw dividing line\n\t *   stroke(120);\n\t *   line(0, 50, width, 50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * \"+11253106.11\" top middle and \"-11253106.11\" displayed bottom middle\n\t *\n\t */\n\tp5.prototype.nfp = function() {\n\t  var nfRes = this.nf.apply(this, arguments);\n\t  if (nfRes instanceof Array) {\n\t    return nfRes.map(addNfp);\n\t  } else {\n\t    return addNfp(nfRes);\n\t  }\n\t};\n\t\n\tfunction addNfp() {\n\t  return (\n\t    parseFloat(arguments[0]) > 0) ?\n\t    '+'+arguments[0].toString() :\n\t    arguments[0].toString();\n\t}\n\t\n\t/**\n\t * Utility function for formatting numbers into strings. Similar to nf() but\n\t * puts a \" \" (space) in front of positive numbers and a \"-\" in front of\n\t * negative numbers. There are two versions: one for formatting floats, and\n\t * one for formatting ints. The values for the digits, left, and right\n\t * parameters should always be positive integers.\n\t *\n\t * @method nfs\n\t * @param {Number|Array} num      the Number to format\n\t * @param {Number}       [left]   number of digits to the left of the decimal\n\t *                                point\n\t * @param {Number}       [right]  number of digits to the right of the\n\t *                                decimal point\n\t * @return {String|Array}         formatted String\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup() {\n\t *   background(200);\n\t *   var num1 = 11253106.115;\n\t *   var num2 = -11253106.115;\n\t *\n\t *   noStroke();\n\t *   fill(0);\n\t *   textSize(12);\n\t *   // Draw formatted numbers\n\t *   text(nfs(num1, 4, 2), 10, 30);\n\t *\n\t *   text(nfs(num2, 4, 2), 10, 80);\n\t *\n\t *   // Draw dividing line\n\t *   stroke(120);\n\t *   line(0, 50, width, 50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * \"11253106.11\" top middle and \"-11253106.11\" displayed bottom middle\n\t *\n\t */\n\tp5.prototype.nfs = function() {\n\t  var nfRes = this.nf.apply(this, arguments);\n\t  if (nfRes instanceof Array) {\n\t    return nfRes.map(addNfs);\n\t  } else {\n\t    return addNfs(nfRes);\n\t  }\n\t};\n\t\n\tfunction addNfs() {\n\t  return (\n\t    parseFloat(arguments[0]) > 0) ?\n\t    ' '+arguments[0].toString() :\n\t    arguments[0].toString();\n\t}\n\t\n\t/**\n\t * The split() function maps to String.split(), it breaks a String into\n\t * pieces using a character or string as the delimiter. The delim parameter\n\t * specifies the character or characters that mark the boundaries between\n\t * each piece. A String[] array is returned that contains each of the pieces.\n\t *\n\t * The splitTokens() function works in a similar fashion, except that it\n\t * splits using a range of characters instead of a specific character or\n\t * sequence.\n\t *\n\t * @method split\n\t * @param  {String} value the String to be split\n\t * @param  {String} delim the String used to separate the data\n\t * @return {Array}  Array of Strings\n\t * @example\n\t * <div>\n\t * <code>\n\t * var names = \"Pat,Xio,Alex\"\n\t * var splitString = split(names, \",\");\n\t * text(splitString[0], 5, 30);\n\t * text(splitString[1], 5, 50);\n\t * text(splitString[2], 5, 70);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * \"pat\" top left, \"Xio\" mid left and \"Alex\" displayed bottom left\n\t *\n\t */\n\tp5.prototype.split = function(str, delim) {\n\t  return str.split(delim);\n\t};\n\t\n\t/**\n\t * The splitTokens() function splits a String at one or many character\n\t * delimiters or \"tokens.\" The delim parameter specifies the character or\n\t * characters to be used as a boundary.\n\t * <br><br>\n\t * If no delim characters are specified, any whitespace character is used to\n\t * split. Whitespace characters include tab (\\t), line feed (\\n), carriage\n\t * return (\\r), form feed (\\f), and space.\n\t *\n\t * @method splitTokens\n\t * @param  {String} value   the String to be split\n\t * @param  {String} [delim] list of individual Strings that will be used as\n\t *                          separators\n\t * @return {Array}          Array of Strings\n\t * @example\n\t * <div class = \"norender\">\n\t * <code>\n\t * function setup() {\n\t *   var myStr = \"Mango, Banana, Lime\";\n\t *   var myStrArr = splitTokens(myStr, \",\");\n\t *\n\t *   print(myStrArr); // prints : [\"Mango\",\" Banana\",\" Lime\"]\n\t * }\n\t * </code>\n\t * </div>\n\t */\n\tp5.prototype.splitTokens = function() {\n\t  var d,sqo,sqc,str;\n\t  str = arguments[1];\n\t  if (arguments.length > 1) {\n\t    sqc = /\\]/g.exec(str);\n\t    sqo = /\\[/g.exec(str);\n\t    if ( sqo && sqc ) {\n\t      str = str.slice(0, sqc.index) + str.slice(sqc.index+1);\n\t      sqo = /\\[/g.exec(str);\n\t      str = str.slice(0, sqo.index) + str.slice(sqo.index+1);\n\t      d = new RegExp('[\\\\['+str+'\\\\]]','g');\n\t    } else if ( sqc ) {\n\t      str = str.slice(0, sqc.index) + str.slice(sqc.index+1);\n\t      d = new RegExp('[' + str + '\\\\]]', 'g');\n\t    } else if(sqo) {\n\t      str = str.slice(0, sqo.index) + str.slice(sqo.index+1);\n\t      d = new RegExp('[' + str + '\\\\[]', 'g');\n\t    } else {\n\t      d = new RegExp('[' + str + ']', 'g');\n\t    }\n\t  } else {\n\t    d = /\\s/g;\n\t  }\n\t  return arguments[0].split(d).filter(function(n){return n;});\n\t};\n\t\n\t/**\n\t * Removes whitespace characters from the beginning and end of a String. In\n\t * addition to standard whitespace characters such as space, carriage return,\n\t * and tab, this function also removes the Unicode \"nbsp\" character.\n\t *\n\t * @method trim\n\t * @param  {String|Array} str a String or Array of Strings to be trimmed\n\t * @return {String|Array}       a trimmed String or Array of Strings\n\t * @example\n\t * <div>\n\t * <code>\n\t * var string = trim(\"  No new lines\\n   \");\n\t * text(string +\" here\", 2, 50);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * \"No new lines here\" displayed center canvas\n\t *\n\t */\n\tp5.prototype.trim = function(str) {\n\t  if (str instanceof Array) {\n\t    return str.map(this.trim);\n\t  } else {\n\t    return str.trim();\n\t  }\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],76:[function(_dereq_,module,exports){\n\t/**\n\t * @module IO\n\t * @submodule Time & Date\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/**\n\t * p5.js communicates with the clock on your computer. The day() function\n\t * returns the current day as a value from 1 - 31.\n\t *\n\t * @method day\n\t * @return {Number} the current day\n\t * @example\n\t * <div>\n\t * <code>\n\t * var d = day();\n\t * text(\"Current day: \\n\" + d, 5, 50);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Current day is displayed\n\t *\n\t */\n\tp5.prototype.day = function() {\n\t  return new Date().getDate();\n\t};\n\t\n\t/**\n\t * p5.js communicates with the clock on your computer. The hour() function\n\t * returns the current hour as a value from 0 - 23.\n\t *\n\t * @method hour\n\t * @return {Number} the current hour\n\t * @example\n\t * <div>\n\t * <code>\n\t * var h = hour();\n\t * text(\"Current hour:\\n\" + h, 5, 50);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Current hour is displayed\n\t *\n\t */\n\tp5.prototype.hour = function() {\n\t  return new Date().getHours();\n\t};\n\t\n\t/**\n\t * p5.js communicates with the clock on your computer. The minute() function\n\t * returns the current minute as a value from 0 - 59.\n\t *\n\t * @method minute\n\t * @return {Number} the current minute\n\t * @example\n\t * <div>\n\t * <code>\n\t * var m = minute();\n\t * text(\"Current minute: \\n\" + m, 5, 50);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Current minute is displayed\n\t *\n\t */\n\tp5.prototype.minute = function() {\n\t  return new Date().getMinutes();\n\t};\n\t\n\t/**\n\t * Returns the number of milliseconds (thousandths of a second) since\n\t * starting the program. This information is often used for timing events and\n\t * animation sequences.\n\t *\n\t * @method millis\n\t * @return {Number} the number of milliseconds since starting the program\n\t * @example\n\t * <div>\n\t * <code>\n\t * var millisecond = millis();\n\t * text(\"Milliseconds \\nrunning: \\n\" + millisecond, 5, 40);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * number of milliseconds since program has started displayed\n\t *\n\t */\n\tp5.prototype.millis = function() {\n\t  return window.performance.now();\n\t};\n\t\n\t/**\n\t * p5.js communicates with the clock on your computer. The month() function\n\t * returns the current month as a value from 1 - 12.\n\t *\n\t * @method month\n\t * @return {Number} the current month\n\t * @example\n\t * <div>\n\t * <code>\n\t * var m = month();\n\t * text(\"Current month: \\n\" + m, 5, 50);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Current month is displayed\n\t *\n\t */\n\tp5.prototype.month = function() {\n\t  return new Date().getMonth() + 1; //January is 0!\n\t};\n\t\n\t/**\n\t * p5.js communicates with the clock on your computer. The second() function\n\t * returns the current second as a value from 0 - 59.\n\t *\n\t * @method second\n\t * @return {Number} the current second\n\t * @example\n\t * <div>\n\t * <code>\n\t * var s = second();\n\t * text(\"Current second: \\n\" + s, 5, 50);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Current second is displayed\n\t *\n\t */\n\tp5.prototype.second = function() {\n\t  return new Date().getSeconds();\n\t};\n\t\n\t/**\n\t * p5.js communicates with the clock on your computer. The year() function\n\t * returns the current year as an integer (2014, 2015, 2016, etc).\n\t *\n\t * @method year\n\t * @return {Number} the current year\n\t * @example\n\t * <div>\n\t * <code>\n\t * var y = year();\n\t * text(\"Current year: \\n\" + y, 5, 50);\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Current year is displayed\n\t *\n\t */\n\tp5.prototype.year = function() {\n\t  return new Date().getFullYear();\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],77:[function(_dereq_,module,exports){\n\t/**\n\t * @module Lights, Camera\n\t * @submodule Camera\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/**\n\t * Sets camera position\n\t * @method camera\n\t * @param  {Number} x  camera position value on x axis\n\t * @param  {Number} y  camera position value on y axis\n\t * @param  {Number} z  camera position value on z axis\n\t * @return {p5}        the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t * function draw(){\n\t *  //move the camera away from the plane by a sin wave\n\t *  camera(0, 0, sin(frameCount * 0.01) * 100);\n\t *  plane(120, 120);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * blue square shrinks in size grows to fill canvas. disappears then loops.\n\t *\n\t */\n\tp5.prototype.camera = function(x, y, z){\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  this._validateParameters(\n\t    'camera',\n\t    args,\n\t    ['Number', 'Number', 'Number']\n\t  );\n\t  //what it manipulates is the model view matrix\n\t  this._renderer.translate(-x, -y, -z);\n\t};\n\t\n\t/**\n\t * Sets perspective camera\n\t * @method  perspective\n\t * @param  {Number} fovy   camera frustum vertical field of view,\n\t *                         from bottom to top of view, in degrees\n\t * @param  {Number} aspect camera frustum aspect ratio\n\t * @param  {Number} near   frustum near plane length\n\t * @param  {Number} far    frustum far plane length\n\t * @return {p5}            the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * //drag mouse to toggle the world!\n\t * //you will see there's a vanish point\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t *   perspective(60 / 180 * PI, width/height, 0.1, 100);\n\t * }\n\t * function draw(){\n\t *  background(200);\n\t *  orbitControl();\n\t *  for(var i = -1; i < 2; i++){\n\t *     for(var j = -2; j < 3; j++){\n\t *       push();\n\t *       translate(i*160, 0, j*160);\n\t *       box(40, 40, 40);\n\t *       pop();\n\t *     }\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * colored 3d boxes toggleable with mouse position\n\t *\n\t */\n\tp5.prototype.perspective = function(fovy,aspect,near,far) {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  this._validateParameters(\n\t    'perspective',\n\t    args,\n\t    ['Number', 'Number', 'Number', 'Number']\n\t  );\n\t  this._renderer.uPMatrix = p5.Matrix.identity();\n\t  this._renderer.uPMatrix.perspective(fovy,aspect,near,far);\n\t  this._renderer._curCamera = 'custom';\n\t};\n\t\n\t/**\n\t * Setup ortho camera\n\t * @method  ortho\n\t * @param  {Number} left   camera frustum left plane\n\t * @param  {Number} right  camera frustum right plane\n\t * @param  {Number} bottom camera frustum bottom plane\n\t * @param  {Number} top    camera frustum top plane\n\t * @param  {Number} near   camera frustum near plane\n\t * @param  {Number} far    camera frustum far plane\n\t * @return {p5}            the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * //drag mouse to toggle the world!\n\t * //there's no vanish point\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t *   ortho(-width/2, width/2, height/2, -height/2, 0.1, 100);\n\t * }\n\t * function draw(){\n\t *  background(200);\n\t *  orbitControl();\n\t *  for(var i = -1; i < 2; i++){\n\t *     for(var j = -2; j < 3; j++){\n\t *       push();\n\t *       translate(i*160, 0, j*160);\n\t *       box(40, 40, 40);\n\t *       pop();\n\t *     }\n\t *   }\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * 3 3d boxes, reveal several more boxes on 3d plane when mouse used to toggle\n\t *\n\t */\n\tp5.prototype.ortho = function(left,right,bottom,top,near,far) {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  this._validateParameters(\n\t    'ortho',\n\t    args,\n\t      ['Number', 'Number', 'Number', 'Number', 'Number', 'Number']\n\t  );\n\t  left /= this.width;\n\t  right /= this.width;\n\t  top /= this.height;\n\t  bottom /= this.height;\n\t  this._renderer.uPMatrix = p5.Matrix.identity();\n\t  this._renderer.uPMatrix.ortho(left,right,bottom,top,near,far);\n\t  this._renderer._curCamera = 'custom';\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],78:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t//@TODO: implement full orbit controls including\n\t//pan, zoom, quaternion rotation, etc.\n\tp5.prototype.orbitControl = function(){\n\t  if(this.mouseIsPressed){\n\t    this.rotateY((this.mouseX - this.width / 2) / (this.width / 2));\n\t    this.rotateX((this.mouseY - this.height / 2) / (this.width / 2));\n\t  }\n\t  return this;\n\t};\n\t\n\tmodule.exports = p5;\n\t},{\"../core/core\":37}],79:[function(_dereq_,module,exports){\n\t/**\n\t * @module Lights, Camera\n\t * @submodule Lights\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/**\n\t * Creates an ambient light with a color\n\t * @method  ambientLight\n\t * @param  {Number|Array|String|p5.Color} v1  gray value,\n\t * red or hue value (depending on the current color mode),\n\t * or color Array, or CSS color string\n\t * @param  {Number}            [v2] optional: green or saturation value\n\t * @param  {Number}            [v3] optional: blue or brightness value\n\t * @param  {Number}            [a]  optional: opacity\n\t * @return {p5}                the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t * function draw(){\n\t *   background(0);\n\t *   ambientLight(150);\n\t *   ambientMaterial(250);\n\t *   sphere(50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * nothing displayed\n\t *\n\t */\n\tp5.prototype.ambientLight = function(v1, v2, v3, a){\n\t  var gl = this._renderer.GL;\n\t  var shaderProgram = this._renderer._getShader(\n\t    'lightVert', 'lightTextureFrag');\n\t\n\t  gl.useProgram(shaderProgram);\n\t  shaderProgram.uAmbientColor = gl.getUniformLocation(\n\t    shaderProgram,\n\t    'uAmbientColor[' + this._renderer.ambientLightCount + ']');\n\t\n\t  var color = this._renderer._pInst.color.apply(\n\t    this._renderer._pInst, arguments);\n\t  var colors = color._array;\n\t\n\t  gl.uniform3f( shaderProgram.uAmbientColor,\n\t    colors[0], colors[1], colors[2]);\n\t\n\t  //in case there's no material color for the geometry\n\t  shaderProgram.uMaterialColor = gl.getUniformLocation(\n\t    shaderProgram, 'uMaterialColor' );\n\t  gl.uniform4f( shaderProgram.uMaterialColor, 1, 1, 1, 1);\n\t\n\t  this._renderer.ambientLightCount ++;\n\t  shaderProgram.uAmbientLightCount =\n\t    gl.getUniformLocation(shaderProgram, 'uAmbientLightCount');\n\t  gl.uniform1i(shaderProgram.uAmbientLightCount,\n\t    this._renderer.ambientLightCount);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Creates a directional light with a color and a direction\n\t * @method  directionalLight\n\t * @param  {Number|Array|String|p5.Color} v1   gray value,\n\t * red or hue value (depending on the current color mode),\n\t * or color Array, or CSS color string\n\t * @param  {Number}          [v2] optional: green or saturation value\n\t * @param  {Number}          [v3] optional: blue or brightness value\n\t * @param  {Number}          [a]  optional: opacity\n\t * @param  {Number|p5.Vector} x   x axis direction or a p5.Vector\n\t * @param  {Number}          [y]  optional: y axis direction\n\t * @param  {Number}          [z]  optional: z axis direction\n\t * @return {p5}              the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t * function draw(){\n\t *   background(0);\n\t *   //move your mouse to change light direction\n\t *   var dirX = (mouseX / width - 0.5) *2;\n\t *   var dirY = (mouseY / height - 0.5) *(-2);\n\t *   directionalLight(250, 250, 250, dirX, dirY, 0.25);\n\t *   ambientMaterial(250);\n\t *   sphere(50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * light source on canvas changeable with mouse position\n\t *\n\t */\n\tp5.prototype.directionalLight = function(v1, v2, v3, a, x, y, z) {\n\t  // TODO(jgessner): Find an example using this and profile it.\n\t  // var args = new Array(arguments.length);\n\t  // for (var i = 0; i < args.length; ++i) {\n\t  //   args[i] = arguments[i];\n\t  // }\n\t  // this._validateParameters(\n\t  //   'directionalLight',\n\t  //   args,\n\t  //   [\n\t  //     //rgbaxyz\n\t  //     ['Number', 'Number', 'Number', 'Number', 'Number', 'Number', 'Number'],\n\t  //     //rgbxyz\n\t  //     ['Number', 'Number', 'Number', 'Number', 'Number', 'Number'],\n\t  //     //caxyz\n\t  //     ['Number', 'Number', 'Number', 'Number', 'Number'],\n\t  //     //cxyz\n\t  //     ['Number', 'Number', 'Number', 'Number'],\n\t  //     ['String', 'Number', 'Number', 'Number'],\n\t  //     ['Array', 'Number', 'Number', 'Number'],\n\t  //     ['Object', 'Number', 'Number', 'Number'],\n\t  //     //rgbavector\n\t  //     ['Number', 'Number', 'Number', 'Number', 'Object'],\n\t  //     //rgbvector\n\t  //     ['Number', 'Number', 'Number', 'Object'],\n\t  //     //cavector\n\t  //     ['Number', 'Number', 'Object'],\n\t  //     //cvector\n\t  //     ['Number', 'Object'],\n\t  //     ['String', 'Object'],\n\t  //     ['Array', 'Object'],\n\t  //     ['Object', 'Object']\n\t  //   ]\n\t  // );\n\t\n\t  var gl = this._renderer.GL;\n\t  var shaderProgram = this._renderer._getShader(\n\t    'lightVert', 'lightTextureFrag');\n\t\n\t  gl.useProgram(shaderProgram);\n\t  shaderProgram.uDirectionalColor = gl.getUniformLocation(\n\t    shaderProgram,\n\t    'uDirectionalColor[' + this._renderer.directionalLightCount + ']');\n\t\n\t  //@TODO: check parameters number\n\t  var color = this._renderer._pInst.color.apply(\n\t    this._renderer._pInst, [v1, v2, v3]);\n\t  var colors = color._array;\n\t\n\t  gl.uniform3f( shaderProgram.uDirectionalColor,\n\t    colors[0], colors[1], colors[2]);\n\t\n\t  var _x, _y, _z;\n\t\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  if(typeof args[args.length-1] === 'number'){\n\t    _x = args[args.length-3];\n\t    _y = args[args.length-2];\n\t    _z = args[args.length-1];\n\t\n\t  }else{\n\t    try{\n\t      _x = args[args.length-1].x;\n\t      _y = args[args.length-1].y;\n\t      _z = args[args.length-1].z;\n\t    }\n\t    catch(error){\n\t      throw error;\n\t    }\n\t  }\n\t\n\t  shaderProgram.uLightingDirection = gl.getUniformLocation(\n\t    shaderProgram,\n\t    'uLightingDirection[' + this._renderer.directionalLightCount + ']');\n\t  gl.uniform3f( shaderProgram.uLightingDirection, _x, _y, _z);\n\t\n\t  //in case there's no material color for the geometry\n\t  shaderProgram.uMaterialColor = gl.getUniformLocation(\n\t    shaderProgram, 'uMaterialColor' );\n\t  gl.uniform4f( shaderProgram.uMaterialColor, 1, 1, 1, 1);\n\t\n\t  this._renderer.directionalLightCount ++;\n\t  shaderProgram.uDirectionalLightCount =\n\t    gl.getUniformLocation(shaderProgram, 'uDirectionalLightCount');\n\t  gl.uniform1i(shaderProgram.uDirectionalLightCount,\n\t    this._renderer.directionalLightCount);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Creates a point light with a color and a light position\n\t * @method  pointLight\n\t * @param  {Number|Array|String|p5.Color} v1   gray value,\n\t * red or hue value (depending on the current color mode),\n\t * or color Array, or CSS color string\n\t * @param  {Number}          [v2] optional: green or saturation value\n\t * @param  {Number}          [v3] optional: blue or brightness value\n\t * @param  {Number}          [a]  optional: opacity\n\t * @param  {Number|p5.Vector} x   x axis position or a p5.Vector\n\t * @param  {Number}          [y]  optional: y axis position\n\t * @param  {Number}          [z]  optional: z axis position\n\t * @return {p5}              the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t * function draw(){\n\t *   background(0);\n\t *   //move your mouse to change light position\n\t *   var locY = (mouseY / height - 0.5) *(-2);\n\t *   var locX = (mouseX / width - 0.5) *2;\n\t *   //to set the light position,\n\t *   //think of the world's coordinate as:\n\t *   // -1,1 -------- 1,1\n\t *   //   |            |\n\t *   //   |            |\n\t *   //   |            |\n\t *   // -1,-1---------1,-1\n\t *   pointLight(250, 250, 250, locX, locY, 0);\n\t *   ambientMaterial(250);\n\t *   sphere(50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * spot light on canvas changes position with mouse\n\t *\n\t */\n\tp5.prototype.pointLight = function(v1, v2, v3, a, x, y, z) {\n\t  // TODO(jgessner): Find an example using this and profile it.\n\t  // var args = new Array(arguments.length);\n\t  // for (var i = 0; i < args.length; ++i) {\n\t  //   args[i] = arguments[i];\n\t  // }\n\t  // this._validateParameters(\n\t  //   'pointLight',\n\t  //   arguments,\n\t  //   [\n\t  //     //rgbaxyz\n\t  //     ['Number', 'Number', 'Number', 'Number', 'Number', 'Number', 'Number'],\n\t  //     //rgbxyz\n\t  //     ['Number', 'Number', 'Number', 'Number', 'Number', 'Number'],\n\t  //     //caxyz\n\t  //     ['Number', 'Number', 'Number', 'Number', 'Number'],\n\t  //     //cxyz\n\t  //     ['Number', 'Number', 'Number', 'Number'],\n\t  //     ['String', 'Number', 'Number', 'Number'],\n\t  //     ['Array', 'Number', 'Number', 'Number'],\n\t  //     ['Object', 'Number', 'Number', 'Number'],\n\t  //     //rgbavector\n\t  //     ['Number', 'Number', 'Number', 'Number', 'Object'],\n\t  //     //rgbvector\n\t  //     ['Number', 'Number', 'Number', 'Object'],\n\t  //     //cavector\n\t  //     ['Number', 'Number', 'Object'],\n\t  //     //cvector\n\t  //     ['Number', 'Object'],\n\t  //     ['String', 'Object'],\n\t  //     ['Array', 'Object'],\n\t  //     ['Object', 'Object']\n\t  //   ]\n\t  // );\n\t\n\t  var gl = this._renderer.GL;\n\t  var shaderProgram = this._renderer._getShader(\n\t    'lightVert', 'lightTextureFrag');\n\t\n\t  gl.useProgram(shaderProgram);\n\t  shaderProgram.uPointLightColor = gl.getUniformLocation(\n\t    shaderProgram,\n\t    'uPointLightColor[' + this._renderer.pointLightCount + ']');\n\t\n\t  //@TODO: check parameters number\n\t  var color = this._renderer._pInst.color.apply(\n\t    this._renderer._pInst, [v1, v2, v3]);\n\t  var colors = color._array;\n\t\n\t  gl.uniform3f( shaderProgram.uPointLightColor,\n\t    colors[0], colors[1], colors[2]);\n\t\n\t  var _x, _y, _z;\n\t\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  if(typeof args[args.length-1] === 'number'){\n\t    _x = args[args.length-3];\n\t    _y = args[args.length-2];\n\t    _z = args[args.length-1];\n\t\n\t  }else{\n\t    try{\n\t      _x = args[args.length-1].x;\n\t      _y = args[args.length-1].y;\n\t      _z = args[args.length-1].z;\n\t    }\n\t    catch(error){\n\t      throw error;\n\t    }\n\t  }\n\t\n\t  shaderProgram.uPointLightLocation = gl.getUniformLocation(\n\t    shaderProgram,\n\t    'uPointLightLocation[' + this._renderer.pointLightCount + ']');\n\t  gl.uniform3f( shaderProgram.uPointLightLocation, _x, _y, _z);\n\t\n\t  //in case there's no material color for the geometry\n\t  shaderProgram.uMaterialColor = gl.getUniformLocation(\n\t    shaderProgram, 'uMaterialColor' );\n\t  gl.uniform4f( shaderProgram.uMaterialColor, 1, 1, 1, 1);\n\t\n\t  this._renderer.pointLightCount ++;\n\t  shaderProgram.uPointLightCount =\n\t    gl.getUniformLocation(shaderProgram, 'uPointLightCount');\n\t  gl.uniform1i(shaderProgram.uPointLightCount,\n\t    this._renderer.pointLightCount);\n\t\n\t  return this;\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],80:[function(_dereq_,module,exports){\n\t/**\n\t * @module Shape\n\t * @submodule 3D Models\n\t * @for p5\n\t * @requires core\n\t * @requires p5.Geometry3D\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t_dereq_('./p5.Geometry');\n\t\n\t/**\n\t * Load a 3d model from an OBJ file.\n\t * <br><br>\n\t * One of the limitations of the OBJ format is that it doesn't have a built-in\n\t * sense of scale. This means that models exported from different programs might\n\t * be very different sizes. If your model isn't displaying, try calling\n\t * loadModel() with the normalized parameter set to true. This will resize the\n\t * model to a scale appropriate for p5. You can also make additional changes to\n\t * the final size of your model with the scale() function.\n\t *\n\t * @method loadModel\n\t * @param  {String} path Path of the model to be loaded\n\t * @param  {Boolean} [normalize] If true, scale the model to a\n\t *                                standardized size when loading\n\t * @param  {Function(p5.Geometry3D)} [successCallback] Function to be called\n\t *                                   once the model is loaded. Will be passed\n\t *                                   the 3D model object.\n\t * @param  {Function(Event)}    [failureCallback] called with event error if\n\t *                                the image fails to load.\n\t * @return {p5.Geometry} the p5.Geometry3D object\n\t * @example\n\t * <div>\n\t * <code>\n\t * //draw a spinning teapot\n\t * var teapot;\n\t *\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t *\n\t *   teapot = loadModel('assets/teapot.obj');\n\t * }\n\t *\n\t * function draw(){\n\t *   background(200);\n\t *   rotateX(frameCount * 0.01);\n\t *   rotateY(frameCount * 0.01);\n\t *   model(teapot);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Vertically rotating 3-d teapot with red, green and blue gradient.\n\t *\n\t */\n\tp5.prototype.loadModel = function () {\n\t  var path = arguments[0];\n\t  var normalize;\n\t  var successCallback;\n\t  var failureCallback;\n\t  if(typeof arguments[1] === 'boolean') {\n\t    normalize = arguments[1];\n\t    successCallback = arguments[2];\n\t    failureCallback = arguments[3];\n\t  } else {\n\t    normalize = false;\n\t    successCallback = arguments[1];\n\t    failureCallback = arguments[2];\n\t  }\n\t\n\t  var model = new p5.Geometry();\n\t  model.gid = path + '|' + normalize;\n\t  this.loadStrings(path, function(strings) {\n\t    parseObj(model, strings);\n\t\n\t    if (normalize) {\n\t      model.normalize();\n\t    }\n\t\n\t    if (typeof successCallback === 'function') {\n\t      successCallback(model);\n\t    }\n\t  }.bind(this), failureCallback);\n\t\n\t  return model;\n\t};\n\t\n\t/**\n\t * Parse OBJ lines into model. For reference, this is what a simple model of a\n\t * square might look like:\n\t *\n\t * v -0.5 -0.5 0.5\n\t * v -0.5 -0.5 -0.5\n\t * v -0.5 0.5 -0.5\n\t * v -0.5 0.5 0.5\n\t *\n\t * f 4 3 2 1\n\t */\n\tfunction parseObj( model, lines ) {\n\t  // OBJ allows a face to specify an index for a vertex (in the above example),\n\t  // but it also allows you to specify a custom combination of vertex, UV\n\t  // coordinate, and vertex normal. So, \"3/4/3\" would mean, \"use vertex 3 with\n\t  // UV coordinate 4 and vertex normal 3\". In WebGL, every vertex with different\n\t  // parameters must be a different vertex, so loadedVerts is used to\n\t  // temporarily store the parsed vertices, normals, etc., and indexedVerts is\n\t  // used to map a specific combination (keyed on, for example, the string\n\t  // \"3/4/3\"), to the actual index of the newly created vertex in the final\n\t  // object.\n\t  var loadedVerts = {'v' : [],\n\t                    'vt' : [],\n\t                    'vn' : []};\n\t  var indexedVerts = {};\n\t\n\t  for (var line = 0; line < lines.length; ++line) {\n\t    // Each line is a separate object (vertex, face, vertex normal, etc)\n\t    // For each line, split it into tokens on whitespace. The first token\n\t    // describes the type.\n\t    var tokens = lines[line].trim().split(/\\b\\s+/);\n\t\n\t    if (tokens.length > 0) {\n\t      if (tokens[0] === 'v' || tokens[0] === 'vn') {\n\t        // Check if this line describes a vertex or vertex normal.\n\t        // It will have three numeric parameters.\n\t        var vertex = new p5.Vector(parseFloat(tokens[1]),\n\t                                   parseFloat(tokens[2]),\n\t                                   parseFloat(tokens[3]));\n\t        loadedVerts[tokens[0]].push(vertex);\n\t      } else if (tokens[0] === 'vt') {\n\t        // Check if this line describes a texture coordinate.\n\t        // It will have two numeric parameters.\n\t        var texVertex = [parseFloat(tokens[1]), parseFloat(tokens[2])];\n\t        loadedVerts[tokens[0]].push(texVertex);\n\t      } else if (tokens[0] === 'f') {\n\t        // Check if this line describes a face.\n\t        // OBJ faces can have more than three points. Triangulate points.\n\t        for (var tri = 3; tri < tokens.length; ++tri) {\n\t          var face = [];\n\t\n\t          var vertexTokens = [1, tri - 1, tri];\n\t\n\t          for (var tokenInd = 0; tokenInd < vertexTokens.length; ++tokenInd) {\n\t            // Now, convert the given token into an index\n\t            var vertString = tokens[vertexTokens[tokenInd]];\n\t            var vertIndex = 0;\n\t\n\t            // TODO: Faces can technically use negative numbers to refer to the\n\t            // previous nth vertex. I haven't seen this used in practice, but\n\t            // it might be good to implement this in the future.\n\t\n\t            if (indexedVerts[vertString] !== undefined) {\n\t              vertIndex = indexedVerts[vertString];\n\t            } else {\n\t              var vertParts = vertString.split('/');\n\t              for (var i = 0; i < vertParts.length; i++) {\n\t                vertParts[i] = parseInt(vertParts[i]) - 1;\n\t              }\n\t\n\t              vertIndex = indexedVerts[vertString] = model.vertices.length;\n\t              model.vertices.push(loadedVerts.v[vertParts[0]].copy());\n\t              if (loadedVerts.vt[vertParts[1]]) {\n\t                model.uvs.push(loadedVerts.vt[vertParts[1]].slice());\n\t              } else {\n\t                model.uvs.push([0, 0]);\n\t              }\n\t\n\t              if (loadedVerts.vn[vertParts[2]]) {\n\t                model.vertexNormals.push(loadedVerts.vn[vertParts[2]].copy());\n\t              }\n\t            }\n\t\n\t            face.push(vertIndex);\n\t          }\n\t\n\t          model.faces.push(face);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // If the model doesn't have normals, compute the normals\n\t  if(model.vertexNormals.length === 0) {\n\t    model.computeNormals();\n\t  }\n\t\n\t  return model;\n\t}\n\t\n\t/**\n\t * Render a 3d model to the screen.\n\t *\n\t * @method model\n\t * @param  {p5.Geometry} model Loaded 3d model to be rendered\n\t * @example\n\t * <div>\n\t * <code>\n\t * //draw a spinning teapot\n\t * var teapot;\n\t *\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t *\n\t *   teapot = loadModel('assets/teapot.obj');\n\t * }\n\t *\n\t * function draw(){\n\t *   background(200);\n\t *   rotateX(frameCount * 0.01);\n\t *   rotateY(frameCount * 0.01);\n\t *   model(teapot);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Vertically rotating 3-d teapot with red, green and blue gradient.\n\t *\n\t */\n\tp5.prototype.model = function ( model ) {\n\t  if (model.vertices.length > 0) {\n\t    if (!this._renderer.geometryInHash(model.gid)) {\n\t      this._renderer.createBuffers(model.gid, model);\n\t    }\n\t\n\t    this._renderer.drawBuffers(model.gid);\n\t  }\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37,\"./p5.Geometry\":82}],81:[function(_dereq_,module,exports){\n\t/**\n\t * @module Lights, Camera\n\t * @submodule Material\n\t * @for p5\n\t * @requires core\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t//require('./p5.Texture');\n\t\n\t/**\n\t * Normal material for geometry. You can view all\n\t * possible materials in this\n\t * <a href=\"https://p5js.org/examples/examples/3D_Materials.php\">example</a>.\n\t * @method normalMaterial\n\t * @return {p5}                the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *  background(200);\n\t *  normalMaterial();\n\t *  sphere(50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Red, green and blue gradient.\n\t *\n\t */\n\tp5.prototype.normalMaterial = function(){\n\t  this._renderer._getShader('normalVert', 'normalFrag');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Texture for geometry.  You can view other possible materials in this\n\t * <a href=\"https://p5js.org/examples/examples/3D_Materials.php\">example</a>.\n\t * @method texture\n\t * @param {p5.Image | p5.MediaElement | p5.Graphics} tex 2-dimensional graphics\n\t *                    to render as texture\n\t * @return {p5}                the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * var img;\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t *   img = loadImage(\"assets/laDefense.jpg\");\n\t * }\n\t *\n\t * function draw(){\n\t *   background(0);\n\t *   rotateZ(frameCount * 0.01);\n\t *   rotateX(frameCount * 0.01);\n\t *   rotateY(frameCount * 0.01);\n\t *   //pass image as texture\n\t *   texture(img);\n\t *   box(200, 200, 200);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var pg;\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t *   pg = createGraphics(200, 200);\n\t *   pg.textSize(100);\n\t * }\n\t *\n\t * function draw(){\n\t *   background(0);\n\t *   pg.background(255);\n\t *   pg.text('hello!', 0, 100);\n\t *   //pass image as texture\n\t *   texture(pg);\n\t *   plane(200);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * <div>\n\t * <code>\n\t * var vid;\n\t * function preload(){\n\t *   vid = createVideo(\"assets/fingers.mov\");\n\t *   vid.hide();\n\t *   vid.loop();\n\t * }\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *   background(0);\n\t *   //pass video frame as texture\n\t *   texture(vid);\n\t *   plane(200);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Rotating view of many images umbrella and grid roof on a 3d plane\n\t * black canvas\n\t * black canvas\n\t *\n\t */\n\tp5.prototype.texture = function(){\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  var gl = this._renderer.GL;\n\t  var shaderProgram = this._renderer._getShader('lightVert',\n\t    'lightTextureFrag');\n\t  gl.useProgram(shaderProgram);\n\t  var textureData;\n\t  //if argument is not already a texture\n\t  //create a new one\n\t  if(!args[0].isTexture){\n\t    if (args[0] instanceof p5.Image) {\n\t      textureData = args[0].canvas;\n\t    }\n\t    //if param is a video\n\t    else if (typeof p5.MediaElement !== 'undefined' &&\n\t            args[0] instanceof p5.MediaElement){\n\t      if(!args[0].loadedmetadata) {return;}\n\t      textureData = args[0].elt;\n\t    }\n\t    //used with offscreen 2d graphics renderer\n\t    else if(args[0] instanceof p5.Graphics){\n\t      textureData = args[0].elt;\n\t    }\n\t    var tex = gl.createTexture();\n\t    args[0]._setProperty('tex', tex);\n\t    args[0]._setProperty('isTexture', true);\n\t    this._renderer._bind.call(this, tex, textureData);\n\t  }\n\t  else {\n\t    if(args[0] instanceof p5.Graphics ||\n\t      (typeof p5.MediaElement !== 'undefined' &&\n\t      args[0] instanceof p5.MediaElement)){\n\t      textureData = args[0].elt;\n\t    }\n\t    else if(args[0] instanceof p5.Image){\n\t      textureData = args[0].canvas;\n\t    }\n\t    this._renderer._bind.call(this, args[0].tex, textureData);\n\t  }\n\t  //this is where we'd activate multi textures\n\t  //eg. gl.activeTexture(gl.TEXTURE0 + (unit || 0));\n\t  //but for now we just have a single texture.\n\t  //@TODO need to extend this functionality\n\t  gl.activeTexture(gl.TEXTURE0);\n\t  gl.bindTexture(gl.TEXTURE_2D, args[0].tex);\n\t  gl.uniform1i(gl.getUniformLocation(shaderProgram, 'isTexture'), true);\n\t  gl.uniform1i(gl.getUniformLocation(shaderProgram, 'uSampler'), 0);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Texture Util functions\n\t */\n\tp5.RendererGL.prototype._bind = function(tex, data){\n\t  var gl = this._renderer.GL;\n\t  gl.bindTexture(gl.TEXTURE_2D, tex);\n\t  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t  gl.texImage2D(gl.TEXTURE_2D, 0,\n\t    gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\t  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t  gl.texParameteri(gl.TEXTURE_2D,\n\t  gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t  gl.texParameteri(gl.TEXTURE_2D,\n\t  gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t  gl.texParameteri(gl.TEXTURE_2D,\n\t  gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t  gl.texParameteri(gl.TEXTURE_2D,\n\t  gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t  gl.bindTexture(gl.TEXTURE_2D, null);\n\t};\n\t\n\t/**\n\t * Checks whether val is a pot\n\t * more info on power of 2 here:\n\t * https://www.opengl.org/wiki/NPOT_Texture\n\t * @param  {Number}  value\n\t * @return {Boolean}\n\t */\n\t// function _isPowerOf2 (value){\n\t//   return (value & (value - 1)) === 0;\n\t// }\n\t\n\t/**\n\t * returns the next highest power of 2 value\n\t * @param  {Number} value [description]\n\t * @return {Number}       [description]\n\t */\n\t// function _nextHighestPOT (value){\n\t//   --value;\n\t//   for (var i = 1; i < 32; i <<= 1) {\n\t//     value = value | value >> i;\n\t//   }\n\t//   return value + 1;\n\t\n\t/**\n\t * Ambient material for geometry with a given color. You can view all\n\t * possible materials in this\n\t * <a href=\"https://p5js.org/examples/examples/3D_Materials.php\">example</a>.\n\t * @method  ambientMaterial\n\t * @param  {Number|Array|String|p5.Color} v1  gray value,\n\t * red or hue value (depending on the current color mode),\n\t * or color Array, or CSS color string\n\t * @param  {Number}            [v2] optional: green or saturation value\n\t * @param  {Number}            [v3] optional: blue or brightness value\n\t * @param  {Number}            [a]  optional: opacity\n\t* @return {p5}                 the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t * function draw(){\n\t *  background(0);\n\t *  ambientLight(100);\n\t *  pointLight(250, 250, 250, 100, 100, 0);\n\t *  ambientMaterial(250);\n\t *  sphere(50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * radiating light source from top right of canvas\n\t *\n\t */\n\tp5.prototype.ambientMaterial = function(v1, v2, v3, a) {\n\t  var gl = this._renderer.GL;\n\t  var shaderProgram =\n\t    this._renderer._getShader('lightVert', 'lightTextureFrag');\n\t\n\t  gl.useProgram(shaderProgram);\n\t  shaderProgram.uMaterialColor = gl.getUniformLocation(\n\t    shaderProgram, 'uMaterialColor' );\n\t  var colors = this._renderer._applyColorBlend.apply(this._renderer, arguments);\n\t\n\t  gl.uniform4f(shaderProgram.uMaterialColor,\n\t    colors[0], colors[1], colors[2], colors[3]);\n\t\n\t  shaderProgram.uSpecular = gl.getUniformLocation(\n\t    shaderProgram, 'uSpecular' );\n\t  gl.uniform1i(shaderProgram.uSpecular, false);\n\t\n\t  gl.uniform1i(gl.getUniformLocation(shaderProgram, 'isTexture'), false);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Specular material for geometry with a given color. You can view all\n\t * possible materials in this\n\t * <a href=\"https://p5js.org/examples/examples/3D_Materials.php\">example</a>.\n\t * @method specularMaterial\n\t * @param  {Number|Array|String|p5.Color} v1  gray value,\n\t * red or hue value (depending on the current color mode),\n\t * or color Array, or CSS color string\n\t * @param  {Number}            [v2] optional: green or saturation value\n\t * @param  {Number}            [v3] optional: blue or brightness value\n\t * @param  {Number}            [a]  optional: opacity\n\t * @return {p5}                the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t * function draw(){\n\t *  background(0);\n\t *  ambientLight(100);\n\t *  pointLight(250, 250, 250, 100, 100, 0);\n\t *  specularMaterial(250);\n\t *  sphere(50);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * diffused radiating light source from top right of canvas\n\t *\n\t */\n\tp5.prototype.specularMaterial = function(v1, v2, v3, a) {\n\t  var gl = this._renderer.GL;\n\t  var shaderProgram =\n\t    this._renderer._getShader('lightVert', 'lightTextureFrag');\n\t  gl.useProgram(shaderProgram);\n\t  gl.uniform1i(gl.getUniformLocation(shaderProgram, 'isTexture'), false);\n\t  shaderProgram.uMaterialColor = gl.getUniformLocation(\n\t    shaderProgram, 'uMaterialColor' );\n\t  var colors = this._renderer._applyColorBlend.apply(this._renderer, arguments);\n\t  gl.uniform4f(shaderProgram.uMaterialColor,\n\t    colors[0], colors[1], colors[2], colors[3]);\n\t  shaderProgram.uSpecular = gl.getUniformLocation(\n\t    shaderProgram, 'uSpecular' );\n\t  gl.uniform1i(shaderProgram.uSpecular, true);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * @private blends colors according to color components.\n\t * If alpha value is less than 1, we need to enable blending\n\t * on our gl context.  Otherwise opaque objects need to a depthMask.\n\t * @param  {Number} v1 [description]\n\t * @param  {Number} v2 [description]\n\t * @param  {Number} v3 [description]\n\t * @param  {Number} a  [description]\n\t * @return {[Number]}  Normalized numbers array\n\t */\n\tp5.RendererGL.prototype._applyColorBlend = function(v1,v2,v3,a){\n\t  var gl = this.GL;\n\t  var color = this._pInst.color.apply(\n\t    this._pInst, arguments);\n\t  var colors = color._array;\n\t  if(colors[colors.length-1] < 1.0){\n\t    gl.depthMask(false);\n\t    gl.enable(gl.BLEND);\n\t    gl.blendEquation( gl.FUNC_ADD );\n\t    gl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\n\t  } else {\n\t    gl.depthMask(true);\n\t    gl.disable(gl.BLEND);\n\t  }\n\t  return colors;\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37}],82:[function(_dereq_,module,exports){\n\t//some of the functions are adjusted from Three.js(http://threejs.org)\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t\n\t/**\n\t * p5 Geometry class\n\t * @constructor\n\t * @param  {Function | Object} vertData callback function or Object\n\t *                     containing routine(s) for vertex data generation\n\t * @param  {Number} [detailX] number of vertices on horizontal surface\n\t * @param  {Number} [detailY] number of vertices on horizontal surface\n\t * @param {Function} [callback] function to call upon object instantiation.\n\t *\n\t */\n\tp5.Geometry = function\n\t(detailX, detailY, callback){\n\t  //an array containing every vertex\n\t  //@type [p5.Vector]\n\t  this.vertices = [];\n\t  //an array containing 1 normal per vertex\n\t  //@type [p5.Vector]\n\t  //[p5.Vector, p5.Vector, p5.Vector,p5.Vector, p5.Vector, p5.Vector,...]\n\t  this.vertexNormals = [];\n\t  //an array containing each three vertex indices that form a face\n\t  //[[0, 1, 2], [2, 1, 3], ...]\n\t  this.faces = [];\n\t  //a 2D array containing uvs for every vertex\n\t  //[[0.0,0.0],[1.0,0.0], ...]\n\t  this.uvs = [];\n\t  this.detailX = (detailX !== undefined) ? detailX: 1;\n\t  this.detailY = (detailY !== undefined) ? detailY: 1;\n\t  if(callback instanceof Function){\n\t    callback.call(this);\n\t  }\n\t  return this;\n\t};\n\t\n\tp5.Geometry.prototype.computeFaces = function(){\n\t  var sliceCount = this.detailX + 1;\n\t  var a, b, c, d;\n\t  for (var i = 0; i < this.detailY; i++){\n\t    for (var j = 0; j < this.detailX; j++){\n\t      a = i * sliceCount + j;// + offset;\n\t      b = i * sliceCount + j + 1;// + offset;\n\t      c = (i + 1)* sliceCount + j + 1;// + offset;\n\t      d = (i + 1)* sliceCount + j;// + offset;\n\t      this.faces.push([a, b, d]);\n\t      this.faces.push([d, b, c]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tp5.Geometry.prototype._getFaceNormal = function(faceId,vertId){\n\t  //This assumes that vA->vB->vC is a counter-clockwise ordering\n\t  var face = this.faces[faceId];\n\t  var vA = this.vertices[face[vertId%3]];\n\t  var vB = this.vertices[face[(vertId+1)%3]];\n\t  var vC = this.vertices[face[(vertId+2)%3]];\n\t  var n = p5.Vector.cross(\n\t    p5.Vector.sub(vB,vA),\n\t    p5.Vector.sub(vC,vA));\n\t  var sinAlpha = p5.Vector.mag(n) /\n\t  (p5.Vector.mag(p5.Vector.sub(vB,vA))*\n\t    p5.Vector.mag(p5.Vector.sub(vC,vA)));\n\t  n = n.normalize();\n\t  return n.mult(Math.asin(sinAlpha));\n\t};\n\t/**\n\t * computes smooth normals per vertex as an average of each\n\t * face.\n\t */\n\tp5.Geometry.prototype.computeNormals = function (){\n\t  for(var v=0; v < this.vertices.length; v++){\n\t    var normal = new p5.Vector();\n\t    for(var i=0; i < this.faces.length; i++){\n\t      //if our face contains a given vertex\n\t      //calculate an average of the normals\n\t      //of the triangles adjacent to that vertex\n\t      if(this.faces[i][0] === v ||\n\t        this.faces[i][1] === v ||\n\t        this.faces[i][2] === v)\n\t      {\n\t        normal = normal.add(this._getFaceNormal(i, v));\n\t      }\n\t    }\n\t    normal = normal.normalize();\n\t    this.vertexNormals.push(normal);\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Averages the vertex normals. Used in curved\n\t * surfaces\n\t * @return {p5.Geometry}\n\t */\n\tp5.Geometry.prototype.averageNormals = function() {\n\t\n\t  for(var i = 0; i <= this.detailY; i++){\n\t    var offset = this.detailX + 1;\n\t    var temp = p5.Vector\n\t      .add(this.vertexNormals[i*offset],\n\t        this.vertexNormals[i*offset + this.detailX]);\n\t    temp = p5.Vector.div(temp, 2);\n\t    this.vertexNormals[i*offset] = temp;\n\t    this.vertexNormals[i*offset + this.detailX] = temp;\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Averages pole normals.  Used in spherical primitives\n\t * @return {p5.Geometry}\n\t */\n\tp5.Geometry.prototype.averagePoleNormals = function() {\n\t\n\t  //average the north pole\n\t  var sum = new p5.Vector(0, 0, 0);\n\t  for(var i = 0; i < this.detailX; i++){\n\t    sum.add(this.vertexNormals[i]);\n\t  }\n\t  sum = p5.Vector.div(sum, this.detailX);\n\t\n\t  for(i = 0; i < this.detailX; i++){\n\t    this.vertexNormals[i] = sum;\n\t  }\n\t\n\t  //average the south pole\n\t  sum = new p5.Vector(0, 0, 0);\n\t  for(i = this.vertices.length - 1;\n\t    i > this.vertices.length - 1 - this.detailX; i--){\n\t    sum.add(this.vertexNormals[i]);\n\t  }\n\t  sum = p5.Vector.div(sum, this.detailX);\n\t\n\t  for(i = this.vertices.length - 1;\n\t    i > this.vertices.length - 1 - this.detailX; i--){\n\t    this.vertexNormals[i] = sum;\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Modifies all vertices to be centered within the range -100 to 100.\n\t * @return {p5.Geometry}\n\t */\n\tp5.Geometry.prototype.normalize = function() {\n\t  if(this.vertices.length > 0) {\n\t    // Find the corners of our bounding box\n\t    var maxPosition = this.vertices[0].copy();\n\t    var minPosition = this.vertices[0].copy();\n\t\n\t    for(var i = 0; i < this.vertices.length; i++) {\n\t      maxPosition.x = Math.max(maxPosition.x, this.vertices[i].x);\n\t      minPosition.x = Math.min(minPosition.x, this.vertices[i].x);\n\t      maxPosition.y = Math.max(maxPosition.y, this.vertices[i].y);\n\t      minPosition.y = Math.min(minPosition.y, this.vertices[i].y);\n\t      maxPosition.z = Math.max(maxPosition.z, this.vertices[i].z);\n\t      minPosition.z = Math.min(minPosition.z, this.vertices[i].z);\n\t    }\n\t\n\t    var center = p5.Vector.lerp(maxPosition, minPosition, 0.5);\n\t    var dist = p5.Vector.sub(maxPosition, minPosition);\n\t    var longestDist = Math.max(Math.max(dist.x, dist.y), dist.z);\n\t    var scale = 200 / longestDist;\n\t\n\t    for(i = 0; i < this.vertices.length; i++) {\n\t      this.vertices[i].sub(center);\n\t      this.vertices[i].mult(scale);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tmodule.exports = p5.Geometry;\n\t\n\t},{\"../core/core\":37}],83:[function(_dereq_,module,exports){\n\t/**\n\t* @requires constants\n\t* @todo see methods below needing further implementation.\n\t* future consideration: implement SIMD optimizations\n\t* when browser compatibility becomes available\n\t* https://developer.mozilla.org/en-US/docs/Web/JavaScript/\n\t*   Reference/Global_Objects/SIMD\n\t*/\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar polarGeometry = _dereq_('../math/polargeometry');\n\tvar constants = _dereq_('../core/constants');\n\tvar GLMAT_ARRAY_TYPE = (\n\t    typeof Float32Array !== 'undefined') ?\n\t  Float32Array : Array;\n\t\n\t/**\n\t * A class to describe a 4x4 matrix\n\t * for model and view matrix manipulation in the p5js webgl renderer.\n\t * class p5.Matrix\n\t * @constructor\n\t * @param {Array} [mat4] array literal of our 4x4 matrix\n\t */\n\tp5.Matrix = function() {\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  // This is default behavior when object\n\t  // instantiated using createMatrix()\n\t  // @todo implement createMatrix() in core/math.js\n\t  if(args[0] instanceof p5) {\n\t    // save reference to p5 if passed in\n\t    this.p5 = args[0];\n\t    if(args[1] === 'mat3'){\n\t      this.mat3 = args[2] || new GLMAT_ARRAY_TYPE([\n\t        1, 0, 0,\n\t        0, 1, 0,\n\t        0, 0, 1\n\t      ]);\n\t    }\n\t    else {\n\t      this.mat4  = args[1] || new GLMAT_ARRAY_TYPE([\n\t        1, 0, 0, 0,\n\t        0, 1, 0, 0,\n\t        0, 0, 1, 0,\n\t        0, 0, 0, 1\n\t      ]);\n\t    }\n\t    // default behavior when object\n\t    // instantiated using new p5.Matrix()\n\t  } else {\n\t    if(args[0] === 'mat3'){\n\t      this.mat3 = args[1] || new GLMAT_ARRAY_TYPE([\n\t        1, 0, 0,\n\t        0, 1, 0,\n\t        0, 0, 1\n\t      ]);\n\t    }\n\t    else {\n\t      this.mat4 = args[0] || new GLMAT_ARRAY_TYPE([\n\t        1, 0, 0, 0,\n\t        0, 1, 0, 0,\n\t        0, 0, 1, 0,\n\t        0, 0, 0, 1\n\t      ]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the x, y, and z component of the vector using two or three separate\n\t * variables, the data from a p5.Matrix, or the values from a float array.\n\t *\n\t * @param {p5.Matrix|Array} [inMatrix] the input p5.Matrix or\n\t *                                     an Array of length 16\n\t */\n\tp5.Matrix.prototype.set = function (inMatrix) {\n\t  if (inMatrix instanceof p5.Matrix) {\n\t    this.mat4 = inMatrix.mat4;\n\t    return this;\n\t  }\n\t  else if (inMatrix instanceof GLMAT_ARRAY_TYPE) {\n\t    this.mat4 = inMatrix;\n\t    return this;\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Gets a copy of the vector, returns a p5.Matrix object.\n\t *\n\t * @return {p5.Matrix} the copy of the p5.Matrix object\n\t */\n\tp5.Matrix.prototype.get = function () {\n\t  return new p5.Matrix(this.mat4);\n\t};\n\t\n\t/**\n\t * return a copy of a matrix\n\t * @return {p5.Matrix}   the result matrix\n\t */\n\tp5.Matrix.prototype.copy = function(){\n\t  var copied = new p5.Matrix();\n\t  copied.mat4[0] = this.mat4[0];\n\t  copied.mat4[1] = this.mat4[1];\n\t  copied.mat4[2] = this.mat4[2];\n\t  copied.mat4[3] = this.mat4[3];\n\t  copied.mat4[4] = this.mat4[4];\n\t  copied.mat4[5] = this.mat4[5];\n\t  copied.mat4[6] = this.mat4[6];\n\t  copied.mat4[7] = this.mat4[7];\n\t  copied.mat4[8] = this.mat4[8];\n\t  copied.mat4[9] = this.mat4[9];\n\t  copied.mat4[10] = this.mat4[10];\n\t  copied.mat4[11] = this.mat4[11];\n\t  copied.mat4[12] = this.mat4[12];\n\t  copied.mat4[13] = this.mat4[13];\n\t  copied.mat4[14] = this.mat4[14];\n\t  copied.mat4[15] = this.mat4[15];\n\t  return copied;\n\t};\n\t\n\t/**\n\t * return an identity matrix\n\t * @return {p5.Matrix}   the result matrix\n\t */\n\tp5.Matrix.identity = function(){\n\t  return new p5.Matrix();\n\t};\n\t\n\t/**\n\t * transpose according to a given matrix\n\t * @param  {p5.Matrix | Typed Array} a  the matrix to be based on to transpose\n\t * @return {p5.Matrix}                  this\n\t */\n\tp5.Matrix.prototype.transpose = function(a){\n\t  var a01, a02, a03, a12, a13, a23;\n\t  if(a instanceof p5.Matrix){\n\t    a01 = a.mat4[1];\n\t    a02 = a.mat4[2];\n\t    a03 = a.mat4[3];\n\t    a12 = a.mat4[6];\n\t    a13 = a.mat4[7];\n\t    a23 = a.mat4[11];\n\t\n\t    this.mat4[0] = a.mat4[0];\n\t    this.mat4[1] = a.mat4[4];\n\t    this.mat4[2] = a.mat4[8];\n\t    this.mat4[3] = a.mat4[12];\n\t    this.mat4[4] = a01;\n\t    this.mat4[5] = a.mat4[5];\n\t    this.mat4[6] = a.mat4[9];\n\t    this.mat4[7] = a.mat4[13];\n\t    this.mat4[8] = a02;\n\t    this.mat4[9] = a12;\n\t    this.mat4[10] = a.mat4[10];\n\t    this.mat4[11] = a.mat4[14];\n\t    this.mat4[12] = a03;\n\t    this.mat4[13] = a13;\n\t    this.mat4[14] = a23;\n\t    this.mat4[15] = a.mat4[15];\n\t\n\t  }else if(a instanceof GLMAT_ARRAY_TYPE){\n\t    a01 = a[1];\n\t    a02 = a[2];\n\t    a03 = a[3];\n\t    a12 = a[6];\n\t    a13 = a[7];\n\t    a23 = a[11];\n\t\n\t    this.mat4[0] = a[0];\n\t    this.mat4[1] = a[4];\n\t    this.mat4[2] = a[8];\n\t    this.mat4[3] = a[12];\n\t    this.mat4[4] = a01;\n\t    this.mat4[5] = a[5];\n\t    this.mat4[6] = a[9];\n\t    this.mat4[7] = a[13];\n\t    this.mat4[8] = a02;\n\t    this.mat4[9] = a12;\n\t    this.mat4[10] = a[10];\n\t    this.mat4[11] = a[14];\n\t    this.mat4[12] = a03;\n\t    this.mat4[13] = a13;\n\t    this.mat4[14] = a23;\n\t    this.mat4[15] = a[15];\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * invert  matrix according to a give matrix\n\t * @param  {p5.Matrix or Typed Array} a   the matrix to be based on to invert\n\t * @return {p5.Matrix}                    this\n\t */\n\tp5.Matrix.prototype.invert = function(a){\n\t  var a00, a01, a02, a03, a10, a11, a12, a13,\n\t  a20, a21, a22, a23, a30, a31, a32, a33;\n\t  if(a instanceof p5.Matrix){\n\t    a00 = a.mat4[0];\n\t    a01 = a.mat4[1];\n\t    a02 = a.mat4[2];\n\t    a03 = a.mat4[3];\n\t    a10 = a.mat4[4];\n\t    a11 = a.mat4[5];\n\t    a12 = a.mat4[6];\n\t    a13 = a.mat4[7];\n\t    a20 = a.mat4[8];\n\t    a21 = a.mat4[9];\n\t    a22 = a.mat4[10];\n\t    a23 = a.mat4[11];\n\t    a30 = a.mat4[12];\n\t    a31 = a.mat4[13];\n\t    a32 = a.mat4[14];\n\t    a33 = a.mat4[15];\n\t  }else if(a instanceof GLMAT_ARRAY_TYPE){\n\t    a00 = a[0];\n\t    a01 = a[1];\n\t    a02 = a[2];\n\t    a03 = a[3];\n\t    a10 = a[4];\n\t    a11 = a[5];\n\t    a12 = a[6];\n\t    a13 = a[7];\n\t    a20 = a[8];\n\t    a21 = a[9];\n\t    a22 = a[10];\n\t    a23 = a[11];\n\t    a30 = a[12];\n\t    a31 = a[13];\n\t    a32 = a[14];\n\t    a33 = a[15];\n\t  }\n\t  var b00 = a00 * a11 - a01 * a10,\n\t  b01 = a00 * a12 - a02 * a10,\n\t  b02 = a00 * a13 - a03 * a10,\n\t  b03 = a01 * a12 - a02 * a11,\n\t  b04 = a01 * a13 - a03 * a11,\n\t  b05 = a02 * a13 - a03 * a12,\n\t  b06 = a20 * a31 - a21 * a30,\n\t  b07 = a20 * a32 - a22 * a30,\n\t  b08 = a20 * a33 - a23 * a30,\n\t  b09 = a21 * a32 - a22 * a31,\n\t  b10 = a21 * a33 - a23 * a31,\n\t  b11 = a22 * a33 - a23 * a32,\n\t\n\t  // Calculate the determinant\n\t  det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 -\n\t  b04 * b07 + b05 * b06;\n\t\n\t  if (!det) {\n\t    return null;\n\t  }\n\t  det = 1.0 / det;\n\t\n\t  this.mat4[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\t  this.mat4[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\t  this.mat4[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\t  this.mat4[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n\t  this.mat4[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\t  this.mat4[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\t  this.mat4[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\t  this.mat4[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n\t  this.mat4[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\t  this.mat4[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\t  this.mat4[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\t  this.mat4[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n\t  this.mat4[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n\t  this.mat4[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n\t  this.mat4[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n\t  this.mat4[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Inverts a 3x3 matrix\n\t * @return {[type]} [description]\n\t */\n\tp5.Matrix.prototype.invert3x3 = function (){\n\t  var a00 = this.mat3[0],\n\t  a01 = this.mat3[1],\n\t  a02 = this.mat3[2],\n\t  a10 = this.mat3[3],\n\t  a11 = this.mat3[4],\n\t  a12 = this.mat3[5],\n\t  a20 = this.mat3[6],\n\t  a21 = this.mat3[7],\n\t  a22 = this.mat3[8],\n\t  b01 = a22 * a11 - a12 * a21,\n\t  b11 = -a22 * a10 + a12 * a20,\n\t  b21 = a21 * a10 - a11 * a20,\n\t\n\t  // Calculate the determinant\n\t  det = a00 * b01 + a01 * b11 + a02 * b21;\n\t  if (!det) {\n\t    return null;\n\t  }\n\t  det = 1.0 / det;\n\t  this.mat3[0] = b01 * det;\n\t  this.mat3[1] = (-a22 * a01 + a02 * a21) * det;\n\t  this.mat3[2] = (a12 * a01 - a02 * a11) * det;\n\t  this.mat3[3] = b11 * det;\n\t  this.mat3[4] = (a22 * a00 - a02 * a20) * det;\n\t  this.mat3[5] = (-a12 * a00 + a02 * a10) * det;\n\t  this.mat3[6] = b21 * det;\n\t  this.mat3[7] = (-a21 * a00 + a01 * a20) * det;\n\t  this.mat3[8] = (a11 * a00 - a01 * a10) * det;\n\t  return this;\n\t};\n\t\n\t/**\n\t * transposes a 3x3 p5.Matrix by a mat3\n\t * @param  {[Number]} mat3 1-dimensional array\n\t * @return {p5.Matrix} this\n\t */\n\tp5.Matrix.prototype.transpose3x3 = function (mat3){\n\t  var a01 = mat3[1], a02 = mat3[2], a12 = mat3[5];\n\t  this.mat3[1] = mat3[3];\n\t  this.mat3[2] = mat3[6];\n\t  this.mat3[3] = a01;\n\t  this.mat3[5] = mat3[7];\n\t  this.mat3[6] = a02;\n\t  this.mat3[7] = a12;\n\t  return this;\n\t};\n\t\n\t/**\n\t * converts a 4x4 matrix to its 3x3 inverse tranform\n\t * commonly used in MVMatrix to NMatrix conversions.\n\t * @param  {p5.Matrix} mat4 the matrix to be based on to invert\n\t * @return {p5.Matrix} this with mat3\n\t * @todo  finish implementation\n\t */\n\tp5.Matrix.prototype.inverseTranspose = function (matrix){\n\t  if(this.mat3 === undefined){\n\t    console.error('sorry, this function only works with mat3');\n\t  }\n\t  else {\n\t    //convert mat4 -> mat3\n\t    this.mat3[0] = matrix.mat4[0];\n\t    this.mat3[1] = matrix.mat4[1];\n\t    this.mat3[2] = matrix.mat4[2];\n\t    this.mat3[3] = matrix.mat4[4];\n\t    this.mat3[4] = matrix.mat4[5];\n\t    this.mat3[5] = matrix.mat4[6];\n\t    this.mat3[6] = matrix.mat4[8];\n\t    this.mat3[7] = matrix.mat4[9];\n\t    this.mat3[8] = matrix.mat4[10];\n\t  }\n\t\n\t  this.invert3x3().transpose3x3(this.mat3);\n\t  return this;\n\t};\n\t\n\t/**\n\t * inspired by Toji's mat4 determinant\n\t * @return {Number} Determinant of our 4x4 matrix\n\t */\n\tp5.Matrix.prototype.determinant = function(){\n\t  var d00 = (this.mat4[0] * this.mat4[5]) - (this.mat4[1] * this.mat4[4]),\n\t    d01 = (this.mat4[0] * this.mat4[6]) - (this.mat4[2] * this.mat4[4]),\n\t    d02 = (this.mat4[0] * this.mat4[7]) - (this.mat4[3] * this.mat4[4]),\n\t    d03 = (this.mat4[1] * this.mat4[6]) - (this.mat4[2] * this.mat4[5]),\n\t    d04 = (this.mat4[1] * this.mat4[7]) - (this.mat4[3] * this.mat4[5]),\n\t    d05 = (this.mat4[2] * this.mat4[7]) - (this.mat4[3] * this.mat4[6]),\n\t    d06 = (this.mat4[8] * this.mat4[13]) - (this.mat4[9] * this.mat4[12]),\n\t    d07 = (this.mat4[8] * this.mat4[14]) - (this.mat4[10] * this.mat4[12]),\n\t    d08 = (this.mat4[8] * this.mat4[15]) - (this.mat4[11] * this.mat4[12]),\n\t    d09 = (this.mat4[9] * this.mat4[14]) - (this.mat4[10] * this.mat4[13]),\n\t    d10 = (this.mat4[9] * this.mat4[15]) - (this.mat4[11] * this.mat4[13]),\n\t    d11 = (this.mat4[10] * this.mat4[15]) - (this.mat4[11] * this.mat4[14]);\n\t\n\t  // Calculate the determinant\n\t  return d00 * d11 - d01 * d10 + d02 * d09 +\n\t    d03 * d08 - d04 * d07 + d05 * d06;\n\t};\n\t\n\t/**\n\t * multiply two mat4s\n\t * @param {p5.Matrix | Array}  multMatrix The matrix we want to multiply by\n\t * @return {p5.Matrix}         this\n\t */\n\tp5.Matrix.prototype.mult = function(multMatrix){\n\t  var _dest = new GLMAT_ARRAY_TYPE(16);\n\t  var _src = new GLMAT_ARRAY_TYPE(16);\n\t\n\t  if(multMatrix instanceof p5.Matrix) {\n\t    _src = multMatrix.mat4;\n\t  }\n\t  else if(multMatrix instanceof GLMAT_ARRAY_TYPE){\n\t    _src = multMatrix;\n\t  }\n\t\n\t  // each row is used for the multiplier\n\t  var b0  = this.mat4[0], b1 = this.mat4[1],\n\t    b2 = this.mat4[2], b3 = this.mat4[3];\n\t  _dest[0] = b0*_src[0] + b1*_src[4] + b2*_src[8] + b3*_src[12];\n\t  _dest[1] = b0*_src[1] + b1*_src[5] + b2*_src[9] + b3*_src[13];\n\t  _dest[2] = b0*_src[2] + b1*_src[6] + b2*_src[10] + b3*_src[14];\n\t  _dest[3] = b0*_src[3] + b1*_src[7] + b2*_src[11] + b3*_src[15];\n\t\n\t  b0 = this.mat4[4];\n\t  b1 = this.mat4[5];\n\t  b2 = this.mat4[6];\n\t  b3 = this.mat4[7];\n\t  _dest[4] = b0*_src[0] + b1*_src[4] + b2*_src[8] + b3*_src[12];\n\t  _dest[5] = b0*_src[1] + b1*_src[5] + b2*_src[9] + b3*_src[13];\n\t  _dest[6] = b0*_src[2] + b1*_src[6] + b2*_src[10] + b3*_src[14];\n\t  _dest[7] = b0*_src[3] + b1*_src[7] + b2*_src[11] + b3*_src[15];\n\t\n\t  b0 = this.mat4[8];\n\t  b1 = this.mat4[9];\n\t  b2 = this.mat4[10];\n\t  b3 = this.mat4[11];\n\t  _dest[8] = b0*_src[0] + b1*_src[4] + b2*_src[8] + b3*_src[12];\n\t  _dest[9] = b0*_src[1] + b1*_src[5] + b2*_src[9] + b3*_src[13];\n\t  _dest[10] = b0*_src[2] + b1*_src[6] + b2*_src[10] + b3*_src[14];\n\t  _dest[11] = b0*_src[3] + b1*_src[7] + b2*_src[11] + b3*_src[15];\n\t\n\t  b0 = this.mat4[12];\n\t  b1 = this.mat4[13];\n\t  b2 = this.mat4[14];\n\t  b3 = this.mat4[15];\n\t  _dest[12] = b0*_src[0] + b1*_src[4] + b2*_src[8] + b3*_src[12];\n\t  _dest[13] = b0*_src[1] + b1*_src[5] + b2*_src[9] + b3*_src[13];\n\t  _dest[14] = b0*_src[2] + b1*_src[6] + b2*_src[10] + b3*_src[14];\n\t  _dest[15] = b0*_src[3] + b1*_src[7] + b2*_src[11] + b3*_src[15];\n\t\n\t  this.mat4 = _dest;\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * scales a p5.Matrix by scalars or a vector\n\t * @param  {p5.Vector | Array }\n\t *                      vector to scale by\n\t * @return {p5.Matrix}  this\n\t */\n\tp5.Matrix.prototype.scale = function() {\n\t  var x,y,z;\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  //if our 1st arg is a type p5.Vector\n\t  if (args[0] instanceof p5.Vector){\n\t    x = args[0].x;\n\t    y = args[0].y;\n\t    z = args[0].z;\n\t  }\n\t  //otherwise if it's an array\n\t  else if (args[0] instanceof Array){\n\t    x = args[0][0];\n\t    y = args[0][1];\n\t    z = args[0][2];\n\t  }\n\t  var _dest = new GLMAT_ARRAY_TYPE(16);\n\t  _dest[0] = this.mat4[0] * x;\n\t  _dest[1] = this.mat4[1] * x;\n\t  _dest[2] = this.mat4[2] * x;\n\t  _dest[3] = this.mat4[3] * x;\n\t  _dest[4] = this.mat4[4] * y;\n\t  _dest[5] = this.mat4[5] * y;\n\t  _dest[6] = this.mat4[6] * y;\n\t  _dest[7] = this.mat4[7] * y;\n\t  _dest[8] = this.mat4[8] * z;\n\t  _dest[9] = this.mat4[9] * z;\n\t  _dest[10] = this.mat4[10] * z;\n\t  _dest[11] = this.mat4[11] * z;\n\t  _dest[12] = this.mat4[12];\n\t  _dest[13] = this.mat4[13];\n\t  _dest[14] = this.mat4[14];\n\t  _dest[15] = this.mat4[15];\n\t\n\t  this.mat4 = _dest;\n\t  return this;\n\t};\n\t\n\t/**\n\t * rotate our Matrix around an axis by the given angle.\n\t * @param  {Number} a The angle of rotation in radians\n\t * @param  {p5.Vector | Array} axis  the axis(es) to rotate around\n\t * @return {p5.Matrix}                    this\n\t * inspired by Toji's gl-matrix lib, mat4 rotation\n\t */\n\tp5.Matrix.prototype.rotate = function(a, axis){\n\t  var x, y, z, _a, len;\n\t\n\t  if (this.p5) {\n\t    if (this.p5._angleMode === constants.DEGREES) {\n\t      _a = polarGeometry.degreesToRadians(a);\n\t    }\n\t  }\n\t  else {\n\t    _a = a;\n\t  }\n\t  if (axis instanceof p5.Vector) {\n\t    x = axis.x;\n\t    y = axis.y;\n\t    z = axis.z;\n\t  }\n\t  else if (axis instanceof Array) {\n\t    x = axis[0];\n\t    y = axis[1];\n\t    z = axis[2];\n\t  }\n\t\n\t  len = Math.sqrt(x * x + y * y + z * z);\n\t  x *= (1/len);\n\t  y *= (1/len);\n\t  z *= (1/len);\n\t\n\t  var a00 = this.mat4[0];\n\t  var a01 = this.mat4[1];\n\t  var a02 = this.mat4[2];\n\t  var a03 = this.mat4[3];\n\t  var a10 = this.mat4[4];\n\t  var a11 = this.mat4[5];\n\t  var a12 = this.mat4[6];\n\t  var a13 = this.mat4[7];\n\t  var a20 = this.mat4[8];\n\t  var a21 = this.mat4[9];\n\t  var a22 = this.mat4[10];\n\t  var a23 = this.mat4[11];\n\t\n\t  //sin,cos, and tan of respective angle\n\t  var sA = Math.sin(_a);\n\t  var cA = Math.cos(_a);\n\t  var tA = 1 - cA;\n\t  // Construct the elements of the rotation matrix\n\t  var b00 = x * x * tA + cA;\n\t  var b01 = y * x * tA + z * sA;\n\t  var b02 = z * x * tA - y * sA;\n\t  var b10 = x * y * tA - z * sA;\n\t  var b11 = y * y * tA + cA;\n\t  var b12 = z * y * tA + x * sA;\n\t  var b20 = x * z * tA + y * sA;\n\t  var b21 = y * z * tA - x * sA;\n\t  var b22 = z * z * tA + cA;\n\t\n\t  // rotation-specific matrix multiplication\n\t  this.mat4[0] = a00 * b00 + a10 * b01 + a20 * b02;\n\t  this.mat4[1] = a01 * b00 + a11 * b01 + a21 * b02;\n\t  this.mat4[2] = a02 * b00 + a12 * b01 + a22 * b02;\n\t  this.mat4[3] = a03 * b00 + a13 * b01 + a23 * b02;\n\t  this.mat4[4] = a00 * b10 + a10 * b11 + a20 * b12;\n\t  this.mat4[5] = a01 * b10 + a11 * b11 + a21 * b12;\n\t  this.mat4[6] = a02 * b10 + a12 * b11 + a22 * b12;\n\t  this.mat4[7] = a03 * b10 + a13 * b11 + a23 * b12;\n\t  this.mat4[8] = a00 * b20 + a10 * b21 + a20 * b22;\n\t  this.mat4[9] = a01 * b20 + a11 * b21 + a21 * b22;\n\t  this.mat4[10] = a02 * b20 + a12 * b21 + a22 * b22;\n\t  this.mat4[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * @todo  finish implementing this method!\n\t * translates\n\t * @param  {Array} v vector to translate by\n\t * @return {p5.Matrix}                    this\n\t */\n\tp5.Matrix.prototype.translate = function(v){\n\t  var x = v[0],\n\t    y = v[1],\n\t    z = v[2] || 0;\n\t  this.mat4[12] =\n\t    this.mat4[0] * x +this.mat4[4] * y +this.mat4[8] * z +this.mat4[12];\n\t  this.mat4[13] =\n\t    this.mat4[1] * x +this.mat4[5] * y +this.mat4[9] * z +this.mat4[13];\n\t  this.mat4[14] =\n\t    this.mat4[2] * x +this.mat4[6] * y +this.mat4[10] * z +this.mat4[14];\n\t  this.mat4[15] =\n\t    this.mat4[3] * x +this.mat4[7] * y +this.mat4[11] * z +this.mat4[15];\n\t};\n\t\n\tp5.Matrix.prototype.rotateX = function(a){\n\t  this.rotate(a, [1,0,0]);\n\t};\n\tp5.Matrix.prototype.rotateY = function(a){\n\t  this.rotate(a, [0,1,0]);\n\t};\n\tp5.Matrix.prototype.rotateZ = function(a){\n\t  this.rotate(a, [0,0,1]);\n\t};\n\t\n\t/**\n\t * sets the perspective matrix\n\t * @param  {Number} fovy   [description]\n\t * @param  {Number} aspect [description]\n\t * @param  {Number} near   near clipping plane\n\t * @param  {Number} far    far clipping plane\n\t * @return {void}\n\t */\n\tp5.Matrix.prototype.perspective = function(fovy,aspect,near,far){\n\t\n\t  var f = 1.0 / Math.tan(fovy / 2),\n\t    nf = 1 / (near - far);\n\t\n\t  this.mat4[0] = f / aspect;\n\t  this.mat4[1] = 0;\n\t  this.mat4[2] = 0;\n\t  this.mat4[3] = 0;\n\t  this.mat4[4] = 0;\n\t  this.mat4[5] = f;\n\t  this.mat4[6] = 0;\n\t  this.mat4[7] = 0;\n\t  this.mat4[8] = 0;\n\t  this.mat4[9] = 0;\n\t  this.mat4[10] = (far + near) * nf;\n\t  this.mat4[11] = -1;\n\t  this.mat4[12] = 0;\n\t  this.mat4[13] = 0;\n\t  this.mat4[14] = (2 * far * near) * nf;\n\t  this.mat4[15] = 0;\n\t\n\t  return this;\n\t\n\t};\n\t\n\t/**\n\t * sets the ortho matrix\n\t * @param  {Number} left   [description]\n\t * @param  {Number} right  [description]\n\t * @param  {Number} bottom [description]\n\t * @param  {Number} top    [description]\n\t * @param  {Number} near   near clipping plane\n\t * @param  {Number} far    far clipping plane\n\t * @return {void}\n\t */\n\tp5.Matrix.prototype.ortho = function(left,right,bottom,top,near,far){\n\t\n\t  var lr = 1 / (left - right),\n\t    bt = 1 / (bottom - top),\n\t    nf = 1 / (near - far);\n\t  this.mat4[0] = -2 * lr;\n\t  this.mat4[1] = 0;\n\t  this.mat4[2] = 0;\n\t  this.mat4[3] = 0;\n\t  this.mat4[4] = 0;\n\t  this.mat4[5] = -2 * bt;\n\t  this.mat4[6] = 0;\n\t  this.mat4[7] = 0;\n\t  this.mat4[8] = 0;\n\t  this.mat4[9] = 0;\n\t  this.mat4[10] = 2 * nf;\n\t  this.mat4[11] = 0;\n\t  this.mat4[12] = (left + right) * lr;\n\t  this.mat4[13] = (top + bottom) * bt;\n\t  this.mat4[14] = (far + near) * nf;\n\t  this.mat4[15] = 1;\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * PRIVATE\n\t */\n\t// matrix methods adapted from:\n\t// https://developer.mozilla.org/en-US/docs/Web/WebGL/\n\t// gluPerspective\n\t//\n\t// function _makePerspective(fovy, aspect, znear, zfar){\n\t//    var ymax = znear * Math.tan(fovy * Math.PI / 360.0);\n\t//    var ymin = -ymax;\n\t//    var xmin = ymin * aspect;\n\t//    var xmax = ymax * aspect;\n\t//    return _makeFrustum(xmin, xmax, ymin, ymax, znear, zfar);\n\t//  }\n\t\n\t////\n\t//// glFrustum\n\t////\n\t//function _makeFrustum(left, right, bottom, top, znear, zfar){\n\t//  var X = 2*znear/(right-left);\n\t//  var Y = 2*znear/(top-bottom);\n\t//  var A = (right+left)/(right-left);\n\t//  var B = (top+bottom)/(top-bottom);\n\t//  var C = -(zfar+znear)/(zfar-znear);\n\t//  var D = -2*zfar*znear/(zfar-znear);\n\t//  var frustrumMatrix =[\n\t//  X, 0, A, 0,\n\t//  0, Y, B, 0,\n\t//  0, 0, C, D,\n\t//  0, 0, -1, 0\n\t//];\n\t//return frustrumMatrix;\n\t// }\n\t\n\t// function _setMVPMatrices(){\n\t////an identity matrix\n\t////@TODO use the p5.Matrix class to abstract away our MV matrices and\n\t///other math\n\t//var _mvMatrix =\n\t//[\n\t//  1.0,0.0,0.0,0.0,\n\t//  0.0,1.0,0.0,0.0,\n\t//  0.0,0.0,1.0,0.0,\n\t//  0.0,0.0,0.0,1.0\n\t//];\n\t\n\tmodule.exports = p5.Matrix;\n\t\n\t},{\"../core/constants\":36,\"../core/core\":37,\"../math/polargeometry\":67}],84:[function(_dereq_,module,exports){\n\t/**\n\t * Welcome to RendererGL Immediate Mode.\n\t * Immediate mode is used for drawing custom shapes\n\t * from a set of vertices.  Immediate Mode is activated\n\t * when you call beginShape() & de-activated when you call endShape().\n\t * Immediate mode is a style of programming borrowed\n\t * from OpenGL's (now-deprecated) immediate mode.\n\t * It differs from p5.js' default, Retained Mode, which caches\n\t * geometries and buffers on the CPU to reduce the number of webgl\n\t * draw calls. Retained mode is more efficient & performative,\n\t * however, Immediate Mode is useful for sketching quick\n\t * geometric ideas.\n\t */\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar constants = _dereq_('../core/constants');\n\t\n\t/**\n\t * Begin shape drawing.  This is a helpful way of generating\n\t * custom shapes quickly.  However in WEBGL mode, application\n\t * performance will likely drop as a result of too many calls to\n\t * beginShape() / endShape().  As a high performance alternative,\n\t * please use p5.js geometry primitives.\n\t * @param  {Number} mode webgl primitives mode.  beginShape supports the\n\t *                       following modes:\n\t *                       POINTS,LINES,LINE_STRIP,LINE_LOOP,TRIANGLES,\n\t *                       TRIANGLE_STRIP,and TRIANGLE_FAN.\n\t * @return {[type]}      [description]\n\t */\n\tp5.RendererGL.prototype.beginShape = function(mode){\n\t  //default shape mode is line_strip\n\t  this.immediateMode.shapeMode = (mode !== undefined ) ?\n\t    mode : constants.LINE_STRIP;\n\t  //if we haven't yet initialized our\n\t  //immediateMode vertices & buffers, create them now!\n\t  if(this.immediateMode.vertexPositions === undefined){\n\t    this.immediateMode.vertexPositions = [];\n\t    this.immediateMode.vertexColors = [];\n\t    this.immediateMode.vertexBuffer = this.GL.createBuffer();\n\t    this.immediateMode.colorBuffer = this.GL.createBuffer();\n\t  } else {\n\t    this.immediateMode.vertexPositions.length = 0;\n\t    this.immediateMode.vertexColors.length = 0;\n\t  }\n\t  this.isImmediateDrawing = true;\n\t  return this;\n\t};\n\t/**\n\t * adds a vertex to be drawn in a custom Shape.\n\t * @param  {Number} x x-coordinate of vertex\n\t * @param  {Number} y y-coordinate of vertex\n\t * @param  {Number} z z-coordinate of vertex\n\t * @return {p5.RendererGL}   [description]\n\t * @TODO implement handling of p5.Vector args\n\t */\n\tp5.RendererGL.prototype.vertex = function(x, y, z){\n\t  this.immediateMode.vertexPositions.push(x, y, z);\n\t  var vertexColor = this.curFillColor || [0.5, 0.5, 0.5, 1.0];\n\t  this.immediateMode.vertexColors.push(\n\t    vertexColor[0],\n\t    vertexColor[1],\n\t    vertexColor[2],\n\t    vertexColor[3]);\n\t  return this;\n\t};\n\t\n\t/**\n\t * End shape drawing and render vertices to screen.\n\t * @return {p5.RendererGL} [description]\n\t */\n\tp5.RendererGL.prototype.endShape =\n\tfunction(mode, isCurve, isBezier,isQuadratic, isContour, shapeKind){\n\t  var gl = this.GL;\n\t  this._bindImmediateBuffers(\n\t    this.immediateMode.vertexPositions,\n\t    this.immediateMode.vertexColors);\n\t  if(mode){\n\t    if(this.drawMode === 'fill'){\n\t      switch(this.immediateMode.shapeMode){\n\t        case constants.LINE_STRIP:\n\t          this.immediateMode.shapeMode = constants.TRIANGLE_FAN;\n\t          break;\n\t        case constants.LINES:\n\t          this.immediateMode.shapeMode = constants.TRIANGLE_FAN;\n\t          break;\n\t        case constants.TRIANGLES:\n\t          this.immediateMode.shapeMode = constants.TRIANGLE_FAN;\n\t          break;\n\t      }\n\t    } else {\n\t      switch(this.immediateMode.shapeMode){\n\t        case constants.LINE_STRIP:\n\t          this.immediateMode.shapeMode = constants.LINE_LOOP;\n\t          break;\n\t        case constants.LINES:\n\t          this.immediateMode.shapeMode = constants.LINE_LOOP;\n\t          break;\n\t      }\n\t    }\n\t  }\n\t  //QUADS & QUAD_STRIP are not supported primitives modes\n\t  //in webgl.\n\t  if(this.immediateMode.shapeMode === constants.QUADS ||\n\t    this.immediateMode.shapeMode === constants.QUAD_STRIP){\n\t    throw new Error('sorry, ' + this.immediateMode.shapeMode+\n\t      ' not yet implemented in webgl mode.');\n\t  }\n\t  else {\n\t    gl.enable(gl.BLEND);\n\t    gl.drawArrays(this.immediateMode.shapeMode, 0,\n\t      this.immediateMode.vertexPositions.length / 3);\n\t  }\n\t  //clear out our vertexPositions & colors arrays\n\t  //after rendering\n\t  this.immediateMode.vertexPositions.length = 0;\n\t  this.immediateMode.vertexColors.length = 0;\n\t  this.isImmediateDrawing = false;\n\t  return this;\n\t};\n\t/**\n\t * Bind immediateMode buffers to data,\n\t * then draw gl arrays\n\t * @param  {Array} vertices Numbers array representing\n\t *                          vertex positions\n\t * @return {p5.RendererGL}\n\t */\n\tp5.RendererGL.prototype._bindImmediateBuffers = function(vertices, colors){\n\t  this._setDefaultCamera();\n\t  var gl = this.GL;\n\t  var shaderKey = this._getCurShaderId();\n\t  var shaderProgram = this.mHash[shaderKey];\n\t  //vertex position Attribute\n\t  shaderProgram.vertexPositionAttribute =\n\t    gl.getAttribLocation(shaderProgram, 'aPosition');\n\t  gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n\t  gl.bindBuffer(gl.ARRAY_BUFFER, this.immediateMode.vertexBuffer);\n\t  gl.bufferData(\n\t    gl.ARRAY_BUFFER, new Float32Array(vertices), gl.DYNAMIC_DRAW);\n\t  gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute,\n\t    3, gl.FLOAT, false, 0, 0);\n\t\n\t  shaderProgram.vertexColorAttribute =\n\t    gl.getAttribLocation(shaderProgram, 'aVertexColor');\n\t  gl.enableVertexAttribArray(shaderProgram.vertexColorAttribute);\n\t  gl.bindBuffer(gl.ARRAY_BUFFER, this.immediateMode.colorBuffer);\n\t  gl.bufferData(gl.ARRAY_BUFFER,\n\t    new Float32Array(colors),gl.DYNAMIC_DRAW);\n\t  gl.vertexAttribPointer(shaderProgram.vertexColorAttribute,\n\t    4, gl.FLOAT, false, 0, 0);\n\t  //matrix\n\t  this._setMatrixUniforms(shaderKey);\n\t  //@todo implement in all shaders (not just immediateVert)\n\t  //set our default point size\n\t  // this._setUniform1f(shaderKey,\n\t  //   'uPointSize',\n\t  //   this.pointSize);\n\t  return this;\n\t};\n\t\n\t//////////////////////////////////////////////\n\t// COLOR\n\t//////////////////////////////////////////////\n\t\n\tp5.RendererGL.prototype._getColorVertexShader = function(){\n\t  var gl = this.GL;\n\t  var mId = 'immediateVert|vertexColorFrag';\n\t  var shaderProgram;\n\t\n\t  if(!this.materialInHash(mId)){\n\t    shaderProgram =\n\t      this._initShaders('immediateVert', 'vertexColorFrag', true);\n\t    this.mHash[mId] = shaderProgram;\n\t    shaderProgram.vertexColorAttribute =\n\t    gl.getAttribLocation(shaderProgram, 'aVertexColor');\n\t    gl.enableVertexAttribArray(shaderProgram.vertexColorAttribute);\n\t  }else{\n\t    shaderProgram = this.mHash[mId];\n\t  }\n\t  return shaderProgram;\n\t};\n\t\n\tmodule.exports = p5.RendererGL;\n\t},{\"../core/constants\":36,\"../core/core\":37}],85:[function(_dereq_,module,exports){\n\t//Retained Mode. The default mode for rendering 3D primitives\n\t//in WEBGL.\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar hashCount = 0;\n\t/**\n\t * _initBufferDefaults\n\t * @description initializes buffer defaults. runs each time a new geometry is\n\t * registered\n\t * @param  {String} gId  key of the geometry object\n\t */\n\tp5.RendererGL.prototype._initBufferDefaults = function(gId) {\n\t  //@TODO remove this limit on hashes in gHash\n\t  hashCount ++;\n\t  if(hashCount > 1000){\n\t    var key = Object.keys(this.gHash)[0];\n\t    delete this.gHash[key];\n\t    hashCount --;\n\t  }\n\t\n\t  var gl = this.GL;\n\t  //create a new entry in our gHash\n\t  this.gHash[gId] = {};\n\t  this.gHash[gId].vertexBuffer = gl.createBuffer();\n\t  this.gHash[gId].normalBuffer = gl.createBuffer();\n\t  this.gHash[gId].uvBuffer = gl.createBuffer();\n\t  this.gHash[gId].indexBuffer = gl.createBuffer();\n\t};\n\t/**\n\t * createBuffers description\n\t * @param  {String} gId    key of the geometry object\n\t * @param  {p5.Geometry}  obj contains geometry data\n\t */\n\tp5.RendererGL.prototype.createBuffers = function(gId, obj) {\n\t  var gl = this.GL;\n\t  this._setDefaultCamera();\n\t  //initialize the gl buffers for our geom groups\n\t  this._initBufferDefaults(gId);\n\t  //return the current shaderProgram from our material hash\n\t  var shaderProgram = this.mHash[this._getCurShaderId()];\n\t  //@todo rename \"numberOfItems\" property to something more descriptive\n\t  //we mult the num geom faces by 3\n\t  this.gHash[gId].numberOfItems = obj.faces.length * 3;\n\t  gl.bindBuffer(gl.ARRAY_BUFFER, this.gHash[gId].vertexBuffer);\n\t  gl.bufferData(\n\t    gl.ARRAY_BUFFER,\n\t    new Float32Array( vToNArray(obj.vertices) ),\n\t    gl.STATIC_DRAW);\n\t  //vertex position\n\t  shaderProgram.vertexPositionAttribute =\n\t    gl.getAttribLocation(shaderProgram, 'aPosition');\n\t  gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n\t\n\t  gl.vertexAttribPointer(\n\t    shaderProgram.vertexPositionAttribute,\n\t    3, gl.FLOAT, false, 0, 0);\n\t\n\t  gl.bindBuffer(gl.ARRAY_BUFFER, this.gHash[gId].normalBuffer);\n\t  gl.bufferData(\n\t    gl.ARRAY_BUFFER,\n\t    new Float32Array( vToNArray(obj.vertexNormals) ),\n\t    gl.STATIC_DRAW);\n\t  //vertex normal\n\t  shaderProgram.vertexNormalAttribute =\n\t    gl.getAttribLocation(shaderProgram, 'aNormal');\n\t  gl.enableVertexAttribArray(shaderProgram.vertexNormalAttribute);\n\t\n\t  gl.vertexAttribPointer(\n\t    shaderProgram.vertexNormalAttribute,\n\t    3, gl.FLOAT, false, 0, 0);\n\t\n\t  gl.bindBuffer(gl.ARRAY_BUFFER, this.gHash[gId].uvBuffer);\n\t  gl.bufferData(\n\t    gl.ARRAY_BUFFER,\n\t    new Float32Array( flatten(obj.uvs) ),\n\t    gl.STATIC_DRAW);\n\t  //texture coordinate Attribute\n\t  shaderProgram.textureCoordAttribute =\n\t    gl.getAttribLocation(shaderProgram, 'aTexCoord');\n\t  gl.enableVertexAttribArray(shaderProgram.textureCoordAttribute);\n\t  gl.vertexAttribPointer(\n\t    shaderProgram.textureCoordAttribute,\n\t    2, gl.FLOAT, false, 0, 0);\n\t\n\t  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.gHash[gId].indexBuffer);\n\t  gl.bufferData(\n\t    gl.ELEMENT_ARRAY_BUFFER,\n\t    new Uint16Array( flatten(obj.faces) ),\n\t    gl.STATIC_DRAW);\n\t};\n\t\n\t/**\n\t * Draws buffers given a geometry key ID\n\t * @param  {String} gId     ID in our geom hash\n\t * @return {p5.RendererGL} this\n\t */\n\tp5.RendererGL.prototype.drawBuffers = function(gId) {\n\t  this._setDefaultCamera();\n\t  var gl = this.GL;\n\t  var shaderKey = this._getCurShaderId();\n\t  var shaderProgram = this.mHash[shaderKey];\n\t  //vertex position buffer\n\t  gl.bindBuffer(gl.ARRAY_BUFFER, this.gHash[gId].vertexBuffer);\n\t  gl.vertexAttribPointer(\n\t    shaderProgram.vertexPositionAttribute,\n\t    3, gl.FLOAT, false, 0, 0);\n\t  //normal buffer\n\t  gl.bindBuffer(gl.ARRAY_BUFFER, this.gHash[gId].normalBuffer);\n\t  gl.vertexAttribPointer(\n\t    shaderProgram.vertexNormalAttribute,\n\t    3, gl.FLOAT, false, 0, 0);\n\t  // uv buffer\n\t  gl.bindBuffer(gl.ARRAY_BUFFER, this.gHash[gId].uvBuffer);\n\t  gl.vertexAttribPointer(\n\t    shaderProgram.textureCoordAttribute,\n\t    2, gl.FLOAT, false, 0, 0);\n\t  //vertex index buffer\n\t  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.gHash[gId].indexBuffer);\n\t  this._setMatrixUniforms(shaderKey);\n\t  gl.drawElements(\n\t    gl.TRIANGLES, this.gHash[gId].numberOfItems,\n\t    gl.UNSIGNED_SHORT, 0);\n\t  return this;\n\t};\n\t///////////////////////////////\n\t//// UTILITY FUNCTIONS\n\t//////////////////////////////\n\t/**\n\t * turn a two dimensional array into one dimensional array\n\t * @param  {Array} arr 2-dimensional array\n\t * @return {Array}     1-dimensional array\n\t * [[1, 2, 3],[4, 5, 6]] -> [1, 2, 3, 4, 5, 6]\n\t */\n\tfunction flatten(arr){\n\t  if (arr.length>0){\n\t    return arr.reduce(function(a, b){\n\t      return a.concat(b);\n\t    });\n\t  } else {\n\t    return [];\n\t  }\n\t}\n\t\n\t/**\n\t * turn a p5.Vector Array into a one dimensional number array\n\t * @param  {Array} arr  an array of p5.Vector\n\t * @return {Array]}     a one dimensional array of numbers\n\t * [p5.Vector(1, 2, 3), p5.Vector(4, 5, 6)] ->\n\t * [1, 2, 3, 4, 5, 6]\n\t */\n\tfunction vToNArray(arr){\n\t  return flatten(arr.map(function(item){\n\t    return [item.x, item.y, item.z];\n\t  }));\n\t}\n\tmodule.exports = p5.RendererGL;\n\t\n\t},{\"../core/core\":37}],86:[function(_dereq_,module,exports){\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\tvar shader = _dereq_('./shader');\n\t_dereq_('../core/p5.Renderer');\n\t_dereq_('./p5.Matrix');\n\tvar uMVMatrixStack = [];\n\tvar RESOLUTION = 1000;\n\t\n\t//@TODO should implement public method\n\t//to override these attributes\n\tvar attributes = {\n\t  alpha: true,\n\t  depth: true,\n\t  stencil: true,\n\t  antialias: false,\n\t  premultipliedAlpha: false,\n\t  preserveDrawingBuffer: false\n\t};\n\t\n\t/**\n\t * @class p5.RendererGL\n\t * @constructor\n\t * @extends p5.Renderer\n\t * 3D graphics class.\n\t * @todo extend class to include public method for offscreen\n\t * rendering (FBO).\n\t *\n\t */\n\tp5.RendererGL = function(elt, pInst, isMainCanvas) {\n\t  p5.Renderer.call(this, elt, pInst, isMainCanvas);\n\t  this._initContext();\n\t\n\t  this.isP3D = true; //lets us know we're in 3d mode\n\t  this.GL = this.drawingContext;\n\t  //lights\n\t  this.ambientLightCount = 0;\n\t  this.directionalLightCount = 0;\n\t  this.pointLightCount = 0;\n\t  //camera\n\t  this._curCamera = null;\n\t\n\t  /**\n\t   * model view, projection, & normal\n\t   * matrices\n\t   */\n\t  this.uMVMatrix = new p5.Matrix();\n\t  this.uPMatrix  = new p5.Matrix();\n\t  this.uNMatrix = new p5.Matrix('mat3');\n\t  //Geometry & Material hashes\n\t  this.gHash = {};\n\t  this.mHash = {};\n\t  //Imediate Mode\n\t  //default drawing is done in Retained Mode\n\t  this.isImmediateDrawing = false;\n\t  this.immediateMode = {};\n\t  this.curFillColor = [0.5,0.5,0.5,1.0];\n\t  this.curStrokeColor = [0.5,0.5,0.5,1.0];\n\t  this.pointSize = 5.0;//default point/stroke\n\t  return this;\n\t};\n\t\n\tp5.RendererGL.prototype = Object.create(p5.Renderer.prototype);\n\t\n\t//////////////////////////////////////////////\n\t// Setting\n\t//////////////////////////////////////////////\n\t\n\tp5.RendererGL.prototype._initContext = function() {\n\t  try {\n\t    this.drawingContext = this.canvas.getContext('webgl', attributes) ||\n\t      this.canvas.getContext('experimental-webgl', attributes);\n\t    if (this.drawingContext === null) {\n\t      throw new Error('Error creating webgl context');\n\t    } else {\n\t      console.log('p5.RendererGL: enabled webgl context');\n\t      var gl = this.drawingContext;\n\t      gl.enable(gl.DEPTH_TEST);\n\t      gl.depthFunc(gl.LEQUAL);\n\t      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t    }\n\t  } catch (er) {\n\t    throw new Error(er);\n\t  }\n\t};\n\t//detect if user didn't set the camera\n\t//then call this function below\n\tp5.RendererGL.prototype._setDefaultCamera = function(){\n\t  if(this._curCamera === null){\n\t    var _w = this.width;\n\t    var _h = this.height;\n\t    this.uPMatrix = p5.Matrix.identity();\n\t    this.uPMatrix.perspective(60 / 180 * Math.PI, _w / _h, 0.1, 100);\n\t    this._curCamera = 'default';\n\t  }\n\t};\n\t\n\tp5.RendererGL.prototype._update = function() {\n\t  this.uMVMatrix = p5.Matrix.identity();\n\t  this.translate(0, 0, -(this.height / 2) / Math.tan(Math.PI * 30 / 180));\n\t  this.ambientLightCount = 0;\n\t  this.directionalLightCount = 0;\n\t  this.pointLightCount = 0;\n\t};\n\t\n\t/**\n\t * [background description]\n\t * @return {[type]} [description]\n\t */\n\tp5.RendererGL.prototype.background = function() {\n\t  var gl = this.GL;\n\t  var _col = this._pInst.color.apply(this._pInst, arguments);\n\t  var _r = (_col.levels[0]) / 255;\n\t  var _g = (_col.levels[1]) / 255;\n\t  var _b = (_col.levels[2]) / 255;\n\t  var _a = (_col.levels[3]) / 255;\n\t  gl.clearColor(_r, _g, _b, _a);\n\t  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t};\n\t\n\t//@TODO implement this\n\t// p5.RendererGL.prototype.clear = function() {\n\t//@TODO\n\t// };\n\t\n\t//////////////////////////////////////////////\n\t// SHADER\n\t//////////////////////////////////////////////\n\t\n\t/**\n\t * [_initShaders description]\n\t * @param  {string} vertId [description]\n\t * @param  {string} fragId [description]\n\t * @return {[type]}        [description]\n\t */\n\tp5.RendererGL.prototype._initShaders =\n\tfunction(vertId, fragId, isImmediateMode) {\n\t  var gl = this.GL;\n\t  //set up our default shaders by:\n\t  // 1. create the shader,\n\t  // 2. load the shader source,\n\t  // 3. compile the shader\n\t  var _vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t  //load in our default vertex shader\n\t  gl.shaderSource(_vertShader, shader[vertId]);\n\t  gl.compileShader(_vertShader);\n\t  // if our vertex shader failed compilation?\n\t  if (!gl.getShaderParameter(_vertShader, gl.COMPILE_STATUS)) {\n\t    alert('Yikes! An error occurred compiling the shaders:' +\n\t      gl.getShaderInfoLog(_vertShader));\n\t    return null;\n\t  }\n\t\n\t  var _fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\t  //load in our material frag shader\n\t  gl.shaderSource(_fragShader, shader[fragId]);\n\t  gl.compileShader(_fragShader);\n\t  // if our frag shader failed compilation?\n\t  if (!gl.getShaderParameter(_fragShader, gl.COMPILE_STATUS)) {\n\t    alert('Darn! An error occurred compiling the shaders:' +\n\t      gl.getShaderInfoLog(_fragShader));\n\t    return null;\n\t  }\n\t\n\t  var shaderProgram = gl.createProgram();\n\t  gl.attachShader(shaderProgram, _vertShader);\n\t  gl.attachShader(shaderProgram, _fragShader);\n\t  gl.linkProgram(shaderProgram);\n\t  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n\t    alert('Snap! Error linking shader program');\n\t  }\n\t  //END SHADERS SETUP\n\t\n\t  this._getLocation(shaderProgram, isImmediateMode);\n\t\n\t  return shaderProgram;\n\t};\n\t\n\tp5.RendererGL.prototype._getLocation =\n\tfunction(shaderProgram, isImmediateMode) {\n\t  var gl = this.GL;\n\t  gl.useProgram(shaderProgram);\n\t  shaderProgram.uResolution =\n\t    gl.getUniformLocation(shaderProgram, 'uResolution');\n\t  gl.uniform1f(shaderProgram.uResolution, RESOLUTION);\n\t\n\t  //projection Matrix uniform\n\t  shaderProgram.uPMatrixUniform =\n\t    gl.getUniformLocation(shaderProgram, 'uProjectionMatrix');\n\t  //model view Matrix uniform\n\t  shaderProgram.uMVMatrixUniform =\n\t    gl.getUniformLocation(shaderProgram, 'uModelViewMatrix');\n\t\n\t  //@TODO: figure out a better way instead of if statement\n\t  if(isImmediateMode === undefined){\n\t    //normal Matrix uniform\n\t    shaderProgram.uNMatrixUniform =\n\t    gl.getUniformLocation(shaderProgram, 'uNormalMatrix');\n\t\n\t    shaderProgram.samplerUniform =\n\t    gl.getUniformLocation(shaderProgram, 'uSampler');\n\t  }\n\t};\n\t\n\t/**\n\t * Sets a shader uniform given a shaderProgram and uniform string\n\t * @param {String} shaderKey key to material Hash.\n\t * @param {String} uniform location in shader.\n\t * @param { Number} data data to bind uniform.  Float data type.\n\t * @todo currently this function sets uniform1f data.\n\t * Should generalize function to accept any uniform\n\t * data type.\n\t */\n\tp5.RendererGL.prototype._setUniform1f = function(shaderKey,uniform,data)\n\t{\n\t  var gl = this.GL;\n\t  var shaderProgram = this.mHash[shaderKey];\n\t  gl.useProgram(shaderProgram);\n\t  shaderProgram[uniform] = gl.getUniformLocation(shaderProgram, uniform);\n\t  gl.uniform1f(shaderProgram[uniform], data);\n\t  return this;\n\t};\n\t\n\tp5.RendererGL.prototype._setMatrixUniforms = function(shaderKey) {\n\t  var gl = this.GL;\n\t  var shaderProgram = this.mHash[shaderKey];\n\t\n\t  gl.useProgram(shaderProgram);\n\t\n\t  gl.uniformMatrix4fv(\n\t    shaderProgram.uPMatrixUniform,\n\t    false, this.uPMatrix.mat4);\n\t\n\t  gl.uniformMatrix4fv(\n\t    shaderProgram.uMVMatrixUniform,\n\t    false, this.uMVMatrix.mat4);\n\t\n\t  this.uNMatrix.inverseTranspose(this.uMVMatrix);\n\t\n\t  gl.uniformMatrix3fv(\n\t    shaderProgram.uNMatrixUniform,\n\t    false, this.uNMatrix.mat3);\n\t};\n\t//////////////////////////////////////////////\n\t// GET CURRENT | for shader and color\n\t//////////////////////////////////////////////\n\tp5.RendererGL.prototype._getShader = function(vertId, fragId, isImmediateMode) {\n\t  var mId = vertId + '|' + fragId;\n\t  //create it and put it into hashTable\n\t  if(!this.materialInHash(mId)){\n\t    var shaderProgram = this._initShaders(vertId, fragId, isImmediateMode);\n\t    this.mHash[mId] = shaderProgram;\n\t  }\n\t  this.curShaderId = mId;\n\t\n\t  return this.mHash[this.curShaderId];\n\t};\n\t\n\tp5.RendererGL.prototype._getCurShaderId = function(){\n\t  //if the shader ID is not yet defined\n\t  var mId, shaderProgram;\n\t  if(this.drawMode !== 'fill' && this.curShaderId === undefined){\n\t    //default shader: normalMaterial()\n\t    mId = 'normalVert|normalFrag';\n\t    shaderProgram = this._initShaders('normalVert', 'normalFrag');\n\t    this.mHash[mId] = shaderProgram;\n\t    this.curShaderId = mId;\n\t  } else if(this.isImmediateDrawing && this.drawMode === 'fill'){\n\t    mId = 'immediateVert|vertexColorFrag';\n\t    shaderProgram = this._initShaders('immediateVert', 'vertexColorFrag');\n\t    this.mHash[mId] = shaderProgram;\n\t    this.curShaderId = mId;\n\t  }\n\t  return this.curShaderId;\n\t};\n\t\n\t//////////////////////////////////////////////\n\t// COLOR\n\t//////////////////////////////////////////////\n\t/**\n\t * Basic fill material for geometry with a given color\n\t * @method  fill\n\t * @param  {Number|Array|String|p5.Color} v1  gray value,\n\t * red or hue value (depending on the current color mode),\n\t * or color Array, or CSS color string\n\t * @param  {Number}            [v2] optional: green or saturation value\n\t * @param  {Number}            [v3] optional: blue or brightness value\n\t * @param  {Number}            [a]  optional: opacity\n\t * @return {p5}                the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *  background(0);\n\t *  fill(250, 0, 0);\n\t *  rotateX(frameCount * 0.01);\n\t *  rotateY(frameCount * 0.01);\n\t *  rotateZ(frameCount * 0.01);\n\t *  box(200, 200, 200);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * red canvas\n\t *\n\t */\n\tp5.RendererGL.prototype.fill = function(v1, v2, v3, a) {\n\t  var gl = this.GL;\n\t  var shaderProgram;\n\t  //see material.js for more info on color blending in webgl\n\t  var colors = this._applyColorBlend.apply(this, arguments);\n\t  this.curFillColor = colors;\n\t  this.drawMode = 'fill';\n\t  if(this.isImmediateDrawing){\n\t    shaderProgram =\n\t    this._getShader('immediateVert','vertexColorFrag');\n\t    gl.useProgram(shaderProgram);\n\t  } else {\n\t    shaderProgram =\n\t    this._getShader('normalVert', 'basicFrag');\n\t    gl.useProgram(shaderProgram);\n\t    //RetainedMode uses a webgl uniform to pass color vals\n\t    //in ImmediateMode, we want access to each vertex so therefore\n\t    //we cannot use a uniform.\n\t    shaderProgram.uMaterialColor = gl.getUniformLocation(\n\t      shaderProgram, 'uMaterialColor' );\n\t    gl.uniform4f( shaderProgram.uMaterialColor,\n\t      colors[0],\n\t      colors[1],\n\t      colors[2],\n\t      colors[3]);\n\t  }\n\t  return this;\n\t};\n\tp5.RendererGL.prototype.stroke = function(r, g, b, a) {\n\t  var color = this._pInst.color.apply(this._pInst, arguments);\n\t  var colorNormalized = color._array;\n\t  this.curStrokeColor = colorNormalized;\n\t  this.drawMode = 'stroke';\n\t  return this;\n\t};\n\t\n\t//@TODO\n\tp5.RendererGL.prototype._strokeCheck = function(){\n\t  if(this.drawMode === 'stroke'){\n\t    throw new Error(\n\t      'stroke for shapes in 3D not yet implemented, use fill for now :('\n\t    );\n\t  }\n\t};\n\t\n\t/**\n\t * [strokeWeight description]\n\t * @param  {Number} pointSize stroke point size\n\t * @return {[type]}           [description]\n\t * @todo  strokeWeight currently works on points only.\n\t * implement on all wireframes and strokes.\n\t */\n\tp5.RendererGL.prototype.strokeWeight = function(pointSize) {\n\t  this.pointSize = pointSize;\n\t  return this;\n\t};\n\t//////////////////////////////////////////////\n\t// HASH | for material and geometry\n\t//////////////////////////////////////////////\n\t\n\tp5.RendererGL.prototype.geometryInHash = function(gId){\n\t  return this.gHash[gId] !== undefined;\n\t};\n\t\n\tp5.RendererGL.prototype.materialInHash = function(mId){\n\t  return this.mHash[mId] !== undefined;\n\t};\n\t\n\t/**\n\t * [resize description]\n\t * @param  {[type]} w [description]\n\t * @param  {[tyoe]} h [description]\n\t * @return {[type]}   [description]\n\t */\n\tp5.RendererGL.prototype.resize = function(w,h) {\n\t  var gl = this.GL;\n\t  p5.Renderer.prototype.resize.call(this, w, h);\n\t  gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t  // If we're using the default camera, update the aspect ratio\n\t  if(this._curCamera === 'default') {\n\t    this._curCamera = null;\n\t    this._setDefaultCamera();\n\t  }\n\t};\n\t\n\t/**\n\t * clears color and depth buffers\n\t * with r,g,b,a\n\t * @param {Number} r normalized red val.\n\t * @param {Number} g normalized green val.\n\t * @param {Number} b normalized blue val.\n\t * @param {Number} a normalized alpha val.\n\t */\n\tp5.RendererGL.prototype.clear = function() {\n\t  var gl = this.GL;\n\t  gl.clearColor(arguments[0],\n\t    arguments[1],\n\t    arguments[2],\n\t    arguments[3]);\n\t  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t};\n\t\n\t/**\n\t * [translate description]\n\t * @param  {[type]} x [description]\n\t * @param  {[type]} y [description]\n\t * @param  {[type]} z [description]\n\t * @return {[type]}   [description]\n\t * @todo implement handle for components or vector as args\n\t */\n\tp5.RendererGL.prototype.translate = function(x, y, z) {\n\t  //@TODO: figure out how to fit the resolution\n\t  x = x / RESOLUTION;\n\t  y = -y / RESOLUTION;\n\t  z = z / RESOLUTION;\n\t  this.uMVMatrix.translate([x,y,z]);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Scales the Model View Matrix by a vector\n\t * @param  {Number | p5.Vector | Array} x [description]\n\t * @param  {Number} [y] y-axis scalar\n\t * @param  {Number} [z] z-axis scalar\n\t * @return {this}   [description]\n\t */\n\tp5.RendererGL.prototype.scale = function(x,y,z) {\n\t  this.uMVMatrix.scale([x,y,z]);\n\t  return this;\n\t};\n\t\n\tp5.RendererGL.prototype.rotate = function(rad, axis){\n\t  this.uMVMatrix.rotate(rad, axis);\n\t  return this;\n\t};\n\t\n\tp5.RendererGL.prototype.rotateX = function(rad) {\n\t  this.rotate(rad, [1,0,0]);\n\t  return this;\n\t};\n\t\n\tp5.RendererGL.prototype.rotateY = function(rad) {\n\t  this.rotate(rad, [0,1,0]);\n\t  return this;\n\t};\n\t\n\tp5.RendererGL.prototype.rotateZ = function(rad) {\n\t  this.rotate(rad, [0,0,1]);\n\t  return this;\n\t};\n\t\n\t/**\n\t * pushes a copy of the model view matrix onto the\n\t * MV Matrix stack.\n\t */\n\tp5.RendererGL.prototype.push = function() {\n\t  uMVMatrixStack.push(this.uMVMatrix.copy());\n\t};\n\t\n\t/**\n\t * [pop description]\n\t * @return {[type]} [description]\n\t */\n\tp5.RendererGL.prototype.pop = function() {\n\t  if (uMVMatrixStack.length === 0) {\n\t    throw new Error('Invalid popMatrix!');\n\t  }\n\t  this.uMVMatrix = uMVMatrixStack.pop();\n\t};\n\t\n\tp5.RendererGL.prototype.resetMatrix = function() {\n\t  this.uMVMatrix = p5.Matrix.identity();\n\t  this.translate(0, 0, -800);\n\t  return this;\n\t};\n\t\n\t// Text/Typography\n\t// @TODO:\n\tp5.RendererGL.prototype._applyTextProperties = function() {\n\t  //@TODO finish implementation\n\t  console.error('text commands not yet implemented in webgl');\n\t};\n\tmodule.exports = p5.RendererGL;\n\t\n\t},{\"../core/core\":37,\"../core/p5.Renderer\":43,\"./p5.Matrix\":83,\"./shader\":88}],87:[function(_dereq_,module,exports){\n\t/**\n\t * @module Shape\n\t * @submodule 3D Primitives\n\t * @for p5\n\t * @requires core\n\t * @requires p5.Geometry\n\t */\n\t\n\t'use strict';\n\t\n\tvar p5 = _dereq_('../core/core');\n\t_dereq_('./p5.Geometry');\n\t/**\n\t * Draw a plane with given a width and height\n\t * @method plane\n\t * @param  {Number} width      width of the plane\n\t * @param  {Number} height     height of the plane\n\t * @param  {Number} [detailX]  Optional number of triangle\n\t *                             subdivisions in x-dimension\n\t * @param {Number} [detailY]   Optional number of triangle\n\t *                             subdivisions in y-dimension\n\t * @return {p5}                the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * //draw a plane with width 200 and height 200\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *   background(200);\n\t *   plane(200, 200);\n\t * }\n\t * </code>\n\t * </div>\n\t *\n\t * @alt\n\t * Nothing displayed on canvas\n\t * Rotating interior view of a box with sides that change color.\n\t * 3d red and green gradient.\n\t * Rotating interior view of a cylinder with sides that change color.\n\t * Rotating view of a cylinder with sides that change color.\n\t * 3d red and green gradient.\n\t * rotating view of a multi-colored cylinder with concave sides.\n\t */\n\tp5.prototype.plane = function(){\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  var width = args[0] || 50;\n\t  var height = args[1] || width;\n\t  var detailX = typeof args[2] === 'number' ? args[2] : 1;\n\t  var detailY = typeof args[3] === 'number' ? args[3] : 1;\n\t\n\t  var gId = 'plane|'+width+'|'+height+'|'+detailX+'|'+detailY;\n\t\n\t  if(!this._renderer.geometryInHash(gId)){\n\t    var _plane = function(){\n\t      var u,v,p;\n\t      for (var i = 0; i <= this.detailY; i++){\n\t        v = i / this.detailY;\n\t        for (var j = 0; j <= this.detailX; j++){\n\t          u = j / this.detailX;\n\t          p = new p5.Vector(width * u - width/2,\n\t            height * v - height/2,\n\t            0);\n\t          this.vertices.push(p);\n\t          this.uvs.push([u,v]);\n\t        }\n\t      }\n\t    };\n\t    var planeGeom =\n\t    new p5.Geometry(detailX, detailY, _plane);\n\t    planeGeom\n\t      .computeFaces()\n\t      .computeNormals();\n\t    this._renderer.createBuffers(gId, planeGeom);\n\t  }\n\t\n\t  this._renderer.drawBuffers(gId);\n\t\n\t};\n\t\n\t/**\n\t * Draw a box with given width, height and depth\n\t * @method  box\n\t * @param  {Number} width     width of the box\n\t * @param  {Number} Height    height of the box\n\t * @param  {Number} depth     depth of the box\n\t * @param {Number} [detailX]  Optional number of triangle\n\t *                            subdivisions in x-dimension\n\t * @param {Number} [detailY]  Optional number of triangle\n\t *                            subdivisions in y-dimension\n\t * @return {p5}               the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * //draw a spinning box with width, height and depth 200\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *   background(200);\n\t *   rotateX(frameCount * 0.01);\n\t *   rotateY(frameCount * 0.01);\n\t *   box(200, 200, 200);\n\t * }\n\t * </code>\n\t * </div>\n\t */\n\tp5.prototype.box = function(){\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  var width = args[0] || 50;\n\t  var height = args[1] || width;\n\t  var depth = args[2] || width;\n\t\n\t  var detailX = typeof args[3] === 'number' ? args[3] : 4;\n\t  var detailY = typeof args[4] === 'number' ? args[4] : 4;\n\t  var gId = 'box|'+width+'|'+height+'|'+depth+'|'+detailX+'|'+detailY;\n\t\n\t  if(!this._renderer.geometryInHash(gId)){\n\t    var _box = function(){\n\t      var cubeIndices = [\n\t        [0, 4, 2, 6],// -1, 0, 0],// -x\n\t        [1, 3, 5, 7],// +1, 0, 0],// +x\n\t        [0, 1, 4, 5],// 0, -1, 0],// -y\n\t        [2, 6, 3, 7],// 0, +1, 0],// +y\n\t        [0, 2, 1, 3],// 0, 0, -1],// -z\n\t        [4, 5, 6, 7]// 0, 0, +1] // +z\n\t      ];\n\t      var id=0;\n\t      for (var i = 0; i < cubeIndices.length; i++) {\n\t        var cubeIndex = cubeIndices[i];\n\t        var v = i * 4;\n\t        for (var j = 0; j < 4; j++) {\n\t          var d = cubeIndex[j];\n\t          //inspired by lightgl:\n\t          //https://github.com/evanw/lightgl.js\n\t          //octants:https://en.wikipedia.org/wiki/Octant_(solid_geometry)\n\t          var octant = new p5.Vector(\n\t            ((d & 1) * 2 - 1)*width/2,\n\t            ((d & 2) - 1) *height/2,\n\t            ((d & 4) / 2 - 1) * depth/2);\n\t          this.vertices.push( octant );\n\t          this.uvs.push([j & 1, (j & 2) / 2]);\n\t          id++;\n\t        }\n\t        this.faces.push([v, v + 1, v + 2]);\n\t        this.faces.push([v + 2, v + 1, v + 3]);\n\t      }\n\t    };\n\t    var boxGeom = new p5.Geometry(detailX,detailY, _box);\n\t    boxGeom.computeNormals();\n\t    //initialize our geometry buffer with\n\t    //the key val pair:\n\t    //geometry Id, Geom object\n\t    this._renderer.createBuffers(gId, boxGeom);\n\t  }\n\t  this._renderer.drawBuffers(gId);\n\t\n\t  return this;\n\t\n\t};\n\t\n\t/**\n\t * Draw a sphere with given radius\n\t * @method sphere\n\t * @param  {Number} radius            radius of circle\n\t * @param  {Number} [detailX]         optional: number of segments,\n\t *                                    the more segments the smoother geometry\n\t *                                    default is 24\n\t * @param  {Number} [detailY]         optional: number of segments,\n\t *                                    the more segments the smoother geometry\n\t *                                    default is 16\n\t * @return {p5}                       the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * // draw a sphere with radius 200\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *   background(200);\n\t *   sphere(50);\n\t * }\n\t * </code>\n\t * </div>\n\t */\n\tp5.prototype.sphere = function(){\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  //@todo validate params here\n\t  //\n\t  var radius = args[0] || 50;\n\t  var detailX = typeof args[1] === 'number' ? args[1] : 24;\n\t  var detailY = typeof args[2] === 'number' ? args[2] : 16;\n\t  var gId = 'sphere|'+radius+'|'+detailX+'|'+detailY;\n\t  if(!this._renderer.geometryInHash(gId)){\n\t    var _sphere = function(){\n\t      var u,v,p;\n\t      for (var i = 0; i <= this.detailY; i++){\n\t        v = i / this.detailY;\n\t        for (var j = 0; j <= this.detailX; j++){\n\t          u = j / this.detailX;\n\t          var theta = 2 * Math.PI * u;\n\t          var phi = Math.PI * v - Math.PI / 2;\n\t          p = new p5.Vector(radius * Math.cos(phi) * Math.sin(theta),\n\t            radius * Math.sin(phi),\n\t            radius * Math.cos(phi) * Math.cos(theta));\n\t          this.vertices.push(p);\n\t          this.uvs.push([u,v]);\n\t        }\n\t      }\n\t    };\n\t    var sphereGeom = new p5.Geometry(detailX, detailY, _sphere);\n\t    sphereGeom\n\t      .computeFaces()\n\t      .computeNormals()\n\t      .averageNormals()\n\t      .averagePoleNormals();\n\t    this._renderer.createBuffers(gId, sphereGeom);\n\t  }\n\t  this._renderer.drawBuffers(gId);\n\t\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t* @private\n\t* helper function for creating both cones and cyllinders\n\t*/\n\tvar _truncatedCone = function(\n\t  bottomRadius,\n\t  topRadius,\n\t  height,\n\t  detailX,\n\t  detailY,\n\t  topCap,\n\t  bottomCap) {\n\t  detailX = (detailX < 3) ? 3 : detailX;\n\t  detailY = (detailY < 1) ? 1 : detailY;\n\t  topCap = (topCap === undefined) ? true : topCap;\n\t  bottomCap = (bottomCap === undefined) ? true : bottomCap;\n\t  var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n\t  var vertsAroundEdge = detailX + 1;\n\t\n\t  // ensure constant slant\n\t  var slant = Math.atan2(bottomRadius - topRadius, height);\n\t  var start = topCap ? -2 : 0;\n\t  var end = detailY + (bottomCap ? 2 : 0);\n\t  var yy, ii;\n\t  for (yy = start; yy <= end; ++yy) {\n\t    var v = yy / detailY;\n\t    var y = height * v;\n\t    var ringRadius;\n\t    if (yy < 0) {\n\t      y = 0;\n\t      v = 1;\n\t      ringRadius = bottomRadius;\n\t    } else if (yy > detailY) {\n\t      y = height;\n\t      v = 1;\n\t      ringRadius = topRadius;\n\t    } else {\n\t      ringRadius = bottomRadius +\n\t        (topRadius - bottomRadius) * (yy / detailY);\n\t    }\n\t    if (yy === -2 || yy === detailY + 2) {\n\t      ringRadius = 0;\n\t      v = 0;\n\t    }\n\t    y -= height / 2;\n\t    for (ii = 0; ii < vertsAroundEdge; ++ii) {\n\t      //VERTICES\n\t      this.vertices.push(\n\t        new p5.Vector(\n\t          Math.sin(ii*Math.PI * 2 /detailX) * ringRadius,\n\t          y,\n\t          Math.cos(ii*Math.PI * 2 /detailX) * ringRadius)\n\t        );\n\t      //VERTEX NORMALS\n\t      this.vertexNormals.push(\n\t        new p5.Vector(\n\t          (yy < 0 || yy > detailY) ? 0 :\n\t          (Math.sin(ii * Math.PI * 2 / detailX) * Math.cos(slant)),\n\t          (yy < 0) ? -1 : (yy > detailY ? 1 : Math.sin(slant)),\n\t          (yy < 0 || yy > detailY) ? 0 :\n\t          (Math.cos(ii * Math.PI * 2 / detailX) * Math.cos(slant)))\n\t        );\n\t      //UVs\n\t      this.uvs.push([(ii / detailX), v]);\n\t    }\n\t  }\n\t  for (yy = 0; yy < detailY + extra; ++yy) {\n\t    for (ii = 0; ii < detailX; ++ii) {\n\t      this.faces.push([vertsAroundEdge * (yy + 0) + 0 + ii,\n\t        vertsAroundEdge * (yy + 0) + 1 + ii,\n\t        vertsAroundEdge * (yy + 1) + 1 + ii]);\n\t      this.faces.push([vertsAroundEdge * (yy + 0) + 0 + ii,\n\t        vertsAroundEdge * (yy + 1) + 1 + ii,\n\t        vertsAroundEdge * (yy + 1) + 0 + ii]);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Draw a cylinder with given radius and height\n\t * @method  cylinder\n\t * @param  {Number} radius     radius of the surface\n\t * @param  {Number} height     height of the cylinder\n\t * @param  {Number} [detailX]  optional: number of segments,\n\t *                             the more segments the smoother geometry\n\t *                             default is 24\n\t * @param {Number} [detailY]   optional: number of segments in y-dimension,\n\t *                             the more segments the smoother geometry\n\t *                             default is 16\n\t * @return {p5}                the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * //draw a spinning cylinder with radius 200 and height 200\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *   background(200);\n\t *   rotateX(frameCount * 0.01);\n\t *   rotateZ(frameCount * 0.01);\n\t *   cylinder(200, 200);\n\t * }\n\t * </code>\n\t * </div>\n\t */\n\tp5.prototype.cylinder = function(){\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  var radius = args[0] || 50;\n\t  var height = args[1] || radius;\n\t  var detailX = typeof args[2] === 'number' ? args[2] : 24;\n\t  var detailY = typeof args[3] === 'number' ? args[3] : 16;\n\t  var gId = 'cylinder|'+radius+'|'+height+'|'+detailX+'|'+detailY;\n\t  if(!this._renderer.geometryInHash(gId)){\n\t    var cylinderGeom = new p5.Geometry(detailX, detailY);\n\t    _truncatedCone.call(\n\t      cylinderGeom,\n\t      radius,\n\t      radius,\n\t      height,\n\t      detailX,\n\t      detailY,\n\t      true,true);\n\t    cylinderGeom.computeNormals();\n\t    this._renderer.createBuffers(gId, cylinderGeom);\n\t  }\n\t\n\t  this._renderer.drawBuffers(gId);\n\t\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * Draw a cone with given radius and height\n\t * @method cone\n\t * @param  {Number} radius            radius of the bottom surface\n\t * @param  {Number} height            height of the cone\n\t * @param  {Number} [detailX]         optional: number of segments,\n\t *                                    the more segments the smoother geometry\n\t *                                    default is 24\n\t * @param  {Number} [detailY]         optional: number of segments,\n\t *                                    the more segments the smoother geometry\n\t *                                    default is 16\n\t * @return {p5}                       the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * //draw a spinning cone with radius 200 and height 200\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *   background(200);\n\t *   rotateX(frameCount * 0.01);\n\t *   rotateZ(frameCount * 0.01);\n\t *   cone(200, 200);\n\t * }\n\t * </code>\n\t * </div>\n\t */\n\tp5.prototype.cone = function(){\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  var baseRadius = args[0] || 50;\n\t  var height = args[1] || baseRadius;\n\t  var detailX = typeof args[2] === 'number' ? args[2] : 24;\n\t  var detailY = typeof args[3] === 'number' ? args[3] : 16;\n\t  var gId = 'cone|'+baseRadius+'|'+height+'|'+detailX+'|'+detailY;\n\t  if(!this._renderer.geometryInHash(gId)){\n\t    var coneGeom = new p5.Geometry(detailX, detailY);\n\t    _truncatedCone.call(coneGeom,\n\t      baseRadius,\n\t      0,//top radius 0\n\t      height,\n\t      detailX,\n\t      detailY,\n\t      true,\n\t      true);\n\t    //for cones we need to average Normals\n\t    coneGeom\n\t      .computeNormals();\n\t    this._renderer.createBuffers(gId, coneGeom);\n\t  }\n\t\n\t  this._renderer.drawBuffers(gId);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Draw an ellipsoid with given raduis\n\t * @method ellipsoid\n\t * @param  {Number} radiusx           xradius of circle\n\t * @param  {Number} radiusy           yradius of circle\n\t * @param  {Number} radiusz           zradius of circle\n\t * @param  {Number} [detailX]         optional: number of segments,\n\t *                                    the more segments the smoother geometry\n\t *                                    default is 24. Avoid detail number above\n\t *                                    150, it may crash the browser.\n\t * @param  {Number} [detailY]         optional: number of segments,\n\t *                                    the more segments the smoother geometry\n\t *                                    default is 16. Avoid detail number above\n\t *                                    150, it may crash the browser.\n\t * @return {p5}                       the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * // draw an ellipsoid with radius 20, 30 and 40.\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *   background(200);\n\t *   ellipsoid(20, 30, 40);\n\t * }\n\t * </code>\n\t * </div>\n\t */\n\tp5.prototype.ellipsoid = function(){\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  var detailX = typeof args[3] === 'number' ? args[3] : 24;\n\t  var detailY = typeof args[4] === 'number' ? args[4] : 24;\n\t  var radiusX = args[0] || 50;\n\t  var radiusY = args[1] || radiusX;\n\t  var radiusZ = args[2] || radiusX;\n\t\n\t  var gId = 'ellipsoid|'+radiusX+'|'+radiusY+\n\t  '|'+radiusZ+'|'+detailX+'|'+detailY;\n\t\n\t\n\t  if(!this._renderer.geometryInHash(gId)){\n\t    var _ellipsoid = function(){\n\t      var u,v,p;\n\t      for (var i = 0; i <= this.detailY; i++){\n\t        v = i / this.detailY;\n\t        for (var j = 0; j <= this.detailX; j++){\n\t          u = j / this.detailX;\n\t          var theta = 2 * Math.PI * u;\n\t          var phi = Math.PI * v - Math.PI / 2;\n\t          p = new p5.Vector(radiusX * Math.cos(phi) * Math.sin(theta),\n\t            radiusY * Math.sin(phi),\n\t            radiusZ * Math.cos(phi) * Math.cos(theta));\n\t          this.vertices.push(p);\n\t          this.uvs.push([u,v]);\n\t        }\n\t      }\n\t    };\n\t    var ellipsoidGeom = new p5.Geometry(detailX, detailY,_ellipsoid);\n\t    ellipsoidGeom\n\t      .computeFaces()\n\t      .computeNormals();\n\t    this._renderer.createBuffers(gId, ellipsoidGeom);\n\t  }\n\t\n\t  this._renderer.drawBuffers(gId);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Draw a torus with given radius and tube radius\n\t * @method torus\n\t * @param  {Number} radius        radius of the whole ring\n\t * @param  {Number} tubeRadius    radius of the tube\n\t * @param  {Number} [detailX]     optional: number of segments in x-dimension,\n\t *                                the more segments the smoother geometry\n\t *                                default is 24\n\t * @param  {Number} [detailY]     optional: number of segments in y-dimension,\n\t *                                the more segments the smoother geometry\n\t *                                default is 16\n\t * @return {p5}                   the p5 object\n\t * @example\n\t * <div>\n\t * <code>\n\t * //draw a spinning torus with radius 200 and tube radius 60\n\t * function setup(){\n\t *   createCanvas(100, 100, WEBGL);\n\t * }\n\t *\n\t * function draw(){\n\t *   background(200);\n\t *   rotateX(frameCount * 0.01);\n\t *   rotateY(frameCount * 0.01);\n\t *   torus(200, 60);\n\t * }\n\t * </code>\n\t * </div>\n\t */\n\tp5.prototype.torus = function(){\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  var detailX = typeof args[2] === 'number' ? args[2] : 24;\n\t  var detailY = typeof args[3] === 'number' ? args[3] : 16;\n\t\n\t  var radius = args[0] || 50;\n\t  var tubeRadius = args[1] || 10;\n\t\n\t  var gId = 'torus|'+radius+'|'+tubeRadius+'|'+detailX+'|'+detailY;\n\t\n\t  if(!this._renderer.geometryInHash(gId)){\n\t    var _torus = function(){\n\t      var u,v,p;\n\t      for (var i = 0; i <= this.detailY; i++){\n\t        v = i / this.detailY;\n\t        for (var j = 0; j <= this.detailX; j++){\n\t          u = j / this.detailX;\n\t          var theta = 2 * Math.PI * u;\n\t          var phi = 2 * Math.PI * v;\n\t          p = new p5.Vector(\n\t            (radius + tubeRadius * Math.cos(phi)) * Math.cos(theta),\n\t            (radius + tubeRadius * Math.cos(phi)) * Math.sin(theta),\n\t            tubeRadius * Math.sin(phi));\n\t          this.vertices.push(p);\n\t          this.uvs.push([u,v]);\n\t        }\n\t      }\n\t    };\n\t    var torusGeom = new p5.Geometry(detailX, detailY, _torus);\n\t    torusGeom\n\t      .computeFaces()\n\t      .computeNormals()\n\t      .averageNormals();\n\t    this._renderer.createBuffers(gId, torusGeom);\n\t  }\n\t\n\t  this._renderer.drawBuffers(gId);\n\t\n\t  return this;\n\t};\n\t\n\t///////////////////////\n\t/// 2D primitives\n\t/////////////////////////\n\t\n\t//@TODO\n\tp5.RendererGL.prototype.point = function(x, y, z){\n\t  console.log('point not yet implemented in webgl');\n\t  return this;\n\t};\n\t\n\tp5.RendererGL.prototype.triangle = function\n\t(args){\n\t  var x1=args[0], y1=args[1];\n\t  var x2=args[2], y2=args[3];\n\t  var x3=args[4], y3=args[5];\n\t  var gId = 'tri|'+x1+'|'+y1+'|'+\n\t  x2+'|'+y2+'|'+\n\t  x3+'|'+y3;\n\t  if(!this.geometryInHash(gId)){\n\t    var _triangle = function(){\n\t      var vertices = [];\n\t      vertices.push(new p5.Vector(x1,y1,0));\n\t      vertices.push(new p5.Vector(x2,y2,0));\n\t      vertices.push(new p5.Vector(x3,y3,0));\n\t      this.vertices = vertices;\n\t      this.faces = [[0,1,2]];\n\t      this.uvs = [[0,0],[0,1],[1,1]];\n\t    };\n\t    var triGeom = new p5.Geometry(1,1,_triangle);\n\t    triGeom.computeNormals();\n\t    this.createBuffers(gId, triGeom);\n\t  }\n\t\n\t  this.drawBuffers(gId);\n\t  return this;\n\t};\n\t\n\tp5.RendererGL.prototype.ellipse = function\n\t(args){\n\t  var x = args[0];\n\t  var y = args[1];\n\t  var width = args[2];\n\t  var height = args[3];\n\t  //detailX and Y are optional 6th & 7th\n\t  //arguments\n\t  var detailX = args[4] || 24;\n\t  var detailY = args[5] || 16;\n\t  var gId = 'ellipse|'+args[0]+'|'+args[1]+'|'+args[2]+'|'+\n\t  args[3];\n\t  if(!this.geometryInHash(gId)){\n\t    var _ellipse = function(){\n\t      var u,v,p;\n\t      var centerX = x+width*0.5;\n\t      var centerY = y+height*0.5;\n\t      for (var i = 0; i <= this.detailY; i++){\n\t        v = i / this.detailY;\n\t        for (var j = 0; j <= this.detailX; j++){\n\t          u = j / this.detailX;\n\t          var theta = 2 * Math.PI * u;\n\t          if(v === 0){\n\t            p = new p5.Vector(centerX, centerY, 0);\n\t          }\n\t          else{\n\t            var _x = centerX + width*0.5 * Math.cos(theta);\n\t            var _y = centerY + height*0.5 * Math.sin(theta);\n\t            p = new p5.Vector(_x, _y, 0);\n\t          }\n\t          this.vertices.push(p);\n\t          this.uvs.push([u,v]);\n\t        }\n\t      }\n\t    };\n\t    var ellipseGeom = new p5.Geometry(detailX,detailY,_ellipse);\n\t    ellipseGeom\n\t      .computeFaces()\n\t      .computeNormals();\n\t    this.createBuffers(gId, ellipseGeom);\n\t  }\n\t  this.drawBuffers(gId);\n\t  return this;\n\t};\n\t\n\tp5.RendererGL.prototype.rect = function\n\t(args){\n\t  var gId = 'rect|'+args[0]+'|'+args[1]+'|'+args[2]+'|'+\n\t  args[3];\n\t  var x = args[0];\n\t  var y = args[1];\n\t  var width = args[2];\n\t  var height = args[3];\n\t  var detailX = args[4] || 24;\n\t  var detailY = args[5] || 16;\n\t  if(!this.geometryInHash(gId)){\n\t    var _rect = function(){\n\t      var u,v,p;\n\t      for (var i = 0; i <= this.detailY; i++){\n\t        v = i / this.detailY;\n\t        for (var j = 0; j <= this.detailX; j++){\n\t          u = j / this.detailX;\n\t          // var _x = x-width/2;\n\t          // var _y = y-height/2;\n\t          p = new p5.Vector(\n\t            x + (width*u),\n\t            y + (height*v),\n\t            0\n\t          );\n\t          this.vertices.push(p);\n\t          this.uvs.push([u,v]);\n\t        }\n\t      }\n\t    };\n\t    var rectGeom = new p5.Geometry(detailX,detailY,_rect);\n\t    rectGeom\n\t      .computeFaces()\n\t      .computeNormals();\n\t    this.createBuffers(gId, rectGeom);\n\t  }\n\t  this.drawBuffers(gId);\n\t  return this;\n\t};\n\t\n\tp5.RendererGL.prototype.quad = function(){\n\t  var args = new Array(arguments.length);\n\t  for (var i = 0; i < args.length; ++i) {\n\t    args[i] = arguments[i];\n\t  }\n\t  //@todo validate params here\n\t  //\n\t  var x1 = args[0],\n\t    y1 = args[1],\n\t    x2 = args[2],\n\t    y2 = args[3],\n\t    x3 = args[4],\n\t    y3 = args[5],\n\t    x4 = args[6],\n\t    y4 = args[7];\n\t  var gId = 'quad|'+x1+'|'+y1+'|'+\n\t  x2+'|'+y2+'|'+\n\t  x3+'|'+y3+'|'+\n\t  x4+'|'+y4;\n\t  if(!this.geometryInHash(gId)){\n\t    var _quad = function(){\n\t      this.vertices.push(new p5.Vector(x1,y1,0));\n\t      this.vertices.push(new p5.Vector(x2,y2,0));\n\t      this.vertices.push(new p5.Vector(x3,y3,0));\n\t      this.vertices.push(new p5.Vector(x4,y4,0));\n\t      this.uvs.push([0, 0], [1, 0], [1, 1], [0, 1]);\n\t    };\n\t    var quadGeom = new p5.Geometry(2,2,_quad);\n\t    quadGeom.computeNormals();\n\t    quadGeom.faces = [[0,1,2],[2,3,0]];\n\t    this.createBuffers(gId, quadGeom);\n\t  }\n\t  this.drawBuffers(gId);\n\t  return this;\n\t};\n\t\n\t//this implementation of bezier curve\n\t//is based on Bernstein polynomial\n\tp5.RendererGL.prototype.bezier = function\n\t(args){\n\t  var bezierDetail=args[12] || 20;//value of Bezier detail\n\t  this.beginShape();\n\t  var coeff=[0,0,0,0];//  Bernstein polynomial coeffecients\n\t  var vertex=[0,0,0]; //(x,y,z) coordinates of points in bezier curve\n\t  for(var i=0; i<=bezierDetail; i++){\n\t    coeff[0]=Math.pow(1-(i/bezierDetail),3);\n\t    coeff[1]=(3*(i/bezierDetail)) * (Math.pow(1-(i/bezierDetail),2));\n\t    coeff[2]=(3*Math.pow(i/bezierDetail,2)) * (1-(i/bezierDetail));\n\t    coeff[3]=Math.pow(i/bezierDetail,3);\n\t    vertex[0]=args[0]*coeff[0] + args[3]*coeff[1] +\n\t              args[6]*coeff[2] + args[9]*coeff[3];\n\t    vertex[1]=args[1]*coeff[0] + args[4]*coeff[1] +\n\t              args[7]*coeff[2] + args[10]*coeff[3];\n\t    vertex[2]=args[2]*coeff[0] + args[5]*coeff[1] +\n\t              args[8]*coeff[2] + args[11]*coeff[3];\n\t    this.vertex(vertex[0],vertex[1],vertex[2]);\n\t  }\n\t  this.endShape();\n\t  return this;\n\t};\n\t\n\tp5.RendererGL.prototype.curve=function\n\t(args){\n\t  var curveDetail=args[12];\n\t  this.beginShape();\n\t  var coeff=[0,0,0,0];//coeffecients of the equation\n\t  var vertex=[0,0,0]; //(x,y,z) coordinates of points in bezier curve\n\t  for(var i=0; i<=curveDetail; i++){\n\t    coeff[0]=Math.pow((i/curveDetail),3) * 0.5;\n\t    coeff[1]=Math.pow((i/curveDetail),2) * 0.5;\n\t    coeff[2]=(i/curveDetail) * 0.5;\n\t    coeff[3]=0.5;\n\t    vertex[0]=coeff[0]*(-args[0] + (3*args[3]) - (3*args[6]) +args[9]) +\n\t              coeff[1]*((2*args[0]) - (5*args[3]) + (4*args[6]) - args[9]) +\n\t              coeff[2]*(-args[0] + args[6]) +\n\t              coeff[3]*(2*args[3]);\n\t    vertex[1]=coeff[0]*(-args[1] + (3*args[4]) - (3*args[7]) +args[10]) +\n\t              coeff[1]*((2*args[1]) - (5*args[4]) + (4*args[7]) - args[10]) +\n\t              coeff[2]*(-args[1] + args[7]) +\n\t              coeff[3]*(2*args[4]);\n\t    vertex[2]=coeff[0]*(-args[2] + (3*args[5]) - (3*args[8]) +args[11]) +\n\t              coeff[1]*((2*args[2]) - (5*args[5]) + (4*args[8]) - args[11]) +\n\t              coeff[2]*(-args[2] + args[8]) +\n\t              coeff[3]*(2*args[5]);\n\t    this.vertex(vertex[0],vertex[1],vertex[2]);\n\t  }\n\t  this.endShape();\n\t  return this;\n\t};\n\t\n\tmodule.exports = p5;\n\t\n\t},{\"../core/core\":37,\"./p5.Geometry\":82}],88:[function(_dereq_,module,exports){\n\t\n\t\n\tmodule.exports = {\n\t  immediateVert:\n\t    \"attribute vec3 aPosition;\\nattribute vec4 aVertexColor;\\n\\nuniform mat4 uModelViewMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform float uResolution;\\nuniform float uPointSize;\\n\\nvarying vec4 vColor;\\nvoid main(void) {\\n  vec4 positionVec4 = vec4(aPosition / uResolution *vec3(1.0, -1.0, 1.0), 1.0);\\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\\n  vColor = aVertexColor;\\n  gl_PointSize = uPointSize;\\n}\\n\",\n\t  vertexColorVert:\n\t    \"attribute vec3 aPosition;\\nattribute vec4 aVertexColor;\\n\\nuniform mat4 uModelViewMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform float uResolution;\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  vec4 positionVec4 = vec4(aPosition / uResolution * vec3(1.0, -1.0, 1.0), 1.0);\\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\\n  vColor = aVertexColor;\\n}\\n\",\n\t  vertexColorFrag:\n\t    \"precision mediump float;\\nvarying vec4 vColor;\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n}\",\n\t  normalVert:\n\t    \"attribute vec3 aPosition;\\nattribute vec3 aNormal;\\nattribute vec2 aTexCoord;\\n\\nuniform mat4 uModelViewMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform mat3 uNormalMatrix;\\nuniform float uResolution;\\n\\nvarying vec3 vVertexNormal;\\nvarying highp vec2 vVertTexCoord;\\n\\nvoid main(void) {\\n  vec4 positionVec4 = vec4(aPosition / uResolution * vec3(1.0, -1.0, 1.0), 1.0);\\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\\n  vVertexNormal = vec3( uNormalMatrix * aNormal );\\n  vVertTexCoord = aTexCoord;\\n}\\n\",\n\t  normalFrag:\n\t    \"precision mediump float;\\nvarying vec3 vVertexNormal;\\nvoid main(void) {\\n  gl_FragColor = vec4(vVertexNormal, 1.0);\\n}\",\n\t  basicFrag:\n\t    \"precision mediump float;\\nvarying vec3 vVertexNormal;\\nuniform vec4 uMaterialColor;\\nvoid main(void) {\\n  gl_FragColor = uMaterialColor;\\n}\",\n\t  lightVert:\n\t    \"attribute vec3 aPosition;\\nattribute vec3 aNormal;\\nattribute vec2 aTexCoord;\\n\\nuniform mat4 uModelViewMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform mat3 uNormalMatrix;\\nuniform float uResolution;\\nuniform int uAmbientLightCount;\\nuniform int uDirectionalLightCount;\\nuniform int uPointLightCount;\\n\\nuniform vec3 uAmbientColor[8];\\nuniform vec3 uLightingDirection[8];\\nuniform vec3 uDirectionalColor[8];\\nuniform vec3 uPointLightLocation[8];\\nuniform vec3 uPointLightColor[8];\\nuniform bool uSpecular;\\n\\nvarying vec3 vVertexNormal;\\nvarying vec2 vVertTexCoord;\\nvarying vec3 vLightWeighting;\\n\\nvec3 ambientLightFactor = vec3(0.0, 0.0, 0.0);\\nvec3 directionalLightFactor = vec3(0.0, 0.0, 0.0);\\nvec3 pointLightFactor = vec3(0.0, 0.0, 0.0);\\nvec3 pointLightFactor2 = vec3(0.0, 0.0, 0.0);\\n\\nvoid main(void){\\n\\n  vec4 positionVec4 = vec4(aPosition / uResolution, 1.0);\\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\\n\\n  vec3 vertexNormal = vec3( uNormalMatrix * aNormal );\\n  vVertexNormal = vertexNormal;\\n  vVertTexCoord = aTexCoord;\\n\\n  vec4 mvPosition = uModelViewMatrix * vec4(aPosition / uResolution, 1.0);\\n  vec3 eyeDirection = normalize(-mvPosition.xyz);\\n\\n  float shininess = 32.0;\\n  float specularFactor = 2.0;\\n  float diffuseFactor = 0.3;\\n\\n  for(int i = 0; i < 8; i++){\\n    if(uAmbientLightCount == i) break;\\n    ambientLightFactor += uAmbientColor[i];\\n  }\\n\\n  for(int j = 0; j < 8; j++){\\n    if(uDirectionalLightCount == j) break;\\n    vec3 dir = uLightingDirection[j];\\n    float directionalLightWeighting = max(dot(vertexNormal, dir), 0.0);\\n    directionalLightFactor += uDirectionalColor[j] * directionalLightWeighting;\\n  }\\n\\n  for(int k = 0; k < 8; k++){\\n    if(uPointLightCount == k) break;\\n    vec3 loc = uPointLightLocation[k];\\n    //loc = loc / uResolution;\\n    vec3 lightDirection = normalize(loc - mvPosition.xyz);\\n\\n    float directionalLightWeighting = max(dot(vertexNormal, lightDirection), 0.0);\\n    pointLightFactor += uPointLightColor[k] * directionalLightWeighting;\\n\\n    //factor2 for specular\\n    vec3 reflectionDirection = reflect(-lightDirection, vertexNormal);\\n    float specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), shininess);\\n\\n    pointLightFactor2 += uPointLightColor[k] * (specularFactor * specularLightWeighting\\n      +  directionalLightWeighting * diffuseFactor);\\n  }\\n\\n  if(!uSpecular){\\n    vLightWeighting =  ambientLightFactor + directionalLightFactor + pointLightFactor;\\n  }else{\\n    vLightWeighting = ambientLightFactor + directionalLightFactor + pointLightFactor2;\\n  }\\n\\n}\\n\",\n\t  lightTextureFrag:\n\t    \"precision mediump float;\\n\\nuniform vec4 uMaterialColor;\\nuniform sampler2D uSampler;\\nuniform bool isTexture;\\n\\nvarying vec3 vLightWeighting;\\nvarying highp vec2 vVertTexCoord;\\n\\nvoid main(void) {\\n  if(!isTexture){\\n    gl_FragColor = vec4(vec3(uMaterialColor.rgb * vLightWeighting), uMaterialColor.a);\\n  }else{\\n    vec4 textureColor = texture2D(uSampler, vVertTexCoord);\\n    if(vLightWeighting == vec3(0., 0., 0.)){\\n      gl_FragColor = textureColor;\\n    }else{\\n      gl_FragColor = vec4(vec3(textureColor.rgb * vLightWeighting), textureColor.a);\\n    }\\n  }\\n}\"\n\t};\n\t},{}]},{},[28])(28)\n\t});\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMChildrenOperations\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMLazyTree = __webpack_require__(16);\n\tvar Danger = __webpack_require__(105);\n\tvar ReactMultiChildUpdateTypes = __webpack_require__(70);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\t\n\tvar createMicrosoftUnsafeLocalFunction = __webpack_require__(48);\n\tvar setInnerHTML = __webpack_require__(29);\n\tvar setTextContent = __webpack_require__(83);\n\t\n\tfunction getNodeAfter(parentNode, node) {\n\t  // Special case for text components, which return [open, close] comments\n\t  // from getHostNode.\n\t  if (Array.isArray(node)) {\n\t    node = node[1];\n\t  }\n\t  return node ? node.nextSibling : parentNode.firstChild;\n\t}\n\t\n\t/**\n\t * Inserts `childNode` as a child of `parentNode` at the `index`.\n\t *\n\t * @param {DOMElement} parentNode Parent node in which to insert.\n\t * @param {DOMElement} childNode Child node to insert.\n\t * @param {number} index Index at which to insert the child.\n\t * @internal\n\t */\n\tvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n\t  // We rely exclusively on `insertBefore(node, null)` instead of also using\n\t  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n\t  // we are careful to use `null`.)\n\t  parentNode.insertBefore(childNode, referenceNode);\n\t});\n\t\n\tfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n\t  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n\t}\n\t\n\tfunction moveChild(parentNode, childNode, referenceNode) {\n\t  if (Array.isArray(childNode)) {\n\t    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n\t  } else {\n\t    insertChildAt(parentNode, childNode, referenceNode);\n\t  }\n\t}\n\t\n\tfunction removeChild(parentNode, childNode) {\n\t  if (Array.isArray(childNode)) {\n\t    var closingComment = childNode[1];\n\t    childNode = childNode[0];\n\t    removeDelimitedText(parentNode, childNode, closingComment);\n\t    parentNode.removeChild(closingComment);\n\t  }\n\t  parentNode.removeChild(childNode);\n\t}\n\t\n\tfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n\t  var node = openingComment;\n\t  while (true) {\n\t    var nextNode = node.nextSibling;\n\t    insertChildAt(parentNode, node, referenceNode);\n\t    if (node === closingComment) {\n\t      break;\n\t    }\n\t    node = nextNode;\n\t  }\n\t}\n\t\n\tfunction removeDelimitedText(parentNode, startNode, closingComment) {\n\t  while (true) {\n\t    var node = startNode.nextSibling;\n\t    if (node === closingComment) {\n\t      // The closing comment is removed by ReactMultiChild.\n\t      break;\n\t    } else {\n\t      parentNode.removeChild(node);\n\t    }\n\t  }\n\t}\n\t\n\tfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n\t  var parentNode = openingComment.parentNode;\n\t  var nodeAfterComment = openingComment.nextSibling;\n\t  if (nodeAfterComment === closingComment) {\n\t    // There are no text nodes between the opening and closing comments; insert\n\t    // a new one if stringText isn't empty.\n\t    if (stringText) {\n\t      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n\t    }\n\t  } else {\n\t    if (stringText) {\n\t      // Set the text content of the first node after the opening comment, and\n\t      // remove all following nodes up until the closing comment.\n\t      setTextContent(nodeAfterComment, stringText);\n\t      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n\t    } else {\n\t      removeDelimitedText(parentNode, openingComment, closingComment);\n\t    }\n\t  }\n\t\n\t  if (false) {\n\t    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);\n\t  }\n\t}\n\t\n\tvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\n\tif (false) {\n\t  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n\t    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n\t    if (prevInstance._debugID !== 0) {\n\t      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());\n\t    } else {\n\t      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n\t      if (nextInstance._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Operations for updating with DOM children.\n\t */\n\tvar DOMChildrenOperations = {\n\t\n\t  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\t\n\t  replaceDelimitedText: replaceDelimitedText,\n\t\n\t  /**\n\t   * Updates a component's children by processing a series of updates. The\n\t   * update configurations are each expected to have a `parentNode` property.\n\t   *\n\t   * @param {array<object>} updates List of update configurations.\n\t   * @internal\n\t   */\n\t  processUpdates: function (parentNode, updates) {\n\t    if (false) {\n\t      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n\t    }\n\t\n\t    for (var k = 0; k < updates.length; k++) {\n\t      var update = updates[k];\n\t      switch (update.type) {\n\t        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n\t          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });\n\t          }\n\t          break;\n\t        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n\t          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });\n\t          }\n\t          break;\n\t        case ReactMultiChildUpdateTypes.SET_MARKUP:\n\t          setInnerHTML(parentNode, update.content);\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());\n\t          }\n\t          break;\n\t        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n\t          setTextContent(parentNode, update.content);\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());\n\t          }\n\t          break;\n\t        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n\t          removeChild(parentNode, update.fromNode);\n\t          if (false) {\n\t            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });\n\t          }\n\t          break;\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = DOMChildrenOperations;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMNamespaces\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMNamespaces = {\n\t  html: 'http://www.w3.org/1999/xhtml',\n\t  mathml: 'http://www.w3.org/1998/Math/MathML',\n\t  svg: 'http://www.w3.org/2000/svg'\n\t};\n\t\n\tmodule.exports = DOMNamespaces;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventPluginRegistry\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Injectable ordering of event plugins.\n\t */\n\tvar EventPluginOrder = null;\n\t\n\t/**\n\t * Injectable mapping from names to event plugin modules.\n\t */\n\tvar namesToPlugins = {};\n\t\n\t/**\n\t * Recomputes the plugin list using the injected plugins and plugin ordering.\n\t *\n\t * @private\n\t */\n\tfunction recomputePluginOrdering() {\n\t  if (!EventPluginOrder) {\n\t    // Wait until an `EventPluginOrder` is injected.\n\t    return;\n\t  }\n\t  for (var pluginName in namesToPlugins) {\n\t    var PluginModule = namesToPlugins[pluginName];\n\t    var pluginIndex = EventPluginOrder.indexOf(pluginName);\n\t    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;\n\t    if (EventPluginRegistry.plugins[pluginIndex]) {\n\t      continue;\n\t    }\n\t    !PluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;\n\t    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\n\t    var publishedEvents = PluginModule.eventTypes;\n\t    for (var eventName in publishedEvents) {\n\t      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Publishes an event so that it can be dispatched by the supplied plugin.\n\t *\n\t * @param {object} dispatchConfig Dispatch configuration for the event.\n\t * @param {object} PluginModule Plugin publishing the event.\n\t * @return {boolean} True if the event was successfully published.\n\t * @private\n\t */\n\tfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\n\t  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;\n\t  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\t\n\t  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\t  if (phasedRegistrationNames) {\n\t    for (var phaseName in phasedRegistrationNames) {\n\t      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n\t        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n\t        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);\n\t      }\n\t    }\n\t    return true;\n\t  } else if (dispatchConfig.registrationName) {\n\t    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Publishes a registration name that is used to identify dispatched events and\n\t * can be used with `EventPluginHub.putListener` to register listeners.\n\t *\n\t * @param {string} registrationName Registration name to add.\n\t * @param {object} PluginModule Plugin publishing the event.\n\t * @private\n\t */\n\tfunction publishRegistrationName(registrationName, PluginModule, eventName) {\n\t  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;\n\t  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\n\t  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;\n\t\n\t  if (false) {\n\t    var lowerCasedName = registrationName.toLowerCase();\n\t    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;\n\t\n\t    if (registrationName === 'onDoubleClick') {\n\t      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Registers plugins so that they can extract and dispatch events.\n\t *\n\t * @see {EventPluginHub}\n\t */\n\tvar EventPluginRegistry = {\n\t\n\t  /**\n\t   * Ordered list of injected plugins.\n\t   */\n\t  plugins: [],\n\t\n\t  /**\n\t   * Mapping from event name to dispatch config\n\t   */\n\t  eventNameDispatchConfigs: {},\n\t\n\t  /**\n\t   * Mapping from registration name to plugin module\n\t   */\n\t  registrationNameModules: {},\n\t\n\t  /**\n\t   * Mapping from registration name to event name\n\t   */\n\t  registrationNameDependencies: {},\n\t\n\t  /**\n\t   * Mapping from lowercase registration names to the properly cased version,\n\t   * used to warn in the case of missing event handlers. Available\n\t   * only in __DEV__.\n\t   * @type {Object}\n\t   */\n\t  possibleRegistrationNames:  false ? {} : null,\n\t\n\t  /**\n\t   * Injects an ordering of plugins (by plugin name). This allows the ordering\n\t   * to be decoupled from injection of the actual plugins so that ordering is\n\t   * always deterministic regardless of packaging, on-the-fly injection, etc.\n\t   *\n\t   * @param {array} InjectedEventPluginOrder\n\t   * @internal\n\t   * @see {EventPluginHub.injection.injectEventPluginOrder}\n\t   */\n\t  injectEventPluginOrder: function (InjectedEventPluginOrder) {\n\t    !!EventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;\n\t    // Clone the ordering so it cannot be dynamically mutated.\n\t    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n\t    recomputePluginOrdering();\n\t  },\n\t\n\t  /**\n\t   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n\t   * in the ordering injected by `injectEventPluginOrder`.\n\t   *\n\t   * Plugins can be injected as part of page initialization or on-the-fly.\n\t   *\n\t   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n\t   * @internal\n\t   * @see {EventPluginHub.injection.injectEventPluginsByName}\n\t   */\n\t  injectEventPluginsByName: function (injectedNamesToPlugins) {\n\t    var isOrderingDirty = false;\n\t    for (var pluginName in injectedNamesToPlugins) {\n\t      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n\t        continue;\n\t      }\n\t      var PluginModule = injectedNamesToPlugins[pluginName];\n\t      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {\n\t        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;\n\t        namesToPlugins[pluginName] = PluginModule;\n\t        isOrderingDirty = true;\n\t      }\n\t    }\n\t    if (isOrderingDirty) {\n\t      recomputePluginOrdering();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Looks up the plugin for the supplied event.\n\t   *\n\t   * @param {object} event A synthetic event.\n\t   * @return {?object} The plugin that created the supplied event.\n\t   * @internal\n\t   */\n\t  getPluginModuleForEvent: function (event) {\n\t    var dispatchConfig = event.dispatchConfig;\n\t    if (dispatchConfig.registrationName) {\n\t      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n\t    }\n\t    for (var phase in dispatchConfig.phasedRegistrationNames) {\n\t      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\n\t        continue;\n\t      }\n\t      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];\n\t      if (PluginModule) {\n\t        return PluginModule;\n\t      }\n\t    }\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Exposed for unit testing.\n\t   * @private\n\t   */\n\t  _resetEventPlugins: function () {\n\t    EventPluginOrder = null;\n\t    for (var pluginName in namesToPlugins) {\n\t      if (namesToPlugins.hasOwnProperty(pluginName)) {\n\t        delete namesToPlugins[pluginName];\n\t      }\n\t    }\n\t    EventPluginRegistry.plugins.length = 0;\n\t\n\t    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n\t    for (var eventName in eventNameDispatchConfigs) {\n\t      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n\t        delete eventNameDispatchConfigs[eventName];\n\t      }\n\t    }\n\t\n\t    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n\t    for (var registrationName in registrationNameModules) {\n\t      if (registrationNameModules.hasOwnProperty(registrationName)) {\n\t        delete registrationNameModules[registrationName];\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;\n\t      for (var lowerCasedName in possibleRegistrationNames) {\n\t        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {\n\t          delete possibleRegistrationNames[lowerCasedName];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EventPluginRegistry;\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventPluginUtils\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar ReactErrorUtils = __webpack_require__(42);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Injected dependencies:\n\t */\n\t\n\t/**\n\t * - `ComponentTree`: [required] Module that can convert between React instances\n\t *   and actual node references.\n\t */\n\tvar ComponentTree;\n\tvar TreeTraversal;\n\tvar injection = {\n\t  injectComponentTree: function (Injected) {\n\t    ComponentTree = Injected;\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n\t    }\n\t  },\n\t  injectTreeTraversal: function (Injected) {\n\t    TreeTraversal = Injected;\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n\t    }\n\t  }\n\t};\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tfunction isEndish(topLevelType) {\n\t  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;\n\t}\n\t\n\tfunction isMoveish(topLevelType) {\n\t  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;\n\t}\n\tfunction isStartish(topLevelType) {\n\t  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;\n\t}\n\t\n\tvar validateEventDispatches;\n\tif (false) {\n\t  validateEventDispatches = function (event) {\n\t    var dispatchListeners = event._dispatchListeners;\n\t    var dispatchInstances = event._dispatchInstances;\n\t\n\t    var listenersIsArr = Array.isArray(dispatchListeners);\n\t    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\t\n\t    var instancesIsArr = Array.isArray(dispatchInstances);\n\t    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\t\n\t    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n\t  };\n\t}\n\t\n\t/**\n\t * Dispatch the event to the listener.\n\t * @param {SyntheticEvent} event SyntheticEvent to handle\n\t * @param {boolean} simulated If the event is simulated (changes exn behavior)\n\t * @param {function} listener Application-level callback\n\t * @param {*} inst Internal component instance\n\t */\n\tfunction executeDispatch(event, simulated, listener, inst) {\n\t  var type = event.type || 'unknown-event';\n\t  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n\t  if (simulated) {\n\t    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n\t  } else {\n\t    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n\t  }\n\t  event.currentTarget = null;\n\t}\n\t\n\t/**\n\t * Standard/simple iteration through an event's collected dispatches.\n\t */\n\tfunction executeDispatchesInOrder(event, simulated) {\n\t  var dispatchListeners = event._dispatchListeners;\n\t  var dispatchInstances = event._dispatchInstances;\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  if (Array.isArray(dispatchListeners)) {\n\t    for (var i = 0; i < dispatchListeners.length; i++) {\n\t      if (event.isPropagationStopped()) {\n\t        break;\n\t      }\n\t      // Listeners and Instances are two parallel arrays that are always in sync.\n\t      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n\t    }\n\t  } else if (dispatchListeners) {\n\t    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n\t  }\n\t  event._dispatchListeners = null;\n\t  event._dispatchInstances = null;\n\t}\n\t\n\t/**\n\t * Standard/simple iteration through an event's collected dispatches, but stops\n\t * at the first dispatch execution returning true, and returns that id.\n\t *\n\t * @return {?string} id of the first dispatch execution who's listener returns\n\t * true, or null if no listener returned true.\n\t */\n\tfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n\t  var dispatchListeners = event._dispatchListeners;\n\t  var dispatchInstances = event._dispatchInstances;\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  if (Array.isArray(dispatchListeners)) {\n\t    for (var i = 0; i < dispatchListeners.length; i++) {\n\t      if (event.isPropagationStopped()) {\n\t        break;\n\t      }\n\t      // Listeners and Instances are two parallel arrays that are always in sync.\n\t      if (dispatchListeners[i](event, dispatchInstances[i])) {\n\t        return dispatchInstances[i];\n\t      }\n\t    }\n\t  } else if (dispatchListeners) {\n\t    if (dispatchListeners(event, dispatchInstances)) {\n\t      return dispatchInstances;\n\t    }\n\t  }\n\t  return null;\n\t}\n\t\n\t/**\n\t * @see executeDispatchesInOrderStopAtTrueImpl\n\t */\n\tfunction executeDispatchesInOrderStopAtTrue(event) {\n\t  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n\t  event._dispatchInstances = null;\n\t  event._dispatchListeners = null;\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Execution of a \"direct\" dispatch - there must be at most one dispatch\n\t * accumulated on the event or it is considered an error. It doesn't really make\n\t * sense for an event with multiple dispatches (bubbled) to keep track of the\n\t * return values at each dispatch execution, but it does tend to make sense when\n\t * dealing with \"direct\" dispatches.\n\t *\n\t * @return {*} The return value of executing the single dispatch.\n\t */\n\tfunction executeDirectDispatch(event) {\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  var dispatchListener = event._dispatchListeners;\n\t  var dispatchInstance = event._dispatchInstances;\n\t  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n\t  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n\t  var res = dispatchListener ? dispatchListener(event) : null;\n\t  event.currentTarget = null;\n\t  event._dispatchListeners = null;\n\t  event._dispatchInstances = null;\n\t  return res;\n\t}\n\t\n\t/**\n\t * @param {SyntheticEvent} event\n\t * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n\t */\n\tfunction hasDispatches(event) {\n\t  return !!event._dispatchListeners;\n\t}\n\t\n\t/**\n\t * General utilities that are useful in creating custom Event Plugins.\n\t */\n\tvar EventPluginUtils = {\n\t  isEndish: isEndish,\n\t  isMoveish: isMoveish,\n\t  isStartish: isStartish,\n\t\n\t  executeDirectDispatch: executeDirectDispatch,\n\t  executeDispatchesInOrder: executeDispatchesInOrder,\n\t  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n\t  hasDispatches: hasDispatches,\n\t\n\t  getInstanceFromNode: function (node) {\n\t    return ComponentTree.getInstanceFromNode(node);\n\t  },\n\t  getNodeFromInstance: function (node) {\n\t    return ComponentTree.getNodeFromInstance(node);\n\t  },\n\t  isAncestor: function (a, b) {\n\t    return TreeTraversal.isAncestor(a, b);\n\t  },\n\t  getLowestCommonAncestor: function (a, b) {\n\t    return TreeTraversal.getLowestCommonAncestor(a, b);\n\t  },\n\t  getParentInstance: function (inst) {\n\t    return TreeTraversal.getParentInstance(inst);\n\t  },\n\t  traverseTwoPhase: function (target, fn, arg) {\n\t    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n\t  },\n\t  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n\t    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n\t  },\n\t\n\t  injection: injection\n\t};\n\t\n\tmodule.exports = EventPluginUtils;\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule KeyEscapeUtils\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Escape and wrap key so it is safe to use as a reactid\n\t *\n\t * @param {string} key to be escaped.\n\t * @return {string} the escaped key.\n\t */\n\t\n\tfunction escape(key) {\n\t  var escapeRegex = /[=:]/g;\n\t  var escaperLookup = {\n\t    '=': '=0',\n\t    ':': '=2'\n\t  };\n\t  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n\t    return escaperLookup[match];\n\t  });\n\t\n\t  return '$' + escapedString;\n\t}\n\t\n\t/**\n\t * Unescape and unwrap key for human-readable display\n\t *\n\t * @param {string} key to unescape.\n\t * @return {string} the unescaped key.\n\t */\n\tfunction unescape(key) {\n\t  var unescapeRegex = /(=0|=2)/g;\n\t  var unescaperLookup = {\n\t    '=0': '=',\n\t    '=2': ':'\n\t  };\n\t  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\t\n\t  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n\t    return unescaperLookup[match];\n\t  });\n\t}\n\t\n\tvar KeyEscapeUtils = {\n\t  escape: escape,\n\t  unescape: unescape\n\t};\n\t\n\tmodule.exports = KeyEscapeUtils;\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule LinkedValueUtils\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactPropTypes = __webpack_require__(72);\n\tvar ReactPropTypeLocations = __webpack_require__(45);\n\tvar ReactPropTypesSecret = __webpack_require__(46);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar hasReadOnlyValue = {\n\t  'button': true,\n\t  'checkbox': true,\n\t  'image': true,\n\t  'hidden': true,\n\t  'radio': true,\n\t  'reset': true,\n\t  'submit': true\n\t};\n\t\n\tfunction _assertSingleLink(inputProps) {\n\t  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n\t}\n\tfunction _assertValueLink(inputProps) {\n\t  _assertSingleLink(inputProps);\n\t  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n\t}\n\t\n\tfunction _assertCheckedLink(inputProps) {\n\t  _assertSingleLink(inputProps);\n\t  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n\t}\n\t\n\tvar propTypes = {\n\t  value: function (props, propName, componentName) {\n\t    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n\t      return null;\n\t    }\n\t    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n\t  },\n\t  checked: function (props, propName, componentName) {\n\t    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n\t      return null;\n\t    }\n\t    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n\t  },\n\t  onChange: ReactPropTypes.func\n\t};\n\t\n\tvar loggedTypeFailures = {};\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t/**\n\t * Provide a linked `value` attribute for controlled forms. You should not use\n\t * this outside of the ReactDOM controlled form components.\n\t */\n\tvar LinkedValueUtils = {\n\t  checkPropTypes: function (tagName, props, owner) {\n\t    for (var propName in propTypes) {\n\t      if (propTypes.hasOwnProperty(propName)) {\n\t        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);\n\t      }\n\t      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t        // Only monitor this failure once because there tends to be a lot of the\n\t        // same error.\n\t        loggedTypeFailures[error.message] = true;\n\t\n\t        var addendum = getDeclarationErrorAddendum(owner);\n\t         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @return {*} current value of the input either from value prop or link.\n\t   */\n\t  getValue: function (inputProps) {\n\t    if (inputProps.valueLink) {\n\t      _assertValueLink(inputProps);\n\t      return inputProps.valueLink.value;\n\t    }\n\t    return inputProps.value;\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @return {*} current checked status of the input either from checked prop\n\t   *             or link.\n\t   */\n\t  getChecked: function (inputProps) {\n\t    if (inputProps.checkedLink) {\n\t      _assertCheckedLink(inputProps);\n\t      return inputProps.checkedLink.value;\n\t    }\n\t    return inputProps.checked;\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @param {SyntheticEvent} event change event to handle\n\t   */\n\t  executeOnChange: function (inputProps, event) {\n\t    if (inputProps.valueLink) {\n\t      _assertValueLink(inputProps);\n\t      return inputProps.valueLink.requestChange(event.target.value);\n\t    } else if (inputProps.checkedLink) {\n\t      _assertCheckedLink(inputProps);\n\t      return inputProps.checkedLink.requestChange(event.target.checked);\n\t    } else if (inputProps.onChange) {\n\t      return inputProps.onChange.call(undefined, event);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = LinkedValueUtils;\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactNoopUpdateQueue = __webpack_require__(43);\n\t\n\tvar canDefineProperty = __webpack_require__(76);\n\tvar emptyObject = __webpack_require__(24);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactComponent(props, context, updater) {\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tReactComponent.prototype.isReactComponent = {};\n\t\n\t/**\n\t * Sets a subset of the state. Always use this to mutate\n\t * state. You should treat `this.state` as immutable.\n\t *\n\t * There is no guarantee that `this.state` will be immediately updated, so\n\t * accessing `this.state` after calling this method may return the old value.\n\t *\n\t * There is no guarantee that calls to `setState` will run synchronously,\n\t * as they may eventually be batched together.  You can provide an optional\n\t * callback that will be executed when the call to setState is actually\n\t * completed.\n\t *\n\t * When a function is provided to setState, it will be called at some point in\n\t * the future (not synchronously). It will be called with the up to date\n\t * component arguments (state, props, context). These values can be different\n\t * from this.* because your function may be called after receiveProps but before\n\t * shouldComponentUpdate, and this new state, props, and context will not yet be\n\t * assigned to this.\n\t *\n\t * @param {object|function} partialState Next partial state or function to\n\t *        produce next partial state to be merged with current state.\n\t * @param {?function} callback Called after state is updated.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.setState = function (partialState, callback) {\n\t  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n\t  this.updater.enqueueSetState(this, partialState);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback, 'setState');\n\t  }\n\t};\n\t\n\t/**\n\t * Forces an update. This should only be invoked when it is known with\n\t * certainty that we are **not** in a DOM transaction.\n\t *\n\t * You may want to call this when you know that some deeper aspect of the\n\t * component's state has changed but `setState` was not called.\n\t *\n\t * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t * `componentWillUpdate` and `componentDidUpdate`.\n\t *\n\t * @param {?function} callback Called after update is complete.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.forceUpdate = function (callback) {\n\t  this.updater.enqueueForceUpdate(this);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n\t  }\n\t};\n\t\n\t/**\n\t * Deprecated APIs. These APIs used to exist on classic React classes but since\n\t * we would like to deprecate them, we're not going to move them over to this\n\t * modern base class. Instead, we define a getter that warns if it's accessed.\n\t */\n\tif (false) {\n\t  var deprecatedAPIs = {\n\t    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n\t    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n\t  };\n\t  var defineDeprecationWarning = function (methodName, info) {\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(ReactComponent.prototype, methodName, {\n\t        get: function () {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;\n\t          return undefined;\n\t        }\n\t      });\n\t    }\n\t  };\n\t  for (var fnName in deprecatedAPIs) {\n\t    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n\t      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = ReactComponent;\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactComponentEnvironment\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar injected = false;\n\t\n\tvar ReactComponentEnvironment = {\n\t\n\t  /**\n\t   * Optionally injectable hook for swapping out mount images in the middle of\n\t   * the tree.\n\t   */\n\t  replaceNodeWithMarkup: null,\n\t\n\t  /**\n\t   * Optionally injectable hook for processing a queue of child updates. Will\n\t   * later move into MultiChildComponents.\n\t   */\n\t  processChildrenUpdates: null,\n\t\n\t  injection: {\n\t    injectEnvironment: function (environment) {\n\t      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n\t      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n\t      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n\t      injected = true;\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactComponentEnvironment;\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2016-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactComponentTreeHook\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(14);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction isNative(fn) {\n\t  // Based on isNative() from Lodash\n\t  var funcToString = Function.prototype.toString;\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t  var reIsNative = RegExp('^' + funcToString\n\t  // Take an example native function source for comparison\n\t  .call(hasOwnProperty)\n\t  // Strip regex characters so we can use it for regex\n\t  .replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t  // Remove hasOwnProperty from the template to make it generic\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n\t  try {\n\t    var source = funcToString.call(fn);\n\t    return reIsNative.test(source);\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\tvar canUseCollections =\n\t// Array.from\n\ttypeof Array.from === 'function' &&\n\t// Map\n\ttypeof Map === 'function' && isNative(Map) &&\n\t// Map.prototype.keys\n\tMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n\t// Set\n\ttypeof Set === 'function' && isNative(Set) &&\n\t// Set.prototype.keys\n\tSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\t\n\tvar itemMap;\n\tvar rootIDSet;\n\t\n\tvar itemByKey;\n\tvar rootByKey;\n\t\n\tif (canUseCollections) {\n\t  itemMap = new Map();\n\t  rootIDSet = new Set();\n\t} else {\n\t  itemByKey = {};\n\t  rootByKey = {};\n\t}\n\t\n\tvar unmountedIDs = [];\n\t\n\t// Use non-numeric keys to prevent V8 performance issues:\n\t// https://github.com/facebook/react/pull/7232\n\tfunction getKeyFromID(id) {\n\t  return '.' + id;\n\t}\n\tfunction getIDFromKey(key) {\n\t  return parseInt(key.substr(1), 10);\n\t}\n\t\n\tfunction get(id) {\n\t  if (canUseCollections) {\n\t    return itemMap.get(id);\n\t  } else {\n\t    var key = getKeyFromID(id);\n\t    return itemByKey[key];\n\t  }\n\t}\n\t\n\tfunction remove(id) {\n\t  if (canUseCollections) {\n\t    itemMap['delete'](id);\n\t  } else {\n\t    var key = getKeyFromID(id);\n\t    delete itemByKey[key];\n\t  }\n\t}\n\t\n\tfunction create(id, element, parentID) {\n\t  var item = {\n\t    element: element,\n\t    parentID: parentID,\n\t    text: null,\n\t    childIDs: [],\n\t    isMounted: false,\n\t    updateCount: 0\n\t  };\n\t\n\t  if (canUseCollections) {\n\t    itemMap.set(id, item);\n\t  } else {\n\t    var key = getKeyFromID(id);\n\t    itemByKey[key] = item;\n\t  }\n\t}\n\t\n\tfunction addRoot(id) {\n\t  if (canUseCollections) {\n\t    rootIDSet.add(id);\n\t  } else {\n\t    var key = getKeyFromID(id);\n\t    rootByKey[key] = true;\n\t  }\n\t}\n\t\n\tfunction removeRoot(id) {\n\t  if (canUseCollections) {\n\t    rootIDSet['delete'](id);\n\t  } else {\n\t    var key = getKeyFromID(id);\n\t    delete rootByKey[key];\n\t  }\n\t}\n\t\n\tfunction getRegisteredIDs() {\n\t  if (canUseCollections) {\n\t    return Array.from(itemMap.keys());\n\t  } else {\n\t    return Object.keys(itemByKey).map(getIDFromKey);\n\t  }\n\t}\n\t\n\tfunction getRootIDs() {\n\t  if (canUseCollections) {\n\t    return Array.from(rootIDSet.keys());\n\t  } else {\n\t    return Object.keys(rootByKey).map(getIDFromKey);\n\t  }\n\t}\n\t\n\tfunction purgeDeep(id) {\n\t  var item = get(id);\n\t  if (item) {\n\t    var childIDs = item.childIDs;\n\t\n\t    remove(id);\n\t    childIDs.forEach(purgeDeep);\n\t  }\n\t}\n\t\n\tfunction describeComponentFrame(name, source, ownerName) {\n\t  return '\\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n\t}\n\t\n\tfunction getDisplayName(element) {\n\t  if (element == null) {\n\t    return '#empty';\n\t  } else if (typeof element === 'string' || typeof element === 'number') {\n\t    return '#text';\n\t  } else if (typeof element.type === 'string') {\n\t    return element.type;\n\t  } else {\n\t    return element.type.displayName || element.type.name || 'Unknown';\n\t  }\n\t}\n\t\n\tfunction describeID(id) {\n\t  var name = ReactComponentTreeHook.getDisplayName(id);\n\t  var element = ReactComponentTreeHook.getElement(id);\n\t  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n\t  var ownerName;\n\t  if (ownerID) {\n\t    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n\t  }\n\t   false ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n\t  return describeComponentFrame(name, element && element._source, ownerName);\n\t}\n\t\n\tvar ReactComponentTreeHook = {\n\t  onSetChildren: function (id, nextChildIDs) {\n\t    var item = get(id);\n\t    item.childIDs = nextChildIDs;\n\t\n\t    for (var i = 0; i < nextChildIDs.length; i++) {\n\t      var nextChildID = nextChildIDs[i];\n\t      var nextChild = get(nextChildID);\n\t      !nextChild ?  false ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n\t      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  false ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n\t      !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n\t      if (nextChild.parentID == null) {\n\t        nextChild.parentID = id;\n\t        // TODO: This shouldn't be necessary but mounting a new root during in\n\t        // componentWillMount currently causes not-yet-mounted components to\n\t        // be purged from our tree data so their parent ID is missing.\n\t      }\n\t      !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n\t    }\n\t  },\n\t  onBeforeMountComponent: function (id, element, parentID) {\n\t    create(id, element, parentID);\n\t  },\n\t  onBeforeUpdateComponent: function (id, element) {\n\t    var item = get(id);\n\t    if (!item || !item.isMounted) {\n\t      // We may end up here as a result of setState() in componentWillUnmount().\n\t      // In this case, ignore the element.\n\t      return;\n\t    }\n\t    item.element = element;\n\t  },\n\t  onMountComponent: function (id) {\n\t    var item = get(id);\n\t    item.isMounted = true;\n\t    var isRoot = item.parentID === 0;\n\t    if (isRoot) {\n\t      addRoot(id);\n\t    }\n\t  },\n\t  onUpdateComponent: function (id) {\n\t    var item = get(id);\n\t    if (!item || !item.isMounted) {\n\t      // We may end up here as a result of setState() in componentWillUnmount().\n\t      // In this case, ignore the element.\n\t      return;\n\t    }\n\t    item.updateCount++;\n\t  },\n\t  onUnmountComponent: function (id) {\n\t    var item = get(id);\n\t    if (item) {\n\t      // We need to check if it exists.\n\t      // `item` might not exist if it is inside an error boundary, and a sibling\n\t      // error boundary child threw while mounting. Then this instance never\n\t      // got a chance to mount, but it still gets an unmounting event during\n\t      // the error boundary cleanup.\n\t      item.isMounted = false;\n\t      var isRoot = item.parentID === 0;\n\t      if (isRoot) {\n\t        removeRoot(id);\n\t      }\n\t    }\n\t    unmountedIDs.push(id);\n\t  },\n\t  purgeUnmountedComponents: function () {\n\t    if (ReactComponentTreeHook._preventPurging) {\n\t      // Should only be used for testing.\n\t      return;\n\t    }\n\t\n\t    for (var i = 0; i < unmountedIDs.length; i++) {\n\t      var id = unmountedIDs[i];\n\t      purgeDeep(id);\n\t    }\n\t    unmountedIDs.length = 0;\n\t  },\n\t  isMounted: function (id) {\n\t    var item = get(id);\n\t    return item ? item.isMounted : false;\n\t  },\n\t  getCurrentStackAddendum: function (topElement) {\n\t    var info = '';\n\t    if (topElement) {\n\t      var type = topElement.type;\n\t      var name = typeof type === 'function' ? type.displayName || type.name : type;\n\t      var owner = topElement._owner;\n\t      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());\n\t    }\n\t\n\t    var currentOwner = ReactCurrentOwner.current;\n\t    var id = currentOwner && currentOwner._debugID;\n\t\n\t    info += ReactComponentTreeHook.getStackAddendumByID(id);\n\t    return info;\n\t  },\n\t  getStackAddendumByID: function (id) {\n\t    var info = '';\n\t    while (id) {\n\t      info += describeID(id);\n\t      id = ReactComponentTreeHook.getParentID(id);\n\t    }\n\t    return info;\n\t  },\n\t  getChildIDs: function (id) {\n\t    var item = get(id);\n\t    return item ? item.childIDs : [];\n\t  },\n\t  getDisplayName: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return getDisplayName(element);\n\t  },\n\t  getElement: function (id) {\n\t    var item = get(id);\n\t    return item ? item.element : null;\n\t  },\n\t  getOwnerID: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (!element || !element._owner) {\n\t      return null;\n\t    }\n\t    return element._owner._debugID;\n\t  },\n\t  getParentID: function (id) {\n\t    var item = get(id);\n\t    return item ? item.parentID : null;\n\t  },\n\t  getSource: function (id) {\n\t    var item = get(id);\n\t    var element = item ? item.element : null;\n\t    var source = element != null ? element._source : null;\n\t    return source;\n\t  },\n\t  getText: function (id) {\n\t    var element = ReactComponentTreeHook.getElement(id);\n\t    if (typeof element === 'string') {\n\t      return element;\n\t    } else if (typeof element === 'number') {\n\t      return '' + element;\n\t    } else {\n\t      return null;\n\t    }\n\t  },\n\t  getUpdateCount: function (id) {\n\t    var item = get(id);\n\t    return item ? item.updateCount : 0;\n\t  },\n\t\n\t\n\t  getRegisteredIDs: getRegisteredIDs,\n\t\n\t  getRootIDs: getRootIDs\n\t};\n\t\n\tmodule.exports = ReactComponentTreeHook;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactErrorUtils\n\t */\n\t\n\t'use strict';\n\t\n\tvar caughtError = null;\n\t\n\t/**\n\t * Call a function while guarding against errors that happens within it.\n\t *\n\t * @param {?String} name of the guard to use for logging or debugging\n\t * @param {Function} func The function to invoke\n\t * @param {*} a First argument\n\t * @param {*} b Second argument\n\t */\n\tfunction invokeGuardedCallback(name, func, a, b) {\n\t  try {\n\t    return func(a, b);\n\t  } catch (x) {\n\t    if (caughtError === null) {\n\t      caughtError = x;\n\t    }\n\t    return undefined;\n\t  }\n\t}\n\t\n\tvar ReactErrorUtils = {\n\t  invokeGuardedCallback: invokeGuardedCallback,\n\t\n\t  /**\n\t   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n\t   * handler are sure to be rethrown by rethrowCaughtError.\n\t   */\n\t  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\t\n\t  /**\n\t   * During execution of guarded functions we will capture the first error which\n\t   * we will rethrow to be handled by the top level error handler.\n\t   */\n\t  rethrowCaughtError: function () {\n\t    if (caughtError) {\n\t      var error = caughtError;\n\t      caughtError = null;\n\t      throw error;\n\t    }\n\t  }\n\t};\n\t\n\tif (false) {\n\t  /**\n\t   * To help development we can get better devtools integration by simulating a\n\t   * real browser event.\n\t   */\n\t  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n\t    var fakeNode = document.createElement('react');\n\t    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {\n\t      var boundFunc = func.bind(null, a, b);\n\t      var evtType = 'react-' + name;\n\t      fakeNode.addEventListener(evtType, boundFunc, false);\n\t      var evt = document.createEvent('Event');\n\t      evt.initEvent(evtType, false, false);\n\t      fakeNode.dispatchEvent(evt);\n\t      fakeNode.removeEventListener(evtType, boundFunc, false);\n\t    };\n\t  }\n\t}\n\t\n\tmodule.exports = ReactErrorUtils;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactNoopUpdateQueue\n\t */\n\t\n\t'use strict';\n\t\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction warnNoop(publicInstance, callerName) {\n\t  if (false) {\n\t    var constructor = publicInstance.constructor;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * This is the abstract API for an update queue.\n\t */\n\tvar ReactNoopUpdateQueue = {\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function (publicInstance) {\n\t    return false;\n\t  },\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @internal\n\t   */\n\t  enqueueCallback: function (publicInstance, callback) {},\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t  enqueueForceUpdate: function (publicInstance) {\n\t    warnNoop(publicInstance, 'forceUpdate');\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} completeState Next state.\n\t   * @internal\n\t   */\n\t  enqueueReplaceState: function (publicInstance, completeState) {\n\t    warnNoop(publicInstance, 'replaceState');\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t  enqueueSetState: function (publicInstance, partialState) {\n\t    warnNoop(publicInstance, 'setState');\n\t  }\n\t};\n\t\n\tmodule.exports = ReactNoopUpdateQueue;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPropTypeLocationNames\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypeLocationNames = {};\n\t\n\tif (false) {\n\t  ReactPropTypeLocationNames = {\n\t    prop: 'prop',\n\t    context: 'context',\n\t    childContext: 'child context'\n\t  };\n\t}\n\t\n\tmodule.exports = ReactPropTypeLocationNames;\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPropTypeLocations\n\t */\n\t\n\t'use strict';\n\t\n\tvar keyMirror = __webpack_require__(30);\n\t\n\tvar ReactPropTypeLocations = keyMirror({\n\t  prop: null,\n\t  context: null,\n\t  childContext: null\n\t});\n\t\n\tmodule.exports = ReactPropTypeLocations;\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPropTypesSecret\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactUpdateQueue\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(14);\n\tvar ReactInstanceMap = __webpack_require__(21);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction enqueueUpdate(internalInstance) {\n\t  ReactUpdates.enqueueUpdate(internalInstance);\n\t}\n\t\n\tfunction formatUnexpectedArgument(arg) {\n\t  var type = typeof arg;\n\t  if (type !== 'object') {\n\t    return type;\n\t  }\n\t  var displayName = arg.constructor && arg.constructor.name || type;\n\t  var keys = Object.keys(arg);\n\t  if (keys.length > 0 && keys.length < 20) {\n\t    return displayName + ' (keys: ' + keys.join(', ') + ')';\n\t  }\n\t  return displayName;\n\t}\n\t\n\tfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n\t  var internalInstance = ReactInstanceMap.get(publicInstance);\n\t  if (!internalInstance) {\n\t    if (false) {\n\t      var ctor = publicInstance.constructor;\n\t      // Only warn when we have a callerName. Otherwise we should be silent.\n\t      // We're probably calling from enqueueCallback. We don't want to warn\n\t      // there because we already warned for the corresponding lifecycle method.\n\t      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;\n\t    }\n\t    return null;\n\t  }\n\t\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;\n\t  }\n\t\n\t  return internalInstance;\n\t}\n\t\n\t/**\n\t * ReactUpdateQueue allows for state updates to be scheduled into a later\n\t * reconciliation step.\n\t */\n\tvar ReactUpdateQueue = {\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function (publicInstance) {\n\t    if (false) {\n\t      var owner = ReactCurrentOwner.current;\n\t      if (owner !== null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n\t        owner._warnedAboutRefsInRender = true;\n\t      }\n\t    }\n\t    var internalInstance = ReactInstanceMap.get(publicInstance);\n\t    if (internalInstance) {\n\t      // During componentWillMount and render this will still be null but after\n\t      // that will always render to something. At least for now. So we can use\n\t      // this hack.\n\t      return !!internalInstance._renderedComponent;\n\t    } else {\n\t      return false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @param {string} callerName Name of the calling function in the public API.\n\t   * @internal\n\t   */\n\t  enqueueCallback: function (publicInstance, callback, callerName) {\n\t    ReactUpdateQueue.validateCallback(callback, callerName);\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\t\n\t    // Previously we would throw an error if we didn't have an internal\n\t    // instance. Since we want to make it a no-op instead, we mirror the same\n\t    // behavior we have in other enqueue* methods.\n\t    // We also need to ignore callbacks in componentWillMount. See\n\t    // enqueueUpdates.\n\t    if (!internalInstance) {\n\t      return null;\n\t    }\n\t\n\t    if (internalInstance._pendingCallbacks) {\n\t      internalInstance._pendingCallbacks.push(callback);\n\t    } else {\n\t      internalInstance._pendingCallbacks = [callback];\n\t    }\n\t    // TODO: The callback here is ignored when setState is called from\n\t    // componentWillMount. Either fix it or disallow doing so completely in\n\t    // favor of getInitialState. Alternatively, we can disallow\n\t    // componentWillMount during server-side rendering.\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  enqueueCallbackInternal: function (internalInstance, callback) {\n\t    if (internalInstance._pendingCallbacks) {\n\t      internalInstance._pendingCallbacks.push(callback);\n\t    } else {\n\t      internalInstance._pendingCallbacks = [callback];\n\t    }\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t  enqueueForceUpdate: function (publicInstance) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    internalInstance._pendingForceUpdate = true;\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} completeState Next state.\n\t   * @internal\n\t   */\n\t  enqueueReplaceState: function (publicInstance, completeState) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    internalInstance._pendingStateQueue = [completeState];\n\t    internalInstance._pendingReplaceState = true;\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t  enqueueSetState: function (publicInstance, partialState) {\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onSetState();\n\t      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;\n\t    }\n\t\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n\t    queue.push(partialState);\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {\n\t    internalInstance._pendingElement = nextElement;\n\t    // TODO: introduce _pendingContext instead of setting it directly.\n\t    internalInstance._context = nextContext;\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  validateCallback: function (callback, callerName) {\n\t    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactUpdateQueue;\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule createMicrosoftUnsafeLocalFunction\n\t */\n\t\n\t/* globals MSApp */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Create a function which has 'unsafe' privileges (required by windows8 apps)\n\t */\n\t\n\tvar createMicrosoftUnsafeLocalFunction = function (func) {\n\t  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n\t    return function (arg0, arg1, arg2, arg3) {\n\t      MSApp.execUnsafeLocalFunction(function () {\n\t        return func(arg0, arg1, arg2, arg3);\n\t      });\n\t    };\n\t  } else {\n\t    return func;\n\t  }\n\t};\n\t\n\tmodule.exports = createMicrosoftUnsafeLocalFunction;\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getEventCharCode\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * `charCode` represents the actual \"character code\" and is safe to use with\n\t * `String.fromCharCode`. As such, only keys that correspond to printable\n\t * characters produce a valid `charCode`, the only exception to this is Enter.\n\t * The Tab-key is considered non-printable and does not have a `charCode`,\n\t * presumably because it does not produce a tab-character in browsers.\n\t *\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {number} Normalized `charCode` property.\n\t */\n\t\n\tfunction getEventCharCode(nativeEvent) {\n\t  var charCode;\n\t  var keyCode = nativeEvent.keyCode;\n\t\n\t  if ('charCode' in nativeEvent) {\n\t    charCode = nativeEvent.charCode;\n\t\n\t    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n\t    if (charCode === 0 && keyCode === 13) {\n\t      charCode = 13;\n\t    }\n\t  } else {\n\t    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n\t    charCode = keyCode;\n\t  }\n\t\n\t  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n\t  // Must not discard the (non-)printable Enter-key.\n\t  if (charCode >= 32 || charCode === 13) {\n\t    return charCode;\n\t  }\n\t\n\t  return 0;\n\t}\n\t\n\tmodule.exports = getEventCharCode;\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getEventModifierState\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Translation from modifier key to the associated property in the event.\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n\t */\n\t\n\tvar modifierKeyToProp = {\n\t  'Alt': 'altKey',\n\t  'Control': 'ctrlKey',\n\t  'Meta': 'metaKey',\n\t  'Shift': 'shiftKey'\n\t};\n\t\n\t// IE8 does not implement getModifierState so we simply map it to the only\n\t// modifier keys exposed by the event itself, does not support Lock-keys.\n\t// Currently, all major browsers except Chrome seems to support Lock-keys.\n\tfunction modifierStateGetter(keyArg) {\n\t  var syntheticEvent = this;\n\t  var nativeEvent = syntheticEvent.nativeEvent;\n\t  if (nativeEvent.getModifierState) {\n\t    return nativeEvent.getModifierState(keyArg);\n\t  }\n\t  var keyProp = modifierKeyToProp[keyArg];\n\t  return keyProp ? !!nativeEvent[keyProp] : false;\n\t}\n\t\n\tfunction getEventModifierState(nativeEvent) {\n\t  return modifierStateGetter;\n\t}\n\t\n\tmodule.exports = getEventModifierState;\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getEventTarget\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Gets the target node from a native browser event by accounting for\n\t * inconsistencies in browser DOM APIs.\n\t *\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {DOMEventTarget} Target node.\n\t */\n\t\n\tfunction getEventTarget(nativeEvent) {\n\t  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\t\n\t  // Normalize SVG <use> element events #4963\n\t  if (target.correspondingUseElement) {\n\t    target = target.correspondingUseElement;\n\t  }\n\t\n\t  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n\t  // @see http://www.quirksmode.org/js/events_properties.html\n\t  return target.nodeType === 3 ? target.parentNode : target;\n\t}\n\t\n\tmodule.exports = getEventTarget;\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule isEventSupported\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar useHasFeature;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  useHasFeature = document.implementation && document.implementation.hasFeature &&\n\t  // always returns true in newer browsers as per the standard.\n\t  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n\t  document.implementation.hasFeature('', '') !== true;\n\t}\n\t\n\t/**\n\t * Checks if an event is supported in the current execution environment.\n\t *\n\t * NOTE: This will not work correctly for non-generic events such as `change`,\n\t * `reset`, `load`, `error`, and `select`.\n\t *\n\t * Borrows from Modernizr.\n\t *\n\t * @param {string} eventNameSuffix Event name, e.g. \"click\".\n\t * @param {?boolean} capture Check if the capture phase is supported.\n\t * @return {boolean} True if the event is supported.\n\t * @internal\n\t * @license Modernizr 3.0.0pre (Custom Build) | MIT\n\t */\n\tfunction isEventSupported(eventNameSuffix, capture) {\n\t  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n\t    return false;\n\t  }\n\t\n\t  var eventName = 'on' + eventNameSuffix;\n\t  var isSupported = eventName in document;\n\t\n\t  if (!isSupported) {\n\t    var element = document.createElement('div');\n\t    element.setAttribute(eventName, 'return;');\n\t    isSupported = typeof element[eventName] === 'function';\n\t  }\n\t\n\t  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n\t    // This is the only way to test support for the `wheel` event in IE9+.\n\t    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n\t  }\n\t\n\t  return isSupported;\n\t}\n\t\n\tmodule.exports = isEventSupported;\n\n/***/ },\n/* 53 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule shouldUpdateReactComponent\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Given a `prevElement` and `nextElement`, determines if the existing\n\t * instance should be updated as opposed to being destroyed or replaced by a new\n\t * instance. Both arguments are elements. This ensures that this logic can\n\t * operate on stateless trees without any backing instance.\n\t *\n\t * @param {?object} prevElement\n\t * @param {?object} nextElement\n\t * @return {boolean} True if the existing instance should be updated.\n\t * @protected\n\t */\n\t\n\tfunction shouldUpdateReactComponent(prevElement, nextElement) {\n\t  var prevEmpty = prevElement === null || prevElement === false;\n\t  var nextEmpty = nextElement === null || nextElement === false;\n\t  if (prevEmpty || nextEmpty) {\n\t    return prevEmpty === nextEmpty;\n\t  }\n\t\n\t  var prevType = typeof prevElement;\n\t  var nextType = typeof nextElement;\n\t  if (prevType === 'string' || prevType === 'number') {\n\t    return nextType === 'string' || nextType === 'number';\n\t  } else {\n\t    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n\t  }\n\t}\n\t\n\tmodule.exports = shouldUpdateReactComponent;\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule traverseAllChildren\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(14);\n\tvar ReactElement = __webpack_require__(9);\n\t\n\tvar getIteratorFn = __webpack_require__(79);\n\tvar invariant = __webpack_require__(1);\n\tvar KeyEscapeUtils = __webpack_require__(37);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar SEPARATOR = '.';\n\tvar SUBSEPARATOR = ':';\n\t\n\t/**\n\t * TODO: Test that a single child and an array with one item have the same key\n\t * pattern.\n\t */\n\t\n\tvar didWarnAboutMaps = false;\n\t\n\t/**\n\t * Generate a key string that identifies a component within a set.\n\t *\n\t * @param {*} component A component that could contain a manual key.\n\t * @param {number} index Index that is used if a manual key is not provided.\n\t * @return {string}\n\t */\n\tfunction getComponentKey(component, index) {\n\t  // Do some typechecking here since we call this blindly. We want to ensure\n\t  // that we don't block potential future ES APIs.\n\t  if (component && typeof component === 'object' && component.key != null) {\n\t    // Explicit key\n\t    return KeyEscapeUtils.escape(component.key);\n\t  }\n\t  // Implicit key determined by the index in the set\n\t  return index.toString(36);\n\t}\n\t\n\t/**\n\t * @param {?*} children Children tree container.\n\t * @param {!string} nameSoFar Name of the key path so far.\n\t * @param {!function} callback Callback to invoke with each child found.\n\t * @param {?*} traverseContext Used to pass information throughout the traversal\n\t * process.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n\t  var type = typeof children;\n\t\n\t  if (type === 'undefined' || type === 'boolean') {\n\t    // All of the above are perceived as null.\n\t    children = null;\n\t  }\n\t\n\t  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n\t    callback(traverseContext, children,\n\t    // If it's the only child, treat the name as if it was wrapped in an array\n\t    // so that it's consistent if the number of children grows.\n\t    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n\t    return 1;\n\t  }\n\t\n\t  var child;\n\t  var nextName;\n\t  var subtreeCount = 0; // Count of children found in the current subtree.\n\t  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\t\n\t  if (Array.isArray(children)) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      child = children[i];\n\t      nextName = nextNamePrefix + getComponentKey(child, i);\n\t      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t    }\n\t  } else {\n\t    var iteratorFn = getIteratorFn(children);\n\t    if (iteratorFn) {\n\t      var iterator = iteratorFn.call(children);\n\t      var step;\n\t      if (iteratorFn !== children.entries) {\n\t        var ii = 0;\n\t        while (!(step = iterator.next()).done) {\n\t          child = step.value;\n\t          nextName = nextNamePrefix + getComponentKey(child, ii++);\n\t          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t        }\n\t      } else {\n\t        if (false) {\n\t          var mapsAsChildrenAddendum = '';\n\t          if (ReactCurrentOwner.current) {\n\t            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n\t            if (mapsAsChildrenOwnerName) {\n\t              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n\t            }\n\t          }\n\t          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n\t          didWarnAboutMaps = true;\n\t        }\n\t        // Iterator will provide entry [k,v] tuples rather than values.\n\t        while (!(step = iterator.next()).done) {\n\t          var entry = step.value;\n\t          if (entry) {\n\t            child = entry[1];\n\t            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n\t            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t          }\n\t        }\n\t      }\n\t    } else if (type === 'object') {\n\t      var addendum = '';\n\t      if (false) {\n\t        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n\t        if (children._isReactElement) {\n\t          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n\t        }\n\t        if (ReactCurrentOwner.current) {\n\t          var name = ReactCurrentOwner.current.getName();\n\t          if (name) {\n\t            addendum += ' Check the render method of `' + name + '`.';\n\t          }\n\t        }\n\t      }\n\t      var childrenString = String(children);\n\t       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n\t    }\n\t  }\n\t\n\t  return subtreeCount;\n\t}\n\t\n\t/**\n\t * Traverses children that are typically specified as `props.children`, but\n\t * might also be specified through attributes:\n\t *\n\t * - `traverseAllChildren(this.props.children, ...)`\n\t * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n\t *\n\t * The `traverseContext` is an optional argument that is passed through the\n\t * entire traversal. It can be used to store accumulations or anything else that\n\t * the callback might find relevant.\n\t *\n\t * @param {?*} children Children tree object.\n\t * @param {!function} callback To invoke upon traversing each child.\n\t * @param {?*} traverseContext Context for traversal.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildren(children, callback, traverseContext) {\n\t  if (children == null) {\n\t    return 0;\n\t  }\n\t\n\t  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n\t}\n\t\n\tmodule.exports = traverseAllChildren;\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule validateDOMNesting\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar validateDOMNesting = emptyFunction;\n\t\n\tif (false) {\n\t  // This validation code was written based on the HTML5 parsing spec:\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\t  //\n\t  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n\t  // not clear what practical benefit doing so provides); instead, we warn only\n\t  // for cases where the parser will give a parse tree differing from what React\n\t  // intended. For example, <b><div></div></b> is invalid but we don't warn\n\t  // because it still parses correctly; we do warn for other cases like nested\n\t  // <p> tags where the beginning of the second element implicitly closes the\n\t  // first, causing a confusing mess.\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#special\n\t  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\t  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n\t  // TODO: Distinguish by namespace here -- for <title>, including it here\n\t  // errs on the side of fewer warnings\n\t  'foreignObject', 'desc', 'title'];\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n\t  var buttonScopeTags = inScopeTags.concat(['button']);\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n\t  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\t\n\t  var emptyAncestorInfo = {\n\t    current: null,\n\t\n\t    formTag: null,\n\t    aTagInScope: null,\n\t    buttonTagInScope: null,\n\t    nobrTagInScope: null,\n\t    pTagInButtonScope: null,\n\t\n\t    listItemTagAutoclosing: null,\n\t    dlItemTagAutoclosing: null\n\t  };\n\t\n\t  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n\t    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n\t    var info = { tag: tag, instance: instance };\n\t\n\t    if (inScopeTags.indexOf(tag) !== -1) {\n\t      ancestorInfo.aTagInScope = null;\n\t      ancestorInfo.buttonTagInScope = null;\n\t      ancestorInfo.nobrTagInScope = null;\n\t    }\n\t    if (buttonScopeTags.indexOf(tag) !== -1) {\n\t      ancestorInfo.pTagInButtonScope = null;\n\t    }\n\t\n\t    // See rules for 'li', 'dd', 'dt' start tags in\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\t    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n\t      ancestorInfo.listItemTagAutoclosing = null;\n\t      ancestorInfo.dlItemTagAutoclosing = null;\n\t    }\n\t\n\t    ancestorInfo.current = info;\n\t\n\t    if (tag === 'form') {\n\t      ancestorInfo.formTag = info;\n\t    }\n\t    if (tag === 'a') {\n\t      ancestorInfo.aTagInScope = info;\n\t    }\n\t    if (tag === 'button') {\n\t      ancestorInfo.buttonTagInScope = info;\n\t    }\n\t    if (tag === 'nobr') {\n\t      ancestorInfo.nobrTagInScope = info;\n\t    }\n\t    if (tag === 'p') {\n\t      ancestorInfo.pTagInButtonScope = info;\n\t    }\n\t    if (tag === 'li') {\n\t      ancestorInfo.listItemTagAutoclosing = info;\n\t    }\n\t    if (tag === 'dd' || tag === 'dt') {\n\t      ancestorInfo.dlItemTagAutoclosing = info;\n\t    }\n\t\n\t    return ancestorInfo;\n\t  };\n\t\n\t  /**\n\t   * Returns whether\n\t   */\n\t  var isTagValidWithParent = function (tag, parentTag) {\n\t    // First, let's check if we're in an unusual parsing mode...\n\t    switch (parentTag) {\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n\t      case 'select':\n\t        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n\t      case 'optgroup':\n\t        return tag === 'option' || tag === '#text';\n\t      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n\t      // but\n\t      case 'option':\n\t        return tag === '#text';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n\t      // No special behavior since these rules fall back to \"in body\" mode for\n\t      // all except special table nodes which cause bad parsing behavior anyway.\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n\t      case 'tr':\n\t        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n\t      case 'tbody':\n\t      case 'thead':\n\t      case 'tfoot':\n\t        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n\t      case 'colgroup':\n\t        return tag === 'col' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n\t      case 'table':\n\t        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n\t      case 'head':\n\t        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n\t      case 'html':\n\t        return tag === 'head' || tag === 'body';\n\t      case '#document':\n\t        return tag === 'html';\n\t    }\n\t\n\t    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n\t    // where the parsing rules cause implicit opens or closes to be added.\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\t    switch (tag) {\n\t      case 'h1':\n\t      case 'h2':\n\t      case 'h3':\n\t      case 'h4':\n\t      case 'h5':\n\t      case 'h6':\n\t        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\t\n\t      case 'rp':\n\t      case 'rt':\n\t        return impliedEndTags.indexOf(parentTag) === -1;\n\t\n\t      case 'body':\n\t      case 'caption':\n\t      case 'col':\n\t      case 'colgroup':\n\t      case 'frame':\n\t      case 'head':\n\t      case 'html':\n\t      case 'tbody':\n\t      case 'td':\n\t      case 'tfoot':\n\t      case 'th':\n\t      case 'thead':\n\t      case 'tr':\n\t        // These tags are only valid with a few parents that have special child\n\t        // parsing rules -- if we're down here, then none of those matched and\n\t        // so we allow it only if we don't know what the parent is, as all other\n\t        // cases are invalid.\n\t        return parentTag == null;\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Returns whether\n\t   */\n\t  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n\t    switch (tag) {\n\t      case 'address':\n\t      case 'article':\n\t      case 'aside':\n\t      case 'blockquote':\n\t      case 'center':\n\t      case 'details':\n\t      case 'dialog':\n\t      case 'dir':\n\t      case 'div':\n\t      case 'dl':\n\t      case 'fieldset':\n\t      case 'figcaption':\n\t      case 'figure':\n\t      case 'footer':\n\t      case 'header':\n\t      case 'hgroup':\n\t      case 'main':\n\t      case 'menu':\n\t      case 'nav':\n\t      case 'ol':\n\t      case 'p':\n\t      case 'section':\n\t      case 'summary':\n\t      case 'ul':\n\t\n\t      case 'pre':\n\t      case 'listing':\n\t\n\t      case 'table':\n\t\n\t      case 'hr':\n\t\n\t      case 'xmp':\n\t\n\t      case 'h1':\n\t      case 'h2':\n\t      case 'h3':\n\t      case 'h4':\n\t      case 'h5':\n\t      case 'h6':\n\t        return ancestorInfo.pTagInButtonScope;\n\t\n\t      case 'form':\n\t        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\t\n\t      case 'li':\n\t        return ancestorInfo.listItemTagAutoclosing;\n\t\n\t      case 'dd':\n\t      case 'dt':\n\t        return ancestorInfo.dlItemTagAutoclosing;\n\t\n\t      case 'button':\n\t        return ancestorInfo.buttonTagInScope;\n\t\n\t      case 'a':\n\t        // Spec says something about storing a list of markers, but it sounds\n\t        // equivalent to this check.\n\t        return ancestorInfo.aTagInScope;\n\t\n\t      case 'nobr':\n\t        return ancestorInfo.nobrTagInScope;\n\t    }\n\t\n\t    return null;\n\t  };\n\t\n\t  /**\n\t   * Given a ReactCompositeComponent instance, return a list of its recursive\n\t   * owners, starting at the root and ending with the instance itself.\n\t   */\n\t  var findOwnerStack = function (instance) {\n\t    if (!instance) {\n\t      return [];\n\t    }\n\t\n\t    var stack = [];\n\t    do {\n\t      stack.push(instance);\n\t    } while (instance = instance._currentElement._owner);\n\t    stack.reverse();\n\t    return stack;\n\t  };\n\t\n\t  var didWarn = {};\n\t\n\t  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {\n\t    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n\t    var parentInfo = ancestorInfo.current;\n\t    var parentTag = parentInfo && parentInfo.tag;\n\t\n\t    if (childText != null) {\n\t      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n\t      childTag = '#text';\n\t    }\n\t\n\t    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n\t    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n\t    var problematic = invalidParent || invalidAncestor;\n\t\n\t    if (problematic) {\n\t      var ancestorTag = problematic.tag;\n\t      var ancestorInstance = problematic.instance;\n\t\n\t      var childOwner = childInstance && childInstance._currentElement._owner;\n\t      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\t\n\t      var childOwners = findOwnerStack(childOwner);\n\t      var ancestorOwners = findOwnerStack(ancestorOwner);\n\t\n\t      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n\t      var i;\n\t\n\t      var deepestCommon = -1;\n\t      for (i = 0; i < minStackLen; i++) {\n\t        if (childOwners[i] === ancestorOwners[i]) {\n\t          deepestCommon = i;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t\n\t      var UNKNOWN = '(unknown)';\n\t      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n\t        return inst.getName() || UNKNOWN;\n\t      });\n\t      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n\t        return inst.getName() || UNKNOWN;\n\t      });\n\t      var ownerInfo = [].concat(\n\t      // If the parent and child instances have a common owner ancestor, start\n\t      // with that -- otherwise we just start with the parent's owners.\n\t      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n\t      // If we're warning about an invalid (non-parent) ancestry, add '...'\n\t      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\t\n\t      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n\t      if (didWarn[warnKey]) {\n\t        return;\n\t      }\n\t      didWarn[warnKey] = true;\n\t\n\t      var tagDisplayName = childTag;\n\t      var whitespaceInfo = '';\n\t      if (childTag === '#text') {\n\t        if (/\\S/.test(childText)) {\n\t          tagDisplayName = 'Text nodes';\n\t        } else {\n\t          tagDisplayName = 'Whitespace text nodes';\n\t          whitespaceInfo = ' Make sure you don\\'t have any extra whitespace between tags on ' + 'each line of your source code.';\n\t        }\n\t      } else {\n\t        tagDisplayName = '<' + childTag + '>';\n\t      }\n\t\n\t      if (invalidParent) {\n\t        var info = '';\n\t        if (ancestorTag === 'table' && childTag === 'tr') {\n\t          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n\t        }\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;\n\t      } else {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;\n\t      }\n\t    }\n\t  };\n\t\n\t  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\t\n\t  // For testing\n\t  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n\t    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n\t    var parentInfo = ancestorInfo.current;\n\t    var parentTag = parentInfo && parentInfo.tag;\n\t    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n\t  };\n\t}\n\t\n\tmodule.exports = validateDOMNesting;\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t * \n\t */\n\t\n\t/*eslint-disable no-self-compare */\n\t\n\t'use strict';\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t */\n\tfunction is(x, y) {\n\t  // SameValue algorithm\n\t  if (x === y) {\n\t    // Steps 1-5, 7-10\n\t    // Steps 6.b-6.e: +0 != -0\n\t    // Added the nonzero y check to make Flow happy, but it is redundant\n\t    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n\t  } else {\n\t    // Step 6.a: NaN == NaN\n\t    return x !== x && y !== y;\n\t  }\n\t}\n\t\n\t/**\n\t * Performs equality by iterating through keys on an object and returning false\n\t * when any key has values which are not strictly equal between the arguments.\n\t * Returns true when the values of all keys are strictly equal.\n\t */\n\tfunction shallowEqual(objA, objB) {\n\t  if (is(objA, objB)) {\n\t    return true;\n\t  }\n\t\n\t  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n\t    return false;\n\t  }\n\t\n\t  var keysA = Object.keys(objA);\n\t  var keysB = Object.keys(objB);\n\t\n\t  if (keysA.length !== keysB.length) {\n\t    return false;\n\t  }\n\t\n\t  // Test for A's keys different from B.\n\t  for (var i = 0; i < keysA.length; i++) {\n\t    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tmodule.exports = shallowEqual;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(90);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('not a function');\n\t  }\n\t  this._45 = 0;\n\t  this._81 = 0;\n\t  this._65 = null;\n\t  this._54 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._10 = null;\n\tPromise._97 = null;\n\tPromise._61 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t};\n\tfunction handle(self, deferred) {\n\t  while (self._81 === 3) {\n\t    self = self._65;\n\t  }\n\t  if (Promise._10) {\n\t    Promise._10(self);\n\t  }\n\t  if (self._81 === 0) {\n\t    if (self._45 === 0) {\n\t      self._45 = 1;\n\t      self._54 = deferred;\n\t      return;\n\t    }\n\t    if (self._45 === 1) {\n\t      self._45 = 2;\n\t      self._54 = [self._54, deferred];\n\t      return;\n\t    }\n\t    self._54.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._81 === 1) {\n\t        resolve(deferred.promise, self._65);\n\t      } else {\n\t        reject(deferred.promise, self._65);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._65);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._81 = 3;\n\t      self._65 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._81 = 1;\n\t  self._65 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._81 = 2;\n\t  self._65 = newValue;\n\t  if (Promise._97) {\n\t    Promise._97(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._45 === 1) {\n\t    handle(self, self._54);\n\t    self._54 = null;\n\t  }\n\t  if (self._45 === 2) {\n\t    for (var i = 0; i < self._54.length; i++) {\n\t      handle(self, self._54[i]);\n\t    }\n\t    self._54 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  })\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule CSSProperty\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * CSS properties which accept numbers but are not in units of \"px\".\n\t */\n\t\n\tvar isUnitlessNumber = {\n\t  animationIterationCount: true,\n\t  borderImageOutset: true,\n\t  borderImageSlice: true,\n\t  borderImageWidth: true,\n\t  boxFlex: true,\n\t  boxFlexGroup: true,\n\t  boxOrdinalGroup: true,\n\t  columnCount: true,\n\t  flex: true,\n\t  flexGrow: true,\n\t  flexPositive: true,\n\t  flexShrink: true,\n\t  flexNegative: true,\n\t  flexOrder: true,\n\t  gridRow: true,\n\t  gridColumn: true,\n\t  fontWeight: true,\n\t  lineClamp: true,\n\t  lineHeight: true,\n\t  opacity: true,\n\t  order: true,\n\t  orphans: true,\n\t  tabSize: true,\n\t  widows: true,\n\t  zIndex: true,\n\t  zoom: true,\n\t\n\t  // SVG-related properties\n\t  fillOpacity: true,\n\t  floodOpacity: true,\n\t  stopOpacity: true,\n\t  strokeDasharray: true,\n\t  strokeDashoffset: true,\n\t  strokeMiterlimit: true,\n\t  strokeOpacity: true,\n\t  strokeWidth: true\n\t};\n\t\n\t/**\n\t * @param {string} prefix vendor-specific prefix, eg: Webkit\n\t * @param {string} key style name, eg: transitionDuration\n\t * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n\t * WebkitTransitionDuration\n\t */\n\tfunction prefixKey(prefix, key) {\n\t  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\t}\n\t\n\t/**\n\t * Support style names that may come passed in prefixed by adding permutations\n\t * of vendor prefixes.\n\t */\n\tvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\t\n\t// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n\t// infinite loop, because it iterates over the newly added props too.\n\tObject.keys(isUnitlessNumber).forEach(function (prop) {\n\t  prefixes.forEach(function (prefix) {\n\t    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n\t  });\n\t});\n\t\n\t/**\n\t * Most style properties can be unset by doing .style[prop] = '' but IE8\n\t * doesn't like doing that with shorthand properties so for the properties that\n\t * IE8 breaks on, which are listed here, we instead unset each of the\n\t * individual properties. See http://bugs.jquery.com/ticket/12385.\n\t * The 4-value 'clock' properties like margin, padding, border-width seem to\n\t * behave without any problems. Curiously, list-style works too without any\n\t * special prodding.\n\t */\n\tvar shorthandPropertyExpansions = {\n\t  background: {\n\t    backgroundAttachment: true,\n\t    backgroundColor: true,\n\t    backgroundImage: true,\n\t    backgroundPositionX: true,\n\t    backgroundPositionY: true,\n\t    backgroundRepeat: true\n\t  },\n\t  backgroundPosition: {\n\t    backgroundPositionX: true,\n\t    backgroundPositionY: true\n\t  },\n\t  border: {\n\t    borderWidth: true,\n\t    borderStyle: true,\n\t    borderColor: true\n\t  },\n\t  borderBottom: {\n\t    borderBottomWidth: true,\n\t    borderBottomStyle: true,\n\t    borderBottomColor: true\n\t  },\n\t  borderLeft: {\n\t    borderLeftWidth: true,\n\t    borderLeftStyle: true,\n\t    borderLeftColor: true\n\t  },\n\t  borderRight: {\n\t    borderRightWidth: true,\n\t    borderRightStyle: true,\n\t    borderRightColor: true\n\t  },\n\t  borderTop: {\n\t    borderTopWidth: true,\n\t    borderTopStyle: true,\n\t    borderTopColor: true\n\t  },\n\t  font: {\n\t    fontStyle: true,\n\t    fontVariant: true,\n\t    fontWeight: true,\n\t    fontSize: true,\n\t    lineHeight: true,\n\t    fontFamily: true\n\t  },\n\t  outline: {\n\t    outlineWidth: true,\n\t    outlineStyle: true,\n\t    outlineColor: true\n\t  }\n\t};\n\t\n\tvar CSSProperty = {\n\t  isUnitlessNumber: isUnitlessNumber,\n\t  shorthandPropertyExpansions: shorthandPropertyExpansions\n\t};\n\t\n\tmodule.exports = CSSProperty;\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule CallbackQueue\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar PooledClass = __webpack_require__(13);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * A specialized pseudo-event module to help keep track of components waiting to\n\t * be notified when their DOM representations are available for use.\n\t *\n\t * This implements `PooledClass`, so you should never need to instantiate this.\n\t * Instead, use `CallbackQueue.getPooled()`.\n\t *\n\t * @class ReactMountReady\n\t * @implements PooledClass\n\t * @internal\n\t */\n\tfunction CallbackQueue() {\n\t  this._callbacks = null;\n\t  this._contexts = null;\n\t}\n\t\n\t_assign(CallbackQueue.prototype, {\n\t\n\t  /**\n\t   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n\t   *\n\t   * @param {function} callback Invoked when `notifyAll` is invoked.\n\t   * @param {?object} context Context to call `callback` with.\n\t   * @internal\n\t   */\n\t  enqueue: function (callback, context) {\n\t    this._callbacks = this._callbacks || [];\n\t    this._contexts = this._contexts || [];\n\t    this._callbacks.push(callback);\n\t    this._contexts.push(context);\n\t  },\n\t\n\t  /**\n\t   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n\t   * the DOM representation of a component has been created or updated.\n\t   *\n\t   * @internal\n\t   */\n\t  notifyAll: function () {\n\t    var callbacks = this._callbacks;\n\t    var contexts = this._contexts;\n\t    if (callbacks) {\n\t      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n\t      this._callbacks = null;\n\t      this._contexts = null;\n\t      for (var i = 0; i < callbacks.length; i++) {\n\t        callbacks[i].call(contexts[i]);\n\t      }\n\t      callbacks.length = 0;\n\t      contexts.length = 0;\n\t    }\n\t  },\n\t\n\t  checkpoint: function () {\n\t    return this._callbacks ? this._callbacks.length : 0;\n\t  },\n\t\n\t  rollback: function (len) {\n\t    if (this._callbacks) {\n\t      this._callbacks.length = len;\n\t      this._contexts.length = len;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resets the internal queue.\n\t   *\n\t   * @internal\n\t   */\n\t  reset: function () {\n\t    this._callbacks = null;\n\t    this._contexts = null;\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this.\n\t   */\n\t  destructor: function () {\n\t    this.reset();\n\t  }\n\t\n\t});\n\t\n\tPooledClass.addPoolingTo(CallbackQueue);\n\t\n\tmodule.exports = CallbackQueue;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMPropertyOperations\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\t\n\tvar quoteAttributeValueForBrowser = __webpack_require__(163);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\n\tvar illegalAttributeNameCache = {};\n\tvar validatedAttributeNameCache = {};\n\t\n\tfunction isAttributeNameSafe(attributeName) {\n\t  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n\t    return true;\n\t  }\n\t  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n\t    return false;\n\t  }\n\t  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n\t    validatedAttributeNameCache[attributeName] = true;\n\t    return true;\n\t  }\n\t  illegalAttributeNameCache[attributeName] = true;\n\t   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n\t  return false;\n\t}\n\t\n\tfunction shouldIgnoreValue(propertyInfo, value) {\n\t  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n\t}\n\t\n\t/**\n\t * Operations for dealing with DOM properties.\n\t */\n\tvar DOMPropertyOperations = {\n\t\n\t  /**\n\t   * Creates markup for the ID property.\n\t   *\n\t   * @param {string} id Unescaped ID.\n\t   * @return {string} Markup string.\n\t   */\n\t  createMarkupForID: function (id) {\n\t    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n\t  },\n\t\n\t  setAttributeForID: function (node, id) {\n\t    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n\t  },\n\t\n\t  createMarkupForRoot: function () {\n\t    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n\t  },\n\t\n\t  setAttributeForRoot: function (node) {\n\t    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n\t  },\n\t\n\t  /**\n\t   * Creates markup for a property.\n\t   *\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @return {?string} Markup string, or null if the property was invalid.\n\t   */\n\t  createMarkupForProperty: function (name, value) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      if (shouldIgnoreValue(propertyInfo, value)) {\n\t        return '';\n\t      }\n\t      var attributeName = propertyInfo.attributeName;\n\t      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n\t        return attributeName + '=\"\"';\n\t      }\n\t      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      if (value == null) {\n\t        return '';\n\t      }\n\t      return name + '=' + quoteAttributeValueForBrowser(value);\n\t    }\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for a custom property.\n\t   *\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @return {string} Markup string, or empty string if the property was invalid.\n\t   */\n\t  createMarkupForCustomAttribute: function (name, value) {\n\t    if (!isAttributeNameSafe(name) || value == null) {\n\t      return '';\n\t    }\n\t    return name + '=' + quoteAttributeValueForBrowser(value);\n\t  },\n\t\n\t  /**\n\t   * Sets the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   * @param {*} value\n\t   */\n\t  setValueForProperty: function (node, name, value) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      var mutationMethod = propertyInfo.mutationMethod;\n\t      if (mutationMethod) {\n\t        mutationMethod(node, value);\n\t      } else if (shouldIgnoreValue(propertyInfo, value)) {\n\t        this.deleteValueForProperty(node, name);\n\t        return;\n\t      } else if (propertyInfo.mustUseProperty) {\n\t        // Contrary to `setAttribute`, object properties are properly\n\t        // `toString`ed by IE8/9.\n\t        node[propertyInfo.propertyName] = value;\n\t      } else {\n\t        var attributeName = propertyInfo.attributeName;\n\t        var namespace = propertyInfo.attributeNamespace;\n\t        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n\t        // ('' + value) makes it output the correct toString()-value.\n\t        if (namespace) {\n\t          node.setAttributeNS(namespace, attributeName, '' + value);\n\t        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n\t          node.setAttribute(attributeName, '');\n\t        } else {\n\t          node.setAttribute(attributeName, '' + value);\n\t        }\n\t      }\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      DOMPropertyOperations.setValueForAttribute(node, name, value);\n\t      return;\n\t    }\n\t\n\t    if (false) {\n\t      var payload = {};\n\t      payload[name] = value;\n\t      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);\n\t    }\n\t  },\n\t\n\t  setValueForAttribute: function (node, name, value) {\n\t    if (!isAttributeNameSafe(name)) {\n\t      return;\n\t    }\n\t    if (value == null) {\n\t      node.removeAttribute(name);\n\t    } else {\n\t      node.setAttribute(name, '' + value);\n\t    }\n\t\n\t    if (false) {\n\t      var payload = {};\n\t      payload[name] = value;\n\t      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes an attributes from a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   */\n\t  deleteValueForAttribute: function (node, name) {\n\t    node.removeAttribute(name);\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   */\n\t  deleteValueForProperty: function (node, name) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      var mutationMethod = propertyInfo.mutationMethod;\n\t      if (mutationMethod) {\n\t        mutationMethod(node, undefined);\n\t      } else if (propertyInfo.mustUseProperty) {\n\t        var propName = propertyInfo.propertyName;\n\t        if (propertyInfo.hasBooleanValue) {\n\t          node[propName] = false;\n\t        } else {\n\t          node[propName] = '';\n\t        }\n\t      } else {\n\t        node.removeAttribute(propertyInfo.attributeName);\n\t      }\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      node.removeAttribute(name);\n\t    }\n\t\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = DOMPropertyOperations;\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactChildren\n\t */\n\t\n\t'use strict';\n\t\n\tvar PooledClass = __webpack_require__(13);\n\tvar ReactElement = __webpack_require__(9);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar traverseAllChildren = __webpack_require__(54);\n\t\n\tvar twoArgumentPooler = PooledClass.twoArgumentPooler;\n\tvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\t\n\tvar userProvidedKeyEscapeRegex = /\\/+/g;\n\tfunction escapeUserProvidedKey(text) {\n\t  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * traversal. Allows avoiding binding callbacks.\n\t *\n\t * @constructor ForEachBookKeeping\n\t * @param {!function} forEachFunction Function to perform traversal with.\n\t * @param {?*} forEachContext Context to perform context with.\n\t */\n\tfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n\t  this.func = forEachFunction;\n\t  this.context = forEachContext;\n\t  this.count = 0;\n\t}\n\tForEachBookKeeping.prototype.destructor = function () {\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\t\n\tfunction forEachSingleChild(bookKeeping, child, name) {\n\t  var func = bookKeeping.func;\n\t  var context = bookKeeping.context;\n\t\n\t  func.call(context, child, bookKeeping.count++);\n\t}\n\t\n\t/**\n\t * Iterates through children that are typically specified as `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n\t *\n\t * The provided forEachFunc(child, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} forEachFunc\n\t * @param {*} forEachContext Context for forEachContext.\n\t */\n\tfunction forEachChildren(children, forEachFunc, forEachContext) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n\t  traverseAllChildren(children, forEachSingleChild, traverseContext);\n\t  ForEachBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * mapping. Allows avoiding binding callbacks.\n\t *\n\t * @constructor MapBookKeeping\n\t * @param {!*} mapResult Object containing the ordered map of results.\n\t * @param {!function} mapFunction Function to perform mapping with.\n\t * @param {?*} mapContext Context to perform mapping with.\n\t */\n\tfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n\t  this.result = mapResult;\n\t  this.keyPrefix = keyPrefix;\n\t  this.func = mapFunction;\n\t  this.context = mapContext;\n\t  this.count = 0;\n\t}\n\tMapBookKeeping.prototype.destructor = function () {\n\t  this.result = null;\n\t  this.keyPrefix = null;\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\t\n\tfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n\t  var result = bookKeeping.result;\n\t  var keyPrefix = bookKeeping.keyPrefix;\n\t  var func = bookKeeping.func;\n\t  var context = bookKeeping.context;\n\t\n\t\n\t  var mappedChild = func.call(context, child, bookKeeping.count++);\n\t  if (Array.isArray(mappedChild)) {\n\t    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n\t  } else if (mappedChild != null) {\n\t    if (ReactElement.isValidElement(mappedChild)) {\n\t      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n\t      // Keep both the (mapped) and old keys if they differ, just as\n\t      // traverseAllChildren used to do for objects as children\n\t      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n\t    }\n\t    result.push(mappedChild);\n\t  }\n\t}\n\t\n\tfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n\t  var escapedPrefix = '';\n\t  if (prefix != null) {\n\t    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n\t  }\n\t  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n\t  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n\t  MapBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * Maps children that are typically specified as `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n\t *\n\t * The provided mapFunction(child, key, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} func The map function.\n\t * @param {*} context Context for mapFunction.\n\t * @return {object} Object containing the ordered map of results.\n\t */\n\tfunction mapChildren(children, func, context) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n\t  return result;\n\t}\n\t\n\tfunction forEachSingleChildDummy(traverseContext, child, name) {\n\t  return null;\n\t}\n\t\n\t/**\n\t * Count the number of children that are typically specified as\n\t * `props.children`.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n\t *\n\t * @param {?*} children Children tree container.\n\t * @return {number} The number of children.\n\t */\n\tfunction countChildren(children, context) {\n\t  return traverseAllChildren(children, forEachSingleChildDummy, null);\n\t}\n\t\n\t/**\n\t * Flatten a children object (typically specified as `props.children`) and\n\t * return an array with appropriately re-keyed children.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n\t */\n\tfunction toArray(children) {\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n\t  return result;\n\t}\n\t\n\tvar ReactChildren = {\n\t  forEach: forEachChildren,\n\t  map: mapChildren,\n\t  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n\t  count: countChildren,\n\t  toArray: toArray\n\t};\n\t\n\tmodule.exports = ReactChildren;\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactClass\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar ReactComponent = __webpack_require__(39);\n\tvar ReactElement = __webpack_require__(9);\n\tvar ReactPropTypeLocations = __webpack_require__(45);\n\tvar ReactPropTypeLocationNames = __webpack_require__(44);\n\tvar ReactNoopUpdateQueue = __webpack_require__(43);\n\t\n\tvar emptyObject = __webpack_require__(24);\n\tvar invariant = __webpack_require__(1);\n\tvar keyMirror = __webpack_require__(30);\n\tvar keyOf = __webpack_require__(15);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar MIXINS_KEY = keyOf({ mixins: null });\n\t\n\t/**\n\t * Policies that describe methods in `ReactClassInterface`.\n\t */\n\tvar SpecPolicy = keyMirror({\n\t  /**\n\t   * These methods may be defined only once by the class specification or mixin.\n\t   */\n\t  DEFINE_ONCE: null,\n\t  /**\n\t   * These methods may be defined by both the class specification and mixins.\n\t   * Subsequent definitions will be chained. These methods must return void.\n\t   */\n\t  DEFINE_MANY: null,\n\t  /**\n\t   * These methods are overriding the base class.\n\t   */\n\t  OVERRIDE_BASE: null,\n\t  /**\n\t   * These methods are similar to DEFINE_MANY, except we assume they return\n\t   * objects. We try to merge the keys of the return values of all the mixed in\n\t   * functions. If there is a key conflict we throw.\n\t   */\n\t  DEFINE_MANY_MERGED: null\n\t});\n\t\n\tvar injectedMixins = [];\n\t\n\t/**\n\t * Composite components are higher-level components that compose other composite\n\t * or host components.\n\t *\n\t * To create a new type of `ReactClass`, pass a specification of\n\t * your new class to `React.createClass`. The only requirement of your class\n\t * specification is that you implement a `render` method.\n\t *\n\t *   var MyComponent = React.createClass({\n\t *     render: function() {\n\t *       return <div>Hello World</div>;\n\t *     }\n\t *   });\n\t *\n\t * The class specification supports a specific protocol of methods that have\n\t * special meaning (e.g. `render`). See `ReactClassInterface` for\n\t * more the comprehensive protocol. Any other properties and methods in the\n\t * class specification will be available on the prototype.\n\t *\n\t * @interface ReactClassInterface\n\t * @internal\n\t */\n\tvar ReactClassInterface = {\n\t\n\t  /**\n\t   * An array of Mixin objects to include when defining your component.\n\t   *\n\t   * @type {array}\n\t   * @optional\n\t   */\n\t  mixins: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * An object containing properties and methods that should be defined on\n\t   * the component's constructor instead of its prototype (static methods).\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  statics: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Definition of prop types for this component.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  propTypes: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Definition of context types for this component.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  contextTypes: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Definition of context types this component sets for its children.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  childContextTypes: SpecPolicy.DEFINE_MANY,\n\t\n\t  // ==== Definition methods ====\n\t\n\t  /**\n\t   * Invoked when the component is mounted. Values in the mapping will be set on\n\t   * `this.props` if that prop is not specified (i.e. using an `in` check).\n\t   *\n\t   * This method is invoked before `getInitialState` and therefore cannot rely\n\t   * on `this.state` or use `this.setState`.\n\t   *\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\t\n\t  /**\n\t   * Invoked once before the component is mounted. The return value will be used\n\t   * as the initial value of `this.state`.\n\t   *\n\t   *   getInitialState: function() {\n\t   *     return {\n\t   *       isOn: false,\n\t   *       fooBaz: new BazFoo()\n\t   *     }\n\t   *   }\n\t   *\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\t\n\t  /**\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\t\n\t  /**\n\t   * Uses props from `this.props` and state from `this.state` to render the\n\t   * structure of the component.\n\t   *\n\t   * No guarantees are made about when or how often this method is invoked, so\n\t   * it must not have side effects.\n\t   *\n\t   *   render: function() {\n\t   *     var name = this.props.name;\n\t   *     return <div>Hello, {name}!</div>;\n\t   *   }\n\t   *\n\t   * @return {ReactComponent}\n\t   * @nosideeffects\n\t   * @required\n\t   */\n\t  render: SpecPolicy.DEFINE_ONCE,\n\t\n\t  // ==== Delegate methods ====\n\t\n\t  /**\n\t   * Invoked when the component is initially created and about to be mounted.\n\t   * This may have side effects, but any external subscriptions or data created\n\t   * by this method must be cleaned up in `componentWillUnmount`.\n\t   *\n\t   * @optional\n\t   */\n\t  componentWillMount: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked when the component has been mounted and has a DOM representation.\n\t   * However, there is no guarantee that the DOM node is in the document.\n\t   *\n\t   * Use this as an opportunity to operate on the DOM when the component has\n\t   * been mounted (initialized and rendered) for the first time.\n\t   *\n\t   * @param {DOMElement} rootNode DOM element representing the component.\n\t   * @optional\n\t   */\n\t  componentDidMount: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked before the component receives new props.\n\t   *\n\t   * Use this as an opportunity to react to a prop transition by updating the\n\t   * state using `this.setState`. Current props are accessed via `this.props`.\n\t   *\n\t   *   componentWillReceiveProps: function(nextProps, nextContext) {\n\t   *     this.setState({\n\t   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n\t   *     });\n\t   *   }\n\t   *\n\t   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n\t   * transition may cause a state change, but the opposite is not true. If you\n\t   * need it, you are probably looking for `componentWillUpdate`.\n\t   *\n\t   * @param {object} nextProps\n\t   * @optional\n\t   */\n\t  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked while deciding if the component should be updated as a result of\n\t   * receiving new props, state and/or context.\n\t   *\n\t   * Use this as an opportunity to `return false` when you're certain that the\n\t   * transition to the new props/state/context will not require a component\n\t   * update.\n\t   *\n\t   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n\t   *     return !equal(nextProps, this.props) ||\n\t   *       !equal(nextState, this.state) ||\n\t   *       !equal(nextContext, this.context);\n\t   *   }\n\t   *\n\t   * @param {object} nextProps\n\t   * @param {?object} nextState\n\t   * @param {?object} nextContext\n\t   * @return {boolean} True if the component should update.\n\t   * @optional\n\t   */\n\t  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\t\n\t  /**\n\t   * Invoked when the component is about to update due to a transition from\n\t   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n\t   * and `nextContext`.\n\t   *\n\t   * Use this as an opportunity to perform preparation before an update occurs.\n\t   *\n\t   * NOTE: You **cannot** use `this.setState()` in this method.\n\t   *\n\t   * @param {object} nextProps\n\t   * @param {?object} nextState\n\t   * @param {?object} nextContext\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @optional\n\t   */\n\t  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked when the component's DOM representation has been updated.\n\t   *\n\t   * Use this as an opportunity to operate on the DOM when the component has\n\t   * been updated.\n\t   *\n\t   * @param {object} prevProps\n\t   * @param {?object} prevState\n\t   * @param {?object} prevContext\n\t   * @param {DOMElement} rootNode DOM element representing the component.\n\t   * @optional\n\t   */\n\t  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked when the component is about to be removed from its parent and have\n\t   * its DOM representation destroyed.\n\t   *\n\t   * Use this as an opportunity to deallocate any external resources.\n\t   *\n\t   * NOTE: There is no `componentDidUnmount` since your component will have been\n\t   * destroyed by that point.\n\t   *\n\t   * @optional\n\t   */\n\t  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\t\n\t  // ==== Advanced methods ====\n\t\n\t  /**\n\t   * Updates the component's currently mounted DOM representation.\n\t   *\n\t   * By default, this implements React's rendering and reconciliation algorithm.\n\t   * Sophisticated clients may wish to override this.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: SpecPolicy.OVERRIDE_BASE\n\t\n\t};\n\t\n\t/**\n\t * Mapping from class specification keys to special processing functions.\n\t *\n\t * Although these are declared like instance properties in the specification\n\t * when defining classes using `React.createClass`, they are actually static\n\t * and are accessible on the constructor instead of the prototype. Despite\n\t * being static, they must be defined outside of the \"statics\" key under\n\t * which all other static methods are defined.\n\t */\n\tvar RESERVED_SPEC_KEYS = {\n\t  displayName: function (Constructor, displayName) {\n\t    Constructor.displayName = displayName;\n\t  },\n\t  mixins: function (Constructor, mixins) {\n\t    if (mixins) {\n\t      for (var i = 0; i < mixins.length; i++) {\n\t        mixSpecIntoComponent(Constructor, mixins[i]);\n\t      }\n\t    }\n\t  },\n\t  childContextTypes: function (Constructor, childContextTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);\n\t    }\n\t    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n\t  },\n\t  contextTypes: function (Constructor, contextTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);\n\t    }\n\t    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n\t  },\n\t  /**\n\t   * Special case getDefaultProps which should move into statics but requires\n\t   * automatic merging.\n\t   */\n\t  getDefaultProps: function (Constructor, getDefaultProps) {\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n\t    } else {\n\t      Constructor.getDefaultProps = getDefaultProps;\n\t    }\n\t  },\n\t  propTypes: function (Constructor, propTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);\n\t    }\n\t    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n\t  },\n\t  statics: function (Constructor, statics) {\n\t    mixStaticSpecIntoComponent(Constructor, statics);\n\t  },\n\t  autobind: function () {} };\n\t\n\t// noop\n\tfunction validateTypeDef(Constructor, typeDef, location) {\n\t  for (var propName in typeDef) {\n\t    if (typeDef.hasOwnProperty(propName)) {\n\t      // use a warning instead of an invariant so components\n\t      // don't show up in prod but only in __DEV__\n\t       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\tfunction validateMethodOverride(isAlreadyDefined, name) {\n\t  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\t\n\t  // Disallow overriding of base class methods unless explicitly allowed.\n\t  if (ReactClassMixin.hasOwnProperty(name)) {\n\t    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n\t  }\n\t\n\t  // Disallow defining methods more than once unless explicitly allowed.\n\t  if (isAlreadyDefined) {\n\t    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * Mixin helper which handles policy validation and reserved\n\t * specification keys when building React classes.\n\t */\n\tfunction mixSpecIntoComponent(Constructor, spec) {\n\t  if (!spec) {\n\t    if (false) {\n\t      var typeofSpec = typeof spec;\n\t      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\t\n\t      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n\t  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\t\n\t  var proto = Constructor.prototype;\n\t  var autoBindPairs = proto.__reactAutoBindPairs;\n\t\n\t  // By handling mixins before any other properties, we ensure the same\n\t  // chaining order is applied to methods with DEFINE_MANY policy, whether\n\t  // mixins are listed before or after these methods in the spec.\n\t  if (spec.hasOwnProperty(MIXINS_KEY)) {\n\t    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n\t  }\n\t\n\t  for (var name in spec) {\n\t    if (!spec.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t\n\t    if (name === MIXINS_KEY) {\n\t      // We have already handled mixins in a special case above.\n\t      continue;\n\t    }\n\t\n\t    var property = spec[name];\n\t    var isAlreadyDefined = proto.hasOwnProperty(name);\n\t    validateMethodOverride(isAlreadyDefined, name);\n\t\n\t    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n\t      RESERVED_SPEC_KEYS[name](Constructor, property);\n\t    } else {\n\t      // Setup methods on prototype:\n\t      // The following member methods should not be automatically bound:\n\t      // 1. Expected ReactClass methods (in the \"interface\").\n\t      // 2. Overridden methods (that were mixed in).\n\t      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n\t      var isFunction = typeof property === 'function';\n\t      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\t\n\t      if (shouldAutoBind) {\n\t        autoBindPairs.push(name, property);\n\t        proto[name] = property;\n\t      } else {\n\t        if (isAlreadyDefined) {\n\t          var specPolicy = ReactClassInterface[name];\n\t\n\t          // These cases should already be caught by validateMethodOverride.\n\t          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\t\n\t          // For methods which are defined more than once, call the existing\n\t          // methods before calling the new property, merging if appropriate.\n\t          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n\t            proto[name] = createMergedResultFunction(proto[name], property);\n\t          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n\t            proto[name] = createChainedFunction(proto[name], property);\n\t          }\n\t        } else {\n\t          proto[name] = property;\n\t          if (false) {\n\t            // Add verbose displayName to the function, which helps when looking\n\t            // at profiling tools.\n\t            if (typeof property === 'function' && spec.displayName) {\n\t              proto[name].displayName = spec.displayName + '_' + name;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction mixStaticSpecIntoComponent(Constructor, statics) {\n\t  if (!statics) {\n\t    return;\n\t  }\n\t  for (var name in statics) {\n\t    var property = statics[name];\n\t    if (!statics.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t\n\t    var isReserved = name in RESERVED_SPEC_KEYS;\n\t    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\t\n\t    var isInherited = name in Constructor;\n\t    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n\t    Constructor[name] = property;\n\t  }\n\t}\n\t\n\t/**\n\t * Merge two objects, but throw if both contain the same key.\n\t *\n\t * @param {object} one The first object, which is mutated.\n\t * @param {object} two The second object\n\t * @return {object} one after it has been mutated to contain everything in two.\n\t */\n\tfunction mergeIntoWithNoDuplicateKeys(one, two) {\n\t  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\t\n\t  for (var key in two) {\n\t    if (two.hasOwnProperty(key)) {\n\t      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n\t      one[key] = two[key];\n\t    }\n\t  }\n\t  return one;\n\t}\n\t\n\t/**\n\t * Creates a function that invokes two functions and merges their return values.\n\t *\n\t * @param {function} one Function to invoke first.\n\t * @param {function} two Function to invoke second.\n\t * @return {function} Function that invokes the two argument functions.\n\t * @private\n\t */\n\tfunction createMergedResultFunction(one, two) {\n\t  return function mergedResult() {\n\t    var a = one.apply(this, arguments);\n\t    var b = two.apply(this, arguments);\n\t    if (a == null) {\n\t      return b;\n\t    } else if (b == null) {\n\t      return a;\n\t    }\n\t    var c = {};\n\t    mergeIntoWithNoDuplicateKeys(c, a);\n\t    mergeIntoWithNoDuplicateKeys(c, b);\n\t    return c;\n\t  };\n\t}\n\t\n\t/**\n\t * Creates a function that invokes two functions and ignores their return vales.\n\t *\n\t * @param {function} one Function to invoke first.\n\t * @param {function} two Function to invoke second.\n\t * @return {function} Function that invokes the two argument functions.\n\t * @private\n\t */\n\tfunction createChainedFunction(one, two) {\n\t  return function chainedFunction() {\n\t    one.apply(this, arguments);\n\t    two.apply(this, arguments);\n\t  };\n\t}\n\t\n\t/**\n\t * Binds a method to the component.\n\t *\n\t * @param {object} component Component whose method is going to be bound.\n\t * @param {function} method Method to be bound.\n\t * @return {function} The bound method.\n\t */\n\tfunction bindAutoBindMethod(component, method) {\n\t  var boundMethod = method.bind(component);\n\t  if (false) {\n\t    boundMethod.__reactBoundContext = component;\n\t    boundMethod.__reactBoundMethod = method;\n\t    boundMethod.__reactBoundArguments = null;\n\t    var componentName = component.constructor.displayName;\n\t    var _bind = boundMethod.bind;\n\t    boundMethod.bind = function (newThis) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      // User is trying to bind() an autobound method; we effectively will\n\t      // ignore the value of \"this\" that the user is trying to use, so\n\t      // let's warn.\n\t      if (newThis !== component && newThis !== null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n\t      } else if (!args.length) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n\t        return boundMethod;\n\t      }\n\t      var reboundMethod = _bind.apply(boundMethod, arguments);\n\t      reboundMethod.__reactBoundContext = component;\n\t      reboundMethod.__reactBoundMethod = method;\n\t      reboundMethod.__reactBoundArguments = args;\n\t      return reboundMethod;\n\t    };\n\t  }\n\t  return boundMethod;\n\t}\n\t\n\t/**\n\t * Binds all auto-bound methods in a component.\n\t *\n\t * @param {object} component Component whose method is going to be bound.\n\t */\n\tfunction bindAutoBindMethods(component) {\n\t  var pairs = component.__reactAutoBindPairs;\n\t  for (var i = 0; i < pairs.length; i += 2) {\n\t    var autoBindKey = pairs[i];\n\t    var method = pairs[i + 1];\n\t    component[autoBindKey] = bindAutoBindMethod(component, method);\n\t  }\n\t}\n\t\n\t/**\n\t * Add more to the ReactClass base class. These are all legacy features and\n\t * therefore not already part of the modern ReactComponent.\n\t */\n\tvar ReactClassMixin = {\n\t\n\t  /**\n\t   * TODO: This will be deprecated because state should always keep a consistent\n\t   * type signature and the only use case for this, is to avoid that.\n\t   */\n\t  replaceState: function (newState, callback) {\n\t    this.updater.enqueueReplaceState(this, newState);\n\t    if (callback) {\n\t      this.updater.enqueueCallback(this, callback, 'replaceState');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function () {\n\t    return this.updater.isMounted(this);\n\t  }\n\t};\n\t\n\tvar ReactClassComponent = function () {};\n\t_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\t\n\t/**\n\t * Module for creating composite components.\n\t *\n\t * @class ReactClass\n\t */\n\tvar ReactClass = {\n\t\n\t  /**\n\t   * Creates a composite component class given a class specification.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n\t   *\n\t   * @param {object} spec Class specification (which must define `render`).\n\t   * @return {function} Component constructor function.\n\t   * @public\n\t   */\n\t  createClass: function (spec) {\n\t    var Constructor = function (props, context, updater) {\n\t      // This constructor gets overridden by mocks. The argument is used\n\t      // by mocks to assert on what gets mounted.\n\t\n\t      if (false) {\n\t        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n\t      }\n\t\n\t      // Wire up auto-binding\n\t      if (this.__reactAutoBindPairs.length) {\n\t        bindAutoBindMethods(this);\n\t      }\n\t\n\t      this.props = props;\n\t      this.context = context;\n\t      this.refs = emptyObject;\n\t      this.updater = updater || ReactNoopUpdateQueue;\n\t\n\t      this.state = null;\n\t\n\t      // ReactClasses doesn't have constructors. Instead, they use the\n\t      // getInitialState and componentWillMount methods for initialization.\n\t\n\t      var initialState = this.getInitialState ? this.getInitialState() : null;\n\t      if (false) {\n\t        // We allow auto-mocks to proceed as if they're returning null.\n\t        if (initialState === undefined && this.getInitialState._isMockFunction) {\n\t          // This is probably bad practice. Consider warning here and\n\t          // deprecating this convenience.\n\t          initialState = null;\n\t        }\n\t      }\n\t      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\t\n\t      this.state = initialState;\n\t    };\n\t    Constructor.prototype = new ReactClassComponent();\n\t    Constructor.prototype.constructor = Constructor;\n\t    Constructor.prototype.__reactAutoBindPairs = [];\n\t\n\t    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\t\n\t    mixSpecIntoComponent(Constructor, spec);\n\t\n\t    // Initialize the defaultProps property after all mixins have been merged.\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.defaultProps = Constructor.getDefaultProps();\n\t    }\n\t\n\t    if (false) {\n\t      // This is a tag to indicate that the use of these method names is ok,\n\t      // since it's used with createClass. If it's not, then it's likely a\n\t      // mistake so we'll warn you to use the static property, property\n\t      // initializer or constructor respectively.\n\t      if (Constructor.getDefaultProps) {\n\t        Constructor.getDefaultProps.isReactClassApproved = {};\n\t      }\n\t      if (Constructor.prototype.getInitialState) {\n\t        Constructor.prototype.getInitialState.isReactClassApproved = {};\n\t      }\n\t    }\n\t\n\t    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n\t    }\n\t\n\t    // Reduce time spent doing lookups by setting these on the prototype.\n\t    for (var methodName in ReactClassInterface) {\n\t      if (!Constructor.prototype[methodName]) {\n\t        Constructor.prototype[methodName] = null;\n\t      }\n\t    }\n\t\n\t    return Constructor;\n\t  },\n\t\n\t  injection: {\n\t    injectMixin: function (mixin) {\n\t      injectedMixins.push(mixin);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactClass;\n\n/***/ },\n/* 63 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMComponentFlags\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMComponentFlags = {\n\t  hasCachedChildNodes: 1 << 0\n\t};\n\t\n\tmodule.exports = ReactDOMComponentFlags;\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMSelect\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar DisabledInputUtils = __webpack_require__(25);\n\tvar LinkedValueUtils = __webpack_require__(38);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnValueLink = false;\n\tvar didWarnValueDefaultValue = false;\n\t\n\tfunction updateOptionsIfPendingUpdateAndMounted() {\n\t  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n\t    this._wrapperState.pendingUpdate = false;\n\t\n\t    var props = this._currentElement.props;\n\t    var value = LinkedValueUtils.getValue(props);\n\t\n\t    if (value != null) {\n\t      updateOptions(this, Boolean(props.multiple), value);\n\t    }\n\t  }\n\t}\n\t\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\tvar valuePropNames = ['value', 'defaultValue'];\n\t\n\t/**\n\t * Validation function for `value` and `defaultValue`.\n\t * @private\n\t */\n\tfunction checkSelectPropTypes(inst, props) {\n\t  var owner = inst._currentElement._owner;\n\t  LinkedValueUtils.checkPropTypes('select', props, owner);\n\t\n\t  if (props.valueLink !== undefined && !didWarnValueLink) {\n\t     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t    didWarnValueLink = true;\n\t  }\n\t\n\t  for (var i = 0; i < valuePropNames.length; i++) {\n\t    var propName = valuePropNames[i];\n\t    if (props[propName] == null) {\n\t      continue;\n\t    }\n\t    var isArray = Array.isArray(props[propName]);\n\t    if (props.multiple && !isArray) {\n\t       false ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n\t    } else if (!props.multiple && isArray) {\n\t       false ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * @param {ReactDOMComponent} inst\n\t * @param {boolean} multiple\n\t * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n\t * @private\n\t */\n\tfunction updateOptions(inst, multiple, propValue) {\n\t  var selectedValue, i;\n\t  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n\t\n\t  if (multiple) {\n\t    selectedValue = {};\n\t    for (i = 0; i < propValue.length; i++) {\n\t      selectedValue['' + propValue[i]] = true;\n\t    }\n\t    for (i = 0; i < options.length; i++) {\n\t      var selected = selectedValue.hasOwnProperty(options[i].value);\n\t      if (options[i].selected !== selected) {\n\t        options[i].selected = selected;\n\t      }\n\t    }\n\t  } else {\n\t    // Do not set `select.value` as exact behavior isn't consistent across all\n\t    // browsers for all cases.\n\t    selectedValue = '' + propValue;\n\t    for (i = 0; i < options.length; i++) {\n\t      if (options[i].value === selectedValue) {\n\t        options[i].selected = true;\n\t        return;\n\t      }\n\t    }\n\t    if (options.length) {\n\t      options[0].selected = true;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Implements a <select> host component that allows optionally setting the\n\t * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n\t * stringable. If `multiple` is true, the prop must be an array of stringables.\n\t *\n\t * If `value` is not supplied (or null/undefined), user actions that change the\n\t * selected option will trigger updates to the rendered options.\n\t *\n\t * If it is supplied (and not null/undefined), the rendered options will not\n\t * update in response to user actions. Instead, the `value` prop must change in\n\t * order for the rendered options to update.\n\t *\n\t * If `defaultValue` is provided, any options with the supplied values will be\n\t * selected.\n\t */\n\tvar ReactDOMSelect = {\n\t  getHostProps: function (inst, props) {\n\t    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {\n\t      onChange: inst._wrapperState.onChange,\n\t      value: undefined\n\t    });\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      checkSelectPropTypes(inst, props);\n\t    }\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    inst._wrapperState = {\n\t      pendingUpdate: false,\n\t      initialValue: value != null ? value : props.defaultValue,\n\t      listeners: null,\n\t      onChange: _handleChange.bind(inst),\n\t      wasMultiple: Boolean(props.multiple)\n\t    };\n\t\n\t    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n\t       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n\t      didWarnValueDefaultValue = true;\n\t    }\n\t  },\n\t\n\t  getSelectValueContext: function (inst) {\n\t    // ReactDOMOption looks at this initial value so the initial generated\n\t    // markup has correct `selected` attributes\n\t    return inst._wrapperState.initialValue;\n\t  },\n\t\n\t  postUpdateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    // After the initial mount, we control selected-ness manually so don't pass\n\t    // this value down\n\t    inst._wrapperState.initialValue = undefined;\n\t\n\t    var wasMultiple = inst._wrapperState.wasMultiple;\n\t    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      inst._wrapperState.pendingUpdate = false;\n\t      updateOptions(inst, Boolean(props.multiple), value);\n\t    } else if (wasMultiple !== Boolean(props.multiple)) {\n\t      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n\t      if (props.defaultValue != null) {\n\t        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n\t      } else {\n\t        // Revert the select back to its default unselected state.\n\t        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t\n\t  if (this._rootNodeID) {\n\t    this._wrapperState.pendingUpdate = true;\n\t  }\n\t  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMSelect;\n\n/***/ },\n/* 65 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactEmptyComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyComponentFactory;\n\t\n\tvar ReactEmptyComponentInjection = {\n\t  injectEmptyComponentFactory: function (factory) {\n\t    emptyComponentFactory = factory;\n\t  }\n\t};\n\t\n\tvar ReactEmptyComponent = {\n\t  create: function (instantiate) {\n\t    return emptyComponentFactory(instantiate);\n\t  }\n\t};\n\t\n\tReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\t\n\tmodule.exports = ReactEmptyComponent;\n\n/***/ },\n/* 66 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactFeatureFlags\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactFeatureFlags = {\n\t  // When true, call console.time() before and .timeEnd() after each top-level\n\t  // render (both initial renders and updates). Useful when looking at prod-mode\n\t  // timeline profiles in Chrome, for example.\n\t  logTopLevelRenders: false\n\t};\n\t\n\tmodule.exports = ReactFeatureFlags;\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactHostComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar genericComponentClass = null;\n\t// This registry keeps track of wrapper classes around host tags.\n\tvar tagToComponentClass = {};\n\tvar textComponentClass = null;\n\t\n\tvar ReactHostComponentInjection = {\n\t  // This accepts a class that receives the tag string. This is a catch all\n\t  // that can render any kind of tag.\n\t  injectGenericComponentClass: function (componentClass) {\n\t    genericComponentClass = componentClass;\n\t  },\n\t  // This accepts a text component class that takes the text string to be\n\t  // rendered as props.\n\t  injectTextComponentClass: function (componentClass) {\n\t    textComponentClass = componentClass;\n\t  },\n\t  // This accepts a keyed object with classes as values. Each key represents a\n\t  // tag. That particular tag will use this class instead of the generic one.\n\t  injectComponentClasses: function (componentClasses) {\n\t    _assign(tagToComponentClass, componentClasses);\n\t  }\n\t};\n\t\n\t/**\n\t * Get a host internal component class for a specific tag.\n\t *\n\t * @param {ReactElement} element The element to create.\n\t * @return {function} The internal class constructor function.\n\t */\n\tfunction createInternalComponent(element) {\n\t  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\n\t  return new genericComponentClass(element);\n\t}\n\t\n\t/**\n\t * @param {ReactText} text\n\t * @return {ReactComponent}\n\t */\n\tfunction createInstanceForText(text) {\n\t  return new textComponentClass(text);\n\t}\n\t\n\t/**\n\t * @param {ReactComponent} component\n\t * @return {boolean}\n\t */\n\tfunction isTextComponent(component) {\n\t  return component instanceof textComponentClass;\n\t}\n\t\n\tvar ReactHostComponent = {\n\t  createInternalComponent: createInternalComponent,\n\t  createInstanceForText: createInstanceForText,\n\t  isTextComponent: isTextComponent,\n\t  injection: ReactHostComponentInjection\n\t};\n\t\n\tmodule.exports = ReactHostComponent;\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactInputSelection\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMSelection = __webpack_require__(124);\n\t\n\tvar containsNode = __webpack_require__(167);\n\tvar focusNode = __webpack_require__(85);\n\tvar getActiveElement = __webpack_require__(86);\n\t\n\tfunction isInDocument(node) {\n\t  return containsNode(document.documentElement, node);\n\t}\n\t\n\t/**\n\t * @ReactInputSelection: React input selection module. Based on Selection.js,\n\t * but modified to be suitable for react and has a couple of bug fixes (doesn't\n\t * assume buttons have range selections allowed).\n\t * Input selection module for React.\n\t */\n\tvar ReactInputSelection = {\n\t\n\t  hasSelectionCapabilities: function (elem) {\n\t    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\t    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n\t  },\n\t\n\t  getSelectionInformation: function () {\n\t    var focusedElem = getActiveElement();\n\t    return {\n\t      focusedElem: focusedElem,\n\t      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n\t    };\n\t  },\n\t\n\t  /**\n\t   * @restoreSelection: If any selection information was potentially lost,\n\t   * restore it. This is useful when performing operations that could remove dom\n\t   * nodes and place them back in, resulting in focus being lost.\n\t   */\n\t  restoreSelection: function (priorSelectionInformation) {\n\t    var curFocusedElem = getActiveElement();\n\t    var priorFocusedElem = priorSelectionInformation.focusedElem;\n\t    var priorSelectionRange = priorSelectionInformation.selectionRange;\n\t    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n\t      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n\t        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n\t      }\n\t      focusNode(priorFocusedElem);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @getSelection: Gets the selection bounds of a focused textarea, input or\n\t   * contentEditable node.\n\t   * -@input: Look up selection bounds of this input\n\t   * -@return {start: selectionStart, end: selectionEnd}\n\t   */\n\t  getSelection: function (input) {\n\t    var selection;\n\t\n\t    if ('selectionStart' in input) {\n\t      // Modern browser with input or textarea.\n\t      selection = {\n\t        start: input.selectionStart,\n\t        end: input.selectionEnd\n\t      };\n\t    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n\t      // IE8 input.\n\t      var range = document.selection.createRange();\n\t      // There can only be one selection per document in IE, so it must\n\t      // be in our element.\n\t      if (range.parentElement() === input) {\n\t        selection = {\n\t          start: -range.moveStart('character', -input.value.length),\n\t          end: -range.moveEnd('character', -input.value.length)\n\t        };\n\t      }\n\t    } else {\n\t      // Content editable or old IE textarea.\n\t      selection = ReactDOMSelection.getOffsets(input);\n\t    }\n\t\n\t    return selection || { start: 0, end: 0 };\n\t  },\n\t\n\t  /**\n\t   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n\t   * the input.\n\t   * -@input     Set selection bounds of this input or textarea\n\t   * -@offsets   Object of same form that is returned from get*\n\t   */\n\t  setSelection: function (input, offsets) {\n\t    var start = offsets.start;\n\t    var end = offsets.end;\n\t    if (end === undefined) {\n\t      end = start;\n\t    }\n\t\n\t    if ('selectionStart' in input) {\n\t      input.selectionStart = start;\n\t      input.selectionEnd = Math.min(end, input.value.length);\n\t    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n\t      var range = input.createTextRange();\n\t      range.collapse(true);\n\t      range.moveStart('character', start);\n\t      range.moveEnd('character', end - start);\n\t      range.select();\n\t    } else {\n\t      ReactDOMSelection.setOffsets(input, offsets);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactInputSelection;\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactMount\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar DOMLazyTree = __webpack_require__(16);\n\tvar DOMProperty = __webpack_require__(17);\n\tvar ReactBrowserEventEmitter = __webpack_require__(26);\n\tvar ReactCurrentOwner = __webpack_require__(14);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDOMContainerInfo = __webpack_require__(117);\n\tvar ReactDOMFeatureFlags = __webpack_require__(120);\n\tvar ReactElement = __webpack_require__(9);\n\tvar ReactFeatureFlags = __webpack_require__(66);\n\tvar ReactInstanceMap = __webpack_require__(21);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar ReactMarkupChecksum = __webpack_require__(133);\n\tvar ReactReconciler = __webpack_require__(18);\n\tvar ReactUpdateQueue = __webpack_require__(47);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar emptyObject = __webpack_require__(24);\n\tvar instantiateReactComponent = __webpack_require__(81);\n\tvar invariant = __webpack_require__(1);\n\tvar setInnerHTML = __webpack_require__(29);\n\tvar shouldUpdateReactComponent = __webpack_require__(53);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\n\tvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\t\n\tvar ELEMENT_NODE_TYPE = 1;\n\tvar DOC_NODE_TYPE = 9;\n\tvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\t\n\tvar instancesByReactRootID = {};\n\t\n\t/**\n\t * Finds the index of the first character\n\t * that's not common between the two given strings.\n\t *\n\t * @return {number} the index of the character where the strings diverge\n\t */\n\tfunction firstDifferenceIndex(string1, string2) {\n\t  var minLen = Math.min(string1.length, string2.length);\n\t  for (var i = 0; i < minLen; i++) {\n\t    if (string1.charAt(i) !== string2.charAt(i)) {\n\t      return i;\n\t    }\n\t  }\n\t  return string1.length === string2.length ? -1 : minLen;\n\t}\n\t\n\t/**\n\t * @param {DOMElement|DOMDocument} container DOM element that may contain\n\t * a React component\n\t * @return {?*} DOM element that may have the reactRoot ID, or null.\n\t */\n\tfunction getReactRootElementInContainer(container) {\n\t  if (!container) {\n\t    return null;\n\t  }\n\t\n\t  if (container.nodeType === DOC_NODE_TYPE) {\n\t    return container.documentElement;\n\t  } else {\n\t    return container.firstChild;\n\t  }\n\t}\n\t\n\tfunction internalGetID(node) {\n\t  // If node is something like a window, document, or text node, none of\n\t  // which support attributes or a .getAttribute method, gracefully return\n\t  // the empty string, as if the attribute were missing.\n\t  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n\t}\n\t\n\t/**\n\t * Mounts this component and inserts it into the DOM.\n\t *\n\t * @param {ReactComponent} componentInstance The instance to mount.\n\t * @param {DOMElement} container DOM element to mount into.\n\t * @param {ReactReconcileTransaction} transaction\n\t * @param {boolean} shouldReuseMarkup If true, do not insert markup\n\t */\n\tfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n\t  var markerName;\n\t  if (ReactFeatureFlags.logTopLevelRenders) {\n\t    var wrappedElement = wrapperInstance._currentElement.props;\n\t    var type = wrappedElement.type;\n\t    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n\t    console.time(markerName);\n\t  }\n\t\n\t  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n\t  );\n\t\n\t  if (markerName) {\n\t    console.timeEnd(markerName);\n\t  }\n\t\n\t  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n\t  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n\t}\n\t\n\t/**\n\t * Batched mount.\n\t *\n\t * @param {ReactComponent} componentInstance The instance to mount.\n\t * @param {DOMElement} container DOM element to mount into.\n\t * @param {boolean} shouldReuseMarkup If true, do not insert markup\n\t */\n\tfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n\t  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n\t  /* useCreateElement */\n\t  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n\t  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n\t  ReactUpdates.ReactReconcileTransaction.release(transaction);\n\t}\n\t\n\t/**\n\t * Unmounts a component and removes it from the DOM.\n\t *\n\t * @param {ReactComponent} instance React component instance.\n\t * @param {DOMElement} container DOM element to unmount from.\n\t * @final\n\t * @internal\n\t * @see {ReactMount.unmountComponentAtNode}\n\t */\n\tfunction unmountComponentFromNode(instance, container, safely) {\n\t  if (false) {\n\t    ReactInstrumentation.debugTool.onBeginFlush();\n\t  }\n\t  ReactReconciler.unmountComponent(instance, safely);\n\t  if (false) {\n\t    ReactInstrumentation.debugTool.onEndFlush();\n\t  }\n\t\n\t  if (container.nodeType === DOC_NODE_TYPE) {\n\t    container = container.documentElement;\n\t  }\n\t\n\t  // http://jsperf.com/emptying-a-node\n\t  while (container.lastChild) {\n\t    container.removeChild(container.lastChild);\n\t  }\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node has a direct React-rendered child that is\n\t * not a React root element. Useful for warning in `render`,\n\t * `unmountComponentAtNode`, etc.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM element contains a direct child that was\n\t * rendered by React but is not a root element.\n\t * @internal\n\t */\n\tfunction hasNonRootReactChild(container) {\n\t  var rootEl = getReactRootElementInContainer(container);\n\t  if (rootEl) {\n\t    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n\t    return !!(inst && inst._hostParent);\n\t  }\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node is a React DOM element and\n\t * it has been rendered by another copy of React.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM has been rendered by another copy of React\n\t * @internal\n\t */\n\tfunction nodeIsRenderedByOtherInstance(container) {\n\t  var rootEl = getReactRootElementInContainer(container);\n\t  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node is a valid node element.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM is a valid DOM node.\n\t * @internal\n\t */\n\tfunction isValidContainer(node) {\n\t  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node is a valid React node element.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM is a valid React DOM node.\n\t * @internal\n\t */\n\tfunction isReactNode(node) {\n\t  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n\t}\n\t\n\tfunction getHostRootInstanceInContainer(container) {\n\t  var rootEl = getReactRootElementInContainer(container);\n\t  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n\t  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n\t}\n\t\n\tfunction getTopLevelWrapperInContainer(container) {\n\t  var root = getHostRootInstanceInContainer(container);\n\t  return root ? root._hostContainerInfo._topLevelWrapper : null;\n\t}\n\t\n\t/**\n\t * Temporary (?) hack so that we can store all top-level pending updates on\n\t * composites instead of having to worry about different types of components\n\t * here.\n\t */\n\tvar topLevelRootCounter = 1;\n\tvar TopLevelWrapper = function () {\n\t  this.rootID = topLevelRootCounter++;\n\t};\n\tTopLevelWrapper.prototype.isReactComponent = {};\n\tif (false) {\n\t  TopLevelWrapper.displayName = 'TopLevelWrapper';\n\t}\n\tTopLevelWrapper.prototype.render = function () {\n\t  // this.props is actually a ReactElement\n\t  return this.props;\n\t};\n\t\n\t/**\n\t * Mounting is the process of initializing a React component by creating its\n\t * representative DOM elements and inserting them into a supplied `container`.\n\t * Any prior content inside `container` is destroyed in the process.\n\t *\n\t *   ReactMount.render(\n\t *     component,\n\t *     document.getElementById('container')\n\t *   );\n\t *\n\t *   <div id=\"container\">                   <-- Supplied `container`.\n\t *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n\t *       // ...                                 component.\n\t *     </div>\n\t *   </div>\n\t *\n\t * Inside of `container`, the first element rendered is the \"reactRoot\".\n\t */\n\tvar ReactMount = {\n\t\n\t  TopLevelWrapper: TopLevelWrapper,\n\t\n\t  /**\n\t   * Used by devtools. The keys are not important.\n\t   */\n\t  _instancesByReactRootID: instancesByReactRootID,\n\t\n\t  /**\n\t   * This is a hook provided to support rendering React components while\n\t   * ensuring that the apparent scroll position of its `container` does not\n\t   * change.\n\t   *\n\t   * @param {DOMElement} container The `container` being rendered into.\n\t   * @param {function} renderCallback This must be called once to do the render.\n\t   */\n\t  scrollMonitor: function (container, renderCallback) {\n\t    renderCallback();\n\t  },\n\t\n\t  /**\n\t   * Take a component that's already mounted into the DOM and replace its props\n\t   * @param {ReactComponent} prevComponent component instance already in the DOM\n\t   * @param {ReactElement} nextElement component instance to render\n\t   * @param {DOMElement} container container to render into\n\t   * @param {?function} callback function triggered on completion\n\t   */\n\t  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n\t    ReactMount.scrollMonitor(container, function () {\n\t      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n\t      if (callback) {\n\t        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n\t      }\n\t    });\n\t\n\t    return prevComponent;\n\t  },\n\t\n\t  /**\n\t   * Render a new component into the DOM. Hooked by hooks!\n\t   *\n\t   * @param {ReactElement} nextElement element to render\n\t   * @param {DOMElement} container container to render into\n\t   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n\t   * @return {ReactComponent} nextComponent\n\t   */\n\t  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n\t    // Various parts of our code (such as ReactCompositeComponent's\n\t    // _renderValidatedComponent) assume that calls to render aren't nested;\n\t    // verify that that's the case.\n\t     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    !isValidContainer(container) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\t\n\t    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\t    var componentInstance = instantiateReactComponent(nextElement, false);\n\t\n\t    // The initial render is synchronous but any updates that happen during\n\t    // rendering, in componentWillMount or componentDidMount, will be batched\n\t    // according to the current batching strategy.\n\t\n\t    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\t\n\t    var wrapperID = componentInstance._instance.rootID;\n\t    instancesByReactRootID[wrapperID] = componentInstance;\n\t\n\t    return componentInstance;\n\t  },\n\t\n\t  /**\n\t   * Renders a React component into the DOM in the supplied `container`.\n\t   *\n\t   * If the React component was previously rendered into `container`, this will\n\t   * perform an update on it and only mutate the DOM as necessary to reflect the\n\t   * latest React component.\n\t   *\n\t   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n\t   * @param {ReactElement} nextElement Component element to render.\n\t   * @param {DOMElement} container DOM element to render into.\n\t   * @param {?function} callback function triggered on completion\n\t   * @return {ReactComponent} Component instance rendered in `container`.\n\t   */\n\t  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n\t    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n\t    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n\t  },\n\t\n\t  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n\t    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n\t    !ReactElement.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :\n\t    // Check if it quacks like an element\n\t    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\t\n\t     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\t\n\t    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);\n\t\n\t    var nextContext;\n\t    if (parentComponent) {\n\t      var parentInst = ReactInstanceMap.get(parentComponent);\n\t      nextContext = parentInst._processChildContext(parentInst._context);\n\t    } else {\n\t      nextContext = emptyObject;\n\t    }\n\t\n\t    var prevComponent = getTopLevelWrapperInContainer(container);\n\t\n\t    if (prevComponent) {\n\t      var prevWrappedElement = prevComponent._currentElement;\n\t      var prevElement = prevWrappedElement.props;\n\t      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n\t        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n\t        var updatedCallback = callback && function () {\n\t          callback.call(publicInst);\n\t        };\n\t        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n\t        return publicInst;\n\t      } else {\n\t        ReactMount.unmountComponentAtNode(container);\n\t      }\n\t    }\n\t\n\t    var reactRootElement = getReactRootElementInContainer(container);\n\t    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n\t    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\t\n\t      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n\t        var rootElementSibling = reactRootElement;\n\t        while (rootElementSibling) {\n\t          if (internalGetID(rootElementSibling)) {\n\t            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n\t            break;\n\t          }\n\t          rootElementSibling = rootElementSibling.nextSibling;\n\t        }\n\t      }\n\t    }\n\t\n\t    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n\t    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n\t    if (callback) {\n\t      callback.call(component);\n\t    }\n\t    return component;\n\t  },\n\t\n\t  /**\n\t   * Renders a React component into the DOM in the supplied `container`.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n\t   *\n\t   * If the React component was previously rendered into `container`, this will\n\t   * perform an update on it and only mutate the DOM as necessary to reflect the\n\t   * latest React component.\n\t   *\n\t   * @param {ReactElement} nextElement Component element to render.\n\t   * @param {DOMElement} container DOM element to render into.\n\t   * @param {?function} callback function triggered on completion\n\t   * @return {ReactComponent} Component instance rendered in `container`.\n\t   */\n\t  render: function (nextElement, container, callback) {\n\t    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n\t  },\n\t\n\t  /**\n\t   * Unmounts and destroys the React component rendered in the `container`.\n\t   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n\t   *\n\t   * @param {DOMElement} container DOM element containing a React component.\n\t   * @return {boolean} True if a component was found in and unmounted from\n\t   *                   `container`\n\t   */\n\t  unmountComponentAtNode: function (container) {\n\t    // Various parts of our code (such as ReactCompositeComponent's\n\t    // _renderValidatedComponent) assume that calls to render aren't nested;\n\t    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n\t    // render but we still don't expect to be in a render call here.)\n\t     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    !isValidContainer(container) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;\n\t    }\n\t\n\t    var prevComponent = getTopLevelWrapperInContainer(container);\n\t    if (!prevComponent) {\n\t      // Check if the node being unmounted was rendered by React, but isn't a\n\t      // root node.\n\t      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\t\n\t      // Check if the container itself is a React root node.\n\t      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\t\n\t      if (false) {\n\t        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n\t      }\n\t\n\t      return false;\n\t    }\n\t    delete instancesByReactRootID[prevComponent._instance.rootID];\n\t    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n\t    return true;\n\t  },\n\t\n\t  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n\t    !isValidContainer(container) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\t\n\t    if (shouldReuseMarkup) {\n\t      var rootElement = getReactRootElementInContainer(container);\n\t      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n\t        ReactDOMComponentTree.precacheNode(instance, rootElement);\n\t        return;\n\t      } else {\n\t        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t\n\t        var rootMarkup = rootElement.outerHTML;\n\t        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\t\n\t        var normalizedMarkup = markup;\n\t        if (false) {\n\t          // because rootMarkup is retrieved from the DOM, various normalizations\n\t          // will have occurred which will not be present in `markup`. Here,\n\t          // insert markup into a <div> or <iframe> depending on the container\n\t          // type to perform the same normalizations before comparing.\n\t          var normalizer;\n\t          if (container.nodeType === ELEMENT_NODE_TYPE) {\n\t            normalizer = document.createElement('div');\n\t            normalizer.innerHTML = markup;\n\t            normalizedMarkup = normalizer.innerHTML;\n\t          } else {\n\t            normalizer = document.createElement('iframe');\n\t            document.body.appendChild(normalizer);\n\t            normalizer.contentDocument.write(markup);\n\t            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n\t            document.body.removeChild(normalizer);\n\t          }\n\t        }\n\t\n\t        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n\t        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\t\n\t        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\t\n\t        if (false) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n\t        }\n\t      }\n\t    }\n\t\n\t    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\t\n\t    if (transaction.useCreateElement) {\n\t      while (container.lastChild) {\n\t        container.removeChild(container.lastChild);\n\t      }\n\t      DOMLazyTree.insertTreeBefore(container, markup, null);\n\t    } else {\n\t      setInnerHTML(container, markup);\n\t      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n\t    }\n\t\n\t    if (false) {\n\t      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n\t      if (hostNode._debugID !== 0) {\n\t        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactMount;\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactMultiChildUpdateTypes\n\t */\n\t\n\t'use strict';\n\t\n\tvar keyMirror = __webpack_require__(30);\n\t\n\t/**\n\t * When a component's children are updated, a series of update configuration\n\t * objects are created in order to batch and serialize the required changes.\n\t *\n\t * Enumerates all the possible types of update configurations.\n\t *\n\t * @internal\n\t */\n\tvar ReactMultiChildUpdateTypes = keyMirror({\n\t  INSERT_MARKUP: null,\n\t  MOVE_EXISTING: null,\n\t  REMOVE_NODE: null,\n\t  SET_MARKUP: null,\n\t  TEXT_CONTENT: null\n\t});\n\t\n\tmodule.exports = ReactMultiChildUpdateTypes;\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactNodeTypes\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactElement = __webpack_require__(9);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar ReactNodeTypes = {\n\t  HOST: 0,\n\t  COMPOSITE: 1,\n\t  EMPTY: 2,\n\t\n\t  getType: function (node) {\n\t    if (node === null || node === false) {\n\t      return ReactNodeTypes.EMPTY;\n\t    } else if (ReactElement.isValidElement(node)) {\n\t      if (typeof node.type === 'function') {\n\t        return ReactNodeTypes.COMPOSITE;\n\t      } else {\n\t        return ReactNodeTypes.HOST;\n\t      }\n\t    }\n\t     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;\n\t  }\n\t};\n\t\n\tmodule.exports = ReactNodeTypes;\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPropTypes\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(9);\n\tvar ReactPropTypeLocationNames = __webpack_require__(44);\n\tvar ReactPropTypesSecret = __webpack_require__(46);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar getIteratorFn = __webpack_require__(79);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Collection of methods that allow declaration and validation of props that are\n\t * supplied to React components. Example usage:\n\t *\n\t *   var Props = require('ReactPropTypes');\n\t *   var MyArticle = React.createClass({\n\t *     propTypes: {\n\t *       // An optional string prop named \"description\".\n\t *       description: Props.string,\n\t *\n\t *       // A required enum prop named \"category\".\n\t *       category: Props.oneOf(['News','Photos']).isRequired,\n\t *\n\t *       // A prop named \"dialog\" that requires an instance of Dialog.\n\t *       dialog: Props.instanceOf(Dialog).isRequired\n\t *     },\n\t *     render: function() { ... }\n\t *   });\n\t *\n\t * A more formal specification of how these methods are used:\n\t *\n\t *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n\t *   decl := ReactPropTypes.{type}(.isRequired)?\n\t *\n\t * Each and every declaration produces a function with the same signature. This\n\t * allows the creation of custom validation functions. For example:\n\t *\n\t *  var MyLink = React.createClass({\n\t *    propTypes: {\n\t *      // An optional string or URI prop named \"href\".\n\t *      href: function(props, propName, componentName) {\n\t *        var propValue = props[propName];\n\t *        if (propValue != null && typeof propValue !== 'string' &&\n\t *            !(propValue instanceof URI)) {\n\t *          return new Error(\n\t *            'Expected a string or an URI for ' + propName + ' in ' +\n\t *            componentName\n\t *          );\n\t *        }\n\t *      }\n\t *    },\n\t *    render: function() {...}\n\t *  });\n\t *\n\t * @internal\n\t */\n\t\n\tvar ANONYMOUS = '<<anonymous>>';\n\t\n\tvar ReactPropTypes = {\n\t  array: createPrimitiveTypeChecker('array'),\n\t  bool: createPrimitiveTypeChecker('boolean'),\n\t  func: createPrimitiveTypeChecker('function'),\n\t  number: createPrimitiveTypeChecker('number'),\n\t  object: createPrimitiveTypeChecker('object'),\n\t  string: createPrimitiveTypeChecker('string'),\n\t  symbol: createPrimitiveTypeChecker('symbol'),\n\t\n\t  any: createAnyTypeChecker(),\n\t  arrayOf: createArrayOfTypeChecker,\n\t  element: createElementTypeChecker(),\n\t  instanceOf: createInstanceTypeChecker,\n\t  node: createNodeChecker(),\n\t  objectOf: createObjectOfTypeChecker,\n\t  oneOf: createEnumTypeChecker,\n\t  oneOfType: createUnionTypeChecker,\n\t  shape: createShapeTypeChecker\n\t};\n\t\n\t/**\n\t * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t */\n\t/*eslint-disable no-self-compare*/\n\tfunction is(x, y) {\n\t  // SameValue algorithm\n\t  if (x === y) {\n\t    // Steps 1-5, 7-10\n\t    // Steps 6.b-6.e: +0 != -0\n\t    return x !== 0 || 1 / x === 1 / y;\n\t  } else {\n\t    // Step 6.a: NaN == NaN\n\t    return x !== x && y !== y;\n\t  }\n\t}\n\t/*eslint-enable no-self-compare*/\n\t\n\t/**\n\t * We use an Error-like object for backward compatibility as people may call\n\t * PropTypes directly and inspect their output. However we don't use real\n\t * Errors anymore. We don't inspect their stack anyway, and creating them\n\t * is prohibitively expensive if they are created too often, such as what\n\t * happens in oneOfType() for any type before the one that matched.\n\t */\n\tfunction PropTypeError(message) {\n\t  this.message = message;\n\t  this.stack = '';\n\t}\n\t// Make `instanceof Error` still work for returned errors.\n\tPropTypeError.prototype = Error.prototype;\n\t\n\tfunction createChainableTypeChecker(validate) {\n\t  if (false) {\n\t    var manualPropTypeCallCache = {};\n\t  }\n\t  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n\t    componentName = componentName || ANONYMOUS;\n\t    propFullName = propFullName || propName;\n\t    if (false) {\n\t      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {\n\t        var cacheKey = componentName + ':' + propName;\n\t        if (!manualPropTypeCallCache[cacheKey]) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;\n\t          manualPropTypeCallCache[cacheKey] = true;\n\t        }\n\t      }\n\t    }\n\t    if (props[propName] == null) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      if (isRequired) {\n\t        return new PropTypeError('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));\n\t      }\n\t      return null;\n\t    } else {\n\t      return validate(props, propName, componentName, location, propFullName);\n\t    }\n\t  }\n\t\n\t  var chainedCheckType = checkType.bind(null, false);\n\t  chainedCheckType.isRequired = checkType.bind(null, true);\n\t\n\t  return chainedCheckType;\n\t}\n\t\n\tfunction createPrimitiveTypeChecker(expectedType) {\n\t  function validate(props, propName, componentName, location, propFullName, secret) {\n\t    var propValue = props[propName];\n\t    var propType = getPropType(propValue);\n\t    if (propType !== expectedType) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      // `propValue` being instance of, say, date/regexp, pass the 'object'\n\t      // check, but we can offer a more precise error message here rather than\n\t      // 'of type `object`'.\n\t      var preciseType = getPreciseType(propValue);\n\t\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createAnyTypeChecker() {\n\t  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n\t}\n\t\n\tfunction createArrayOfTypeChecker(typeChecker) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (typeof typeChecker !== 'function') {\n\t      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n\t    }\n\t    var propValue = props[propName];\n\t    if (!Array.isArray(propValue)) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      var propType = getPropType(propValue);\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t    }\n\t    for (var i = 0; i < propValue.length; i++) {\n\t      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\t      if (error instanceof Error) {\n\t        return error;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createElementTypeChecker() {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    if (!ReactElement.isValidElement(propValue)) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      var propType = getPropType(propValue);\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createInstanceTypeChecker(expectedClass) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (!(props[propName] instanceof expectedClass)) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      var expectedClassName = expectedClass.name || ANONYMOUS;\n\t      var actualClassName = getClassName(props[propName]);\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createEnumTypeChecker(expectedValues) {\n\t  if (!Array.isArray(expectedValues)) {\n\t     false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n\t    return emptyFunction.thatReturnsNull;\n\t  }\n\t\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    for (var i = 0; i < expectedValues.length; i++) {\n\t      if (is(propValue, expectedValues[i])) {\n\t        return null;\n\t      }\n\t    }\n\t\n\t    var locationName = ReactPropTypeLocationNames[location];\n\t    var valuesString = JSON.stringify(expectedValues);\n\t    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createObjectOfTypeChecker(typeChecker) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (typeof typeChecker !== 'function') {\n\t      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n\t    }\n\t    var propValue = props[propName];\n\t    var propType = getPropType(propValue);\n\t    if (propType !== 'object') {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t    }\n\t    for (var key in propValue) {\n\t      if (propValue.hasOwnProperty(key)) {\n\t        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n\t  if (!Array.isArray(arrayOfTypeCheckers)) {\n\t     false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n\t    return emptyFunction.thatReturnsNull;\n\t  }\n\t\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t      var checker = arrayOfTypeCheckers[i];\n\t      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n\t        return null;\n\t      }\n\t    }\n\t\n\t    var locationName = ReactPropTypeLocationNames[location];\n\t    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createNodeChecker() {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (!isNode(props[propName])) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createShapeTypeChecker(shapeTypes) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    var propType = getPropType(propValue);\n\t    if (propType !== 'object') {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t    }\n\t    for (var key in shapeTypes) {\n\t      var checker = shapeTypes[key];\n\t      if (!checker) {\n\t        continue;\n\t      }\n\t      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\t      if (error) {\n\t        return error;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction isNode(propValue) {\n\t  switch (typeof propValue) {\n\t    case 'number':\n\t    case 'string':\n\t    case 'undefined':\n\t      return true;\n\t    case 'boolean':\n\t      return !propValue;\n\t    case 'object':\n\t      if (Array.isArray(propValue)) {\n\t        return propValue.every(isNode);\n\t      }\n\t      if (propValue === null || ReactElement.isValidElement(propValue)) {\n\t        return true;\n\t      }\n\t\n\t      var iteratorFn = getIteratorFn(propValue);\n\t      if (iteratorFn) {\n\t        var iterator = iteratorFn.call(propValue);\n\t        var step;\n\t        if (iteratorFn !== propValue.entries) {\n\t          while (!(step = iterator.next()).done) {\n\t            if (!isNode(step.value)) {\n\t              return false;\n\t            }\n\t          }\n\t        } else {\n\t          // Iterator will provide entry [k,v] tuples rather than values.\n\t          while (!(step = iterator.next()).done) {\n\t            var entry = step.value;\n\t            if (entry) {\n\t              if (!isNode(entry[1])) {\n\t                return false;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        return false;\n\t      }\n\t\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\tfunction isSymbol(propType, propValue) {\n\t  // Native Symbol.\n\t  if (propType === 'symbol') {\n\t    return true;\n\t  }\n\t\n\t  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\t  if (propValue['@@toStringTag'] === 'Symbol') {\n\t    return true;\n\t  }\n\t\n\t  // Fallback for non-spec compliant Symbols which are polyfilled.\n\t  if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\t// Equivalent of `typeof` but with special handling for array and regexp.\n\tfunction getPropType(propValue) {\n\t  var propType = typeof propValue;\n\t  if (Array.isArray(propValue)) {\n\t    return 'array';\n\t  }\n\t  if (propValue instanceof RegExp) {\n\t    // Old webkits (at least until Android 4.0) return 'function' rather than\n\t    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t    // passes PropTypes.object.\n\t    return 'object';\n\t  }\n\t  if (isSymbol(propType, propValue)) {\n\t    return 'symbol';\n\t  }\n\t  return propType;\n\t}\n\t\n\t// This handles more types than `getPropType`. Only used for error messages.\n\t// See `createPrimitiveTypeChecker`.\n\tfunction getPreciseType(propValue) {\n\t  var propType = getPropType(propValue);\n\t  if (propType === 'object') {\n\t    if (propValue instanceof Date) {\n\t      return 'date';\n\t    } else if (propValue instanceof RegExp) {\n\t      return 'regexp';\n\t    }\n\t  }\n\t  return propType;\n\t}\n\t\n\t// Returns class name of the object, if any.\n\tfunction getClassName(propValue) {\n\t  if (!propValue.constructor || !propValue.constructor.name) {\n\t    return ANONYMOUS;\n\t  }\n\t  return propValue.constructor.name;\n\t}\n\t\n\tmodule.exports = ReactPropTypes;\n\n/***/ },\n/* 73 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactVersion\n\t */\n\t\n\t'use strict';\n\t\n\tmodule.exports = '15.3.2';\n\n/***/ },\n/* 74 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ViewportMetrics\n\t */\n\t\n\t'use strict';\n\t\n\tvar ViewportMetrics = {\n\t\n\t  currentScrollLeft: 0,\n\t\n\t  currentScrollTop: 0,\n\t\n\t  refreshScrollValues: function (scrollPosition) {\n\t    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n\t    ViewportMetrics.currentScrollTop = scrollPosition.y;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ViewportMetrics;\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule accumulateInto\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Accumulates items that must not be null or undefined into the first one. This\n\t * is used to conserve memory by avoiding array allocations, and thus sacrifices\n\t * API cleanness. Since `current` can be null before being passed in and not\n\t * null after this function, make sure to assign it back to `current`:\n\t *\n\t * `a = accumulateInto(a, b);`\n\t *\n\t * This API should be sparingly used. Try `accumulate` for something cleaner.\n\t *\n\t * @return {*|array<*>} An accumulation of items.\n\t */\n\t\n\tfunction accumulateInto(current, next) {\n\t  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n\t\n\t  if (current == null) {\n\t    return next;\n\t  }\n\t\n\t  // Both are not empty. Warning: Never call x.concat(y) when you are not\n\t  // certain that x is an Array (x could be a string with concat method).\n\t  if (Array.isArray(current)) {\n\t    if (Array.isArray(next)) {\n\t      current.push.apply(current, next);\n\t      return current;\n\t    }\n\t    current.push(next);\n\t    return current;\n\t  }\n\t\n\t  if (Array.isArray(next)) {\n\t    // A bit too dangerous to mutate `next`.\n\t    return [current].concat(next);\n\t  }\n\t\n\t  return [current, next];\n\t}\n\t\n\tmodule.exports = accumulateInto;\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule canDefineProperty\n\t */\n\t\n\t'use strict';\n\t\n\tvar canDefineProperty = false;\n\tif (false) {\n\t  try {\n\t    Object.defineProperty({}, 'x', { get: function () {} });\n\t    canDefineProperty = true;\n\t  } catch (x) {\n\t    // IE will fail on defineProperty\n\t  }\n\t}\n\t\n\tmodule.exports = canDefineProperty;\n\n/***/ },\n/* 77 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule forEachAccumulated\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @param {array} arr an \"accumulation\" of items which is either an Array or\n\t * a single item. Useful when paired with the `accumulate` module. This is a\n\t * simple utility that allows us to reason about a collection of items, but\n\t * handling the case when there is exactly one item (and we do not need to\n\t * allocate an array).\n\t */\n\t\n\tfunction forEachAccumulated(arr, cb, scope) {\n\t  if (Array.isArray(arr)) {\n\t    arr.forEach(cb, scope);\n\t  } else if (arr) {\n\t    cb.call(scope, arr);\n\t  }\n\t}\n\t\n\tmodule.exports = forEachAccumulated;\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getHostComponentFromComposite\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactNodeTypes = __webpack_require__(71);\n\t\n\tfunction getHostComponentFromComposite(inst) {\n\t  var type;\n\t\n\t  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n\t    inst = inst._renderedComponent;\n\t  }\n\t\n\t  if (type === ReactNodeTypes.HOST) {\n\t    return inst._renderedComponent;\n\t  } else if (type === ReactNodeTypes.EMPTY) {\n\t    return null;\n\t  }\n\t}\n\t\n\tmodule.exports = getHostComponentFromComposite;\n\n/***/ },\n/* 79 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getIteratorFn\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/* global Symbol */\n\t\n\tvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\tvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\t\n\t/**\n\t * Returns the iterator method function contained on the iterable object.\n\t *\n\t * Be sure to invoke the function with the iterable as context:\n\t *\n\t *     var iteratorFn = getIteratorFn(myIterable);\n\t *     if (iteratorFn) {\n\t *       var iterator = iteratorFn.call(myIterable);\n\t *       ...\n\t *     }\n\t *\n\t * @param {?object} maybeIterable\n\t * @return {?function}\n\t */\n\tfunction getIteratorFn(maybeIterable) {\n\t  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t  if (typeof iteratorFn === 'function') {\n\t    return iteratorFn;\n\t  }\n\t}\n\t\n\tmodule.exports = getIteratorFn;\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getTextContentAccessor\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar contentKey = null;\n\t\n\t/**\n\t * Gets the key used to access text content on a DOM node.\n\t *\n\t * @return {?string} Key used to access text content.\n\t * @internal\n\t */\n\tfunction getTextContentAccessor() {\n\t  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n\t    // Prefer textContent to innerText because many browsers support both but\n\t    // SVG <text> elements don't support innerText even when <div> does.\n\t    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n\t  }\n\t  return contentKey;\n\t}\n\t\n\tmodule.exports = getTextContentAccessor;\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule instantiateReactComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar ReactCompositeComponent = __webpack_require__(113);\n\tvar ReactEmptyComponent = __webpack_require__(65);\n\tvar ReactHostComponent = __webpack_require__(67);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t// To avoid a cyclic dependency, we create the final class in this module\n\tvar ReactCompositeComponentWrapper = function (element) {\n\t  this.construct(element);\n\t};\n\t_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {\n\t  _instantiateReactComponent: instantiateReactComponent\n\t});\n\t\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t/**\n\t * Check if the type reference is a known internal type. I.e. not a user\n\t * provided composite type.\n\t *\n\t * @param {function} type\n\t * @return {boolean} Returns true if this is a valid internal type.\n\t */\n\tfunction isInternalComponentType(type) {\n\t  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n\t}\n\t\n\tvar nextDebugID = 1;\n\t\n\t/**\n\t * Given a ReactNode, create an instance that will actually be mounted.\n\t *\n\t * @param {ReactNode} node\n\t * @param {boolean} shouldHaveDebugID\n\t * @return {object} A new instance of the element's constructor.\n\t * @protected\n\t */\n\tfunction instantiateReactComponent(node, shouldHaveDebugID) {\n\t  var instance;\n\t\n\t  if (node === null || node === false) {\n\t    instance = ReactEmptyComponent.create(instantiateReactComponent);\n\t  } else if (typeof node === 'object') {\n\t    var element = node;\n\t    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;\n\t\n\t    // Special case string values\n\t    if (typeof element.type === 'string') {\n\t      instance = ReactHostComponent.createInternalComponent(element);\n\t    } else if (isInternalComponentType(element.type)) {\n\t      // This is temporarily available for custom components that are not string\n\t      // representations. I.e. ART. Once those are updated to use the string\n\t      // representation, we can drop this code path.\n\t      instance = new element.type(element);\n\t\n\t      // We renamed this. Allow the old name for compat. :(\n\t      if (!instance.getHostNode) {\n\t        instance.getHostNode = instance.getNativeNode;\n\t      }\n\t    } else {\n\t      instance = new ReactCompositeComponentWrapper(element);\n\t    }\n\t  } else if (typeof node === 'string' || typeof node === 'number') {\n\t    instance = ReactHostComponent.createInstanceForText(node);\n\t  } else {\n\t     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;\n\t  }\n\t\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;\n\t  }\n\t\n\t  // These two fields are used by the DOM and ART diffing algorithms\n\t  // respectively. Instead of using expandos on components, we should be\n\t  // storing the state needed by the diffing algorithms elsewhere.\n\t  instance._mountIndex = 0;\n\t  instance._mountImage = null;\n\t\n\t  if (false) {\n\t    instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0;\n\t  }\n\t\n\t  // Internal instances should fully constructed at this point, so they should\n\t  // not get any new fields added to them at this point.\n\t  if (false) {\n\t    if (Object.preventExtensions) {\n\t      Object.preventExtensions(instance);\n\t    }\n\t  }\n\t\n\t  return instance;\n\t}\n\t\n\tmodule.exports = instantiateReactComponent;\n\n/***/ },\n/* 82 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule isTextInputElement\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\t */\n\t\n\tvar supportedInputTypes = {\n\t  'color': true,\n\t  'date': true,\n\t  'datetime': true,\n\t  'datetime-local': true,\n\t  'email': true,\n\t  'month': true,\n\t  'number': true,\n\t  'password': true,\n\t  'range': true,\n\t  'search': true,\n\t  'tel': true,\n\t  'text': true,\n\t  'time': true,\n\t  'url': true,\n\t  'week': true\n\t};\n\t\n\tfunction isTextInputElement(elem) {\n\t  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\t\n\t  if (nodeName === 'input') {\n\t    return !!supportedInputTypes[elem.type];\n\t  }\n\t\n\t  if (nodeName === 'textarea') {\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\tmodule.exports = isTextInputElement;\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule setTextContent\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar escapeTextContentForBrowser = __webpack_require__(28);\n\tvar setInnerHTML = __webpack_require__(29);\n\t\n\t/**\n\t * Set the textContent property of a node, ensuring that whitespace is preserved\n\t * even in IE8. innerText is a poor substitute for textContent and, among many\n\t * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n\t * as it should.\n\t *\n\t * @param {DOMElement} node\n\t * @param {string} text\n\t * @internal\n\t */\n\tvar setTextContent = function (node, text) {\n\t  if (text) {\n\t    var firstChild = node.firstChild;\n\t\n\t    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n\t      firstChild.nodeValue = text;\n\t      return;\n\t    }\n\t  }\n\t  node.textContent = text;\n\t};\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  if (!('textContent' in document.documentElement)) {\n\t    setTextContent = function (node, text) {\n\t      setInnerHTML(node, escapeTextContentForBrowser(text));\n\t    };\n\t  }\n\t}\n\t\n\tmodule.exports = setTextContent;\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\t\n\t/**\n\t * Upstream version of event listener. Does not take into account specific\n\t * nature of platform.\n\t */\n\tvar EventListener = {\n\t  /**\n\t   * Listen to DOM events during the bubble phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  listen: function listen(target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, false);\n\t      return {\n\t        remove: function remove() {\n\t          target.removeEventListener(eventType, callback, false);\n\t        }\n\t      };\n\t    } else if (target.attachEvent) {\n\t      target.attachEvent('on' + eventType, callback);\n\t      return {\n\t        remove: function remove() {\n\t          target.detachEvent('on' + eventType, callback);\n\t        }\n\t      };\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Listen to DOM events during the capture phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  capture: function capture(target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, true);\n\t      return {\n\t        remove: function remove() {\n\t          target.removeEventListener(eventType, callback, true);\n\t        }\n\t      };\n\t    } else {\n\t      if (false) {\n\t        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n\t      }\n\t      return {\n\t        remove: emptyFunction\n\t      };\n\t    }\n\t  },\n\t\n\t  registerDefault: function registerDefault() {}\n\t};\n\t\n\tmodule.exports = EventListener;\n\n/***/ },\n/* 85 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @param {DOMElement} node input/textarea to focus\n\t */\n\t\n\tfunction focusNode(node) {\n\t  // IE8 can throw \"Can't move focus to the control because it is invisible,\n\t  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n\t  // reasons that are too expensive and fragile to test.\n\t  try {\n\t    node.focus();\n\t  } catch (e) {}\n\t}\n\t\n\tmodule.exports = focusNode;\n\n/***/ },\n/* 86 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/* eslint-disable fb-www/typeof-undefined */\n\t\n\t/**\n\t * Same as document.activeElement but wraps in a try-catch block. In IE it is\n\t * not safe to call document.activeElement if there is nothing focused.\n\t *\n\t * The activeElement will be null only if the document or document body is not\n\t * yet defined.\n\t */\n\tfunction getActiveElement() /*?DOMElement*/{\n\t  if (typeof document === 'undefined') {\n\t    return null;\n\t  }\n\t  try {\n\t    return document.activeElement || document.body;\n\t  } catch (e) {\n\t    return document.body;\n\t  }\n\t}\n\t\n\tmodule.exports = getActiveElement;\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(110);\n\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(114);\n\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @remove-on-eject-begin\n\t/**\n\t * Copyright (c) 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t// @remove-on-eject-end\n\t\n\tif (typeof Promise === 'undefined') {\n\t  // Rejection tracking prevents a common issue where React gets into an\n\t  // inconsistent state due to an error, but it gets swallowed by a Promise,\n\t  // and the user has no idea what causes React's erratic future behavior.\n\t  __webpack_require__(99).enable();\n\t  window.Promise = __webpack_require__(98);\n\t}\n\t\n\t// fetch() polyfill for making API calls.\n\t__webpack_require__(100);\n\t\n\t// Object.assign() is commonly used with React.\n\t// It will use the native implementation if it's present and isn't buggy.\n\tObject.assign = __webpack_require__(97);\n\n\n/***/ },\n/* 90 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` or `self` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\t\n\t/* globals self */\n\tvar scope = typeof global !== \"undefined\" ? global : self;\n\tvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(87);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _p = __webpack_require__(31);\n\t\n\tvar _p2 = _interopRequireDefault(_p);\n\t\n\tvar _gravitron = __webpack_require__(93);\n\t\n\tvar _gravitron2 = _interopRequireDefault(_gravitron);\n\t\n\tvar _otherSketch = __webpack_require__(94);\n\t\n\tvar _otherSketch2 = _interopRequireDefault(_otherSketch);\n\t\n\t__webpack_require__(95);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t// Same sketch, but with blue planets for testing.\n\t\n\t\n\tvar App = function (_Component) {\n\t  _inherits(App, _Component);\n\t\n\t  function App() {\n\t    _classCallCheck(this, App);\n\t\n\t    // List with all sketches.\n\t    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this));\n\t\n\t    _this.sketchList = {\n\t      gravitron: {\n\t        name: 'Gravitron',\n\t        sketch: _gravitron2.default\n\t      },\n\t      otherSketch: {\n\t        name: 'Other Sketch',\n\t        sketch: _otherSketch2.default\n\t      }\n\t    };\n\t    var urlParam = window.location.search.substr(1);\n\t    // If the url parameter is invalid resort to the default sketch.\n\t    var queriedSketch = _this.sketchList[urlParam] ? _this.sketchList[urlParam] : _this.sketchList['gravitron'];\n\t    _this.state = { currentSketch: queriedSketch };\n\t    _this.changeSketch = _this.changeSketch.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  // Pressing the buttons changes the sketch for testing. We should implement some sort of carousel later.\n\t\n\t\n\t  _createClass(App, [{\n\t    key: 'changeSketch',\n\t    value: function changeSketch(sketch) {\n\t      if (window.location.search.substr(1) !== sketch) {\n\t        window.location.search = sketch;\n\t        var queriedSketch = this.sketchList[sketch] ? this.sketchList[sketch] : _gravitron2.default;\n\t        this.setState({ currentSketch: queriedSketch });\n\t        new _p2.default(this.state.currentSketch.sketch, 'sketch');\n\t      }\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: 'App' },\n\t        _react2.default.createElement('div', { id: 'sketch' }),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'title' },\n\t          'SMC Programming Club'\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'info' },\n\t          '\"',\n\t          this.state.currentSketch.name,\n\t          '\"'\n\t        ),\n\t        _react2.default.createElement(\n\t          'button',\n\t          {\n\t            onClick: function onClick() {\n\t              return _this2.changeSketch('gravitron');\n\t            },\n\t            style: { position: 'fixed', right: '2%', top: '2%' }\n\t          },\n\t          'Change to Gravitron'\n\t        ),\n\t        _react2.default.createElement(\n\t          'button',\n\t          {\n\t            onClick: function onClick() {\n\t              return _this2.changeSketch('otherSketch');\n\t            },\n\t            style: { position: 'fixed', right: '2%', top: '10%' }\n\t          },\n\t          'Change to Other Sketch'\n\t        )\n\t      );\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      new _p2.default(this.state.currentSketch.sketch, 'sketch');\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}(_react.Component);\n\t\n\texports.default = App;\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(87);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(88);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _App = __webpack_require__(91);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\t__webpack_require__(96);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_reactDom2.default.render(_react2.default.createElement(_App2.default, null), document.getElementById('root'));\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _p = __webpack_require__(31);\n\t\n\tvar _p2 = _interopRequireDefault(_p);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar gravitron = function gravitron(p) {\n\t\n\t  var centerPlanet;\n\t  var planetArray;\n\t  var indicator;\n\t\n\t  // CONSTANTS\n\t  var G = 6.67384e-2;\n\t  var MIN_SIZE = 5;\n\t  var MAX_SIZE = 100;\n\t  var GROWTH_RATE = 1.2;\n\t\n\t  var colorPalette = ['#451804', '#c1440e', '#e77d11', '#fda600'];\n\t\n\t  // function proj(v1, v2) {\n\t  //   var dot = p.Vector.dot(v1, v2);\n\t  //   var comp = dot / v2.magSq();\n\t  //   return p.Vector.mult(v2, comp);\n\t  // }\n\t\n\t  function Indicator(x, y) {\n\t    this.location = p.createVector(x, y);\n\t    this.radius = MIN_SIZE;\n\t    this.growthRate = GROWTH_RATE;\n\t    this.randomColor = colorPalette[p.floor(p.random(colorPalette.length))];\n\t\n\t    this.render = function () {\n\t      p.stroke(this.randomColor);\n\t      p.fill(this.randomColor);\n\t      // Draw a line showing the initial force of the Planet\n\t      p.line(p.mouseX, p.mouseY, this.location.x, this.location.y);\n\t\n\t      // Draw a circle that will change sizes between MAX_SIZE and MIN_SIZE\n\t      p.ellipse(this.location.x, this.location.y, this.radius * 2);\n\t      this.radius += this.growthRate;\n\t      if (this.radius < MIN_SIZE || this.radius > MAX_SIZE) {\n\t        this.growthRate *= -1;\n\t      }\n\t    };\n\t\n\t    this.release = function () {\n\t      // Make a new Planet at this location\n\t      var planet = new Planet(this.location.x, this.location.y, this.radius, this.randomColor);\n\t      planetArray.push(planet);\n\t\n\t      // Find the distance between this location and the mouse\n\t      // Use that as the Planet's initial force\n\t      var force = p.createVector(this.location.x - p.mouseX, this.location.y - p.mouseY);\n\t      force.mult(10);\n\t      planet.applyForce(force);\n\t    };\n\t  }\n\t\n\t  function Planet(x, y, radius, color) {\n\t    this.location = p.createVector(x, y);\n\t    this.velocity = p.createVector(0, 0);\n\t    this.acceleration = p.createVector(0, 0);\n\t    this.radius = radius;\n\t    this.color = color;\n\t\n\t    this.mass = function () {\n\t      // Area = PI * r^2\n\t      return p.PI * p.pow(this.radius, 2);\n\t    };\n\t\n\t    this.applyForce = function (force) {\n\t      // Newton's Second Law F=m*a\n\t      var a = force.div(this.mass());\n\t      this.acceleration.add(a);\n\t    };\n\t\n\t    this.attract = function (otherPlanet) {\n\t      var vectorBetween = _p2.default.Vector.sub(this.location, otherPlanet.location);\n\t\n\t      var r = vectorBetween.mag();\n\t      var m1 = this.mass();\n\t      var m2 = otherPlanet.mass();\n\t\n\t      if (r > this.radius + otherPlanet.radius) {\n\t        var force = G * m1 * m2 / p.pow(r, 2);\n\t        var direction = vectorBetween.normalize();\n\t        var forceVector = _p2.default.Vector.mult(direction, force);\n\t\n\t        otherPlanet.applyForce(forceVector);\n\t      }\n\t    };\n\t\n\t    this.render = function () {\n\t      p.stroke(this.color);\n\t      p.fill(this.color);\n\t      p.ellipse(this.location.x, this.location.y, this.radius * 2);\n\t      this.velocity.add(this.acceleration);\n\t      this.location.add(this.velocity);\n\t      this.acceleration.mult(0);\n\t    };\n\t  }\n\t\n\t  p.setup = function () {\n\t    p.createCanvas(p.windowWidth, p.windowHeight);\n\t    planetArray = [];\n\t    centerPlanet = new Planet(p.windowWidth / 2, p.windowHeight / 2, 150, '#FDB813');\n\t  };\n\t  p.draw = function () {\n\t    p.background(255, 255, 255, 50);\n\t    centerPlanet.render();\n\t    for (var i = 0; i < planetArray.length; i++) {\n\t      centerPlanet.attract(planetArray[i]);\n\t      planetArray[i].render();\n\t      for (var j = 0; j < planetArray.length; j++) {\n\t        if (i !== j) {\n\t          planetArray[i].attract(planetArray[j]);\n\t        }\n\t      }\n\t    }\n\t    if (indicator) {\n\t      indicator.render();\n\t    }\n\t  };\n\t  p.mousePressed = function () {\n\t    indicator = new Indicator(p.mouseX, p.mouseY);\n\t  };\n\t  p.mouseReleased = function () {\n\t    if (indicator) {\n\t      indicator.release();\n\t      indicator = null;\n\t    }\n\t  };\n\t};\n\t\n\texports.default = gravitron;\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _p = __webpack_require__(31);\n\t\n\tvar _p2 = _interopRequireDefault(_p);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar otherSketch = function otherSketch(p) {\n\t\n\t  var centerPlanet;\n\t  var planetArray;\n\t  var indicator;\n\t\n\t  // CONSTANTS\n\t  var G = 6.67384e-2;\n\t  var MIN_SIZE = 5;\n\t  var MAX_SIZE = 100;\n\t  var GROWTH_RATE = 1.2;\n\t\n\t  var colorPalette = ['blue', 'blue', 'blue', 'blue'];\n\t\n\t  // function proj(v1, v2) {\n\t  //   var dot = p.Vector.dot(v1, v2);\n\t  //   var comp = dot / v2.magSq();\n\t  //   return p.Vector.mult(v2, comp);\n\t  // }\n\t\n\t  function Indicator(x, y) {\n\t    this.location = p.createVector(x, y);\n\t    this.radius = MIN_SIZE;\n\t    this.growthRate = GROWTH_RATE;\n\t    this.randomColor = colorPalette[p.floor(p.random(colorPalette.length))];\n\t\n\t    this.render = function () {\n\t      p.stroke(this.randomColor);\n\t      p.fill(this.randomColor);\n\t      // Draw a line showing the initial force of the Planet\n\t      p.line(p.mouseX, p.mouseY, this.location.x, this.location.y);\n\t\n\t      // Draw a circle that will change sizes between MAX_SIZE and MIN_SIZE\n\t      p.ellipse(this.location.x, this.location.y, this.radius * 2);\n\t      this.radius += this.growthRate;\n\t      if (this.radius < MIN_SIZE || this.radius > MAX_SIZE) {\n\t        this.growthRate *= -1;\n\t      }\n\t    };\n\t\n\t    this.release = function () {\n\t      // Make a new Planet at this location\n\t      var planet = new Planet(this.location.x, this.location.y, this.radius, this.randomColor);\n\t      planetArray.push(planet);\n\t\n\t      // Find the distance between this location and the mouse\n\t      // Use that as the Planet's initial force\n\t      var force = p.createVector(this.location.x - p.mouseX, this.location.y - p.mouseY);\n\t      force.mult(10);\n\t      planet.applyForce(force);\n\t    };\n\t  }\n\t\n\t  function Planet(x, y, radius, color) {\n\t    this.location = p.createVector(x, y);\n\t    this.velocity = p.createVector(0, 0);\n\t    this.acceleration = p.createVector(0, 0);\n\t    this.radius = radius;\n\t    this.color = color;\n\t\n\t    this.mass = function () {\n\t      // Area = PI * r^2\n\t      return p.PI * p.pow(this.radius, 2);\n\t    };\n\t\n\t    this.applyForce = function (force) {\n\t      // Newton's Second Law F=m*a\n\t      var a = force.div(this.mass());\n\t      this.acceleration.add(a);\n\t    };\n\t\n\t    this.attract = function (otherPlanet) {\n\t      var vectorBetween = _p2.default.Vector.sub(this.location, otherPlanet.location);\n\t\n\t      var r = vectorBetween.mag();\n\t      var m1 = this.mass();\n\t      var m2 = otherPlanet.mass();\n\t\n\t      if (r > this.radius + otherPlanet.radius) {\n\t        var force = G * m1 * m2 / p.pow(r, 2);\n\t        var direction = vectorBetween.normalize();\n\t        var forceVector = _p2.default.Vector.mult(direction, force);\n\t\n\t        otherPlanet.applyForce(forceVector);\n\t      }\n\t    };\n\t\n\t    this.render = function () {\n\t      p.stroke(this.color);\n\t      p.fill(this.color);\n\t      p.ellipse(this.location.x, this.location.y, this.radius * 2);\n\t      this.velocity.add(this.acceleration);\n\t      this.location.add(this.velocity);\n\t      this.acceleration.mult(0);\n\t    };\n\t  }\n\t\n\t  p.setup = function () {\n\t    p.createCanvas(p.windowWidth, p.windowHeight);\n\t    planetArray = [];\n\t    centerPlanet = new Planet(p.windowWidth / 2, p.windowHeight / 2, 150, 'blue');\n\t  };\n\t  p.draw = function () {\n\t    p.background(255, 255, 255, 50);\n\t    centerPlanet.render();\n\t    for (var i = 0; i < planetArray.length; i++) {\n\t      centerPlanet.attract(planetArray[i]);\n\t      planetArray[i].render();\n\t      for (var j = 0; j < planetArray.length; j++) {\n\t        if (i !== j) {\n\t          planetArray[i].attract(planetArray[j]);\n\t        }\n\t      }\n\t    }\n\t    if (indicator) {\n\t      indicator.render();\n\t    }\n\t  };\n\t  p.mousePressed = function () {\n\t    indicator = new Indicator(p.mouseX, p.mouseY);\n\t  };\n\t  p.mouseReleased = function () {\n\t    if (indicator) {\n\t      indicator.release();\n\t      indicator = null;\n\t    }\n\t  };\n\t};\n\t\n\texports.default = otherSketch;\n\n/***/ },\n/* 95 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 96 */\n95,\n/* 97 */\n4,\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(57);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._61);\n\t  p._81 = 1;\n\t  p._65 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._81 === 3) {\n\t            val = val._65;\n\t          }\n\t          if (val._81 === 1) return res(i, val._65);\n\t          if (val._81 === 2) reject(val._65);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(57);\n\t\n\tvar DEFAULT_WHITELIST = [\n\t  ReferenceError,\n\t  TypeError,\n\t  RangeError\n\t];\n\t\n\tvar enabled = false;\n\texports.disable = disable;\n\tfunction disable() {\n\t  enabled = false;\n\t  Promise._10 = null;\n\t  Promise._97 = null;\n\t}\n\t\n\texports.enable = enable;\n\tfunction enable(options) {\n\t  options = options || {};\n\t  if (enabled) disable();\n\t  enabled = true;\n\t  var id = 0;\n\t  var displayId = 0;\n\t  var rejections = {};\n\t  Promise._10 = function (promise) {\n\t    if (\n\t      promise._81 === 2 && // IS REJECTED\n\t      rejections[promise._72]\n\t    ) {\n\t      if (rejections[promise._72].logged) {\n\t        onHandled(promise._72);\n\t      } else {\n\t        clearTimeout(rejections[promise._72].timeout);\n\t      }\n\t      delete rejections[promise._72];\n\t    }\n\t  };\n\t  Promise._97 = function (promise, err) {\n\t    if (promise._45 === 0) { // not yet handled\n\t      promise._72 = id++;\n\t      rejections[promise._72] = {\n\t        displayId: null,\n\t        error: err,\n\t        timeout: setTimeout(\n\t          onUnhandled.bind(null, promise._72),\n\t          // For reference errors and type errors, this almost always\n\t          // means the programmer made a mistake, so log them after just\n\t          // 100ms\n\t          // otherwise, wait 2 seconds to see if they get handled\n\t          matchWhitelist(err, DEFAULT_WHITELIST)\n\t            ? 100\n\t            : 2000\n\t        ),\n\t        logged: false\n\t      };\n\t    }\n\t  };\n\t  function onUnhandled(id) {\n\t    if (\n\t      options.allRejections ||\n\t      matchWhitelist(\n\t        rejections[id].error,\n\t        options.whitelist || DEFAULT_WHITELIST\n\t      )\n\t    ) {\n\t      rejections[id].displayId = displayId++;\n\t      if (options.onUnhandled) {\n\t        rejections[id].logged = true;\n\t        options.onUnhandled(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      } else {\n\t        rejections[id].logged = true;\n\t        logError(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      }\n\t    }\n\t  }\n\t  function onHandled(id) {\n\t    if (rejections[id].logged) {\n\t      if (options.onHandled) {\n\t        options.onHandled(rejections[id].displayId, rejections[id].error);\n\t      } else if (!rejections[id].onUnhandled) {\n\t        console.warn(\n\t          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n\t        );\n\t        console.warn(\n\t          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n\t          rejections[id].displayId + '.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction logError(id, error) {\n\t  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n\t  var errStr = (error && (error.stack || error)) + '';\n\t  errStr.split('\\n').forEach(function (line) {\n\t    console.warn('  ' + line);\n\t  });\n\t}\n\t\n\tfunction matchWhitelist(error, list) {\n\t  return list.some(function (cls) {\n\t    return error instanceof cls;\n\t  });\n\t}\n\n/***/ },\n/* 100 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule AutoFocusUtils\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\t\n\tvar focusNode = __webpack_require__(85);\n\t\n\tvar AutoFocusUtils = {\n\t  focusDOMComponent: function () {\n\t    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));\n\t  }\n\t};\n\t\n\tmodule.exports = AutoFocusUtils;\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule BeforeInputEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPropagators = __webpack_require__(20);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar FallbackCompositionState = __webpack_require__(108);\n\tvar SyntheticCompositionEvent = __webpack_require__(146);\n\tvar SyntheticInputEvent = __webpack_require__(149);\n\t\n\tvar keyOf = __webpack_require__(15);\n\t\n\tvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\n\tvar START_KEYCODE = 229;\n\t\n\tvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\t\n\tvar documentMode = null;\n\tif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n\t  documentMode = document.documentMode;\n\t}\n\t\n\t// Webkit offers a very useful `textInput` event that can be used to\n\t// directly represent `beforeInput`. The IE `textinput` event is not as\n\t// useful, so we don't use it.\n\tvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\t\n\t// In IE9+, we have access to composition events, but the data supplied\n\t// by the native compositionend event may be incorrect. Japanese ideographic\n\t// spaces, for instance (\\u3000) are not recorded correctly.\n\tvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\t\n\t/**\n\t * Opera <= 12 includes TextEvent in window, but does not fire\n\t * text input events. Rely on keypress instead.\n\t */\n\tfunction isPresto() {\n\t  var opera = window.opera;\n\t  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n\t}\n\t\n\tvar SPACEBAR_CODE = 32;\n\tvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\t// Events and their corresponding property names.\n\tvar eventTypes = {\n\t  beforeInput: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onBeforeInput: null }),\n\t      captured: keyOf({ onBeforeInputCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]\n\t  },\n\t  compositionEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCompositionEnd: null }),\n\t      captured: keyOf({ onCompositionEndCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n\t  },\n\t  compositionStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCompositionStart: null }),\n\t      captured: keyOf({ onCompositionStartCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n\t  },\n\t  compositionUpdate: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCompositionUpdate: null }),\n\t      captured: keyOf({ onCompositionUpdateCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n\t  }\n\t};\n\t\n\t// Track whether we've ever handled a keypress on the space key.\n\tvar hasSpaceKeypress = false;\n\t\n\t/**\n\t * Return whether a native keypress event is assumed to be a command.\n\t * This is required because Firefox fires `keypress` events for key commands\n\t * (cut, copy, select-all, etc.) even though no character is inserted.\n\t */\n\tfunction isKeypressCommand(nativeEvent) {\n\t  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n\t  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n\t  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n\t}\n\t\n\t/**\n\t * Translate native top level events into event types.\n\t *\n\t * @param {string} topLevelType\n\t * @return {object}\n\t */\n\tfunction getCompositionEventType(topLevelType) {\n\t  switch (topLevelType) {\n\t    case topLevelTypes.topCompositionStart:\n\t      return eventTypes.compositionStart;\n\t    case topLevelTypes.topCompositionEnd:\n\t      return eventTypes.compositionEnd;\n\t    case topLevelTypes.topCompositionUpdate:\n\t      return eventTypes.compositionUpdate;\n\t  }\n\t}\n\t\n\t/**\n\t * Does our fallback best-guess model think this event signifies that\n\t * composition has begun?\n\t *\n\t * @param {string} topLevelType\n\t * @param {object} nativeEvent\n\t * @return {boolean}\n\t */\n\tfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n\t  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;\n\t}\n\t\n\t/**\n\t * Does our fallback mode think that this event is the end of composition?\n\t *\n\t * @param {string} topLevelType\n\t * @param {object} nativeEvent\n\t * @return {boolean}\n\t */\n\tfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n\t  switch (topLevelType) {\n\t    case topLevelTypes.topKeyUp:\n\t      // Command keys insert or clear IME input.\n\t      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n\t    case topLevelTypes.topKeyDown:\n\t      // Expect IME keyCode on each keydown. If we get any other\n\t      // code we must have exited earlier.\n\t      return nativeEvent.keyCode !== START_KEYCODE;\n\t    case topLevelTypes.topKeyPress:\n\t    case topLevelTypes.topMouseDown:\n\t    case topLevelTypes.topBlur:\n\t      // Events are not possible without cancelling IME.\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Google Input Tools provides composition data via a CustomEvent,\n\t * with the `data` property populated in the `detail` object. If this\n\t * is available on the event object, use it. If not, this is a plain\n\t * composition event and we have nothing special to extract.\n\t *\n\t * @param {object} nativeEvent\n\t * @return {?string}\n\t */\n\tfunction getDataFromCustomEvent(nativeEvent) {\n\t  var detail = nativeEvent.detail;\n\t  if (typeof detail === 'object' && 'data' in detail) {\n\t    return detail.data;\n\t  }\n\t  return null;\n\t}\n\t\n\t// Track the current IME composition fallback object, if any.\n\tvar currentComposition = null;\n\t\n\t/**\n\t * @return {?object} A SyntheticCompositionEvent.\n\t */\n\tfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t  var eventType;\n\t  var fallbackData;\n\t\n\t  if (canUseCompositionEvent) {\n\t    eventType = getCompositionEventType(topLevelType);\n\t  } else if (!currentComposition) {\n\t    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n\t      eventType = eventTypes.compositionStart;\n\t    }\n\t  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n\t    eventType = eventTypes.compositionEnd;\n\t  }\n\t\n\t  if (!eventType) {\n\t    return null;\n\t  }\n\t\n\t  if (useFallbackCompositionData) {\n\t    // The current composition is stored statically and must not be\n\t    // overwritten while composition continues.\n\t    if (!currentComposition && eventType === eventTypes.compositionStart) {\n\t      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);\n\t    } else if (eventType === eventTypes.compositionEnd) {\n\t      if (currentComposition) {\n\t        fallbackData = currentComposition.getData();\n\t      }\n\t    }\n\t  }\n\t\n\t  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\t\n\t  if (fallbackData) {\n\t    // Inject data generated from fallback path into the synthetic event.\n\t    // This matches the property of native CompositionEventInterface.\n\t    event.data = fallbackData;\n\t  } else {\n\t    var customData = getDataFromCustomEvent(nativeEvent);\n\t    if (customData !== null) {\n\t      event.data = customData;\n\t    }\n\t  }\n\t\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t  return event;\n\t}\n\t\n\t/**\n\t * @param {string} topLevelType Record from `EventConstants`.\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {?string} The string corresponding to this `beforeInput` event.\n\t */\n\tfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n\t  switch (topLevelType) {\n\t    case topLevelTypes.topCompositionEnd:\n\t      return getDataFromCustomEvent(nativeEvent);\n\t    case topLevelTypes.topKeyPress:\n\t      /**\n\t       * If native `textInput` events are available, our goal is to make\n\t       * use of them. However, there is a special case: the spacebar key.\n\t       * In Webkit, preventing default on a spacebar `textInput` event\n\t       * cancels character insertion, but it *also* causes the browser\n\t       * to fall back to its default spacebar behavior of scrolling the\n\t       * page.\n\t       *\n\t       * Tracking at:\n\t       * https://code.google.com/p/chromium/issues/detail?id=355103\n\t       *\n\t       * To avoid this issue, use the keypress event as if no `textInput`\n\t       * event is available.\n\t       */\n\t      var which = nativeEvent.which;\n\t      if (which !== SPACEBAR_CODE) {\n\t        return null;\n\t      }\n\t\n\t      hasSpaceKeypress = true;\n\t      return SPACEBAR_CHAR;\n\t\n\t    case topLevelTypes.topTextInput:\n\t      // Record the characters to be added to the DOM.\n\t      var chars = nativeEvent.data;\n\t\n\t      // If it's a spacebar character, assume that we have already handled\n\t      // it at the keypress level and bail immediately. Android Chrome\n\t      // doesn't give us keycodes, so we need to blacklist it.\n\t      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n\t        return null;\n\t      }\n\t\n\t      return chars;\n\t\n\t    default:\n\t      // For other native event types, do nothing.\n\t      return null;\n\t  }\n\t}\n\t\n\t/**\n\t * For browsers that do not provide the `textInput` event, extract the\n\t * appropriate string to use for SyntheticInputEvent.\n\t *\n\t * @param {string} topLevelType Record from `EventConstants`.\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {?string} The fallback string for this `beforeInput` event.\n\t */\n\tfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n\t  // If we are currently composing (IME) and using a fallback to do so,\n\t  // try to extract the composed characters from the fallback object.\n\t  // If composition event is available, we extract a string only at\n\t  // compositionevent, otherwise extract it at fallback events.\n\t  if (currentComposition) {\n\t    if (topLevelType === topLevelTypes.topCompositionEnd || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n\t      var chars = currentComposition.getData();\n\t      FallbackCompositionState.release(currentComposition);\n\t      currentComposition = null;\n\t      return chars;\n\t    }\n\t    return null;\n\t  }\n\t\n\t  switch (topLevelType) {\n\t    case topLevelTypes.topPaste:\n\t      // If a paste event occurs after a keypress, throw out the input\n\t      // chars. Paste events should not lead to BeforeInput events.\n\t      return null;\n\t    case topLevelTypes.topKeyPress:\n\t      /**\n\t       * As of v27, Firefox may fire keypress events even when no character\n\t       * will be inserted. A few possibilities:\n\t       *\n\t       * - `which` is `0`. Arrow keys, Esc key, etc.\n\t       *\n\t       * - `which` is the pressed key code, but no char is available.\n\t       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n\t       *   this key combination and no character is inserted into the\n\t       *   document, but FF fires the keypress for char code `100` anyway.\n\t       *   No `input` event will occur.\n\t       *\n\t       * - `which` is the pressed key code, but a command combination is\n\t       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n\t       *   `input` event will occur.\n\t       */\n\t      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n\t        return String.fromCharCode(nativeEvent.which);\n\t      }\n\t      return null;\n\t    case topLevelTypes.topCompositionEnd:\n\t      return useFallbackCompositionData ? null : nativeEvent.data;\n\t    default:\n\t      return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n\t * `textInput` or fallback behavior.\n\t *\n\t * @return {?object} A SyntheticInputEvent.\n\t */\n\tfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t  var chars;\n\t\n\t  if (canUseTextInputEvent) {\n\t    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n\t  } else {\n\t    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n\t  }\n\t\n\t  // If no characters are being inserted, no BeforeInput event should\n\t  // be fired.\n\t  if (!chars) {\n\t    return null;\n\t  }\n\t\n\t  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n\t\n\t  event.data = chars;\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t  return event;\n\t}\n\t\n\t/**\n\t * Create an `onBeforeInput` event to match\n\t * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n\t *\n\t * This event plugin is based on the native `textInput` event\n\t * available in Chrome, Safari, Opera, and IE. This event fires after\n\t * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n\t *\n\t * `beforeInput` is spec'd but not implemented in any browsers, and\n\t * the `input` event does not provide any useful information about what has\n\t * actually been added, contrary to the spec. Thus, `textInput` is the best\n\t * available event to identify the characters that have actually been inserted\n\t * into the target node.\n\t *\n\t * This plugin is also responsible for emitting `composition` events, thus\n\t * allowing us to share composition fallback code for both `beforeInput` and\n\t * `composition` event types.\n\t */\n\tvar BeforeInputEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];\n\t  }\n\t};\n\t\n\tmodule.exports = BeforeInputEventPlugin;\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule CSSPropertyOperations\n\t */\n\t\n\t'use strict';\n\t\n\tvar CSSProperty = __webpack_require__(58);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\t\n\tvar camelizeStyleName = __webpack_require__(166);\n\tvar dangerousStyleValue = __webpack_require__(156);\n\tvar hyphenateStyleName = __webpack_require__(173);\n\tvar memoizeStringOnly = __webpack_require__(176);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar processStyleName = memoizeStringOnly(function (styleName) {\n\t  return hyphenateStyleName(styleName);\n\t});\n\t\n\tvar hasShorthandPropertyBug = false;\n\tvar styleFloatAccessor = 'cssFloat';\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  var tempStyle = document.createElement('div').style;\n\t  try {\n\t    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n\t    tempStyle.font = '';\n\t  } catch (e) {\n\t    hasShorthandPropertyBug = true;\n\t  }\n\t  // IE8 only supports accessing cssFloat (standard) as styleFloat\n\t  if (document.documentElement.style.cssFloat === undefined) {\n\t    styleFloatAccessor = 'styleFloat';\n\t  }\n\t}\n\t\n\tif (false) {\n\t  // 'msTransform' is correct, but the other prefixes should be capitalized\n\t  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\t\n\t  // style values shouldn't contain a semicolon\n\t  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\t\n\t  var warnedStyleNames = {};\n\t  var warnedStyleValues = {};\n\t  var warnedForNaNValue = false;\n\t\n\t  var warnHyphenatedStyleName = function (name, owner) {\n\t    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleNames[name] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n\t  };\n\t\n\t  var warnBadVendoredStyleName = function (name, owner) {\n\t    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleNames[name] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n\t  };\n\t\n\t  var warnStyleValueWithSemicolon = function (name, value, owner) {\n\t    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleValues[value] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n\t  };\n\t\n\t  var warnStyleValueIsNaN = function (name, value, owner) {\n\t    if (warnedForNaNValue) {\n\t      return;\n\t    }\n\t\n\t    warnedForNaNValue = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n\t  };\n\t\n\t  var checkRenderMessage = function (owner) {\n\t    if (owner) {\n\t      var name = owner.getName();\n\t      if (name) {\n\t        return ' Check the render method of `' + name + '`.';\n\t      }\n\t    }\n\t    return '';\n\t  };\n\t\n\t  /**\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @param {ReactDOMComponent} component\n\t   */\n\t  var warnValidStyle = function (name, value, component) {\n\t    var owner;\n\t    if (component) {\n\t      owner = component._currentElement._owner;\n\t    }\n\t    if (name.indexOf('-') > -1) {\n\t      warnHyphenatedStyleName(name, owner);\n\t    } else if (badVendoredStyleNamePattern.test(name)) {\n\t      warnBadVendoredStyleName(name, owner);\n\t    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n\t      warnStyleValueWithSemicolon(name, value, owner);\n\t    }\n\t\n\t    if (typeof value === 'number' && isNaN(value)) {\n\t      warnStyleValueIsNaN(name, value, owner);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Operations for dealing with CSS properties.\n\t */\n\tvar CSSPropertyOperations = {\n\t\n\t  /**\n\t   * Serializes a mapping of style properties for use as inline styles:\n\t   *\n\t   *   > createMarkupForStyles({width: '200px', height: 0})\n\t   *   \"width:200px;height:0;\"\n\t   *\n\t   * Undefined values are ignored so that declarative programming is easier.\n\t   * The result should be HTML-escaped before insertion into the DOM.\n\t   *\n\t   * @param {object} styles\n\t   * @param {ReactDOMComponent} component\n\t   * @return {?string}\n\t   */\n\t  createMarkupForStyles: function (styles, component) {\n\t    var serialized = '';\n\t    for (var styleName in styles) {\n\t      if (!styles.hasOwnProperty(styleName)) {\n\t        continue;\n\t      }\n\t      var styleValue = styles[styleName];\n\t      if (false) {\n\t        warnValidStyle(styleName, styleValue, component);\n\t      }\n\t      if (styleValue != null) {\n\t        serialized += processStyleName(styleName) + ':';\n\t        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n\t      }\n\t    }\n\t    return serialized || null;\n\t  },\n\t\n\t  /**\n\t   * Sets the value for multiple styles on a node.  If a value is specified as\n\t   * '' (empty string), the corresponding style property will be unset.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {object} styles\n\t   * @param {ReactDOMComponent} component\n\t   */\n\t  setValueForStyles: function (node, styles, component) {\n\t    if (false) {\n\t      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);\n\t    }\n\t\n\t    var style = node.style;\n\t    for (var styleName in styles) {\n\t      if (!styles.hasOwnProperty(styleName)) {\n\t        continue;\n\t      }\n\t      if (false) {\n\t        warnValidStyle(styleName, styles[styleName], component);\n\t      }\n\t      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\n\t      if (styleName === 'float' || styleName === 'cssFloat') {\n\t        styleName = styleFloatAccessor;\n\t      }\n\t      if (styleValue) {\n\t        style[styleName] = styleValue;\n\t      } else {\n\t        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n\t        if (expansion) {\n\t          // Shorthand property that IE8 won't like unsetting, so unset each\n\t          // component to placate it\n\t          for (var individualStyleName in expansion) {\n\t            style[individualStyleName] = '';\n\t          }\n\t        } else {\n\t          style[styleName] = '';\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = CSSPropertyOperations;\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ChangeEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPluginHub = __webpack_require__(19);\n\tvar EventPropagators = __webpack_require__(20);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\tvar getEventTarget = __webpack_require__(51);\n\tvar isEventSupported = __webpack_require__(52);\n\tvar isTextInputElement = __webpack_require__(82);\n\tvar keyOf = __webpack_require__(15);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tvar eventTypes = {\n\t  change: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onChange: null }),\n\t      captured: keyOf({ onChangeCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]\n\t  }\n\t};\n\t\n\t/**\n\t * For IE shims\n\t */\n\tvar activeElement = null;\n\tvar activeElementInst = null;\n\tvar activeElementValue = null;\n\tvar activeElementValueProp = null;\n\t\n\t/**\n\t * SECTION: handle `change` event\n\t */\n\tfunction shouldUseChangeEvent(elem) {\n\t  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n\t  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n\t}\n\t\n\tvar doesChangeEventBubble = false;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // See `handleChange` comment below\n\t  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);\n\t}\n\t\n\tfunction manualDispatchChangeEvent(nativeEvent) {\n\t  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t\n\t  // If change and propertychange bubbled, we'd just bind to it like all the\n\t  // other events and have it go through ReactBrowserEventEmitter. Since it\n\t  // doesn't, we manually listen for the events and so we have to enqueue and\n\t  // process the abstract event manually.\n\t  //\n\t  // Batching is necessary here in order to ensure that all event handlers run\n\t  // before the next rerender (including event handlers attached to ancestor\n\t  // elements instead of directly on the input). Without this, controlled\n\t  // components don't work properly in conjunction with event bubbling because\n\t  // the component is rerendered and the value reverted before all the event\n\t  // handlers can run. See https://github.com/facebook/react/issues/708.\n\t  ReactUpdates.batchedUpdates(runEventInBatch, event);\n\t}\n\t\n\tfunction runEventInBatch(event) {\n\t  EventPluginHub.enqueueEvents(event);\n\t  EventPluginHub.processEventQueue(false);\n\t}\n\t\n\tfunction startWatchingForChangeEventIE8(target, targetInst) {\n\t  activeElement = target;\n\t  activeElementInst = targetInst;\n\t  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n\t}\n\t\n\tfunction stopWatchingForChangeEventIE8() {\n\t  if (!activeElement) {\n\t    return;\n\t  }\n\t  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n\t  activeElement = null;\n\t  activeElementInst = null;\n\t}\n\t\n\tfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n\t  if (topLevelType === topLevelTypes.topChange) {\n\t    return targetInst;\n\t  }\n\t}\n\tfunction handleEventsForChangeEventIE8(topLevelType, target, targetInst) {\n\t  if (topLevelType === topLevelTypes.topFocus) {\n\t    // stopWatching() should be a noop here but we call it just in case we\n\t    // missed a blur event somehow.\n\t    stopWatchingForChangeEventIE8();\n\t    startWatchingForChangeEventIE8(target, targetInst);\n\t  } else if (topLevelType === topLevelTypes.topBlur) {\n\t    stopWatchingForChangeEventIE8();\n\t  }\n\t}\n\t\n\t/**\n\t * SECTION: handle `input` event\n\t */\n\tvar isInputEventSupported = false;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // IE9 claims to support the input event but fails to trigger it when\n\t  // deleting text, so we ignore its input events.\n\t  // IE10+ fire input events to often, such when a placeholder\n\t  // changes or when an input with a placeholder is focused.\n\t  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);\n\t}\n\t\n\t/**\n\t * (For IE <=11) Replacement getter/setter for the `value` property that gets\n\t * set on the active element.\n\t */\n\tvar newValueProp = {\n\t  get: function () {\n\t    return activeElementValueProp.get.call(this);\n\t  },\n\t  set: function (val) {\n\t    // Cast to a string so we can do equality checks.\n\t    activeElementValue = '' + val;\n\t    activeElementValueProp.set.call(this, val);\n\t  }\n\t};\n\t\n\t/**\n\t * (For IE <=11) Starts tracking propertychange events on the passed-in element\n\t * and override the value property so that we can distinguish user events from\n\t * value changes in JS.\n\t */\n\tfunction startWatchingForValueChange(target, targetInst) {\n\t  activeElement = target;\n\t  activeElementInst = targetInst;\n\t  activeElementValue = target.value;\n\t  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\t\n\t  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n\t  // on DOM elements\n\t  Object.defineProperty(activeElement, 'value', newValueProp);\n\t  if (activeElement.attachEvent) {\n\t    activeElement.attachEvent('onpropertychange', handlePropertyChange);\n\t  } else {\n\t    activeElement.addEventListener('propertychange', handlePropertyChange, false);\n\t  }\n\t}\n\t\n\t/**\n\t * (For IE <=11) Removes the event listeners from the currently-tracked element,\n\t * if any exists.\n\t */\n\tfunction stopWatchingForValueChange() {\n\t  if (!activeElement) {\n\t    return;\n\t  }\n\t\n\t  // delete restores the original property definition\n\t  delete activeElement.value;\n\t\n\t  if (activeElement.detachEvent) {\n\t    activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\t  } else {\n\t    activeElement.removeEventListener('propertychange', handlePropertyChange, false);\n\t  }\n\t\n\t  activeElement = null;\n\t  activeElementInst = null;\n\t  activeElementValue = null;\n\t  activeElementValueProp = null;\n\t}\n\t\n\t/**\n\t * (For IE <=11) Handles a propertychange event, sending a `change` event if\n\t * the value of the active element has changed.\n\t */\n\tfunction handlePropertyChange(nativeEvent) {\n\t  if (nativeEvent.propertyName !== 'value') {\n\t    return;\n\t  }\n\t  var value = nativeEvent.srcElement.value;\n\t  if (value === activeElementValue) {\n\t    return;\n\t  }\n\t  activeElementValue = value;\n\t\n\t  manualDispatchChangeEvent(nativeEvent);\n\t}\n\t\n\t/**\n\t * If a `change` event should be fired, returns the target's ID.\n\t */\n\tfunction getTargetInstForInputEvent(topLevelType, targetInst) {\n\t  if (topLevelType === topLevelTypes.topInput) {\n\t    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n\t    // what we want so fall through here and trigger an abstract event\n\t    return targetInst;\n\t  }\n\t}\n\t\n\tfunction handleEventsForInputEventIE(topLevelType, target, targetInst) {\n\t  if (topLevelType === topLevelTypes.topFocus) {\n\t    // In IE8, we can capture almost all .value changes by adding a\n\t    // propertychange handler and looking for events with propertyName\n\t    // equal to 'value'\n\t    // In IE9-11, propertychange fires for most input events but is buggy and\n\t    // doesn't fire when text is deleted, but conveniently, selectionchange\n\t    // appears to fire in all of the remaining cases so we catch those and\n\t    // forward the event if the value has changed\n\t    // In either case, we don't want to call the event handler if the value\n\t    // is changed from JS so we redefine a setter for `.value` that updates\n\t    // our activeElementValue variable, allowing us to ignore those changes\n\t    //\n\t    // stopWatching() should be a noop here but we call it just in case we\n\t    // missed a blur event somehow.\n\t    stopWatchingForValueChange();\n\t    startWatchingForValueChange(target, targetInst);\n\t  } else if (topLevelType === topLevelTypes.topBlur) {\n\t    stopWatchingForValueChange();\n\t  }\n\t}\n\t\n\t// For IE8 and IE9.\n\tfunction getTargetInstForInputEventIE(topLevelType, targetInst) {\n\t  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {\n\t    // On the selectionchange event, the target is just document which isn't\n\t    // helpful for us so just check activeElement instead.\n\t    //\n\t    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n\t    // propertychange on the first input event after setting `value` from a\n\t    // script and fires only keydown, keypress, keyup. Catching keyup usually\n\t    // gets it and catching keydown lets us fire an event for the first\n\t    // keystroke if user does a key repeat (it'll be a little delayed: right\n\t    // before the second keystroke). Other input methods (e.g., paste) seem to\n\t    // fire selectionchange normally.\n\t    if (activeElement && activeElement.value !== activeElementValue) {\n\t      activeElementValue = activeElement.value;\n\t      return activeElementInst;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * SECTION: handle `click` event\n\t */\n\tfunction shouldUseClickEvent(elem) {\n\t  // Use the `click` event to detect changes to checkbox and radio inputs.\n\t  // This approach works across all browsers, whereas `change` does not fire\n\t  // until `blur` in IE8.\n\t  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n\t}\n\t\n\tfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n\t  if (topLevelType === topLevelTypes.topClick) {\n\t    return targetInst;\n\t  }\n\t}\n\t\n\t/**\n\t * This plugin creates an `onChange` event that normalizes change events\n\t * across form elements. This event fires at a time when it's possible to\n\t * change the element's value without seeing a flicker.\n\t *\n\t * Supported elements are:\n\t * - input (see `isTextInputElement`)\n\t * - textarea\n\t * - select\n\t */\n\tvar ChangeEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\t\n\t    var getTargetInstFunc, handleEventFunc;\n\t    if (shouldUseChangeEvent(targetNode)) {\n\t      if (doesChangeEventBubble) {\n\t        getTargetInstFunc = getTargetInstForChangeEvent;\n\t      } else {\n\t        handleEventFunc = handleEventsForChangeEventIE8;\n\t      }\n\t    } else if (isTextInputElement(targetNode)) {\n\t      if (isInputEventSupported) {\n\t        getTargetInstFunc = getTargetInstForInputEvent;\n\t      } else {\n\t        getTargetInstFunc = getTargetInstForInputEventIE;\n\t        handleEventFunc = handleEventsForInputEventIE;\n\t      }\n\t    } else if (shouldUseClickEvent(targetNode)) {\n\t      getTargetInstFunc = getTargetInstForClickEvent;\n\t    }\n\t\n\t    if (getTargetInstFunc) {\n\t      var inst = getTargetInstFunc(topLevelType, targetInst);\n\t      if (inst) {\n\t        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);\n\t        event.type = 'change';\n\t        EventPropagators.accumulateTwoPhaseDispatches(event);\n\t        return event;\n\t      }\n\t    }\n\t\n\t    if (handleEventFunc) {\n\t      handleEventFunc(topLevelType, targetNode, targetInst);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ChangeEventPlugin;\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule Danger\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar DOMLazyTree = __webpack_require__(16);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar createNodesFromMarkup = __webpack_require__(169);\n\tvar emptyFunction = __webpack_require__(8);\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar Danger = {\n\t\n\t  /**\n\t   * Replaces a node with a string of markup at its current position within its\n\t   * parent. The markup must render into a single root node.\n\t   *\n\t   * @param {DOMElement} oldChild Child node to replace.\n\t   * @param {string} markup Markup to render in place of the child node.\n\t   * @internal\n\t   */\n\t  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n\t    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;\n\t    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;\n\t    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;\n\t\n\t    if (typeof markup === 'string') {\n\t      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n\t      oldChild.parentNode.replaceChild(newChild, oldChild);\n\t    } else {\n\t      DOMLazyTree.replaceChildWithTree(oldChild, markup);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = Danger;\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DefaultEventPluginOrder\n\t */\n\t\n\t'use strict';\n\t\n\tvar keyOf = __webpack_require__(15);\n\t\n\t/**\n\t * Module that is injectable into `EventPluginHub`, that specifies a\n\t * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n\t * plugins, without having to package every one of them. This is better than\n\t * having plugins be ordered in the same order that they are injected because\n\t * that ordering would be influenced by the packaging order.\n\t * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n\t * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n\t */\n\tvar DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];\n\t\n\tmodule.exports = DefaultEventPluginOrder;\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EnterLeaveEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPropagators = __webpack_require__(20);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar SyntheticMouseEvent = __webpack_require__(27);\n\t\n\tvar keyOf = __webpack_require__(15);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tvar eventTypes = {\n\t  mouseEnter: {\n\t    registrationName: keyOf({ onMouseEnter: null }),\n\t    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n\t  },\n\t  mouseLeave: {\n\t    registrationName: keyOf({ onMouseLeave: null }),\n\t    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n\t  }\n\t};\n\t\n\tvar EnterLeaveEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  /**\n\t   * For almost every interaction we care about, there will be both a top-level\n\t   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n\t   * we do not extract duplicate events. However, moving the mouse into the\n\t   * browser from outside will not fire a `mouseout` event. In this case, we use\n\t   * the `mouseover` top-level event.\n\t   */\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n\t      return null;\n\t    }\n\t    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\n\t      // Must not be a mouse in or mouse out - ignoring.\n\t      return null;\n\t    }\n\t\n\t    var win;\n\t    if (nativeEventTarget.window === nativeEventTarget) {\n\t      // `nativeEventTarget` is probably a window object.\n\t      win = nativeEventTarget;\n\t    } else {\n\t      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n\t      var doc = nativeEventTarget.ownerDocument;\n\t      if (doc) {\n\t        win = doc.defaultView || doc.parentWindow;\n\t      } else {\n\t        win = window;\n\t      }\n\t    }\n\t\n\t    var from;\n\t    var to;\n\t    if (topLevelType === topLevelTypes.topMouseOut) {\n\t      from = targetInst;\n\t      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n\t      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n\t    } else {\n\t      // Moving to a node from outside the window.\n\t      from = null;\n\t      to = targetInst;\n\t    }\n\t\n\t    if (from === to) {\n\t      // Nothing pertains to our managed components.\n\t      return null;\n\t    }\n\t\n\t    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n\t    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n\t\n\t    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n\t    leave.type = 'mouseleave';\n\t    leave.target = fromNode;\n\t    leave.relatedTarget = toNode;\n\t\n\t    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n\t    enter.type = 'mouseenter';\n\t    enter.target = toNode;\n\t    enter.relatedTarget = fromNode;\n\t\n\t    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n\t\n\t    return [leave, enter];\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EnterLeaveEventPlugin;\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule FallbackCompositionState\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar PooledClass = __webpack_require__(13);\n\t\n\tvar getTextContentAccessor = __webpack_require__(80);\n\t\n\t/**\n\t * This helper class stores information about text content of a target node,\n\t * allowing comparison of content before and after a given event.\n\t *\n\t * Identify the node where selection currently begins, then observe\n\t * both its text content and its current position in the DOM. Since the\n\t * browser may natively replace the target node during composition, we can\n\t * use its position to find its replacement.\n\t *\n\t * @param {DOMEventTarget} root\n\t */\n\tfunction FallbackCompositionState(root) {\n\t  this._root = root;\n\t  this._startText = this.getText();\n\t  this._fallbackText = null;\n\t}\n\t\n\t_assign(FallbackCompositionState.prototype, {\n\t  destructor: function () {\n\t    this._root = null;\n\t    this._startText = null;\n\t    this._fallbackText = null;\n\t  },\n\t\n\t  /**\n\t   * Get current text of input.\n\t   *\n\t   * @return {string}\n\t   */\n\t  getText: function () {\n\t    if ('value' in this._root) {\n\t      return this._root.value;\n\t    }\n\t    return this._root[getTextContentAccessor()];\n\t  },\n\t\n\t  /**\n\t   * Determine the differing substring between the initially stored\n\t   * text content and the current content.\n\t   *\n\t   * @return {string}\n\t   */\n\t  getData: function () {\n\t    if (this._fallbackText) {\n\t      return this._fallbackText;\n\t    }\n\t\n\t    var start;\n\t    var startValue = this._startText;\n\t    var startLength = startValue.length;\n\t    var end;\n\t    var endValue = this.getText();\n\t    var endLength = endValue.length;\n\t\n\t    for (start = 0; start < startLength; start++) {\n\t      if (startValue[start] !== endValue[start]) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    var minEnd = startLength - start;\n\t    for (end = 1; end <= minEnd; end++) {\n\t      if (startValue[startLength - end] !== endValue[endLength - end]) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    var sliceTail = end > 1 ? 1 - end : undefined;\n\t    this._fallbackText = endValue.slice(start, sliceTail);\n\t    return this._fallbackText;\n\t  }\n\t});\n\t\n\tPooledClass.addPoolingTo(FallbackCompositionState);\n\t\n\tmodule.exports = FallbackCompositionState;\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule HTMLDOMPropertyConfig\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\t\n\tvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\n\tvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\n\tvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\n\tvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\n\tvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\t\n\tvar HTMLDOMPropertyConfig = {\n\t  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),\n\t  Properties: {\n\t    /**\n\t     * Standard Properties\n\t     */\n\t    accept: 0,\n\t    acceptCharset: 0,\n\t    accessKey: 0,\n\t    action: 0,\n\t    allowFullScreen: HAS_BOOLEAN_VALUE,\n\t    allowTransparency: 0,\n\t    alt: 0,\n\t    // specifies target context for links with `preload` type\n\t    as: 0,\n\t    async: HAS_BOOLEAN_VALUE,\n\t    autoComplete: 0,\n\t    // autoFocus is polyfilled/normalized by AutoFocusUtils\n\t    // autoFocus: HAS_BOOLEAN_VALUE,\n\t    autoPlay: HAS_BOOLEAN_VALUE,\n\t    capture: HAS_BOOLEAN_VALUE,\n\t    cellPadding: 0,\n\t    cellSpacing: 0,\n\t    charSet: 0,\n\t    challenge: 0,\n\t    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    cite: 0,\n\t    classID: 0,\n\t    className: 0,\n\t    cols: HAS_POSITIVE_NUMERIC_VALUE,\n\t    colSpan: 0,\n\t    content: 0,\n\t    contentEditable: 0,\n\t    contextMenu: 0,\n\t    controls: HAS_BOOLEAN_VALUE,\n\t    coords: 0,\n\t    crossOrigin: 0,\n\t    data: 0, // For `<object />` acts as `src`.\n\t    dateTime: 0,\n\t    'default': HAS_BOOLEAN_VALUE,\n\t    defer: HAS_BOOLEAN_VALUE,\n\t    dir: 0,\n\t    disabled: HAS_BOOLEAN_VALUE,\n\t    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n\t    draggable: 0,\n\t    encType: 0,\n\t    form: 0,\n\t    formAction: 0,\n\t    formEncType: 0,\n\t    formMethod: 0,\n\t    formNoValidate: HAS_BOOLEAN_VALUE,\n\t    formTarget: 0,\n\t    frameBorder: 0,\n\t    headers: 0,\n\t    height: 0,\n\t    hidden: HAS_BOOLEAN_VALUE,\n\t    high: 0,\n\t    href: 0,\n\t    hrefLang: 0,\n\t    htmlFor: 0,\n\t    httpEquiv: 0,\n\t    icon: 0,\n\t    id: 0,\n\t    inputMode: 0,\n\t    integrity: 0,\n\t    is: 0,\n\t    keyParams: 0,\n\t    keyType: 0,\n\t    kind: 0,\n\t    label: 0,\n\t    lang: 0,\n\t    list: 0,\n\t    loop: HAS_BOOLEAN_VALUE,\n\t    low: 0,\n\t    manifest: 0,\n\t    marginHeight: 0,\n\t    marginWidth: 0,\n\t    max: 0,\n\t    maxLength: 0,\n\t    media: 0,\n\t    mediaGroup: 0,\n\t    method: 0,\n\t    min: 0,\n\t    minLength: 0,\n\t    // Caution; `option.selected` is not updated if `select.multiple` is\n\t    // disabled with `removeAttribute`.\n\t    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    name: 0,\n\t    nonce: 0,\n\t    noValidate: HAS_BOOLEAN_VALUE,\n\t    open: HAS_BOOLEAN_VALUE,\n\t    optimum: 0,\n\t    pattern: 0,\n\t    placeholder: 0,\n\t    playsInline: HAS_BOOLEAN_VALUE,\n\t    poster: 0,\n\t    preload: 0,\n\t    profile: 0,\n\t    radioGroup: 0,\n\t    readOnly: HAS_BOOLEAN_VALUE,\n\t    referrerPolicy: 0,\n\t    rel: 0,\n\t    required: HAS_BOOLEAN_VALUE,\n\t    reversed: HAS_BOOLEAN_VALUE,\n\t    role: 0,\n\t    rows: HAS_POSITIVE_NUMERIC_VALUE,\n\t    rowSpan: HAS_NUMERIC_VALUE,\n\t    sandbox: 0,\n\t    scope: 0,\n\t    scoped: HAS_BOOLEAN_VALUE,\n\t    scrolling: 0,\n\t    seamless: HAS_BOOLEAN_VALUE,\n\t    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    shape: 0,\n\t    size: HAS_POSITIVE_NUMERIC_VALUE,\n\t    sizes: 0,\n\t    span: HAS_POSITIVE_NUMERIC_VALUE,\n\t    spellCheck: 0,\n\t    src: 0,\n\t    srcDoc: 0,\n\t    srcLang: 0,\n\t    srcSet: 0,\n\t    start: HAS_NUMERIC_VALUE,\n\t    step: 0,\n\t    style: 0,\n\t    summary: 0,\n\t    tabIndex: 0,\n\t    target: 0,\n\t    title: 0,\n\t    // Setting .type throws on non-<input> tags\n\t    type: 0,\n\t    useMap: 0,\n\t    value: 0,\n\t    width: 0,\n\t    wmode: 0,\n\t    wrap: 0,\n\t\n\t    /**\n\t     * RDFa Properties\n\t     */\n\t    about: 0,\n\t    datatype: 0,\n\t    inlist: 0,\n\t    prefix: 0,\n\t    // property is also supported for OpenGraph in meta tags.\n\t    property: 0,\n\t    resource: 0,\n\t    'typeof': 0,\n\t    vocab: 0,\n\t\n\t    /**\n\t     * Non-standard Properties\n\t     */\n\t    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n\t    // keyboard hints.\n\t    autoCapitalize: 0,\n\t    autoCorrect: 0,\n\t    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n\t    autoSave: 0,\n\t    // color is for Safari mask-icon link\n\t    color: 0,\n\t    // itemProp, itemScope, itemType are for\n\t    // Microdata support. See http://schema.org/docs/gs.html\n\t    itemProp: 0,\n\t    itemScope: HAS_BOOLEAN_VALUE,\n\t    itemType: 0,\n\t    // itemID and itemRef are for Microdata support as well but\n\t    // only specified in the WHATWG spec document. See\n\t    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n\t    itemID: 0,\n\t    itemRef: 0,\n\t    // results show looking glass icon and recent searches on input\n\t    // search fields in WebKit/Blink\n\t    results: 0,\n\t    // IE-only attribute that specifies security restrictions on an iframe\n\t    // as an alternative to the sandbox attribute on IE<10\n\t    security: 0,\n\t    // IE-only attribute that controls focus behavior\n\t    unselectable: 0\n\t  },\n\t  DOMAttributeNames: {\n\t    acceptCharset: 'accept-charset',\n\t    className: 'class',\n\t    htmlFor: 'for',\n\t    httpEquiv: 'http-equiv'\n\t  },\n\t  DOMPropertyNames: {}\n\t};\n\t\n\tmodule.exports = HTMLDOMPropertyConfig;\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule React\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactChildren = __webpack_require__(61);\n\tvar ReactComponent = __webpack_require__(39);\n\tvar ReactPureComponent = __webpack_require__(136);\n\tvar ReactClass = __webpack_require__(62);\n\tvar ReactDOMFactories = __webpack_require__(119);\n\tvar ReactElement = __webpack_require__(9);\n\tvar ReactPropTypes = __webpack_require__(72);\n\tvar ReactVersion = __webpack_require__(73);\n\t\n\tvar onlyChild = __webpack_require__(162);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar createElement = ReactElement.createElement;\n\tvar createFactory = ReactElement.createFactory;\n\tvar cloneElement = ReactElement.cloneElement;\n\t\n\tif (false) {\n\t  var ReactElementValidator = require('./ReactElementValidator');\n\t  createElement = ReactElementValidator.createElement;\n\t  createFactory = ReactElementValidator.createFactory;\n\t  cloneElement = ReactElementValidator.cloneElement;\n\t}\n\t\n\tvar __spread = _assign;\n\t\n\tif (false) {\n\t  var warned = false;\n\t  __spread = function () {\n\t    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;\n\t    warned = true;\n\t    return _assign.apply(null, arguments);\n\t  };\n\t}\n\t\n\tvar React = {\n\t\n\t  // Modern\n\t\n\t  Children: {\n\t    map: ReactChildren.map,\n\t    forEach: ReactChildren.forEach,\n\t    count: ReactChildren.count,\n\t    toArray: ReactChildren.toArray,\n\t    only: onlyChild\n\t  },\n\t\n\t  Component: ReactComponent,\n\t  PureComponent: ReactPureComponent,\n\t\n\t  createElement: createElement,\n\t  cloneElement: cloneElement,\n\t  isValidElement: ReactElement.isValidElement,\n\t\n\t  // Classic\n\t\n\t  PropTypes: ReactPropTypes,\n\t  createClass: ReactClass.createClass,\n\t  createFactory: createFactory,\n\t  createMixin: function (mixin) {\n\t    // Currently a noop. Will be used to validate and trace mixins.\n\t    return mixin;\n\t  },\n\t\n\t  // This looks DOM specific but these are actually isomorphic helpers\n\t  // since they are just generating DOM strings.\n\t  DOM: ReactDOMFactories,\n\t\n\t  version: ReactVersion,\n\t\n\t  // Deprecated hook for JSX spread, don't use this for anything.\n\t  __spread: __spread\n\t};\n\t\n\tmodule.exports = React;\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactChildReconciler\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactReconciler = __webpack_require__(18);\n\t\n\tvar instantiateReactComponent = __webpack_require__(81);\n\tvar KeyEscapeUtils = __webpack_require__(37);\n\tvar shouldUpdateReactComponent = __webpack_require__(53);\n\tvar traverseAllChildren = __webpack_require__(54);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar ReactComponentTreeHook;\n\t\n\tif (typeof process !== 'undefined' && ({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"/site\"}) && (\"production\") === 'test') {\n\t  // Temporary hack.\n\t  // Inline requires don't work well with Jest:\n\t  // https://github.com/facebook/react/issues/7240\n\t  // Remove the inline requires when we don't need them anymore:\n\t  // https://github.com/facebook/react/pull/7178\n\t  ReactComponentTreeHook = __webpack_require__(41);\n\t}\n\t\n\tfunction instantiateChild(childInstances, child, name, selfDebugID) {\n\t  // We found a component instance.\n\t  var keyUnique = childInstances[name] === undefined;\n\t  if (false) {\n\t    if (!ReactComponentTreeHook) {\n\t      ReactComponentTreeHook = require('./ReactComponentTreeHook');\n\t    }\n\t    if (!keyUnique) {\n\t      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n\t    }\n\t  }\n\t  if (child != null && keyUnique) {\n\t    childInstances[name] = instantiateReactComponent(child, true);\n\t  }\n\t}\n\t\n\t/**\n\t * ReactChildReconciler provides helpers for initializing or updating a set of\n\t * children. Its output is suitable for passing it onto ReactMultiChild which\n\t * does diffed reordering and insertion.\n\t */\n\tvar ReactChildReconciler = {\n\t  /**\n\t   * Generates a \"mount image\" for each of the supplied children. In the case\n\t   * of `ReactDOMComponent`, a mount image is a string of markup.\n\t   *\n\t   * @param {?object} nestedChildNodes Nested child maps.\n\t   * @return {?object} A set of child instances.\n\t   * @internal\n\t   */\n\t  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots\n\t  ) {\n\t    if (nestedChildNodes == null) {\n\t      return null;\n\t    }\n\t    var childInstances = {};\n\t\n\t    if (false) {\n\t      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {\n\t        return instantiateChild(childInsts, child, name, selfDebugID);\n\t      }, childInstances);\n\t    } else {\n\t      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n\t    }\n\t    return childInstances;\n\t  },\n\t\n\t  /**\n\t   * Updates the rendered children and returns a new set of children.\n\t   *\n\t   * @param {?object} prevChildren Previously initialized set of children.\n\t   * @param {?object} nextChildren Flat child element maps.\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   * @return {?object} A new set of child instances.\n\t   * @internal\n\t   */\n\t  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots\n\t  ) {\n\t    // We currently don't have a way to track moves here but if we use iterators\n\t    // instead of for..in we can zip the iterators and check if an item has\n\t    // moved.\n\t    // TODO: If nothing has changed, return the prevChildren object so that we\n\t    // can quickly bailout if nothing has changed.\n\t    if (!nextChildren && !prevChildren) {\n\t      return;\n\t    }\n\t    var name;\n\t    var prevChild;\n\t    for (name in nextChildren) {\n\t      if (!nextChildren.hasOwnProperty(name)) {\n\t        continue;\n\t      }\n\t      prevChild = prevChildren && prevChildren[name];\n\t      var prevElement = prevChild && prevChild._currentElement;\n\t      var nextElement = nextChildren[name];\n\t      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n\t        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n\t        nextChildren[name] = prevChild;\n\t      } else {\n\t        if (prevChild) {\n\t          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n\t          ReactReconciler.unmountComponent(prevChild, false);\n\t        }\n\t        // The child must be instantiated before it's mounted.\n\t        var nextChildInstance = instantiateReactComponent(nextElement, true);\n\t        nextChildren[name] = nextChildInstance;\n\t        // Creating mount image now ensures refs are resolved in right order\n\t        // (see https://github.com/facebook/react/pull/7101 for explanation).\n\t        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);\n\t        mountImages.push(nextChildMountImage);\n\t      }\n\t    }\n\t    // Unmount children that are no longer present.\n\t    for (name in prevChildren) {\n\t      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n\t        prevChild = prevChildren[name];\n\t        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n\t        ReactReconciler.unmountComponent(prevChild, false);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unmounts all rendered children. This should be used to clean up children\n\t   * when this component is unmounted.\n\t   *\n\t   * @param {?object} renderedChildren Previously initialized set of children.\n\t   * @internal\n\t   */\n\t  unmountChildren: function (renderedChildren, safely) {\n\t    for (var name in renderedChildren) {\n\t      if (renderedChildren.hasOwnProperty(name)) {\n\t        var renderedChild = renderedChildren[name];\n\t        ReactReconciler.unmountComponent(renderedChild, safely);\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactChildReconciler;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactComponentBrowserEnvironment\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMChildrenOperations = __webpack_require__(33);\n\tvar ReactDOMIDOperations = __webpack_require__(121);\n\t\n\t/**\n\t * Abstracts away all functionality of the reconciler that requires knowledge of\n\t * the browser context. TODO: These callers should be refactored to avoid the\n\t * need for this injection.\n\t */\n\tvar ReactComponentBrowserEnvironment = {\n\t\n\t  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\t\n\t  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup\n\t\n\t};\n\t\n\tmodule.exports = ReactComponentBrowserEnvironment;\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactCompositeComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar ReactComponentEnvironment = __webpack_require__(40);\n\tvar ReactCurrentOwner = __webpack_require__(14);\n\tvar ReactElement = __webpack_require__(9);\n\tvar ReactErrorUtils = __webpack_require__(42);\n\tvar ReactInstanceMap = __webpack_require__(21);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar ReactNodeTypes = __webpack_require__(71);\n\tvar ReactPropTypeLocations = __webpack_require__(45);\n\tvar ReactReconciler = __webpack_require__(18);\n\t\n\tvar checkReactTypeSpec = __webpack_require__(155);\n\tvar emptyObject = __webpack_require__(24);\n\tvar invariant = __webpack_require__(1);\n\tvar shallowEqual = __webpack_require__(56);\n\tvar shouldUpdateReactComponent = __webpack_require__(53);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar CompositeTypes = {\n\t  ImpureClass: 0,\n\t  PureClass: 1,\n\t  StatelessFunctional: 2\n\t};\n\t\n\tfunction StatelessComponent(Component) {}\n\tStatelessComponent.prototype.render = function () {\n\t  var Component = ReactInstanceMap.get(this)._currentElement.type;\n\t  var element = Component(this.props, this.context, this.updater);\n\t  warnIfInvalidElement(Component, element);\n\t  return element;\n\t};\n\t\n\tfunction warnIfInvalidElement(Component, element) {\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n\t    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n\t  }\n\t}\n\t\n\tfunction shouldConstruct(Component) {\n\t  return !!(Component.prototype && Component.prototype.isReactComponent);\n\t}\n\t\n\tfunction isPureComponent(Component) {\n\t  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n\t}\n\t\n\t// Separated into a function to contain deoptimizations caused by try/finally.\n\tfunction measureLifeCyclePerf(fn, debugID, timerType) {\n\t  if (debugID === 0) {\n\t    // Top-level wrappers (see ReactMount) and empty components (see\n\t    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n\t    // Both are implementation details that should go away in the future.\n\t    return fn();\n\t  }\n\t\n\t  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n\t  try {\n\t    return fn();\n\t  } finally {\n\t    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n\t  }\n\t}\n\t\n\t/**\n\t * ------------------ The Life-Cycle of a Composite Component ------------------\n\t *\n\t * - constructor: Initialization of state. The instance is now retained.\n\t *   - componentWillMount\n\t *   - render\n\t *   - [children's constructors]\n\t *     - [children's componentWillMount and render]\n\t *     - [children's componentDidMount]\n\t *     - componentDidMount\n\t *\n\t *       Update Phases:\n\t *       - componentWillReceiveProps (only called if parent updated)\n\t *       - shouldComponentUpdate\n\t *         - componentWillUpdate\n\t *           - render\n\t *           - [children's constructors or receive props phases]\n\t *         - componentDidUpdate\n\t *\n\t *     - componentWillUnmount\n\t *     - [children's componentWillUnmount]\n\t *   - [children destroyed]\n\t * - (destroyed): The instance is now blank, released by React and ready for GC.\n\t *\n\t * -----------------------------------------------------------------------------\n\t */\n\t\n\t/**\n\t * An incrementing ID assigned to each component when it is mounted. This is\n\t * used to enforce the order in which `ReactUpdates` updates dirty components.\n\t *\n\t * @private\n\t */\n\tvar nextMountID = 1;\n\t\n\t/**\n\t * @lends {ReactCompositeComponent.prototype}\n\t */\n\tvar ReactCompositeComponentMixin = {\n\t\n\t  /**\n\t   * Base constructor for all composite component.\n\t   *\n\t   * @param {ReactElement} element\n\t   * @final\n\t   * @internal\n\t   */\n\t  construct: function (element) {\n\t    this._currentElement = element;\n\t    this._rootNodeID = 0;\n\t    this._compositeType = null;\n\t    this._instance = null;\n\t    this._hostParent = null;\n\t    this._hostContainerInfo = null;\n\t\n\t    // See ReactUpdateQueue\n\t    this._updateBatchNumber = null;\n\t    this._pendingElement = null;\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t\n\t    this._renderedNodeType = null;\n\t    this._renderedComponent = null;\n\t    this._context = null;\n\t    this._mountOrder = 0;\n\t    this._topLevelWrapper = null;\n\t\n\t    // See ReactUpdates and ReactUpdateQueue.\n\t    this._pendingCallbacks = null;\n\t\n\t    // ComponentWillUnmount shall only be called once\n\t    this._calledComponentWillUnmount = false;\n\t\n\t    if (false) {\n\t      this._warnedAboutRefsInRender = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Initializes the component, renders markup, and registers event listeners.\n\t   *\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {?object} hostParent\n\t   * @param {?object} hostContainerInfo\n\t   * @param {?object} context\n\t   * @return {?string} Rendered markup to be inserted into the DOM.\n\t   * @final\n\t   * @internal\n\t   */\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    var _this = this;\n\t\n\t    this._context = context;\n\t    this._mountOrder = nextMountID++;\n\t    this._hostParent = hostParent;\n\t    this._hostContainerInfo = hostContainerInfo;\n\t\n\t    var publicProps = this._currentElement.props;\n\t    var publicContext = this._processContext(context);\n\t\n\t    var Component = this._currentElement.type;\n\t\n\t    var updateQueue = transaction.getUpdateQueue();\n\t\n\t    // Initialize the public class\n\t    var doConstruct = shouldConstruct(Component);\n\t    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n\t    var renderedElement;\n\t\n\t    // Support functional components\n\t    if (!doConstruct && (inst == null || inst.render == null)) {\n\t      renderedElement = inst;\n\t      warnIfInvalidElement(Component, renderedElement);\n\t      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n\t      inst = new StatelessComponent(Component);\n\t      this._compositeType = CompositeTypes.StatelessFunctional;\n\t    } else {\n\t      if (isPureComponent(Component)) {\n\t        this._compositeType = CompositeTypes.PureClass;\n\t      } else {\n\t        this._compositeType = CompositeTypes.ImpureClass;\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      // This will throw later in _renderValidatedComponent, but add an early\n\t      // warning now to help debugging\n\t      if (inst.render == null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n\t      }\n\t\n\t      var propsMutated = inst.props !== publicProps;\n\t      var componentName = Component.displayName || Component.name || 'Component';\n\t\n\t      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\\'s constructor was passed.', componentName, componentName) : void 0;\n\t    }\n\t\n\t    // These should be set up in the constructor, but as a convenience for\n\t    // simpler class abstractions, we set them up after the fact.\n\t    inst.props = publicProps;\n\t    inst.context = publicContext;\n\t    inst.refs = emptyObject;\n\t    inst.updater = updateQueue;\n\t\n\t    this._instance = inst;\n\t\n\t    // Store a reference from the instance back to the internal representation\n\t    ReactInstanceMap.set(inst, this);\n\t\n\t    if (false) {\n\t      // Since plain JS classes are defined without any special initialization\n\t      // logic, we can not catch common errors early. Therefore, we have to\n\t      // catch them here, at initialization time, instead.\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n\t    }\n\t\n\t    var initialState = inst.state;\n\t    if (initialState === undefined) {\n\t      inst.state = initialState = null;\n\t    }\n\t    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t\n\t    var markup;\n\t    if (inst.unstable_handleError) {\n\t      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    } else {\n\t      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    }\n\t\n\t    if (inst.componentDidMount) {\n\t      if (false) {\n\t        transaction.getReactMountReady().enqueue(function () {\n\t          measureLifeCyclePerf(function () {\n\t            return inst.componentDidMount();\n\t          }, _this._debugID, 'componentDidMount');\n\t        });\n\t      } else {\n\t        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n\t      }\n\t    }\n\t\n\t    return markup;\n\t  },\n\t\n\t  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n\t    if (false) {\n\t      ReactCurrentOwner.current = this;\n\t      try {\n\t        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n\t      } finally {\n\t        ReactCurrentOwner.current = null;\n\t      }\n\t    } else {\n\t      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n\t    }\n\t  },\n\t\n\t  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n\t    var Component = this._currentElement.type;\n\t\n\t    if (doConstruct) {\n\t      if (false) {\n\t        return measureLifeCyclePerf(function () {\n\t          return new Component(publicProps, publicContext, updateQueue);\n\t        }, this._debugID, 'ctor');\n\t      } else {\n\t        return new Component(publicProps, publicContext, updateQueue);\n\t      }\n\t    }\n\t\n\t    // This can still be an instance in case of factory components\n\t    // but we'll count this as time spent rendering as the more common case.\n\t    if (false) {\n\t      return measureLifeCyclePerf(function () {\n\t        return Component(publicProps, publicContext, updateQueue);\n\t      }, this._debugID, 'render');\n\t    } else {\n\t      return Component(publicProps, publicContext, updateQueue);\n\t    }\n\t  },\n\t\n\t  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n\t    var markup;\n\t    var checkpoint = transaction.checkpoint();\n\t    try {\n\t      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    } catch (e) {\n\t      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n\t      transaction.rollback(checkpoint);\n\t      this._instance.unstable_handleError(e);\n\t      if (this._pendingStateQueue) {\n\t        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n\t      }\n\t      checkpoint = transaction.checkpoint();\n\t\n\t      this._renderedComponent.unmountComponent(true);\n\t      transaction.rollback(checkpoint);\n\t\n\t      // Try again - we've informed the component about the error, so they can render an error message this time.\n\t      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n\t      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n\t    }\n\t    return markup;\n\t  },\n\t\n\t  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n\t    var inst = this._instance;\n\t\n\t    var debugID = 0;\n\t    if (false) {\n\t      debugID = this._debugID;\n\t    }\n\t\n\t    if (inst.componentWillMount) {\n\t      if (false) {\n\t        measureLifeCyclePerf(function () {\n\t          return inst.componentWillMount();\n\t        }, debugID, 'componentWillMount');\n\t      } else {\n\t        inst.componentWillMount();\n\t      }\n\t      // When mounting, calls to `setState` by `componentWillMount` will set\n\t      // `this._pendingStateQueue` without triggering a re-render.\n\t      if (this._pendingStateQueue) {\n\t        inst.state = this._processPendingState(inst.props, inst.context);\n\t      }\n\t    }\n\t\n\t    // If not a stateless component, we now render\n\t    if (renderedElement === undefined) {\n\t      renderedElement = this._renderValidatedComponent();\n\t    }\n\t\n\t    var nodeType = ReactNodeTypes.getType(renderedElement);\n\t    this._renderedNodeType = nodeType;\n\t    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n\t    );\n\t    this._renderedComponent = child;\n\t\n\t    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\t\n\t    if (false) {\n\t      if (debugID !== 0) {\n\t        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n\t        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n\t      }\n\t    }\n\t\n\t    return markup;\n\t  },\n\t\n\t  getHostNode: function () {\n\t    return ReactReconciler.getHostNode(this._renderedComponent);\n\t  },\n\t\n\t  /**\n\t   * Releases any resources allocated by `mountComponent`.\n\t   *\n\t   * @final\n\t   * @internal\n\t   */\n\t  unmountComponent: function (safely) {\n\t    if (!this._renderedComponent) {\n\t      return;\n\t    }\n\t\n\t    var inst = this._instance;\n\t\n\t    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n\t      inst._calledComponentWillUnmount = true;\n\t\n\t      if (safely) {\n\t        var name = this.getName() + '.componentWillUnmount()';\n\t        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n\t      } else {\n\t        if (false) {\n\t          measureLifeCyclePerf(function () {\n\t            return inst.componentWillUnmount();\n\t          }, this._debugID, 'componentWillUnmount');\n\t        } else {\n\t          inst.componentWillUnmount();\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._renderedComponent) {\n\t      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n\t      this._renderedNodeType = null;\n\t      this._renderedComponent = null;\n\t      this._instance = null;\n\t    }\n\t\n\t    // Reset pending fields\n\t    // Even if this component is scheduled for another update in ReactUpdates,\n\t    // it would still be ignored because these fields are reset.\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t    this._pendingCallbacks = null;\n\t    this._pendingElement = null;\n\t\n\t    // These fields do not really need to be reset since this object is no\n\t    // longer accessible.\n\t    this._context = null;\n\t    this._rootNodeID = 0;\n\t    this._topLevelWrapper = null;\n\t\n\t    // Delete the reference from the instance to this internal representation\n\t    // which allow the internals to be properly cleaned up even if the user\n\t    // leaks a reference to the public instance.\n\t    ReactInstanceMap.remove(inst);\n\t\n\t    // Some existing components rely on inst.props even after they've been\n\t    // destroyed (in event handlers).\n\t    // TODO: inst.props = null;\n\t    // TODO: inst.state = null;\n\t    // TODO: inst.context = null;\n\t  },\n\t\n\t  /**\n\t   * Filters the context object to only contain keys specified in\n\t   * `contextTypes`\n\t   *\n\t   * @param {object} context\n\t   * @return {?object}\n\t   * @private\n\t   */\n\t  _maskContext: function (context) {\n\t    var Component = this._currentElement.type;\n\t    var contextTypes = Component.contextTypes;\n\t    if (!contextTypes) {\n\t      return emptyObject;\n\t    }\n\t    var maskedContext = {};\n\t    for (var contextName in contextTypes) {\n\t      maskedContext[contextName] = context[contextName];\n\t    }\n\t    return maskedContext;\n\t  },\n\t\n\t  /**\n\t   * Filters the context object to only contain keys specified in\n\t   * `contextTypes`, and asserts that they are valid.\n\t   *\n\t   * @param {object} context\n\t   * @return {?object}\n\t   * @private\n\t   */\n\t  _processContext: function (context) {\n\t    var maskedContext = this._maskContext(context);\n\t    if (false) {\n\t      var Component = this._currentElement.type;\n\t      if (Component.contextTypes) {\n\t        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);\n\t      }\n\t    }\n\t    return maskedContext;\n\t  },\n\t\n\t  /**\n\t   * @param {object} currentContext\n\t   * @return {object}\n\t   * @private\n\t   */\n\t  _processChildContext: function (currentContext) {\n\t    var Component = this._currentElement.type;\n\t    var inst = this._instance;\n\t    var childContext;\n\t\n\t    if (inst.getChildContext) {\n\t      if (false) {\n\t        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n\t        try {\n\t          childContext = inst.getChildContext();\n\t        } finally {\n\t          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n\t        }\n\t      } else {\n\t        childContext = inst.getChildContext();\n\t      }\n\t    }\n\t\n\t    if (childContext) {\n\t      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n\t      if (false) {\n\t        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);\n\t      }\n\t      for (var name in childContext) {\n\t        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n\t      }\n\t      return _assign({}, currentContext, childContext);\n\t    }\n\t    return currentContext;\n\t  },\n\t\n\t  /**\n\t   * Assert that the context types are valid\n\t   *\n\t   * @param {object} typeSpecs Map of context field to a ReactPropType\n\t   * @param {object} values Runtime values that need to be type-checked\n\t   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t   * @private\n\t   */\n\t  _checkContextTypes: function (typeSpecs, values, location) {\n\t    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n\t  },\n\t\n\t  receiveComponent: function (nextElement, transaction, nextContext) {\n\t    var prevElement = this._currentElement;\n\t    var prevContext = this._context;\n\t\n\t    this._pendingElement = null;\n\t\n\t    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n\t  },\n\t\n\t  /**\n\t   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n\t   * is set, update the component.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  performUpdateIfNecessary: function (transaction) {\n\t    if (this._pendingElement != null) {\n\t      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n\t    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n\t      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n\t    } else {\n\t      this._updateBatchNumber = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Perform an update to a mounted component. The componentWillReceiveProps and\n\t   * shouldComponentUpdate methods are called, then (assuming the update isn't\n\t   * skipped) the remaining update lifecycle methods are called and the DOM\n\t   * representation is updated.\n\t   *\n\t   * By default, this implements React's rendering and reconciliation algorithm.\n\t   * Sophisticated clients may wish to override this.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {ReactElement} prevParentElement\n\t   * @param {ReactElement} nextParentElement\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n\t    var inst = this._instance;\n\t    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    var willReceive = false;\n\t    var nextContext;\n\t\n\t    // Determine if the context has changed or not\n\t    if (this._context === nextUnmaskedContext) {\n\t      nextContext = inst.context;\n\t    } else {\n\t      nextContext = this._processContext(nextUnmaskedContext);\n\t      willReceive = true;\n\t    }\n\t\n\t    var prevProps = prevParentElement.props;\n\t    var nextProps = nextParentElement.props;\n\t\n\t    // Not a simple state update but a props update\n\t    if (prevParentElement !== nextParentElement) {\n\t      willReceive = true;\n\t    }\n\t\n\t    // An update here will schedule an update but immediately set\n\t    // _pendingStateQueue which will ensure that any state updates gets\n\t    // immediately reconciled instead of waiting for the next batch.\n\t    if (willReceive && inst.componentWillReceiveProps) {\n\t      if (false) {\n\t        measureLifeCyclePerf(function () {\n\t          return inst.componentWillReceiveProps(nextProps, nextContext);\n\t        }, this._debugID, 'componentWillReceiveProps');\n\t      } else {\n\t        inst.componentWillReceiveProps(nextProps, nextContext);\n\t      }\n\t    }\n\t\n\t    var nextState = this._processPendingState(nextProps, nextContext);\n\t    var shouldUpdate = true;\n\t\n\t    if (!this._pendingForceUpdate) {\n\t      if (inst.shouldComponentUpdate) {\n\t        if (false) {\n\t          shouldUpdate = measureLifeCyclePerf(function () {\n\t            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\t          }, this._debugID, 'shouldComponentUpdate');\n\t        } else {\n\t          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\t        }\n\t      } else {\n\t        if (this._compositeType === CompositeTypes.PureClass) {\n\t          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n\t    }\n\t\n\t    this._updateBatchNumber = null;\n\t    if (shouldUpdate) {\n\t      this._pendingForceUpdate = false;\n\t      // Will set `this.props`, `this.state` and `this.context`.\n\t      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n\t    } else {\n\t      // If it's determined that a component should not update, we still want\n\t      // to set props and state but we shortcut the rest of the update.\n\t      this._currentElement = nextParentElement;\n\t      this._context = nextUnmaskedContext;\n\t      inst.props = nextProps;\n\t      inst.state = nextState;\n\t      inst.context = nextContext;\n\t    }\n\t  },\n\t\n\t  _processPendingState: function (props, context) {\n\t    var inst = this._instance;\n\t    var queue = this._pendingStateQueue;\n\t    var replace = this._pendingReplaceState;\n\t    this._pendingReplaceState = false;\n\t    this._pendingStateQueue = null;\n\t\n\t    if (!queue) {\n\t      return inst.state;\n\t    }\n\t\n\t    if (replace && queue.length === 1) {\n\t      return queue[0];\n\t    }\n\t\n\t    var nextState = _assign({}, replace ? queue[0] : inst.state);\n\t    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n\t      var partial = queue[i];\n\t      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n\t    }\n\t\n\t    return nextState;\n\t  },\n\t\n\t  /**\n\t   * Merges new props and state, notifies delegate methods of update and\n\t   * performs update.\n\t   *\n\t   * @param {ReactElement} nextElement Next element\n\t   * @param {object} nextProps Next public object to set as properties.\n\t   * @param {?object} nextState Next object to set as state.\n\t   * @param {?object} nextContext Next public object to set as context.\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {?object} unmaskedContext\n\t   * @private\n\t   */\n\t  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n\t    var _this2 = this;\n\t\n\t    var inst = this._instance;\n\t\n\t    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n\t    var prevProps;\n\t    var prevState;\n\t    var prevContext;\n\t    if (hasComponentDidUpdate) {\n\t      prevProps = inst.props;\n\t      prevState = inst.state;\n\t      prevContext = inst.context;\n\t    }\n\t\n\t    if (inst.componentWillUpdate) {\n\t      if (false) {\n\t        measureLifeCyclePerf(function () {\n\t          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n\t        }, this._debugID, 'componentWillUpdate');\n\t      } else {\n\t        inst.componentWillUpdate(nextProps, nextState, nextContext);\n\t      }\n\t    }\n\t\n\t    this._currentElement = nextElement;\n\t    this._context = unmaskedContext;\n\t    inst.props = nextProps;\n\t    inst.state = nextState;\n\t    inst.context = nextContext;\n\t\n\t    this._updateRenderedComponent(transaction, unmaskedContext);\n\t\n\t    if (hasComponentDidUpdate) {\n\t      if (false) {\n\t        transaction.getReactMountReady().enqueue(function () {\n\t          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n\t        });\n\t      } else {\n\t        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Call the component's `render` method and update the DOM accordingly.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  _updateRenderedComponent: function (transaction, context) {\n\t    var prevComponentInstance = this._renderedComponent;\n\t    var prevRenderedElement = prevComponentInstance._currentElement;\n\t    var nextRenderedElement = this._renderValidatedComponent();\n\t\n\t    var debugID = 0;\n\t    if (false) {\n\t      debugID = this._debugID;\n\t    }\n\t\n\t    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n\t      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n\t    } else {\n\t      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n\t      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\t\n\t      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n\t      this._renderedNodeType = nodeType;\n\t      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n\t      );\n\t      this._renderedComponent = child;\n\t\n\t      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\t\n\t      if (false) {\n\t        if (debugID !== 0) {\n\t          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n\t          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n\t        }\n\t      }\n\t\n\t      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Overridden in shallow rendering.\n\t   *\n\t   * @protected\n\t   */\n\t  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n\t    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  _renderValidatedComponentWithoutOwnerOrContext: function () {\n\t    var inst = this._instance;\n\t    var renderedComponent;\n\t\n\t    if (false) {\n\t      renderedComponent = measureLifeCyclePerf(function () {\n\t        return inst.render();\n\t      }, this._debugID, 'render');\n\t    } else {\n\t      renderedComponent = inst.render();\n\t    }\n\t\n\t    if (false) {\n\t      // We allow auto-mocks to proceed as if they're returning null.\n\t      if (renderedComponent === undefined && inst.render._isMockFunction) {\n\t        // This is probably bad practice. Consider warning here and\n\t        // deprecating this convenience.\n\t        renderedComponent = null;\n\t      }\n\t    }\n\t\n\t    return renderedComponent;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _renderValidatedComponent: function () {\n\t    var renderedComponent;\n\t    if ((\"production\") !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n\t      ReactCurrentOwner.current = this;\n\t      try {\n\t        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n\t      } finally {\n\t        ReactCurrentOwner.current = null;\n\t      }\n\t    } else {\n\t      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n\t    }\n\t    !(\n\t    // TODO: An `isValidNode` function would probably be more appropriate\n\t    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\t\n\t    return renderedComponent;\n\t  },\n\t\n\t  /**\n\t   * Lazily allocates the refs object and stores `component` as `ref`.\n\t   *\n\t   * @param {string} ref Reference name.\n\t   * @param {component} component Component to store as `ref`.\n\t   * @final\n\t   * @private\n\t   */\n\t  attachRef: function (ref, component) {\n\t    var inst = this.getPublicInstance();\n\t    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n\t    var publicComponentInstance = component.getPublicInstance();\n\t    if (false) {\n\t      var componentName = component && component.getName ? component.getName() : 'a component';\n\t      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n\t    }\n\t    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n\t    refs[ref] = publicComponentInstance;\n\t  },\n\t\n\t  /**\n\t   * Detaches a reference name.\n\t   *\n\t   * @param {string} ref Name to dereference.\n\t   * @final\n\t   * @private\n\t   */\n\t  detachRef: function (ref) {\n\t    var refs = this.getPublicInstance().refs;\n\t    delete refs[ref];\n\t  },\n\t\n\t  /**\n\t   * Get a text description of the component that can be used to identify it\n\t   * in error messages.\n\t   * @return {string} The name or null.\n\t   * @internal\n\t   */\n\t  getName: function () {\n\t    var type = this._currentElement.type;\n\t    var constructor = this._instance && this._instance.constructor;\n\t    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n\t  },\n\t\n\t  /**\n\t   * Get the publicly accessible representation of this component - i.e. what\n\t   * is exposed by refs and returned by render. Can be null for stateless\n\t   * components.\n\t   *\n\t   * @return {ReactComponent} the public component instance.\n\t   * @internal\n\t   */\n\t  getPublicInstance: function () {\n\t    var inst = this._instance;\n\t    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n\t      return null;\n\t    }\n\t    return inst;\n\t  },\n\t\n\t  // Stub\n\t  _instantiateReactComponent: null\n\t\n\t};\n\t\n\tvar ReactCompositeComponent = {\n\t\n\t  Mixin: ReactCompositeComponentMixin\n\t\n\t};\n\t\n\tmodule.exports = ReactCompositeComponent;\n\n/***/ },\n/* 114 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOM\n\t */\n\t\n\t/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\t\n\t'use strict';\n\t\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDefaultInjection = __webpack_require__(129);\n\tvar ReactMount = __webpack_require__(69);\n\tvar ReactReconciler = __webpack_require__(18);\n\tvar ReactUpdates = __webpack_require__(10);\n\tvar ReactVersion = __webpack_require__(73);\n\t\n\tvar findDOMNode = __webpack_require__(157);\n\tvar getHostComponentFromComposite = __webpack_require__(78);\n\tvar renderSubtreeIntoContainer = __webpack_require__(164);\n\tvar warning = __webpack_require__(3);\n\t\n\tReactDefaultInjection.inject();\n\t\n\tvar ReactDOM = {\n\t  findDOMNode: findDOMNode,\n\t  render: ReactMount.render,\n\t  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n\t  version: ReactVersion,\n\t\n\t  /* eslint-disable camelcase */\n\t  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n\t  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n\t};\n\t\n\t// Inject the runtime into a devtools global hook regardless of browser.\n\t// Allows for debugging when the hook is injected on the page.\n\t/* eslint-enable camelcase */\n\tif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n\t  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n\t    ComponentTree: {\n\t      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,\n\t      getNodeFromInstance: function (inst) {\n\t        // inst is an internal instance (but could be a composite)\n\t        if (inst._renderedComponent) {\n\t          inst = getHostComponentFromComposite(inst);\n\t        }\n\t        if (inst) {\n\t          return ReactDOMComponentTree.getNodeFromInstance(inst);\n\t        } else {\n\t          return null;\n\t        }\n\t      }\n\t    },\n\t    Mount: ReactMount,\n\t    Reconciler: ReactReconciler\n\t  });\n\t}\n\t\n\tif (false) {\n\t  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\t  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\t\n\t    // First check if devtools is not installed\n\t    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n\t      // If we're in Chrome or Firefox, provide a download link if not installed.\n\t      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n\t        // Firefox does not have the issue with devtools loaded over file://\n\t        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;\n\t        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');\n\t      }\n\t    }\n\t\n\t    var testFunc = function testFn() {};\n\t    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;\n\t\n\t    // If we're in IE8, check to see if we are in compatibility mode and provide\n\t    // information on preventing compatibility mode\n\t    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\t\n\t    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : void 0;\n\t\n\t    var expectedFeatures = [\n\t    // shims\n\t    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];\n\t\n\t    for (var i = 0; i < expectedFeatures.length; i++) {\n\t      if (!expectedFeatures[i]) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tif (false) {\n\t  var ReactInstrumentation = require('./ReactInstrumentation');\n\t  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');\n\t  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');\n\t\n\t  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);\n\t  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);\n\t}\n\t\n\tmodule.exports = ReactDOM;\n\n/***/ },\n/* 115 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMButton\n\t */\n\t\n\t'use strict';\n\t\n\tvar DisabledInputUtils = __webpack_require__(25);\n\t\n\t/**\n\t * Implements a <button> host component that does not receive mouse events\n\t * when `disabled` is set.\n\t */\n\tvar ReactDOMButton = {\n\t  getHostProps: DisabledInputUtils.getHostProps\n\t};\n\t\n\tmodule.exports = ReactDOMButton;\n\n/***/ },\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMComponent\n\t */\n\t\n\t/* global hasOwnProperty:true */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar AutoFocusUtils = __webpack_require__(101);\n\tvar CSSPropertyOperations = __webpack_require__(103);\n\tvar DOMLazyTree = __webpack_require__(16);\n\tvar DOMNamespaces = __webpack_require__(34);\n\tvar DOMProperty = __webpack_require__(17);\n\tvar DOMPropertyOperations = __webpack_require__(60);\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPluginHub = __webpack_require__(19);\n\tvar EventPluginRegistry = __webpack_require__(35);\n\tvar ReactBrowserEventEmitter = __webpack_require__(26);\n\tvar ReactDOMButton = __webpack_require__(115);\n\tvar ReactDOMComponentFlags = __webpack_require__(63);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDOMInput = __webpack_require__(122);\n\tvar ReactDOMOption = __webpack_require__(123);\n\tvar ReactDOMSelect = __webpack_require__(64);\n\tvar ReactDOMTextarea = __webpack_require__(126);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar ReactMultiChild = __webpack_require__(134);\n\tvar ReactServerRenderingTransaction = __webpack_require__(139);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar escapeTextContentForBrowser = __webpack_require__(28);\n\tvar invariant = __webpack_require__(1);\n\tvar isEventSupported = __webpack_require__(52);\n\tvar keyOf = __webpack_require__(15);\n\tvar shallowEqual = __webpack_require__(56);\n\tvar validateDOMNesting = __webpack_require__(55);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar Flags = ReactDOMComponentFlags;\n\tvar deleteListener = EventPluginHub.deleteListener;\n\tvar getNode = ReactDOMComponentTree.getNodeFromInstance;\n\tvar listenTo = ReactBrowserEventEmitter.listenTo;\n\tvar registrationNameModules = EventPluginRegistry.registrationNameModules;\n\t\n\t// For quickly matching children type, to test if can be treated as content.\n\tvar CONTENT_TYPES = { 'string': true, 'number': true };\n\t\n\tvar STYLE = keyOf({ style: null });\n\tvar HTML = keyOf({ __html: null });\n\tvar RESERVED_PROPS = {\n\t  children: null,\n\t  dangerouslySetInnerHTML: null,\n\t  suppressContentEditableWarning: null\n\t};\n\t\n\t// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).\n\tvar DOC_FRAGMENT_TYPE = 11;\n\t\n\tfunction getDeclarationErrorAddendum(internalInstance) {\n\t  if (internalInstance) {\n\t    var owner = internalInstance._currentElement._owner || null;\n\t    if (owner) {\n\t      var name = owner.getName();\n\t      if (name) {\n\t        return ' This DOM node was rendered by `' + name + '`.';\n\t      }\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\tfunction friendlyStringify(obj) {\n\t  if (typeof obj === 'object') {\n\t    if (Array.isArray(obj)) {\n\t      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n\t    } else {\n\t      var pairs = [];\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n\t          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n\t        }\n\t      }\n\t      return '{' + pairs.join(', ') + '}';\n\t    }\n\t  } else if (typeof obj === 'string') {\n\t    return JSON.stringify(obj);\n\t  } else if (typeof obj === 'function') {\n\t    return '[function object]';\n\t  }\n\t  // Differs from JSON.stringify in that undefined because undefined and that\n\t  // inf and nan don't become null\n\t  return String(obj);\n\t}\n\t\n\tvar styleMutationWarning = {};\n\t\n\tfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n\t  if (style1 == null || style2 == null) {\n\t    return;\n\t  }\n\t  if (shallowEqual(style1, style2)) {\n\t    return;\n\t  }\n\t\n\t  var componentName = component._tag;\n\t  var owner = component._currentElement._owner;\n\t  var ownerName;\n\t  if (owner) {\n\t    ownerName = owner.getName();\n\t  }\n\t\n\t  var hash = ownerName + '|' + componentName;\n\t\n\t  if (styleMutationWarning.hasOwnProperty(hash)) {\n\t    return;\n\t  }\n\t\n\t  styleMutationWarning[hash] = true;\n\t\n\t   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;\n\t}\n\t\n\t/**\n\t * @param {object} component\n\t * @param {?object} props\n\t */\n\tfunction assertValidProps(component, props) {\n\t  if (!props) {\n\t    return;\n\t  }\n\t  // Note the use of `==` which checks for null or undefined.\n\t  if (voidElementTags[component._tag]) {\n\t    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;\n\t  }\n\t  if (props.dangerouslySetInnerHTML != null) {\n\t    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;\n\t    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;\n\t  }\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;\n\t    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n\t    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;\n\t  }\n\t  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;\n\t}\n\t\n\tfunction enqueuePutListener(inst, registrationName, listener, transaction) {\n\t  if (transaction instanceof ReactServerRenderingTransaction) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // IE8 has no API for event capturing and the `onScroll` event doesn't\n\t    // bubble.\n\t    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : void 0;\n\t  }\n\t  var containerInfo = inst._hostContainerInfo;\n\t  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;\n\t  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;\n\t  listenTo(registrationName, doc);\n\t  transaction.getReactMountReady().enqueue(putListener, {\n\t    inst: inst,\n\t    registrationName: registrationName,\n\t    listener: listener\n\t  });\n\t}\n\t\n\tfunction putListener() {\n\t  var listenerToPut = this;\n\t  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);\n\t}\n\t\n\tfunction inputPostMount() {\n\t  var inst = this;\n\t  ReactDOMInput.postMountWrapper(inst);\n\t}\n\t\n\tfunction textareaPostMount() {\n\t  var inst = this;\n\t  ReactDOMTextarea.postMountWrapper(inst);\n\t}\n\t\n\tfunction optionPostMount() {\n\t  var inst = this;\n\t  ReactDOMOption.postMountWrapper(inst);\n\t}\n\t\n\tvar setAndValidateContentChildDev = emptyFunction;\n\tif (false) {\n\t  setAndValidateContentChildDev = function (content) {\n\t    var hasExistingContent = this._contentDebugID != null;\n\t    var debugID = this._debugID;\n\t    // This ID represents the inlined child that has no backing instance:\n\t    var contentDebugID = -debugID;\n\t\n\t    if (content == null) {\n\t      if (hasExistingContent) {\n\t        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);\n\t      }\n\t      this._contentDebugID = null;\n\t      return;\n\t    }\n\t\n\t    validateDOMNesting(null, String(content), this, this._ancestorInfo);\n\t    this._contentDebugID = contentDebugID;\n\t    if (hasExistingContent) {\n\t      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);\n\t      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);\n\t    } else {\n\t      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);\n\t      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);\n\t      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);\n\t    }\n\t  };\n\t}\n\t\n\t// There are so many media events, it makes sense to just\n\t// maintain a list rather than create a `trapBubbledEvent` for each\n\tvar mediaEvents = {\n\t  topAbort: 'abort',\n\t  topCanPlay: 'canplay',\n\t  topCanPlayThrough: 'canplaythrough',\n\t  topDurationChange: 'durationchange',\n\t  topEmptied: 'emptied',\n\t  topEncrypted: 'encrypted',\n\t  topEnded: 'ended',\n\t  topError: 'error',\n\t  topLoadedData: 'loadeddata',\n\t  topLoadedMetadata: 'loadedmetadata',\n\t  topLoadStart: 'loadstart',\n\t  topPause: 'pause',\n\t  topPlay: 'play',\n\t  topPlaying: 'playing',\n\t  topProgress: 'progress',\n\t  topRateChange: 'ratechange',\n\t  topSeeked: 'seeked',\n\t  topSeeking: 'seeking',\n\t  topStalled: 'stalled',\n\t  topSuspend: 'suspend',\n\t  topTimeUpdate: 'timeupdate',\n\t  topVolumeChange: 'volumechange',\n\t  topWaiting: 'waiting'\n\t};\n\t\n\tfunction trapBubbledEventsLocal() {\n\t  var inst = this;\n\t  // If a component renders to null or if another component fatals and causes\n\t  // the state of the tree to be corrupted, `node` here can be null.\n\t  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;\n\t  var node = getNode(inst);\n\t  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;\n\t\n\t  switch (inst._tag) {\n\t    case 'iframe':\n\t    case 'object':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n\t      break;\n\t    case 'video':\n\t    case 'audio':\n\t\n\t      inst._wrapperState.listeners = [];\n\t      // Create listener for each media event\n\t      for (var event in mediaEvents) {\n\t        if (mediaEvents.hasOwnProperty(event)) {\n\t          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));\n\t        }\n\t      }\n\t      break;\n\t    case 'source':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];\n\t      break;\n\t    case 'img':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n\t      break;\n\t    case 'form':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];\n\t      break;\n\t    case 'input':\n\t    case 'select':\n\t    case 'textarea':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];\n\t      break;\n\t  }\n\t}\n\t\n\tfunction postUpdateSelectWrapper() {\n\t  ReactDOMSelect.postUpdateWrapper(this);\n\t}\n\t\n\t// For HTML, certain tags should omit their close tag. We keep a whitelist for\n\t// those special-case tags.\n\t\n\tvar omittedCloseTags = {\n\t  'area': true,\n\t  'base': true,\n\t  'br': true,\n\t  'col': true,\n\t  'embed': true,\n\t  'hr': true,\n\t  'img': true,\n\t  'input': true,\n\t  'keygen': true,\n\t  'link': true,\n\t  'meta': true,\n\t  'param': true,\n\t  'source': true,\n\t  'track': true,\n\t  'wbr': true\n\t};\n\t\n\t// NOTE: menuitem's close tag should be omitted, but that causes problems.\n\tvar newlineEatingTags = {\n\t  'listing': true,\n\t  'pre': true,\n\t  'textarea': true\n\t};\n\t\n\t// For HTML, certain tags cannot have children. This has the same purpose as\n\t// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\t\n\tvar voidElementTags = _assign({\n\t  'menuitem': true\n\t}, omittedCloseTags);\n\t\n\t// We accept any tag to be rendered but since this gets injected into arbitrary\n\t// HTML, we want to make sure that it's a safe tag.\n\t// http://www.w3.org/TR/REC-xml/#NT-Name\n\t\n\tvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\n\tvar validatedTagCache = {};\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\t\n\tfunction validateDangerousTag(tag) {\n\t  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n\t    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;\n\t    validatedTagCache[tag] = true;\n\t  }\n\t}\n\t\n\tfunction isCustomComponent(tagName, props) {\n\t  return tagName.indexOf('-') >= 0 || props.is != null;\n\t}\n\t\n\tvar globalIdCounter = 1;\n\t\n\t/**\n\t * Creates a new React class that is idempotent and capable of containing other\n\t * React components. It accepts event listeners and DOM properties that are\n\t * valid according to `DOMProperty`.\n\t *\n\t *  - Event listeners: `onClick`, `onMouseDown`, etc.\n\t *  - DOM properties: `className`, `name`, `title`, etc.\n\t *\n\t * The `style` property functions differently from the DOM API. It accepts an\n\t * object mapping of style properties to values.\n\t *\n\t * @constructor ReactDOMComponent\n\t * @extends ReactMultiChild\n\t */\n\tfunction ReactDOMComponent(element) {\n\t  var tag = element.type;\n\t  validateDangerousTag(tag);\n\t  this._currentElement = element;\n\t  this._tag = tag.toLowerCase();\n\t  this._namespaceURI = null;\n\t  this._renderedChildren = null;\n\t  this._previousStyle = null;\n\t  this._previousStyleCopy = null;\n\t  this._hostNode = null;\n\t  this._hostParent = null;\n\t  this._rootNodeID = 0;\n\t  this._domID = 0;\n\t  this._hostContainerInfo = null;\n\t  this._wrapperState = null;\n\t  this._topLevelWrapper = null;\n\t  this._flags = 0;\n\t  if (false) {\n\t    this._ancestorInfo = null;\n\t    setAndValidateContentChildDev.call(this, null);\n\t  }\n\t}\n\t\n\tReactDOMComponent.displayName = 'ReactDOMComponent';\n\t\n\tReactDOMComponent.Mixin = {\n\t\n\t  /**\n\t   * Generates root tag markup then recurses. This method has side effects and\n\t   * is not idempotent.\n\t   *\n\t   * @internal\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {?ReactDOMComponent} the parent component instance\n\t   * @param {?object} info about the host container\n\t   * @param {object} context\n\t   * @return {string} The computed markup.\n\t   */\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    this._rootNodeID = globalIdCounter++;\n\t    this._domID = hostContainerInfo._idCounter++;\n\t    this._hostParent = hostParent;\n\t    this._hostContainerInfo = hostContainerInfo;\n\t\n\t    var props = this._currentElement.props;\n\t\n\t    switch (this._tag) {\n\t      case 'audio':\n\t      case 'form':\n\t      case 'iframe':\n\t      case 'img':\n\t      case 'link':\n\t      case 'object':\n\t      case 'source':\n\t      case 'video':\n\t        this._wrapperState = {\n\t          listeners: null\n\t        };\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'button':\n\t        props = ReactDOMButton.getHostProps(this, props, hostParent);\n\t        break;\n\t      case 'input':\n\t        ReactDOMInput.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMInput.getHostProps(this, props);\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'option':\n\t        ReactDOMOption.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMOption.getHostProps(this, props);\n\t        break;\n\t      case 'select':\n\t        ReactDOMSelect.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMSelect.getHostProps(this, props);\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'textarea':\n\t        ReactDOMTextarea.mountWrapper(this, props, hostParent);\n\t        props = ReactDOMTextarea.getHostProps(this, props);\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t    }\n\t\n\t    assertValidProps(this, props);\n\t\n\t    // We create tags in the namespace of their parent container, except HTML\n\t    // tags get no namespace.\n\t    var namespaceURI;\n\t    var parentTag;\n\t    if (hostParent != null) {\n\t      namespaceURI = hostParent._namespaceURI;\n\t      parentTag = hostParent._tag;\n\t    } else if (hostContainerInfo._tag) {\n\t      namespaceURI = hostContainerInfo._namespaceURI;\n\t      parentTag = hostContainerInfo._tag;\n\t    }\n\t    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\n\t      namespaceURI = DOMNamespaces.html;\n\t    }\n\t    if (namespaceURI === DOMNamespaces.html) {\n\t      if (this._tag === 'svg') {\n\t        namespaceURI = DOMNamespaces.svg;\n\t      } else if (this._tag === 'math') {\n\t        namespaceURI = DOMNamespaces.mathml;\n\t      }\n\t    }\n\t    this._namespaceURI = namespaceURI;\n\t\n\t    if (false) {\n\t      var parentInfo;\n\t      if (hostParent != null) {\n\t        parentInfo = hostParent._ancestorInfo;\n\t      } else if (hostContainerInfo._tag) {\n\t        parentInfo = hostContainerInfo._ancestorInfo;\n\t      }\n\t      if (parentInfo) {\n\t        // parentInfo should always be present except for the top-level\n\t        // component when server rendering\n\t        validateDOMNesting(this._tag, null, this, parentInfo);\n\t      }\n\t      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);\n\t    }\n\t\n\t    var mountImage;\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = hostContainerInfo._ownerDocument;\n\t      var el;\n\t      if (namespaceURI === DOMNamespaces.html) {\n\t        if (this._tag === 'script') {\n\t          // Create the script via .innerHTML so its \"parser-inserted\" flag is\n\t          // set to true and it does not execute\n\t          var div = ownerDocument.createElement('div');\n\t          var type = this._currentElement.type;\n\t          div.innerHTML = '<' + type + '></' + type + '>';\n\t          el = div.removeChild(div.firstChild);\n\t        } else if (props.is) {\n\t          el = ownerDocument.createElement(this._currentElement.type, props.is);\n\t        } else {\n\t          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.\n\t          // See discussion in https://github.com/facebook/react/pull/6896\n\t          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n\t          el = ownerDocument.createElement(this._currentElement.type);\n\t        }\n\t      } else {\n\t        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);\n\t      }\n\t      ReactDOMComponentTree.precacheNode(this, el);\n\t      this._flags |= Flags.hasCachedChildNodes;\n\t      if (!this._hostParent) {\n\t        DOMPropertyOperations.setAttributeForRoot(el);\n\t      }\n\t      this._updateDOMProperties(null, props, transaction);\n\t      var lazyTree = DOMLazyTree(el);\n\t      this._createInitialChildren(transaction, props, context, lazyTree);\n\t      mountImage = lazyTree;\n\t    } else {\n\t      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n\t      var tagContent = this._createContentMarkup(transaction, props, context);\n\t      if (!tagContent && omittedCloseTags[this._tag]) {\n\t        mountImage = tagOpen + '/>';\n\t      } else {\n\t        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n\t      }\n\t    }\n\t\n\t    switch (this._tag) {\n\t      case 'input':\n\t        transaction.getReactMountReady().enqueue(inputPostMount, this);\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'textarea':\n\t        transaction.getReactMountReady().enqueue(textareaPostMount, this);\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'select':\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'button':\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t      case 'option':\n\t        transaction.getReactMountReady().enqueue(optionPostMount, this);\n\t        break;\n\t    }\n\t\n\t    return mountImage;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for the open tag and all attributes.\n\t   *\n\t   * This method has side effects because events get registered.\n\t   *\n\t   * Iterating over object properties is faster than iterating over arrays.\n\t   * @see http://jsperf.com/obj-vs-arr-iteration\n\t   *\n\t   * @private\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} props\n\t   * @return {string} Markup of opening tag.\n\t   */\n\t  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n\t    var ret = '<' + this._currentElement.type;\n\t\n\t    for (var propKey in props) {\n\t      if (!props.hasOwnProperty(propKey)) {\n\t        continue;\n\t      }\n\t      var propValue = props[propKey];\n\t      if (propValue == null) {\n\t        continue;\n\t      }\n\t      if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (propValue) {\n\t          enqueuePutListener(this, propKey, propValue, transaction);\n\t        }\n\t      } else {\n\t        if (propKey === STYLE) {\n\t          if (propValue) {\n\t            if (false) {\n\t              // See `_updateDOMProperties`. style block\n\t              this._previousStyle = propValue;\n\t            }\n\t            propValue = this._previousStyleCopy = _assign({}, props.style);\n\t          }\n\t          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);\n\t        }\n\t        var markup = null;\n\t        if (this._tag != null && isCustomComponent(this._tag, props)) {\n\t          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n\t            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n\t          }\n\t        } else {\n\t          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n\t        }\n\t        if (markup) {\n\t          ret += ' ' + markup;\n\t        }\n\t      }\n\t    }\n\t\n\t    // For static pages, no need to put React ID and checksum. Saves lots of\n\t    // bytes.\n\t    if (transaction.renderToStaticMarkup) {\n\t      return ret;\n\t    }\n\t\n\t    if (!this._hostParent) {\n\t      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();\n\t    }\n\t    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);\n\t    return ret;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for the content between the tags.\n\t   *\n\t   * @private\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} props\n\t   * @param {object} context\n\t   * @return {string} Content markup.\n\t   */\n\t  _createContentMarkup: function (transaction, props, context) {\n\t    var ret = '';\n\t\n\t    // Intentional use of != to avoid catching zero/false.\n\t    var innerHTML = props.dangerouslySetInnerHTML;\n\t    if (innerHTML != null) {\n\t      if (innerHTML.__html != null) {\n\t        ret = innerHTML.__html;\n\t      }\n\t    } else {\n\t      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n\t      var childrenToUse = contentToUse != null ? null : props.children;\n\t      if (contentToUse != null) {\n\t        // TODO: Validate that text is allowed as a child of this node\n\t        ret = escapeTextContentForBrowser(contentToUse);\n\t        if (false) {\n\t          setAndValidateContentChildDev.call(this, contentToUse);\n\t        }\n\t      } else if (childrenToUse != null) {\n\t        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n\t        ret = mountImages.join('');\n\t      }\n\t    }\n\t    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n\t      // text/html ignores the first character in these tags if it's a newline\n\t      // Prefer to break application/xml over text/html (for now) by adding\n\t      // a newline specifically to get eaten by the parser. (Alternately for\n\t      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n\t      // \\r is normalized out by HTMLTextAreaElement#value.)\n\t      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n\t      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n\t      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n\t      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n\t      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n\t      return '\\n' + ret;\n\t    } else {\n\t      return ret;\n\t    }\n\t  },\n\t\n\t  _createInitialChildren: function (transaction, props, context, lazyTree) {\n\t    // Intentional use of != to avoid catching zero/false.\n\t    var innerHTML = props.dangerouslySetInnerHTML;\n\t    if (innerHTML != null) {\n\t      if (innerHTML.__html != null) {\n\t        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);\n\t      }\n\t    } else {\n\t      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n\t      var childrenToUse = contentToUse != null ? null : props.children;\n\t      if (contentToUse != null) {\n\t        // TODO: Validate that text is allowed as a child of this node\n\t        if (false) {\n\t          setAndValidateContentChildDev.call(this, contentToUse);\n\t        }\n\t        DOMLazyTree.queueText(lazyTree, contentToUse);\n\t      } else if (childrenToUse != null) {\n\t        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n\t        for (var i = 0; i < mountImages.length; i++) {\n\t          DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Receives a next element and updates the component.\n\t   *\n\t   * @internal\n\t   * @param {ReactElement} nextElement\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} context\n\t   */\n\t  receiveComponent: function (nextElement, transaction, context) {\n\t    var prevElement = this._currentElement;\n\t    this._currentElement = nextElement;\n\t    this.updateComponent(transaction, prevElement, nextElement, context);\n\t  },\n\t\n\t  /**\n\t   * Updates a DOM component after it has already been allocated and\n\t   * attached to the DOM. Reconciles the root DOM node, then recurses.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {ReactElement} prevElement\n\t   * @param {ReactElement} nextElement\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: function (transaction, prevElement, nextElement, context) {\n\t    var lastProps = prevElement.props;\n\t    var nextProps = this._currentElement.props;\n\t\n\t    switch (this._tag) {\n\t      case 'button':\n\t        lastProps = ReactDOMButton.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMButton.getHostProps(this, nextProps);\n\t        break;\n\t      case 'input':\n\t        lastProps = ReactDOMInput.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMInput.getHostProps(this, nextProps);\n\t        break;\n\t      case 'option':\n\t        lastProps = ReactDOMOption.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMOption.getHostProps(this, nextProps);\n\t        break;\n\t      case 'select':\n\t        lastProps = ReactDOMSelect.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMSelect.getHostProps(this, nextProps);\n\t        break;\n\t      case 'textarea':\n\t        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);\n\t        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);\n\t        break;\n\t    }\n\t\n\t    assertValidProps(this, nextProps);\n\t    this._updateDOMProperties(lastProps, nextProps, transaction);\n\t    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\t\n\t    switch (this._tag) {\n\t      case 'input':\n\t        // Update the wrapper around inputs *after* updating props. This has to\n\t        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations\n\t        // raise warnings and prevent the new value from being assigned.\n\t        ReactDOMInput.updateWrapper(this);\n\t        break;\n\t      case 'textarea':\n\t        ReactDOMTextarea.updateWrapper(this);\n\t        break;\n\t      case 'select':\n\t        // <select> value update needs to occur after <option> children\n\t        // reconciliation\n\t        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n\t        break;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Reconciles the properties by detecting differences in property values and\n\t   * updating the DOM as necessary. This function is probably the single most\n\t   * critical path for performance optimization.\n\t   *\n\t   * TODO: Benchmark whether checking for changed values in memory actually\n\t   *       improves performance (especially statically positioned elements).\n\t   * TODO: Benchmark the effects of putting this at the top since 99% of props\n\t   *       do not change for a given reconciliation.\n\t   * TODO: Benchmark areas that can be improved with caching.\n\t   *\n\t   * @private\n\t   * @param {object} lastProps\n\t   * @param {object} nextProps\n\t   * @param {?DOMElement} node\n\t   */\n\t  _updateDOMProperties: function (lastProps, nextProps, transaction) {\n\t    var propKey;\n\t    var styleName;\n\t    var styleUpdates;\n\t    for (propKey in lastProps) {\n\t      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n\t        continue;\n\t      }\n\t      if (propKey === STYLE) {\n\t        var lastStyle = this._previousStyleCopy;\n\t        for (styleName in lastStyle) {\n\t          if (lastStyle.hasOwnProperty(styleName)) {\n\t            styleUpdates = styleUpdates || {};\n\t            styleUpdates[styleName] = '';\n\t          }\n\t        }\n\t        this._previousStyleCopy = null;\n\t      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (lastProps[propKey]) {\n\t          // Only call deleteListener if there was a listener previously or\n\t          // else willDeleteListener gets called when there wasn't actually a\n\t          // listener (e.g., onClick={null})\n\t          deleteListener(this, propKey);\n\t        }\n\t      } else if (isCustomComponent(this._tag, lastProps)) {\n\t        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n\t          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);\n\t        }\n\t      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n\t        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);\n\t      }\n\t    }\n\t    for (propKey in nextProps) {\n\t      var nextProp = nextProps[propKey];\n\t      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;\n\t      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n\t        continue;\n\t      }\n\t      if (propKey === STYLE) {\n\t        if (nextProp) {\n\t          if (false) {\n\t            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n\t            this._previousStyle = nextProp;\n\t          }\n\t          nextProp = this._previousStyleCopy = _assign({}, nextProp);\n\t        } else {\n\t          this._previousStyleCopy = null;\n\t        }\n\t        if (lastProp) {\n\t          // Unset styles on `lastProp` but not on `nextProp`.\n\t          for (styleName in lastProp) {\n\t            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n\t              styleUpdates = styleUpdates || {};\n\t              styleUpdates[styleName] = '';\n\t            }\n\t          }\n\t          // Update styles that changed since `lastProp`.\n\t          for (styleName in nextProp) {\n\t            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n\t              styleUpdates = styleUpdates || {};\n\t              styleUpdates[styleName] = nextProp[styleName];\n\t            }\n\t          }\n\t        } else {\n\t          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n\t          styleUpdates = nextProp;\n\t        }\n\t      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (nextProp) {\n\t          enqueuePutListener(this, propKey, nextProp, transaction);\n\t        } else if (lastProp) {\n\t          deleteListener(this, propKey);\n\t        }\n\t      } else if (isCustomComponent(this._tag, nextProps)) {\n\t        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n\t          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);\n\t        }\n\t      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n\t        var node = getNode(this);\n\t        // If we're updating to null or undefined, we should remove the property\n\t        // from the DOM node instead of inadvertently setting to a string. This\n\t        // brings us in line with the same behavior we have on initial render.\n\t        if (nextProp != null) {\n\t          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n\t        } else {\n\t          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n\t        }\n\t      }\n\t    }\n\t    if (styleUpdates) {\n\t      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Reconciles the children with the various properties that affect the\n\t   * children content.\n\t   *\n\t   * @param {object} lastProps\n\t   * @param {object} nextProps\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   */\n\t  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n\t    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n\t    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\t\n\t    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n\t    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\t\n\t    // Note the use of `!=` which checks for null or undefined.\n\t    var lastChildren = lastContent != null ? null : lastProps.children;\n\t    var nextChildren = nextContent != null ? null : nextProps.children;\n\t\n\t    // If we're switching from children to content/html or vice versa, remove\n\t    // the old content\n\t    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n\t    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n\t    if (lastChildren != null && nextChildren == null) {\n\t      this.updateChildren(null, transaction, context);\n\t    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n\t      this.updateTextContent('');\n\t      if (false) {\n\t        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n\t      }\n\t    }\n\t\n\t    if (nextContent != null) {\n\t      if (lastContent !== nextContent) {\n\t        this.updateTextContent('' + nextContent);\n\t        if (false) {\n\t          setAndValidateContentChildDev.call(this, nextContent);\n\t        }\n\t      }\n\t    } else if (nextHtml != null) {\n\t      if (lastHtml !== nextHtml) {\n\t        this.updateMarkup('' + nextHtml);\n\t      }\n\t      if (false) {\n\t        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n\t      }\n\t    } else if (nextChildren != null) {\n\t      if (false) {\n\t        setAndValidateContentChildDev.call(this, null);\n\t      }\n\t\n\t      this.updateChildren(nextChildren, transaction, context);\n\t    }\n\t  },\n\t\n\t  getHostNode: function () {\n\t    return getNode(this);\n\t  },\n\t\n\t  /**\n\t   * Destroys all event registrations for this instance. Does not remove from\n\t   * the DOM. That must be done by the parent.\n\t   *\n\t   * @internal\n\t   */\n\t  unmountComponent: function (safely) {\n\t    switch (this._tag) {\n\t      case 'audio':\n\t      case 'form':\n\t      case 'iframe':\n\t      case 'img':\n\t      case 'link':\n\t      case 'object':\n\t      case 'source':\n\t      case 'video':\n\t        var listeners = this._wrapperState.listeners;\n\t        if (listeners) {\n\t          for (var i = 0; i < listeners.length; i++) {\n\t            listeners[i].remove();\n\t          }\n\t        }\n\t        break;\n\t      case 'html':\n\t      case 'head':\n\t      case 'body':\n\t        /**\n\t         * Components like <html> <head> and <body> can't be removed or added\n\t         * easily in a cross-browser way, however it's valuable to be able to\n\t         * take advantage of React's reconciliation for styling and <title>\n\t         * management. So we just document it and throw in dangerous cases.\n\t         */\n\t         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;\n\t        break;\n\t    }\n\t\n\t    this.unmountChildren(safely);\n\t    ReactDOMComponentTree.uncacheNode(this);\n\t    EventPluginHub.deleteAllListeners(this);\n\t    this._rootNodeID = 0;\n\t    this._domID = 0;\n\t    this._wrapperState = null;\n\t\n\t    if (false) {\n\t      setAndValidateContentChildDev.call(this, null);\n\t    }\n\t  },\n\t\n\t  getPublicInstance: function () {\n\t    return getNode(this);\n\t  }\n\t\n\t};\n\t\n\t_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\t\n\tmodule.exports = ReactDOMComponent;\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMContainerInfo\n\t */\n\t\n\t'use strict';\n\t\n\tvar validateDOMNesting = __webpack_require__(55);\n\t\n\tvar DOC_NODE_TYPE = 9;\n\t\n\tfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n\t  var info = {\n\t    _topLevelWrapper: topLevelWrapper,\n\t    _idCounter: 1,\n\t    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,\n\t    _node: node,\n\t    _tag: node ? node.nodeName.toLowerCase() : null,\n\t    _namespaceURI: node ? node.namespaceURI : null\n\t  };\n\t  if (false) {\n\t    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;\n\t  }\n\t  return info;\n\t}\n\t\n\tmodule.exports = ReactDOMContainerInfo;\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMEmptyComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar DOMLazyTree = __webpack_require__(16);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\t\n\tvar ReactDOMEmptyComponent = function (instantiate) {\n\t  // ReactCompositeComponent uses this:\n\t  this._currentElement = null;\n\t  // ReactDOMComponentTree uses these:\n\t  this._hostNode = null;\n\t  this._hostParent = null;\n\t  this._hostContainerInfo = null;\n\t  this._domID = 0;\n\t};\n\t_assign(ReactDOMEmptyComponent.prototype, {\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    var domID = hostContainerInfo._idCounter++;\n\t    this._domID = domID;\n\t    this._hostParent = hostParent;\n\t    this._hostContainerInfo = hostContainerInfo;\n\t\n\t    var nodeValue = ' react-empty: ' + this._domID + ' ';\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = hostContainerInfo._ownerDocument;\n\t      var node = ownerDocument.createComment(nodeValue);\n\t      ReactDOMComponentTree.precacheNode(this, node);\n\t      return DOMLazyTree(node);\n\t    } else {\n\t      if (transaction.renderToStaticMarkup) {\n\t        // Normally we'd insert a comment node, but since this is a situation\n\t        // where React won't take over (static pages), we can simply return\n\t        // nothing.\n\t        return '';\n\t      }\n\t      return '<!--' + nodeValue + '-->';\n\t    }\n\t  },\n\t  receiveComponent: function () {},\n\t  getHostNode: function () {\n\t    return ReactDOMComponentTree.getNodeFromInstance(this);\n\t  },\n\t  unmountComponent: function () {\n\t    ReactDOMComponentTree.uncacheNode(this);\n\t  }\n\t});\n\t\n\tmodule.exports = ReactDOMEmptyComponent;\n\n/***/ },\n/* 119 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMFactories\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(9);\n\t\n\t/**\n\t * Create a factory that creates HTML tag elements.\n\t *\n\t * @private\n\t */\n\tvar createDOMFactory = ReactElement.createFactory;\n\tif (false) {\n\t  var ReactElementValidator = require('./ReactElementValidator');\n\t  createDOMFactory = ReactElementValidator.createFactory;\n\t}\n\t\n\t/**\n\t * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n\t * This is also accessible via `React.DOM`.\n\t *\n\t * @public\n\t */\n\tvar ReactDOMFactories = {\n\t  a: createDOMFactory('a'),\n\t  abbr: createDOMFactory('abbr'),\n\t  address: createDOMFactory('address'),\n\t  area: createDOMFactory('area'),\n\t  article: createDOMFactory('article'),\n\t  aside: createDOMFactory('aside'),\n\t  audio: createDOMFactory('audio'),\n\t  b: createDOMFactory('b'),\n\t  base: createDOMFactory('base'),\n\t  bdi: createDOMFactory('bdi'),\n\t  bdo: createDOMFactory('bdo'),\n\t  big: createDOMFactory('big'),\n\t  blockquote: createDOMFactory('blockquote'),\n\t  body: createDOMFactory('body'),\n\t  br: createDOMFactory('br'),\n\t  button: createDOMFactory('button'),\n\t  canvas: createDOMFactory('canvas'),\n\t  caption: createDOMFactory('caption'),\n\t  cite: createDOMFactory('cite'),\n\t  code: createDOMFactory('code'),\n\t  col: createDOMFactory('col'),\n\t  colgroup: createDOMFactory('colgroup'),\n\t  data: createDOMFactory('data'),\n\t  datalist: createDOMFactory('datalist'),\n\t  dd: createDOMFactory('dd'),\n\t  del: createDOMFactory('del'),\n\t  details: createDOMFactory('details'),\n\t  dfn: createDOMFactory('dfn'),\n\t  dialog: createDOMFactory('dialog'),\n\t  div: createDOMFactory('div'),\n\t  dl: createDOMFactory('dl'),\n\t  dt: createDOMFactory('dt'),\n\t  em: createDOMFactory('em'),\n\t  embed: createDOMFactory('embed'),\n\t  fieldset: createDOMFactory('fieldset'),\n\t  figcaption: createDOMFactory('figcaption'),\n\t  figure: createDOMFactory('figure'),\n\t  footer: createDOMFactory('footer'),\n\t  form: createDOMFactory('form'),\n\t  h1: createDOMFactory('h1'),\n\t  h2: createDOMFactory('h2'),\n\t  h3: createDOMFactory('h3'),\n\t  h4: createDOMFactory('h4'),\n\t  h5: createDOMFactory('h5'),\n\t  h6: createDOMFactory('h6'),\n\t  head: createDOMFactory('head'),\n\t  header: createDOMFactory('header'),\n\t  hgroup: createDOMFactory('hgroup'),\n\t  hr: createDOMFactory('hr'),\n\t  html: createDOMFactory('html'),\n\t  i: createDOMFactory('i'),\n\t  iframe: createDOMFactory('iframe'),\n\t  img: createDOMFactory('img'),\n\t  input: createDOMFactory('input'),\n\t  ins: createDOMFactory('ins'),\n\t  kbd: createDOMFactory('kbd'),\n\t  keygen: createDOMFactory('keygen'),\n\t  label: createDOMFactory('label'),\n\t  legend: createDOMFactory('legend'),\n\t  li: createDOMFactory('li'),\n\t  link: createDOMFactory('link'),\n\t  main: createDOMFactory('main'),\n\t  map: createDOMFactory('map'),\n\t  mark: createDOMFactory('mark'),\n\t  menu: createDOMFactory('menu'),\n\t  menuitem: createDOMFactory('menuitem'),\n\t  meta: createDOMFactory('meta'),\n\t  meter: createDOMFactory('meter'),\n\t  nav: createDOMFactory('nav'),\n\t  noscript: createDOMFactory('noscript'),\n\t  object: createDOMFactory('object'),\n\t  ol: createDOMFactory('ol'),\n\t  optgroup: createDOMFactory('optgroup'),\n\t  option: createDOMFactory('option'),\n\t  output: createDOMFactory('output'),\n\t  p: createDOMFactory('p'),\n\t  param: createDOMFactory('param'),\n\t  picture: createDOMFactory('picture'),\n\t  pre: createDOMFactory('pre'),\n\t  progress: createDOMFactory('progress'),\n\t  q: createDOMFactory('q'),\n\t  rp: createDOMFactory('rp'),\n\t  rt: createDOMFactory('rt'),\n\t  ruby: createDOMFactory('ruby'),\n\t  s: createDOMFactory('s'),\n\t  samp: createDOMFactory('samp'),\n\t  script: createDOMFactory('script'),\n\t  section: createDOMFactory('section'),\n\t  select: createDOMFactory('select'),\n\t  small: createDOMFactory('small'),\n\t  source: createDOMFactory('source'),\n\t  span: createDOMFactory('span'),\n\t  strong: createDOMFactory('strong'),\n\t  style: createDOMFactory('style'),\n\t  sub: createDOMFactory('sub'),\n\t  summary: createDOMFactory('summary'),\n\t  sup: createDOMFactory('sup'),\n\t  table: createDOMFactory('table'),\n\t  tbody: createDOMFactory('tbody'),\n\t  td: createDOMFactory('td'),\n\t  textarea: createDOMFactory('textarea'),\n\t  tfoot: createDOMFactory('tfoot'),\n\t  th: createDOMFactory('th'),\n\t  thead: createDOMFactory('thead'),\n\t  time: createDOMFactory('time'),\n\t  title: createDOMFactory('title'),\n\t  tr: createDOMFactory('tr'),\n\t  track: createDOMFactory('track'),\n\t  u: createDOMFactory('u'),\n\t  ul: createDOMFactory('ul'),\n\t  'var': createDOMFactory('var'),\n\t  video: createDOMFactory('video'),\n\t  wbr: createDOMFactory('wbr'),\n\t\n\t  // SVG\n\t  circle: createDOMFactory('circle'),\n\t  clipPath: createDOMFactory('clipPath'),\n\t  defs: createDOMFactory('defs'),\n\t  ellipse: createDOMFactory('ellipse'),\n\t  g: createDOMFactory('g'),\n\t  image: createDOMFactory('image'),\n\t  line: createDOMFactory('line'),\n\t  linearGradient: createDOMFactory('linearGradient'),\n\t  mask: createDOMFactory('mask'),\n\t  path: createDOMFactory('path'),\n\t  pattern: createDOMFactory('pattern'),\n\t  polygon: createDOMFactory('polygon'),\n\t  polyline: createDOMFactory('polyline'),\n\t  radialGradient: createDOMFactory('radialGradient'),\n\t  rect: createDOMFactory('rect'),\n\t  stop: createDOMFactory('stop'),\n\t  svg: createDOMFactory('svg'),\n\t  text: createDOMFactory('text'),\n\t  tspan: createDOMFactory('tspan')\n\t};\n\t\n\tmodule.exports = ReactDOMFactories;\n\n/***/ },\n/* 120 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMFeatureFlags\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMFeatureFlags = {\n\t  useCreateElement: true\n\t};\n\t\n\tmodule.exports = ReactDOMFeatureFlags;\n\n/***/ },\n/* 121 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMIDOperations\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMChildrenOperations = __webpack_require__(33);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\t\n\t/**\n\t * Operations used to process updates to DOM nodes.\n\t */\n\tvar ReactDOMIDOperations = {\n\t\n\t  /**\n\t   * Updates a component's children by processing a series of updates.\n\t   *\n\t   * @param {array<object>} updates List of update configurations.\n\t   * @internal\n\t   */\n\t  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);\n\t    DOMChildrenOperations.processUpdates(node, updates);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactDOMIDOperations;\n\n/***/ },\n/* 122 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMInput\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar DisabledInputUtils = __webpack_require__(25);\n\tvar DOMPropertyOperations = __webpack_require__(60);\n\tvar LinkedValueUtils = __webpack_require__(38);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnValueLink = false;\n\tvar didWarnCheckedLink = false;\n\tvar didWarnValueDefaultValue = false;\n\tvar didWarnCheckedDefaultChecked = false;\n\tvar didWarnControlledToUncontrolled = false;\n\tvar didWarnUncontrolledToControlled = false;\n\t\n\tfunction forceUpdateIfMounted() {\n\t  if (this._rootNodeID) {\n\t    // DOM component is still mounted; update\n\t    ReactDOMInput.updateWrapper(this);\n\t  }\n\t}\n\t\n\tfunction isControlled(props) {\n\t  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n\t  return usesChecked ? props.checked != null : props.value != null;\n\t}\n\t\n\t/**\n\t * Implements an <input> host component that allows setting these optional\n\t * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n\t *\n\t * If `checked` or `value` are not supplied (or null/undefined), user actions\n\t * that affect the checked state or value will trigger updates to the element.\n\t *\n\t * If they are supplied (and not null/undefined), the rendered element will not\n\t * trigger updates to the element. Instead, the props must change in order for\n\t * the rendered element to be updated.\n\t *\n\t * The rendered element will be initialized as unchecked (or `defaultChecked`)\n\t * with an empty value (or `defaultValue`).\n\t *\n\t * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n\t */\n\tvar ReactDOMInput = {\n\t  getHostProps: function (inst, props) {\n\t    var value = LinkedValueUtils.getValue(props);\n\t    var checked = LinkedValueUtils.getChecked(props);\n\t\n\t    var hostProps = _assign({\n\t      // Make sure we set .type before any other properties (setting .value\n\t      // before .type means .value is lost in IE11 and below)\n\t      type: undefined,\n\t      // Make sure we set .step before .value (setting .value before .step\n\t      // means .value is rounded on mount, based upon step precision)\n\t      step: undefined,\n\t      // Make sure we set .min & .max before .value (to ensure proper order\n\t      // in corner cases such as min or max deriving from value, e.g. Issue #7170)\n\t      min: undefined,\n\t      max: undefined\n\t    }, DisabledInputUtils.getHostProps(inst, props), {\n\t      defaultChecked: undefined,\n\t      defaultValue: undefined,\n\t      value: value != null ? value : inst._wrapperState.initialValue,\n\t      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n\t      onChange: inst._wrapperState.onChange\n\t    });\n\t\n\t    return hostProps;\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\t\n\t      var owner = inst._currentElement._owner;\n\t\n\t      if (props.valueLink !== undefined && !didWarnValueLink) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t        didWarnValueLink = true;\n\t      }\n\t      if (props.checkedLink !== undefined && !didWarnCheckedLink) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t        didWarnCheckedLink = true;\n\t      }\n\t      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnCheckedDefaultChecked = true;\n\t      }\n\t      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnValueDefaultValue = true;\n\t      }\n\t    }\n\t\n\t    var defaultValue = props.defaultValue;\n\t    inst._wrapperState = {\n\t      initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n\t      initialValue: props.value != null ? props.value : defaultValue,\n\t      listeners: null,\n\t      onChange: _handleChange.bind(inst)\n\t    };\n\t\n\t    if (false) {\n\t      inst._wrapperState.controlled = isControlled(props);\n\t    }\n\t  },\n\t\n\t  updateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    if (false) {\n\t      var controlled = isControlled(props);\n\t      var owner = inst._currentElement._owner;\n\t\n\t      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnUncontrolledToControlled = true;\n\t      }\n\t      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n\t        didWarnControlledToUncontrolled = true;\n\t      }\n\t    }\n\t\n\t    // TODO: Shouldn't this be getChecked(props)?\n\t    var checked = props.checked;\n\t    if (checked != null) {\n\t      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);\n\t    }\n\t\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t\n\t      // Cast `value` to a string to ensure the value is set correctly. While\n\t      // browsers typically do this as necessary, jsdom doesn't.\n\t      var newValue = '' + value;\n\t\n\t      // To avoid side effects (such as losing text selection), only set value if changed\n\t      if (newValue !== node.value) {\n\t        node.value = newValue;\n\t      }\n\t    } else {\n\t      if (props.value == null && props.defaultValue != null) {\n\t        node.defaultValue = '' + props.defaultValue;\n\t      }\n\t      if (props.checked == null && props.defaultChecked != null) {\n\t        node.defaultChecked = !!props.defaultChecked;\n\t      }\n\t    }\n\t  },\n\t\n\t  postMountWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    // This is in postMount because we need access to the DOM node, which is not\n\t    // available until after the component has mounted.\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t\n\t    // Detach value from defaultValue. We won't do anything if we're working on\n\t    // submit or reset inputs as those values & defaultValues are linked. They\n\t    // are not resetable nodes so this operation doesn't matter and actually\n\t    // removes browser-default values (eg \"Submit Query\") when no value is\n\t    // provided.\n\t\n\t    switch (props.type) {\n\t      case 'submit':\n\t      case 'reset':\n\t        break;\n\t      case 'color':\n\t      case 'date':\n\t      case 'datetime':\n\t      case 'datetime-local':\n\t      case 'month':\n\t      case 'time':\n\t      case 'week':\n\t        // This fixes the no-show issue on iOS Safari and Android Chrome:\n\t        // https://github.com/facebook/react/issues/7233\n\t        node.value = '';\n\t        node.value = node.defaultValue;\n\t        break;\n\t      default:\n\t        node.value = node.value;\n\t        break;\n\t    }\n\t\n\t    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n\t    // this is needed to work around a chrome bug where setting defaultChecked\n\t    // will sometimes influence the value of checked (even after detachment).\n\t    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n\t    // We need to temporarily unset name to avoid disrupting radio button groups.\n\t    var name = node.name;\n\t    if (name !== '') {\n\t      node.name = '';\n\t    }\n\t    node.defaultChecked = !node.defaultChecked;\n\t    node.defaultChecked = !node.defaultChecked;\n\t    if (name !== '') {\n\t      node.name = name;\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t\n\t  // Here we use asap to wait until all updates have propagated, which\n\t  // is important when using controlled components within layers:\n\t  // https://github.com/facebook/react/issues/1698\n\t  ReactUpdates.asap(forceUpdateIfMounted, this);\n\t\n\t  var name = props.name;\n\t  if (props.type === 'radio' && name != null) {\n\t    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);\n\t    var queryRoot = rootNode;\n\t\n\t    while (queryRoot.parentNode) {\n\t      queryRoot = queryRoot.parentNode;\n\t    }\n\t\n\t    // If `rootNode.form` was non-null, then we could try `form.elements`,\n\t    // but that sometimes behaves strangely in IE8. We could also try using\n\t    // `form.getElementsByName`, but that will only return direct children\n\t    // and won't include inputs that use the HTML5 `form=` attribute. Since\n\t    // the input might not even be in a form, let's just use the global\n\t    // `querySelectorAll` to ensure we don't miss anything.\n\t    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\t\n\t    for (var i = 0; i < group.length; i++) {\n\t      var otherNode = group[i];\n\t      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n\t        continue;\n\t      }\n\t      // This will throw if radio buttons rendered by different copies of React\n\t      // and the same name are rendered into the same form (same as #1939).\n\t      // That's probably okay; we don't support it just as we don't support\n\t      // mixing React radio buttons with non-React ones.\n\t      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);\n\t      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;\n\t      // If this is a controlled radio button group, forcing the input that\n\t      // was previously checked to update will cause it to be come re-checked\n\t      // as appropriate.\n\t      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n\t    }\n\t  }\n\t\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMInput;\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMOption\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactChildren = __webpack_require__(61);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDOMSelect = __webpack_require__(64);\n\t\n\tvar warning = __webpack_require__(3);\n\tvar didWarnInvalidOptionChildren = false;\n\t\n\tfunction flattenChildren(children) {\n\t  var content = '';\n\t\n\t  // Flatten children and warn if they aren't strings or numbers;\n\t  // invalid types are ignored.\n\t  ReactChildren.forEach(children, function (child) {\n\t    if (child == null) {\n\t      return;\n\t    }\n\t    if (typeof child === 'string' || typeof child === 'number') {\n\t      content += child;\n\t    } else if (!didWarnInvalidOptionChildren) {\n\t      didWarnInvalidOptionChildren = true;\n\t       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n\t    }\n\t  });\n\t\n\t  return content;\n\t}\n\t\n\t/**\n\t * Implements an <option> host component that warns when `selected` is set.\n\t */\n\tvar ReactDOMOption = {\n\t  mountWrapper: function (inst, props, hostParent) {\n\t    // TODO (yungsters): Remove support for `selected` in <option>.\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n\t    }\n\t\n\t    // Look up whether this option is 'selected'\n\t    var selectValue = null;\n\t    if (hostParent != null) {\n\t      var selectParent = hostParent;\n\t\n\t      if (selectParent._tag === 'optgroup') {\n\t        selectParent = selectParent._hostParent;\n\t      }\n\t\n\t      if (selectParent != null && selectParent._tag === 'select') {\n\t        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n\t      }\n\t    }\n\t\n\t    // If the value is null (e.g., no specified value or after initial mount)\n\t    // or missing (e.g., for <datalist>), we don't change props.selected\n\t    var selected = null;\n\t    if (selectValue != null) {\n\t      var value;\n\t      if (props.value != null) {\n\t        value = props.value + '';\n\t      } else {\n\t        value = flattenChildren(props.children);\n\t      }\n\t      selected = false;\n\t      if (Array.isArray(selectValue)) {\n\t        // multiple\n\t        for (var i = 0; i < selectValue.length; i++) {\n\t          if ('' + selectValue[i] === value) {\n\t            selected = true;\n\t            break;\n\t          }\n\t        }\n\t      } else {\n\t        selected = '' + selectValue === value;\n\t      }\n\t    }\n\t\n\t    inst._wrapperState = { selected: selected };\n\t  },\n\t\n\t  postMountWrapper: function (inst) {\n\t    // value=\"\" should make a value attribute (#6219)\n\t    var props = inst._currentElement.props;\n\t    if (props.value != null) {\n\t      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t      node.setAttribute('value', props.value);\n\t    }\n\t  },\n\t\n\t  getHostProps: function (inst, props) {\n\t    var hostProps = _assign({ selected: undefined, children: undefined }, props);\n\t\n\t    // Read state only from initial mount because <select> updates value\n\t    // manually; we need the initial state only for server rendering\n\t    if (inst._wrapperState.selected != null) {\n\t      hostProps.selected = inst._wrapperState.selected;\n\t    }\n\t\n\t    var content = flattenChildren(props.children);\n\t\n\t    if (content) {\n\t      hostProps.children = content;\n\t    }\n\t\n\t    return hostProps;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactDOMOption;\n\n/***/ },\n/* 124 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMSelection\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar getNodeForCharacterOffset = __webpack_require__(160);\n\tvar getTextContentAccessor = __webpack_require__(80);\n\t\n\t/**\n\t * While `isCollapsed` is available on the Selection object and `collapsed`\n\t * is available on the Range object, IE11 sometimes gets them wrong.\n\t * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n\t */\n\tfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n\t  return anchorNode === focusNode && anchorOffset === focusOffset;\n\t}\n\t\n\t/**\n\t * Get the appropriate anchor and focus node/offset pairs for IE.\n\t *\n\t * The catch here is that IE's selection API doesn't provide information\n\t * about whether the selection is forward or backward, so we have to\n\t * behave as though it's always forward.\n\t *\n\t * IE text differs from modern selection in that it behaves as though\n\t * block elements end with a new line. This means character offsets will\n\t * differ between the two APIs.\n\t *\n\t * @param {DOMElement} node\n\t * @return {object}\n\t */\n\tfunction getIEOffsets(node) {\n\t  var selection = document.selection;\n\t  var selectedRange = selection.createRange();\n\t  var selectedLength = selectedRange.text.length;\n\t\n\t  // Duplicate selection so we can move range without breaking user selection.\n\t  var fromStart = selectedRange.duplicate();\n\t  fromStart.moveToElementText(node);\n\t  fromStart.setEndPoint('EndToStart', selectedRange);\n\t\n\t  var startOffset = fromStart.text.length;\n\t  var endOffset = startOffset + selectedLength;\n\t\n\t  return {\n\t    start: startOffset,\n\t    end: endOffset\n\t  };\n\t}\n\t\n\t/**\n\t * @param {DOMElement} node\n\t * @return {?object}\n\t */\n\tfunction getModernOffsets(node) {\n\t  var selection = window.getSelection && window.getSelection();\n\t\n\t  if (!selection || selection.rangeCount === 0) {\n\t    return null;\n\t  }\n\t\n\t  var anchorNode = selection.anchorNode;\n\t  var anchorOffset = selection.anchorOffset;\n\t  var focusNode = selection.focusNode;\n\t  var focusOffset = selection.focusOffset;\n\t\n\t  var currentRange = selection.getRangeAt(0);\n\t\n\t  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n\t  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n\t  // divs do not seem to expose properties, triggering a \"Permission denied\n\t  // error\" if any of its properties are accessed. The only seemingly possible\n\t  // way to avoid erroring is to access a property that typically works for\n\t  // non-anonymous divs and catch any error that may otherwise arise. See\n\t  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n\t  try {\n\t    /* eslint-disable no-unused-expressions */\n\t    currentRange.startContainer.nodeType;\n\t    currentRange.endContainer.nodeType;\n\t    /* eslint-enable no-unused-expressions */\n\t  } catch (e) {\n\t    return null;\n\t  }\n\t\n\t  // If the node and offset values are the same, the selection is collapsed.\n\t  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n\t  // this value wrong.\n\t  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\t\n\t  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\t\n\t  var tempRange = currentRange.cloneRange();\n\t  tempRange.selectNodeContents(node);\n\t  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\t\n\t  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\t\n\t  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n\t  var end = start + rangeLength;\n\t\n\t  // Detect whether the selection is backward.\n\t  var detectionRange = document.createRange();\n\t  detectionRange.setStart(anchorNode, anchorOffset);\n\t  detectionRange.setEnd(focusNode, focusOffset);\n\t  var isBackward = detectionRange.collapsed;\n\t\n\t  return {\n\t    start: isBackward ? end : start,\n\t    end: isBackward ? start : end\n\t  };\n\t}\n\t\n\t/**\n\t * @param {DOMElement|DOMTextNode} node\n\t * @param {object} offsets\n\t */\n\tfunction setIEOffsets(node, offsets) {\n\t  var range = document.selection.createRange().duplicate();\n\t  var start, end;\n\t\n\t  if (offsets.end === undefined) {\n\t    start = offsets.start;\n\t    end = start;\n\t  } else if (offsets.start > offsets.end) {\n\t    start = offsets.end;\n\t    end = offsets.start;\n\t  } else {\n\t    start = offsets.start;\n\t    end = offsets.end;\n\t  }\n\t\n\t  range.moveToElementText(node);\n\t  range.moveStart('character', start);\n\t  range.setEndPoint('EndToStart', range);\n\t  range.moveEnd('character', end - start);\n\t  range.select();\n\t}\n\t\n\t/**\n\t * In modern non-IE browsers, we can support both forward and backward\n\t * selections.\n\t *\n\t * Note: IE10+ supports the Selection object, but it does not support\n\t * the `extend` method, which means that even in modern IE, it's not possible\n\t * to programmatically create a backward selection. Thus, for all IE\n\t * versions, we use the old IE API to create our selections.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @param {object} offsets\n\t */\n\tfunction setModernOffsets(node, offsets) {\n\t  if (!window.getSelection) {\n\t    return;\n\t  }\n\t\n\t  var selection = window.getSelection();\n\t  var length = node[getTextContentAccessor()].length;\n\t  var start = Math.min(offsets.start, length);\n\t  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\t\n\t  // IE 11 uses modern selection, but doesn't support the extend method.\n\t  // Flip backward selections, so we can set with a single range.\n\t  if (!selection.extend && start > end) {\n\t    var temp = end;\n\t    end = start;\n\t    start = temp;\n\t  }\n\t\n\t  var startMarker = getNodeForCharacterOffset(node, start);\n\t  var endMarker = getNodeForCharacterOffset(node, end);\n\t\n\t  if (startMarker && endMarker) {\n\t    var range = document.createRange();\n\t    range.setStart(startMarker.node, startMarker.offset);\n\t    selection.removeAllRanges();\n\t\n\t    if (start > end) {\n\t      selection.addRange(range);\n\t      selection.extend(endMarker.node, endMarker.offset);\n\t    } else {\n\t      range.setEnd(endMarker.node, endMarker.offset);\n\t      selection.addRange(range);\n\t    }\n\t  }\n\t}\n\t\n\tvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\t\n\tvar ReactDOMSelection = {\n\t  /**\n\t   * @param {DOMElement} node\n\t   */\n\t  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\t\n\t  /**\n\t   * @param {DOMElement|DOMTextNode} node\n\t   * @param {object} offsets\n\t   */\n\t  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n\t};\n\t\n\tmodule.exports = ReactDOMSelection;\n\n/***/ },\n/* 125 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMTextComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar DOMChildrenOperations = __webpack_require__(33);\n\tvar DOMLazyTree = __webpack_require__(16);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\t\n\tvar escapeTextContentForBrowser = __webpack_require__(28);\n\tvar invariant = __webpack_require__(1);\n\tvar validateDOMNesting = __webpack_require__(55);\n\t\n\t/**\n\t * Text nodes violate a couple assumptions that React makes about components:\n\t *\n\t *  - When mounting text into the DOM, adjacent text nodes are merged.\n\t *  - Text nodes cannot be assigned a React root ID.\n\t *\n\t * This component is used to wrap strings between comment nodes so that they\n\t * can undergo the same reconciliation that is applied to elements.\n\t *\n\t * TODO: Investigate representing React components in the DOM with text nodes.\n\t *\n\t * @class ReactDOMTextComponent\n\t * @extends ReactComponent\n\t * @internal\n\t */\n\tvar ReactDOMTextComponent = function (text) {\n\t  // TODO: This is really a ReactText (ReactNode), not a ReactElement\n\t  this._currentElement = text;\n\t  this._stringText = '' + text;\n\t  // ReactDOMComponentTree uses these:\n\t  this._hostNode = null;\n\t  this._hostParent = null;\n\t\n\t  // Properties\n\t  this._domID = 0;\n\t  this._mountIndex = 0;\n\t  this._closingComment = null;\n\t  this._commentNodes = null;\n\t};\n\t\n\t_assign(ReactDOMTextComponent.prototype, {\n\t\n\t  /**\n\t   * Creates the markup for this text node. This node is not intended to have\n\t   * any features besides containing text content.\n\t   *\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @return {string} Markup for this text node.\n\t   * @internal\n\t   */\n\t  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n\t    if (false) {\n\t      var parentInfo;\n\t      if (hostParent != null) {\n\t        parentInfo = hostParent._ancestorInfo;\n\t      } else if (hostContainerInfo != null) {\n\t        parentInfo = hostContainerInfo._ancestorInfo;\n\t      }\n\t      if (parentInfo) {\n\t        // parentInfo should always be present except for the top-level\n\t        // component when server rendering\n\t        validateDOMNesting(null, this._stringText, this, parentInfo);\n\t      }\n\t    }\n\t\n\t    var domID = hostContainerInfo._idCounter++;\n\t    var openingValue = ' react-text: ' + domID + ' ';\n\t    var closingValue = ' /react-text ';\n\t    this._domID = domID;\n\t    this._hostParent = hostParent;\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = hostContainerInfo._ownerDocument;\n\t      var openingComment = ownerDocument.createComment(openingValue);\n\t      var closingComment = ownerDocument.createComment(closingValue);\n\t      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());\n\t      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));\n\t      if (this._stringText) {\n\t        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));\n\t      }\n\t      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));\n\t      ReactDOMComponentTree.precacheNode(this, openingComment);\n\t      this._closingComment = closingComment;\n\t      return lazyTree;\n\t    } else {\n\t      var escapedText = escapeTextContentForBrowser(this._stringText);\n\t\n\t      if (transaction.renderToStaticMarkup) {\n\t        // Normally we'd wrap this between comment nodes for the reasons stated\n\t        // above, but since this is a situation where React won't take over\n\t        // (static pages), we can simply return the text as it is.\n\t        return escapedText;\n\t      }\n\t\n\t      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Updates this component by updating the text content.\n\t   *\n\t   * @param {ReactText} nextText The next text content\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  receiveComponent: function (nextText, transaction) {\n\t    if (nextText !== this._currentElement) {\n\t      this._currentElement = nextText;\n\t      var nextStringText = '' + nextText;\n\t      if (nextStringText !== this._stringText) {\n\t        // TODO: Save this as pending props and use performUpdateIfNecessary\n\t        // and/or updateComponent to do the actual update for consistency with\n\t        // other component types?\n\t        this._stringText = nextStringText;\n\t        var commentNodes = this.getHostNode();\n\t        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);\n\t      }\n\t    }\n\t  },\n\t\n\t  getHostNode: function () {\n\t    var hostNode = this._commentNodes;\n\t    if (hostNode) {\n\t      return hostNode;\n\t    }\n\t    if (!this._closingComment) {\n\t      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);\n\t      var node = openingComment.nextSibling;\n\t      while (true) {\n\t        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;\n\t        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {\n\t          this._closingComment = node;\n\t          break;\n\t        }\n\t        node = node.nextSibling;\n\t      }\n\t    }\n\t    hostNode = [this._hostNode, this._closingComment];\n\t    this._commentNodes = hostNode;\n\t    return hostNode;\n\t  },\n\t\n\t  unmountComponent: function () {\n\t    this._closingComment = null;\n\t    this._commentNodes = null;\n\t    ReactDOMComponentTree.uncacheNode(this);\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = ReactDOMTextComponent;\n\n/***/ },\n/* 126 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMTextarea\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2),\n\t    _assign = __webpack_require__(4);\n\t\n\tvar DisabledInputUtils = __webpack_require__(25);\n\tvar LinkedValueUtils = __webpack_require__(38);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnValueLink = false;\n\tvar didWarnValDefaultVal = false;\n\t\n\tfunction forceUpdateIfMounted() {\n\t  if (this._rootNodeID) {\n\t    // DOM component is still mounted; update\n\t    ReactDOMTextarea.updateWrapper(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Implements a <textarea> host component that allows setting `value`, and\n\t * `defaultValue`. This differs from the traditional DOM API because value is\n\t * usually set as PCDATA children.\n\t *\n\t * If `value` is not supplied (or null/undefined), user actions that affect the\n\t * value will trigger updates to the element.\n\t *\n\t * If `value` is supplied (and not null/undefined), the rendered element will\n\t * not trigger updates to the element. Instead, the `value` prop must change in\n\t * order for the rendered element to be updated.\n\t *\n\t * The rendered element will be initialized with an empty value, the prop\n\t * `defaultValue` if specified, or the children content (deprecated).\n\t */\n\tvar ReactDOMTextarea = {\n\t  getHostProps: function (inst, props) {\n\t    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;\n\t\n\t    // Always set children to the same thing. In IE9, the selection range will\n\t    // get reset if `textContent` is mutated.  We could add a check in setTextContent\n\t    // to only set the value if/when the value differs from the node value (which would\n\t    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.\n\t    // The value can be a boolean or object so that's why it's forced to be a string.\n\t    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {\n\t      value: undefined,\n\t      defaultValue: undefined,\n\t      children: '' + inst._wrapperState.initialValue,\n\t      onChange: inst._wrapperState.onChange\n\t    });\n\t\n\t    return hostProps;\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n\t      if (props.valueLink !== undefined && !didWarnValueLink) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;\n\t        didWarnValueLink = true;\n\t      }\n\t      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n\t        didWarnValDefaultVal = true;\n\t      }\n\t    }\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    var initialValue = value;\n\t\n\t    // Only bother fetching default value if we're going to use it\n\t    if (value == null) {\n\t      var defaultValue = props.defaultValue;\n\t      // TODO (yungsters): Remove support for children content in <textarea>.\n\t      var children = props.children;\n\t      if (children != null) {\n\t        if (false) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;\n\t        }\n\t        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;\n\t        if (Array.isArray(children)) {\n\t          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;\n\t          children = children[0];\n\t        }\n\t\n\t        defaultValue = '' + children;\n\t      }\n\t      if (defaultValue == null) {\n\t        defaultValue = '';\n\t      }\n\t      initialValue = defaultValue;\n\t    }\n\t\n\t    inst._wrapperState = {\n\t      initialValue: '' + initialValue,\n\t      listeners: null,\n\t      onChange: _handleChange.bind(inst)\n\t    };\n\t  },\n\t\n\t  updateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      // Cast `value` to a string to ensure the value is set correctly. While\n\t      // browsers typically do this as necessary, jsdom doesn't.\n\t      var newValue = '' + value;\n\t\n\t      // To avoid side effects (such as losing text selection), only set value if changed\n\t      if (newValue !== node.value) {\n\t        node.value = newValue;\n\t      }\n\t      if (props.defaultValue == null) {\n\t        node.defaultValue = newValue;\n\t      }\n\t    }\n\t    if (props.defaultValue != null) {\n\t      node.defaultValue = props.defaultValue;\n\t    }\n\t  },\n\t\n\t  postMountWrapper: function (inst) {\n\t    // This is in postMount because we need access to the DOM node, which is not\n\t    // available until after the component has mounted.\n\t    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t\n\t    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.\n\t    node.value = node.textContent; // Detach value from defaultValue\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t  ReactUpdates.asap(forceUpdateIfMounted, this);\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMTextarea;\n\n/***/ },\n/* 127 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMTreeTraversal\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Return the lowest common ancestor of A and B, or null if they are in\n\t * different trees.\n\t */\n\tfunction getLowestCommonAncestor(instA, instB) {\n\t  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\t  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\t\n\t  var depthA = 0;\n\t  for (var tempA = instA; tempA; tempA = tempA._hostParent) {\n\t    depthA++;\n\t  }\n\t  var depthB = 0;\n\t  for (var tempB = instB; tempB; tempB = tempB._hostParent) {\n\t    depthB++;\n\t  }\n\t\n\t  // If A is deeper, crawl up.\n\t  while (depthA - depthB > 0) {\n\t    instA = instA._hostParent;\n\t    depthA--;\n\t  }\n\t\n\t  // If B is deeper, crawl up.\n\t  while (depthB - depthA > 0) {\n\t    instB = instB._hostParent;\n\t    depthB--;\n\t  }\n\t\n\t  // Walk in lockstep until we find a match.\n\t  var depth = depthA;\n\t  while (depth--) {\n\t    if (instA === instB) {\n\t      return instA;\n\t    }\n\t    instA = instA._hostParent;\n\t    instB = instB._hostParent;\n\t  }\n\t  return null;\n\t}\n\t\n\t/**\n\t * Return if A is an ancestor of B.\n\t */\n\tfunction isAncestor(instA, instB) {\n\t  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\t  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\t\n\t  while (instB) {\n\t    if (instB === instA) {\n\t      return true;\n\t    }\n\t    instB = instB._hostParent;\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Return the parent instance of the passed-in instance.\n\t */\n\tfunction getParentInstance(inst) {\n\t  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;\n\t\n\t  return inst._hostParent;\n\t}\n\t\n\t/**\n\t * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n\t */\n\tfunction traverseTwoPhase(inst, fn, arg) {\n\t  var path = [];\n\t  while (inst) {\n\t    path.push(inst);\n\t    inst = inst._hostParent;\n\t  }\n\t  var i;\n\t  for (i = path.length; i-- > 0;) {\n\t    fn(path[i], false, arg);\n\t  }\n\t  for (i = 0; i < path.length; i++) {\n\t    fn(path[i], true, arg);\n\t  }\n\t}\n\t\n\t/**\n\t * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n\t * should would receive a `mouseEnter` or `mouseLeave` event.\n\t *\n\t * Does not invoke the callback on the nearest common ancestor because nothing\n\t * \"entered\" or \"left\" that element.\n\t */\n\tfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\n\t  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n\t  var pathFrom = [];\n\t  while (from && from !== common) {\n\t    pathFrom.push(from);\n\t    from = from._hostParent;\n\t  }\n\t  var pathTo = [];\n\t  while (to && to !== common) {\n\t    pathTo.push(to);\n\t    to = to._hostParent;\n\t  }\n\t  var i;\n\t  for (i = 0; i < pathFrom.length; i++) {\n\t    fn(pathFrom[i], true, argFrom);\n\t  }\n\t  for (i = pathTo.length; i-- > 0;) {\n\t    fn(pathTo[i], false, argTo);\n\t  }\n\t}\n\t\n\tmodule.exports = {\n\t  isAncestor: isAncestor,\n\t  getLowestCommonAncestor: getLowestCommonAncestor,\n\t  getParentInstance: getParentInstance,\n\t  traverseTwoPhase: traverseTwoPhase,\n\t  traverseEnterLeave: traverseEnterLeave\n\t};\n\n/***/ },\n/* 128 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDefaultBatchingStrategy\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactUpdates = __webpack_require__(10);\n\tvar Transaction = __webpack_require__(23);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\t\n\tvar RESET_BATCHED_UPDATES = {\n\t  initialize: emptyFunction,\n\t  close: function () {\n\t    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n\t  }\n\t};\n\t\n\tvar FLUSH_BATCHED_UPDATES = {\n\t  initialize: emptyFunction,\n\t  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n\t};\n\t\n\tvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\t\n\tfunction ReactDefaultBatchingStrategyTransaction() {\n\t  this.reinitializeTransaction();\n\t}\n\t\n\t_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  }\n\t});\n\t\n\tvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\t\n\tvar ReactDefaultBatchingStrategy = {\n\t  isBatchingUpdates: false,\n\t\n\t  /**\n\t   * Call the provided function in a context within which calls to `setState`\n\t   * and friends are batched such that components aren't updated unnecessarily.\n\t   */\n\t  batchedUpdates: function (callback, a, b, c, d, e) {\n\t    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\t\n\t    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\t\n\t    // The code is written this way to avoid extra allocations\n\t    if (alreadyBatchingUpdates) {\n\t      callback(a, b, c, d, e);\n\t    } else {\n\t      transaction.perform(callback, null, a, b, c, d, e);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactDefaultBatchingStrategy;\n\n/***/ },\n/* 129 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDefaultInjection\n\t */\n\t\n\t'use strict';\n\t\n\tvar BeforeInputEventPlugin = __webpack_require__(102);\n\tvar ChangeEventPlugin = __webpack_require__(104);\n\tvar DefaultEventPluginOrder = __webpack_require__(106);\n\tvar EnterLeaveEventPlugin = __webpack_require__(107);\n\tvar HTMLDOMPropertyConfig = __webpack_require__(109);\n\tvar ReactComponentBrowserEnvironment = __webpack_require__(112);\n\tvar ReactDOMComponent = __webpack_require__(116);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactDOMEmptyComponent = __webpack_require__(118);\n\tvar ReactDOMTreeTraversal = __webpack_require__(127);\n\tvar ReactDOMTextComponent = __webpack_require__(125);\n\tvar ReactDefaultBatchingStrategy = __webpack_require__(128);\n\tvar ReactEventListener = __webpack_require__(131);\n\tvar ReactInjection = __webpack_require__(132);\n\tvar ReactReconcileTransaction = __webpack_require__(137);\n\tvar SVGDOMPropertyConfig = __webpack_require__(141);\n\tvar SelectEventPlugin = __webpack_require__(142);\n\tvar SimpleEventPlugin = __webpack_require__(143);\n\t\n\tvar alreadyInjected = false;\n\t\n\tfunction inject() {\n\t  if (alreadyInjected) {\n\t    // TODO: This is currently true because these injections are shared between\n\t    // the client and the server package. They should be built independently\n\t    // and not share any injection state. Then this problem will be solved.\n\t    return;\n\t  }\n\t  alreadyInjected = true;\n\t\n\t  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\t\n\t  /**\n\t   * Inject modules for resolving DOM hierarchy and plugin ordering.\n\t   */\n\t  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n\t  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n\t  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n\t\n\t  /**\n\t   * Some important event plugins included by default (without having to require\n\t   * them).\n\t   */\n\t  ReactInjection.EventPluginHub.injectEventPluginsByName({\n\t    SimpleEventPlugin: SimpleEventPlugin,\n\t    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n\t    ChangeEventPlugin: ChangeEventPlugin,\n\t    SelectEventPlugin: SelectEventPlugin,\n\t    BeforeInputEventPlugin: BeforeInputEventPlugin\n\t  });\n\t\n\t  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n\t\n\t  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n\t\n\t  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n\t  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\t\n\t  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n\t    return new ReactDOMEmptyComponent(instantiate);\n\t  });\n\t\n\t  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n\t  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\t\n\t  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n\t}\n\t\n\tmodule.exports = {\n\t  inject: inject\n\t};\n\n/***/ },\n/* 130 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactEventEmitterMixin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPluginHub = __webpack_require__(19);\n\t\n\tfunction runEventQueueInBatch(events) {\n\t  EventPluginHub.enqueueEvents(events);\n\t  EventPluginHub.processEventQueue(false);\n\t}\n\t\n\tvar ReactEventEmitterMixin = {\n\t\n\t  /**\n\t   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n\t   * opportunity to create `ReactEvent`s to be dispatched.\n\t   */\n\t  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n\t    runEventQueueInBatch(events);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactEventEmitterMixin;\n\n/***/ },\n/* 131 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactEventListener\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar EventListener = __webpack_require__(84);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar PooledClass = __webpack_require__(13);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar getEventTarget = __webpack_require__(51);\n\tvar getUnboundedScrollPosition = __webpack_require__(171);\n\t\n\t/**\n\t * Find the deepest React component completely containing the root of the\n\t * passed-in instance (for use when entire React trees are nested within each\n\t * other). If React trees are not nested, returns null.\n\t */\n\tfunction findParent(inst) {\n\t  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n\t  // traversal, but caching is difficult to do correctly without using a\n\t  // mutation observer to listen for all DOM changes.\n\t  while (inst._hostParent) {\n\t    inst = inst._hostParent;\n\t  }\n\t  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t  var container = rootNode.parentNode;\n\t  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n\t}\n\t\n\t// Used to store ancestor hierarchy in top level callback\n\tfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n\t  this.topLevelType = topLevelType;\n\t  this.nativeEvent = nativeEvent;\n\t  this.ancestors = [];\n\t}\n\t_assign(TopLevelCallbackBookKeeping.prototype, {\n\t  destructor: function () {\n\t    this.topLevelType = null;\n\t    this.nativeEvent = null;\n\t    this.ancestors.length = 0;\n\t  }\n\t});\n\tPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\t\n\tfunction handleTopLevelImpl(bookKeeping) {\n\t  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n\t  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\t\n\t  // Loop through the hierarchy, in case there's any nested components.\n\t  // It's important that we build the array of ancestors before calling any\n\t  // event handlers, because event handlers can modify the DOM, leading to\n\t  // inconsistencies with ReactMount's node cache. See #1105.\n\t  var ancestor = targetInst;\n\t  do {\n\t    bookKeeping.ancestors.push(ancestor);\n\t    ancestor = ancestor && findParent(ancestor);\n\t  } while (ancestor);\n\t\n\t  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n\t    targetInst = bookKeeping.ancestors[i];\n\t    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n\t  }\n\t}\n\t\n\tfunction scrollValueMonitor(cb) {\n\t  var scrollPosition = getUnboundedScrollPosition(window);\n\t  cb(scrollPosition);\n\t}\n\t\n\tvar ReactEventListener = {\n\t  _enabled: true,\n\t  _handleTopLevel: null,\n\t\n\t  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\t\n\t  setHandleTopLevel: function (handleTopLevel) {\n\t    ReactEventListener._handleTopLevel = handleTopLevel;\n\t  },\n\t\n\t  setEnabled: function (enabled) {\n\t    ReactEventListener._enabled = !!enabled;\n\t  },\n\t\n\t  isEnabled: function () {\n\t    return ReactEventListener._enabled;\n\t  },\n\t\n\t  /**\n\t   * Traps top-level events by using event bubbling.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {string} handlerBaseName Event name (e.g. \"click\").\n\t   * @param {object} handle Element on which to attach listener.\n\t   * @return {?object} An object with a remove function which will forcefully\n\t   *                  remove the listener.\n\t   * @internal\n\t   */\n\t  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n\t    var element = handle;\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n\t  },\n\t\n\t  /**\n\t   * Traps a top-level event by using event capturing.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {string} handlerBaseName Event name (e.g. \"click\").\n\t   * @param {object} handle Element on which to attach listener.\n\t   * @return {?object} An object with a remove function which will forcefully\n\t   *                  remove the listener.\n\t   * @internal\n\t   */\n\t  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n\t    var element = handle;\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n\t  },\n\t\n\t  monitorScrollValue: function (refresh) {\n\t    var callback = scrollValueMonitor.bind(null, refresh);\n\t    EventListener.listen(window, 'scroll', callback);\n\t  },\n\t\n\t  dispatchEvent: function (topLevelType, nativeEvent) {\n\t    if (!ReactEventListener._enabled) {\n\t      return;\n\t    }\n\t\n\t    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n\t    try {\n\t      // Event queue being processed in the same cycle allows\n\t      // `preventDefault`.\n\t      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n\t    } finally {\n\t      TopLevelCallbackBookKeeping.release(bookKeeping);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactEventListener;\n\n/***/ },\n/* 132 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactInjection\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\tvar EventPluginHub = __webpack_require__(19);\n\tvar EventPluginUtils = __webpack_require__(36);\n\tvar ReactComponentEnvironment = __webpack_require__(40);\n\tvar ReactClass = __webpack_require__(62);\n\tvar ReactEmptyComponent = __webpack_require__(65);\n\tvar ReactBrowserEventEmitter = __webpack_require__(26);\n\tvar ReactHostComponent = __webpack_require__(67);\n\tvar ReactUpdates = __webpack_require__(10);\n\t\n\tvar ReactInjection = {\n\t  Component: ReactComponentEnvironment.injection,\n\t  Class: ReactClass.injection,\n\t  DOMProperty: DOMProperty.injection,\n\t  EmptyComponent: ReactEmptyComponent.injection,\n\t  EventPluginHub: EventPluginHub.injection,\n\t  EventPluginUtils: EventPluginUtils.injection,\n\t  EventEmitter: ReactBrowserEventEmitter.injection,\n\t  HostComponent: ReactHostComponent.injection,\n\t  Updates: ReactUpdates.injection\n\t};\n\t\n\tmodule.exports = ReactInjection;\n\n/***/ },\n/* 133 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactMarkupChecksum\n\t */\n\t\n\t'use strict';\n\t\n\tvar adler32 = __webpack_require__(154);\n\t\n\tvar TAG_END = /\\/?>/;\n\tvar COMMENT_START = /^<\\!\\-\\-/;\n\t\n\tvar ReactMarkupChecksum = {\n\t  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\t\n\t  /**\n\t   * @param {string} markup Markup string\n\t   * @return {string} Markup string with checksum attribute attached\n\t   */\n\t  addChecksumToMarkup: function (markup) {\n\t    var checksum = adler32(markup);\n\t\n\t    // Add checksum (handle both parent tags, comments and self-closing tags)\n\t    if (COMMENT_START.test(markup)) {\n\t      return markup;\n\t    } else {\n\t      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {string} markup to use\n\t   * @param {DOMElement} element root React element\n\t   * @returns {boolean} whether or not the markup is the same\n\t   */\n\t  canReuseMarkup: function (markup, element) {\n\t    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n\t    var markupChecksum = adler32(markup);\n\t    return markupChecksum === existingChecksum;\n\t  }\n\t};\n\t\n\tmodule.exports = ReactMarkupChecksum;\n\n/***/ },\n/* 134 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactMultiChild\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactComponentEnvironment = __webpack_require__(40);\n\tvar ReactInstanceMap = __webpack_require__(21);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar ReactMultiChildUpdateTypes = __webpack_require__(70);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(14);\n\tvar ReactReconciler = __webpack_require__(18);\n\tvar ReactChildReconciler = __webpack_require__(111);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar flattenChildren = __webpack_require__(158);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Make an update for markup to be rendered and inserted at a supplied index.\n\t *\n\t * @param {string} markup Markup that renders into an element.\n\t * @param {number} toIndex Destination index.\n\t * @private\n\t */\n\tfunction makeInsertMarkup(markup, afterNode, toIndex) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\n\t    content: markup,\n\t    fromIndex: null,\n\t    fromNode: null,\n\t    toIndex: toIndex,\n\t    afterNode: afterNode\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for moving an existing element to another index.\n\t *\n\t * @param {number} fromIndex Source index of the existing element.\n\t * @param {number} toIndex Destination index of the element.\n\t * @private\n\t */\n\tfunction makeMove(child, afterNode, toIndex) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\n\t    content: null,\n\t    fromIndex: child._mountIndex,\n\t    fromNode: ReactReconciler.getHostNode(child),\n\t    toIndex: toIndex,\n\t    afterNode: afterNode\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for removing an element at an index.\n\t *\n\t * @param {number} fromIndex Index of the element to remove.\n\t * @private\n\t */\n\tfunction makeRemove(child, node) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\n\t    content: null,\n\t    fromIndex: child._mountIndex,\n\t    fromNode: node,\n\t    toIndex: null,\n\t    afterNode: null\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for setting the markup of a node.\n\t *\n\t * @param {string} markup Markup that renders into an element.\n\t * @private\n\t */\n\tfunction makeSetMarkup(markup) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: ReactMultiChildUpdateTypes.SET_MARKUP,\n\t    content: markup,\n\t    fromIndex: null,\n\t    fromNode: null,\n\t    toIndex: null,\n\t    afterNode: null\n\t  };\n\t}\n\t\n\t/**\n\t * Make an update for setting the text content.\n\t *\n\t * @param {string} textContent Text content to set.\n\t * @private\n\t */\n\tfunction makeTextContent(textContent) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  return {\n\t    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\n\t    content: textContent,\n\t    fromIndex: null,\n\t    fromNode: null,\n\t    toIndex: null,\n\t    afterNode: null\n\t  };\n\t}\n\t\n\t/**\n\t * Push an update, if any, onto the queue. Creates a new queue if none is\n\t * passed and always returns the queue. Mutative.\n\t */\n\tfunction enqueue(queue, update) {\n\t  if (update) {\n\t    queue = queue || [];\n\t    queue.push(update);\n\t  }\n\t  return queue;\n\t}\n\t\n\t/**\n\t * Processes any enqueued updates.\n\t *\n\t * @private\n\t */\n\tfunction processQueue(inst, updateQueue) {\n\t  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);\n\t}\n\t\n\tvar setChildrenForInstrumentation = emptyFunction;\n\tif (false) {\n\t  var getDebugID = function (inst) {\n\t    if (!inst._debugID) {\n\t      // Check for ART-like instances. TODO: This is silly/gross.\n\t      var internal;\n\t      if (internal = ReactInstanceMap.get(inst)) {\n\t        inst = internal;\n\t      }\n\t    }\n\t    return inst._debugID;\n\t  };\n\t  setChildrenForInstrumentation = function (children) {\n\t    var debugID = getDebugID(this);\n\t    // TODO: React Native empty components are also multichild.\n\t    // This means they still get into this method but don't have _debugID.\n\t    if (debugID !== 0) {\n\t      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {\n\t        return children[key]._debugID;\n\t      }) : []);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * ReactMultiChild are capable of reconciling multiple children.\n\t *\n\t * @class ReactMultiChild\n\t * @internal\n\t */\n\tvar ReactMultiChild = {\n\t\n\t  /**\n\t   * Provides common functionality for components that must reconcile multiple\n\t   * children. This is used by `ReactDOMComponent` to mount, update, and\n\t   * unmount child components.\n\t   *\n\t   * @lends {ReactMultiChild.prototype}\n\t   */\n\t  Mixin: {\n\t\n\t    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n\t      if (false) {\n\t        var selfDebugID = getDebugID(this);\n\t        if (this._currentElement) {\n\t          try {\n\t            ReactCurrentOwner.current = this._currentElement._owner;\n\t            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);\n\t          } finally {\n\t            ReactCurrentOwner.current = null;\n\t          }\n\t        }\n\t      }\n\t      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n\t    },\n\t\n\t    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {\n\t      var nextChildren;\n\t      var selfDebugID = 0;\n\t      if (false) {\n\t        selfDebugID = getDebugID(this);\n\t        if (this._currentElement) {\n\t          try {\n\t            ReactCurrentOwner.current = this._currentElement._owner;\n\t            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n\t          } finally {\n\t            ReactCurrentOwner.current = null;\n\t          }\n\t          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n\t          return nextChildren;\n\t        }\n\t      }\n\t      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n\t      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n\t      return nextChildren;\n\t    },\n\t\n\t    /**\n\t     * Generates a \"mount image\" for each of the supplied children. In the case\n\t     * of `ReactDOMComponent`, a mount image is a string of markup.\n\t     *\n\t     * @param {?object} nestedChildren Nested child maps.\n\t     * @return {array} An array of mounted representations.\n\t     * @internal\n\t     */\n\t    mountChildren: function (nestedChildren, transaction, context) {\n\t      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n\t      this._renderedChildren = children;\n\t\n\t      var mountImages = [];\n\t      var index = 0;\n\t      for (var name in children) {\n\t        if (children.hasOwnProperty(name)) {\n\t          var child = children[name];\n\t          var selfDebugID = 0;\n\t          if (false) {\n\t            selfDebugID = getDebugID(this);\n\t          }\n\t          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);\n\t          child._mountIndex = index++;\n\t          mountImages.push(mountImage);\n\t        }\n\t      }\n\t\n\t      if (false) {\n\t        setChildrenForInstrumentation.call(this, children);\n\t      }\n\t\n\t      return mountImages;\n\t    },\n\t\n\t    /**\n\t     * Replaces any rendered children with a text content string.\n\t     *\n\t     * @param {string} nextContent String of content.\n\t     * @internal\n\t     */\n\t    updateTextContent: function (nextContent) {\n\t      var prevChildren = this._renderedChildren;\n\t      // Remove any rendered children.\n\t      ReactChildReconciler.unmountChildren(prevChildren, false);\n\t      for (var name in prevChildren) {\n\t        if (prevChildren.hasOwnProperty(name)) {\n\t           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n\t        }\n\t      }\n\t      // Set new text content.\n\t      var updates = [makeTextContent(nextContent)];\n\t      processQueue(this, updates);\n\t    },\n\t\n\t    /**\n\t     * Replaces any rendered children with a markup string.\n\t     *\n\t     * @param {string} nextMarkup String of markup.\n\t     * @internal\n\t     */\n\t    updateMarkup: function (nextMarkup) {\n\t      var prevChildren = this._renderedChildren;\n\t      // Remove any rendered children.\n\t      ReactChildReconciler.unmountChildren(prevChildren, false);\n\t      for (var name in prevChildren) {\n\t        if (prevChildren.hasOwnProperty(name)) {\n\t           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n\t        }\n\t      }\n\t      var updates = [makeSetMarkup(nextMarkup)];\n\t      processQueue(this, updates);\n\t    },\n\t\n\t    /**\n\t     * Updates the rendered children with new children.\n\t     *\n\t     * @param {?object} nextNestedChildrenElements Nested child element maps.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @internal\n\t     */\n\t    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n\t      // Hook used by React ART\n\t      this._updateChildren(nextNestedChildrenElements, transaction, context);\n\t    },\n\t\n\t    /**\n\t     * @param {?object} nextNestedChildrenElements Nested child element maps.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @final\n\t     * @protected\n\t     */\n\t    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n\t      var prevChildren = this._renderedChildren;\n\t      var removedNodes = {};\n\t      var mountImages = [];\n\t      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);\n\t      if (!nextChildren && !prevChildren) {\n\t        return;\n\t      }\n\t      var updates = null;\n\t      var name;\n\t      // `nextIndex` will increment for each child in `nextChildren`, but\n\t      // `lastIndex` will be the last index visited in `prevChildren`.\n\t      var nextIndex = 0;\n\t      var lastIndex = 0;\n\t      // `nextMountIndex` will increment for each newly mounted child.\n\t      var nextMountIndex = 0;\n\t      var lastPlacedNode = null;\n\t      for (name in nextChildren) {\n\t        if (!nextChildren.hasOwnProperty(name)) {\n\t          continue;\n\t        }\n\t        var prevChild = prevChildren && prevChildren[name];\n\t        var nextChild = nextChildren[name];\n\t        if (prevChild === nextChild) {\n\t          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));\n\t          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n\t          prevChild._mountIndex = nextIndex;\n\t        } else {\n\t          if (prevChild) {\n\t            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n\t            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n\t            // The `removedNodes` loop below will actually remove the child.\n\t          }\n\t          // The child must be instantiated before it's mounted.\n\t          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));\n\t          nextMountIndex++;\n\t        }\n\t        nextIndex++;\n\t        lastPlacedNode = ReactReconciler.getHostNode(nextChild);\n\t      }\n\t      // Remove children that are no longer present.\n\t      for (name in removedNodes) {\n\t        if (removedNodes.hasOwnProperty(name)) {\n\t          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));\n\t        }\n\t      }\n\t      if (updates) {\n\t        processQueue(this, updates);\n\t      }\n\t      this._renderedChildren = nextChildren;\n\t\n\t      if (false) {\n\t        setChildrenForInstrumentation.call(this, nextChildren);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Unmounts all rendered children. This should be used to clean up children\n\t     * when this component is unmounted. It does not actually perform any\n\t     * backend operations.\n\t     *\n\t     * @internal\n\t     */\n\t    unmountChildren: function (safely) {\n\t      var renderedChildren = this._renderedChildren;\n\t      ReactChildReconciler.unmountChildren(renderedChildren, safely);\n\t      this._renderedChildren = null;\n\t    },\n\t\n\t    /**\n\t     * Moves a child component to the supplied index.\n\t     *\n\t     * @param {ReactComponent} child Component to move.\n\t     * @param {number} toIndex Destination index of the element.\n\t     * @param {number} lastIndex Last index visited of the siblings of `child`.\n\t     * @protected\n\t     */\n\t    moveChild: function (child, afterNode, toIndex, lastIndex) {\n\t      // If the index of `child` is less than `lastIndex`, then it needs to\n\t      // be moved. Otherwise, we do not need to move it because a child will be\n\t      // inserted or moved before `child`.\n\t      if (child._mountIndex < lastIndex) {\n\t        return makeMove(child, afterNode, toIndex);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Creates a child component.\n\t     *\n\t     * @param {ReactComponent} child Component to create.\n\t     * @param {string} mountImage Markup to insert.\n\t     * @protected\n\t     */\n\t    createChild: function (child, afterNode, mountImage) {\n\t      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);\n\t    },\n\t\n\t    /**\n\t     * Removes a child component.\n\t     *\n\t     * @param {ReactComponent} child Child to remove.\n\t     * @protected\n\t     */\n\t    removeChild: function (child, node) {\n\t      return makeRemove(child, node);\n\t    },\n\t\n\t    /**\n\t     * Mounts a child with the supplied name.\n\t     *\n\t     * NOTE: This is part of `updateChildren` and is here for readability.\n\t     *\n\t     * @param {ReactComponent} child Component to mount.\n\t     * @param {string} name Name of the child.\n\t     * @param {number} index Index at which to insert the child.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @private\n\t     */\n\t    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {\n\t      child._mountIndex = index;\n\t      return this.createChild(child, afterNode, mountImage);\n\t    },\n\t\n\t    /**\n\t     * Unmounts a rendered child.\n\t     *\n\t     * NOTE: This is part of `updateChildren` and is here for readability.\n\t     *\n\t     * @param {ReactComponent} child Component to unmount.\n\t     * @private\n\t     */\n\t    _unmountChild: function (child, node) {\n\t      var update = this.removeChild(child, node);\n\t      child._mountIndex = null;\n\t      return update;\n\t    }\n\t\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactMultiChild;\n\n/***/ },\n/* 135 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactOwner\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * ReactOwners are capable of storing references to owned components.\n\t *\n\t * All components are capable of //being// referenced by owner components, but\n\t * only ReactOwner components are capable of //referencing// owned components.\n\t * The named reference is known as a \"ref\".\n\t *\n\t * Refs are available when mounted and updated during reconciliation.\n\t *\n\t *   var MyComponent = React.createClass({\n\t *     render: function() {\n\t *       return (\n\t *         <div onClick={this.handleClick}>\n\t *           <CustomComponent ref=\"custom\" />\n\t *         </div>\n\t *       );\n\t *     },\n\t *     handleClick: function() {\n\t *       this.refs.custom.handleClick();\n\t *     },\n\t *     componentDidMount: function() {\n\t *       this.refs.custom.initialize();\n\t *     }\n\t *   });\n\t *\n\t * Refs should rarely be used. When refs are used, they should only be done to\n\t * control data that is not handled by React's data flow.\n\t *\n\t * @class ReactOwner\n\t */\n\tvar ReactOwner = {\n\t\n\t  /**\n\t   * @param {?object} object\n\t   * @return {boolean} True if `object` is a valid owner.\n\t   * @final\n\t   */\n\t  isValidOwner: function (object) {\n\t    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n\t  },\n\t\n\t  /**\n\t   * Adds a component by ref to an owner component.\n\t   *\n\t   * @param {ReactComponent} component Component to reference.\n\t   * @param {string} ref Name by which to refer to the component.\n\t   * @param {ReactOwner} owner Component on which to record the ref.\n\t   * @final\n\t   * @internal\n\t   */\n\t  addComponentAsRefTo: function (component, ref, owner) {\n\t    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;\n\t    owner.attachRef(ref, component);\n\t  },\n\t\n\t  /**\n\t   * Removes a component by ref from an owner component.\n\t   *\n\t   * @param {ReactComponent} component Component to dereference.\n\t   * @param {string} ref Name of the ref to remove.\n\t   * @param {ReactOwner} owner Component on which the ref is recorded.\n\t   * @final\n\t   * @internal\n\t   */\n\t  removeComponentAsRefFrom: function (component, ref, owner) {\n\t    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;\n\t    var ownerPublicInstance = owner.getPublicInstance();\n\t    // Check that `component`'s owner is still alive and that `component` is still the current ref\n\t    // because we do not want to detach the ref if another component stole it.\n\t    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {\n\t      owner.detachRef(ref);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactOwner;\n\n/***/ },\n/* 136 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPureComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar ReactComponent = __webpack_require__(39);\n\tvar ReactNoopUpdateQueue = __webpack_require__(43);\n\t\n\tvar emptyObject = __webpack_require__(24);\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactPureComponent(props, context, updater) {\n\t  // Duplicated from ReactComponent.\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tfunction ComponentDummy() {}\n\tComponentDummy.prototype = ReactComponent.prototype;\n\tReactPureComponent.prototype = new ComponentDummy();\n\tReactPureComponent.prototype.constructor = ReactPureComponent;\n\t// Avoid an extra prototype jump for these methods.\n\t_assign(ReactPureComponent.prototype, ReactComponent.prototype);\n\tReactPureComponent.prototype.isPureReactComponent = true;\n\t\n\tmodule.exports = ReactPureComponent;\n\n/***/ },\n/* 137 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactReconcileTransaction\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar CallbackQueue = __webpack_require__(59);\n\tvar PooledClass = __webpack_require__(13);\n\tvar ReactBrowserEventEmitter = __webpack_require__(26);\n\tvar ReactInputSelection = __webpack_require__(68);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar Transaction = __webpack_require__(23);\n\tvar ReactUpdateQueue = __webpack_require__(47);\n\t\n\t/**\n\t * Ensures that, when possible, the selection range (currently selected text\n\t * input) is not disturbed by performing the transaction.\n\t */\n\tvar SELECTION_RESTORATION = {\n\t  /**\n\t   * @return {Selection} Selection information.\n\t   */\n\t  initialize: ReactInputSelection.getSelectionInformation,\n\t  /**\n\t   * @param {Selection} sel Selection information returned from `initialize`.\n\t   */\n\t  close: ReactInputSelection.restoreSelection\n\t};\n\t\n\t/**\n\t * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n\t * high level DOM manipulations (like temporarily removing a text input from the\n\t * DOM).\n\t */\n\tvar EVENT_SUPPRESSION = {\n\t  /**\n\t   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n\t   * the reconciliation.\n\t   */\n\t  initialize: function () {\n\t    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n\t    ReactBrowserEventEmitter.setEnabled(false);\n\t    return currentlyEnabled;\n\t  },\n\t\n\t  /**\n\t   * @param {boolean} previouslyEnabled Enabled status of\n\t   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n\t   *   restores the previous value.\n\t   */\n\t  close: function (previouslyEnabled) {\n\t    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n\t  }\n\t};\n\t\n\t/**\n\t * Provides a queue for collecting `componentDidMount` and\n\t * `componentDidUpdate` callbacks during the transaction.\n\t */\n\tvar ON_DOM_READY_QUEUEING = {\n\t  /**\n\t   * Initializes the internal `onDOMReady` queue.\n\t   */\n\t  initialize: function () {\n\t    this.reactMountReady.reset();\n\t  },\n\t\n\t  /**\n\t   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n\t   */\n\t  close: function () {\n\t    this.reactMountReady.notifyAll();\n\t  }\n\t};\n\t\n\t/**\n\t * Executed within the scope of the `Transaction` instance. Consider these as\n\t * being member methods, but with an implied ordering while being isolated from\n\t * each other.\n\t */\n\tvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\t\n\tif (false) {\n\t  TRANSACTION_WRAPPERS.push({\n\t    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n\t    close: ReactInstrumentation.debugTool.onEndFlush\n\t  });\n\t}\n\t\n\t/**\n\t * Currently:\n\t * - The order that these are listed in the transaction is critical:\n\t * - Suppresses events.\n\t * - Restores selection range.\n\t *\n\t * Future:\n\t * - Restore document/overflow scroll positions that were unintentionally\n\t *   modified via DOM insertions above the top viewport boundary.\n\t * - Implement/integrate with customized constraint based layout system and keep\n\t *   track of which dimensions must be remeasured.\n\t *\n\t * @class ReactReconcileTransaction\n\t */\n\tfunction ReactReconcileTransaction(useCreateElement) {\n\t  this.reinitializeTransaction();\n\t  // Only server-side rendering really needs this option (see\n\t  // `ReactServerRendering`), but server-side uses\n\t  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n\t  // accessible and defaults to false when `ReactDOMComponent` and\n\t  // `ReactDOMTextComponent` checks it in `mountComponent`.`\n\t  this.renderToStaticMarkup = false;\n\t  this.reactMountReady = CallbackQueue.getPooled(null);\n\t  this.useCreateElement = useCreateElement;\n\t}\n\t\n\tvar Mixin = {\n\t  /**\n\t   * @see Transaction\n\t   * @abstract\n\t   * @final\n\t   * @return {array<object>} List of operation wrap procedures.\n\t   *   TODO: convert to array<TransactionWrapper>\n\t   */\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect `onDOMReady` callbacks with.\n\t   */\n\t  getReactMountReady: function () {\n\t    return this.reactMountReady;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect React async events.\n\t   */\n\t  getUpdateQueue: function () {\n\t    return ReactUpdateQueue;\n\t  },\n\t\n\t  /**\n\t   * Save current transaction state -- if the return value from this method is\n\t   * passed to `rollback`, the transaction will be reset to that state.\n\t   */\n\t  checkpoint: function () {\n\t    // reactMountReady is the our only stateful wrapper\n\t    return this.reactMountReady.checkpoint();\n\t  },\n\t\n\t  rollback: function (checkpoint) {\n\t    this.reactMountReady.rollback(checkpoint);\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this, and will invoke this before allowing this\n\t   * instance to be reused.\n\t   */\n\t  destructor: function () {\n\t    CallbackQueue.release(this.reactMountReady);\n\t    this.reactMountReady = null;\n\t  }\n\t};\n\t\n\t_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\t\n\tPooledClass.addPoolingTo(ReactReconcileTransaction);\n\t\n\tmodule.exports = ReactReconcileTransaction;\n\n/***/ },\n/* 138 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactRef\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactOwner = __webpack_require__(135);\n\t\n\tvar ReactRef = {};\n\t\n\tfunction attachRef(ref, component, owner) {\n\t  if (typeof ref === 'function') {\n\t    ref(component.getPublicInstance());\n\t  } else {\n\t    // Legacy ref\n\t    ReactOwner.addComponentAsRefTo(component, ref, owner);\n\t  }\n\t}\n\t\n\tfunction detachRef(ref, component, owner) {\n\t  if (typeof ref === 'function') {\n\t    ref(null);\n\t  } else {\n\t    // Legacy ref\n\t    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n\t  }\n\t}\n\t\n\tReactRef.attachRefs = function (instance, element) {\n\t  if (element === null || element === false) {\n\t    return;\n\t  }\n\t  var ref = element.ref;\n\t  if (ref != null) {\n\t    attachRef(ref, instance, element._owner);\n\t  }\n\t};\n\t\n\tReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n\t  // If either the owner or a `ref` has changed, make sure the newest owner\n\t  // has stored a reference to `this`, and the previous owner (if different)\n\t  // has forgotten the reference to `this`. We use the element instead\n\t  // of the public this.props because the post processing cannot determine\n\t  // a ref. The ref conceptually lives on the element.\n\t\n\t  // TODO: Should this even be possible? The owner cannot change because\n\t  // it's forbidden by shouldUpdateReactComponent. The ref can change\n\t  // if you swap the keys of but not the refs. Reconsider where this check\n\t  // is made. It probably belongs where the key checking and\n\t  // instantiateReactComponent is done.\n\t\n\t  var prevEmpty = prevElement === null || prevElement === false;\n\t  var nextEmpty = nextElement === null || nextElement === false;\n\t\n\t  return (\n\t    // This has a few false positives w/r/t empty components.\n\t    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||\n\t    // If owner changes but we have an unchanged function ref, don't update refs\n\t    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner\n\t  );\n\t};\n\t\n\tReactRef.detachRefs = function (instance, element) {\n\t  if (element === null || element === false) {\n\t    return;\n\t  }\n\t  var ref = element.ref;\n\t  if (ref != null) {\n\t    detachRef(ref, instance, element._owner);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactRef;\n\n/***/ },\n/* 139 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactServerRenderingTransaction\n\t */\n\t\n\t'use strict';\n\t\n\tvar _assign = __webpack_require__(4);\n\t\n\tvar PooledClass = __webpack_require__(13);\n\tvar Transaction = __webpack_require__(23);\n\tvar ReactInstrumentation = __webpack_require__(7);\n\tvar ReactServerUpdateQueue = __webpack_require__(140);\n\t\n\t/**\n\t * Executed within the scope of the `Transaction` instance. Consider these as\n\t * being member methods, but with an implied ordering while being isolated from\n\t * each other.\n\t */\n\tvar TRANSACTION_WRAPPERS = [];\n\t\n\tif (false) {\n\t  TRANSACTION_WRAPPERS.push({\n\t    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n\t    close: ReactInstrumentation.debugTool.onEndFlush\n\t  });\n\t}\n\t\n\tvar noopCallbackQueue = {\n\t  enqueue: function () {}\n\t};\n\t\n\t/**\n\t * @class ReactServerRenderingTransaction\n\t * @param {boolean} renderToStaticMarkup\n\t */\n\tfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n\t  this.reinitializeTransaction();\n\t  this.renderToStaticMarkup = renderToStaticMarkup;\n\t  this.useCreateElement = false;\n\t  this.updateQueue = new ReactServerUpdateQueue(this);\n\t}\n\t\n\tvar Mixin = {\n\t  /**\n\t   * @see Transaction\n\t   * @abstract\n\t   * @final\n\t   * @return {array} Empty list of operation wrap procedures.\n\t   */\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect `onDOMReady` callbacks with.\n\t   */\n\t  getReactMountReady: function () {\n\t    return noopCallbackQueue;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect React async events.\n\t   */\n\t  getUpdateQueue: function () {\n\t    return this.updateQueue;\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this, and will invoke this before allowing this\n\t   * instance to be reused.\n\t   */\n\t  destructor: function () {},\n\t\n\t  checkpoint: function () {},\n\t\n\t  rollback: function () {}\n\t};\n\t\n\t_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\n\t\n\tPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\t\n\tmodule.exports = ReactServerRenderingTransaction;\n\n/***/ },\n/* 140 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactServerUpdateQueue\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ReactUpdateQueue = __webpack_require__(47);\n\tvar Transaction = __webpack_require__(23);\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction warnNoop(publicInstance, callerName) {\n\t  if (false) {\n\t    var constructor = publicInstance.constructor;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n\t  }\n\t}\n\t\n\t/**\n\t * This is the update queue used for server rendering.\n\t * It delegates to ReactUpdateQueue while server rendering is in progress and\n\t * switches to ReactNoopUpdateQueue after the transaction has completed.\n\t * @class ReactServerUpdateQueue\n\t * @param {Transaction} transaction\n\t */\n\t\n\tvar ReactServerUpdateQueue = function () {\n\t  /* :: transaction: Transaction; */\n\t\n\t  function ReactServerUpdateQueue(transaction) {\n\t    _classCallCheck(this, ReactServerUpdateQueue);\n\t\n\t    this.transaction = transaction;\n\t  }\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueForceUpdate(publicInstance);\n\t    } else {\n\t      warnNoop(publicInstance, 'forceUpdate');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object|function} completeState Next state.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);\n\t    } else {\n\t      warnNoop(publicInstance, 'replaceState');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object|function} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t\n\t\n\t  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {\n\t    if (this.transaction.isInTransaction()) {\n\t      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);\n\t    } else {\n\t      warnNoop(publicInstance, 'setState');\n\t    }\n\t  };\n\t\n\t  return ReactServerUpdateQueue;\n\t}();\n\t\n\tmodule.exports = ReactServerUpdateQueue;\n\n/***/ },\n/* 141 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SVGDOMPropertyConfig\n\t */\n\t\n\t'use strict';\n\t\n\tvar NS = {\n\t  xlink: 'http://www.w3.org/1999/xlink',\n\t  xml: 'http://www.w3.org/XML/1998/namespace'\n\t};\n\t\n\t// We use attributes for everything SVG so let's avoid some duplication and run\n\t// code instead.\n\t// The following are all specified in the HTML config already so we exclude here.\n\t// - class (as className)\n\t// - color\n\t// - height\n\t// - id\n\t// - lang\n\t// - max\n\t// - media\n\t// - method\n\t// - min\n\t// - name\n\t// - style\n\t// - target\n\t// - type\n\t// - width\n\tvar ATTRS = {\n\t  accentHeight: 'accent-height',\n\t  accumulate: 0,\n\t  additive: 0,\n\t  alignmentBaseline: 'alignment-baseline',\n\t  allowReorder: 'allowReorder',\n\t  alphabetic: 0,\n\t  amplitude: 0,\n\t  arabicForm: 'arabic-form',\n\t  ascent: 0,\n\t  attributeName: 'attributeName',\n\t  attributeType: 'attributeType',\n\t  autoReverse: 'autoReverse',\n\t  azimuth: 0,\n\t  baseFrequency: 'baseFrequency',\n\t  baseProfile: 'baseProfile',\n\t  baselineShift: 'baseline-shift',\n\t  bbox: 0,\n\t  begin: 0,\n\t  bias: 0,\n\t  by: 0,\n\t  calcMode: 'calcMode',\n\t  capHeight: 'cap-height',\n\t  clip: 0,\n\t  clipPath: 'clip-path',\n\t  clipRule: 'clip-rule',\n\t  clipPathUnits: 'clipPathUnits',\n\t  colorInterpolation: 'color-interpolation',\n\t  colorInterpolationFilters: 'color-interpolation-filters',\n\t  colorProfile: 'color-profile',\n\t  colorRendering: 'color-rendering',\n\t  contentScriptType: 'contentScriptType',\n\t  contentStyleType: 'contentStyleType',\n\t  cursor: 0,\n\t  cx: 0,\n\t  cy: 0,\n\t  d: 0,\n\t  decelerate: 0,\n\t  descent: 0,\n\t  diffuseConstant: 'diffuseConstant',\n\t  direction: 0,\n\t  display: 0,\n\t  divisor: 0,\n\t  dominantBaseline: 'dominant-baseline',\n\t  dur: 0,\n\t  dx: 0,\n\t  dy: 0,\n\t  edgeMode: 'edgeMode',\n\t  elevation: 0,\n\t  enableBackground: 'enable-background',\n\t  end: 0,\n\t  exponent: 0,\n\t  externalResourcesRequired: 'externalResourcesRequired',\n\t  fill: 0,\n\t  fillOpacity: 'fill-opacity',\n\t  fillRule: 'fill-rule',\n\t  filter: 0,\n\t  filterRes: 'filterRes',\n\t  filterUnits: 'filterUnits',\n\t  floodColor: 'flood-color',\n\t  floodOpacity: 'flood-opacity',\n\t  focusable: 0,\n\t  fontFamily: 'font-family',\n\t  fontSize: 'font-size',\n\t  fontSizeAdjust: 'font-size-adjust',\n\t  fontStretch: 'font-stretch',\n\t  fontStyle: 'font-style',\n\t  fontVariant: 'font-variant',\n\t  fontWeight: 'font-weight',\n\t  format: 0,\n\t  from: 0,\n\t  fx: 0,\n\t  fy: 0,\n\t  g1: 0,\n\t  g2: 0,\n\t  glyphName: 'glyph-name',\n\t  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n\t  glyphOrientationVertical: 'glyph-orientation-vertical',\n\t  glyphRef: 'glyphRef',\n\t  gradientTransform: 'gradientTransform',\n\t  gradientUnits: 'gradientUnits',\n\t  hanging: 0,\n\t  horizAdvX: 'horiz-adv-x',\n\t  horizOriginX: 'horiz-origin-x',\n\t  ideographic: 0,\n\t  imageRendering: 'image-rendering',\n\t  'in': 0,\n\t  in2: 0,\n\t  intercept: 0,\n\t  k: 0,\n\t  k1: 0,\n\t  k2: 0,\n\t  k3: 0,\n\t  k4: 0,\n\t  kernelMatrix: 'kernelMatrix',\n\t  kernelUnitLength: 'kernelUnitLength',\n\t  kerning: 0,\n\t  keyPoints: 'keyPoints',\n\t  keySplines: 'keySplines',\n\t  keyTimes: 'keyTimes',\n\t  lengthAdjust: 'lengthAdjust',\n\t  letterSpacing: 'letter-spacing',\n\t  lightingColor: 'lighting-color',\n\t  limitingConeAngle: 'limitingConeAngle',\n\t  local: 0,\n\t  markerEnd: 'marker-end',\n\t  markerMid: 'marker-mid',\n\t  markerStart: 'marker-start',\n\t  markerHeight: 'markerHeight',\n\t  markerUnits: 'markerUnits',\n\t  markerWidth: 'markerWidth',\n\t  mask: 0,\n\t  maskContentUnits: 'maskContentUnits',\n\t  maskUnits: 'maskUnits',\n\t  mathematical: 0,\n\t  mode: 0,\n\t  numOctaves: 'numOctaves',\n\t  offset: 0,\n\t  opacity: 0,\n\t  operator: 0,\n\t  order: 0,\n\t  orient: 0,\n\t  orientation: 0,\n\t  origin: 0,\n\t  overflow: 0,\n\t  overlinePosition: 'overline-position',\n\t  overlineThickness: 'overline-thickness',\n\t  paintOrder: 'paint-order',\n\t  panose1: 'panose-1',\n\t  pathLength: 'pathLength',\n\t  patternContentUnits: 'patternContentUnits',\n\t  patternTransform: 'patternTransform',\n\t  patternUnits: 'patternUnits',\n\t  pointerEvents: 'pointer-events',\n\t  points: 0,\n\t  pointsAtX: 'pointsAtX',\n\t  pointsAtY: 'pointsAtY',\n\t  pointsAtZ: 'pointsAtZ',\n\t  preserveAlpha: 'preserveAlpha',\n\t  preserveAspectRatio: 'preserveAspectRatio',\n\t  primitiveUnits: 'primitiveUnits',\n\t  r: 0,\n\t  radius: 0,\n\t  refX: 'refX',\n\t  refY: 'refY',\n\t  renderingIntent: 'rendering-intent',\n\t  repeatCount: 'repeatCount',\n\t  repeatDur: 'repeatDur',\n\t  requiredExtensions: 'requiredExtensions',\n\t  requiredFeatures: 'requiredFeatures',\n\t  restart: 0,\n\t  result: 0,\n\t  rotate: 0,\n\t  rx: 0,\n\t  ry: 0,\n\t  scale: 0,\n\t  seed: 0,\n\t  shapeRendering: 'shape-rendering',\n\t  slope: 0,\n\t  spacing: 0,\n\t  specularConstant: 'specularConstant',\n\t  specularExponent: 'specularExponent',\n\t  speed: 0,\n\t  spreadMethod: 'spreadMethod',\n\t  startOffset: 'startOffset',\n\t  stdDeviation: 'stdDeviation',\n\t  stemh: 0,\n\t  stemv: 0,\n\t  stitchTiles: 'stitchTiles',\n\t  stopColor: 'stop-color',\n\t  stopOpacity: 'stop-opacity',\n\t  strikethroughPosition: 'strikethrough-position',\n\t  strikethroughThickness: 'strikethrough-thickness',\n\t  string: 0,\n\t  stroke: 0,\n\t  strokeDasharray: 'stroke-dasharray',\n\t  strokeDashoffset: 'stroke-dashoffset',\n\t  strokeLinecap: 'stroke-linecap',\n\t  strokeLinejoin: 'stroke-linejoin',\n\t  strokeMiterlimit: 'stroke-miterlimit',\n\t  strokeOpacity: 'stroke-opacity',\n\t  strokeWidth: 'stroke-width',\n\t  surfaceScale: 'surfaceScale',\n\t  systemLanguage: 'systemLanguage',\n\t  tableValues: 'tableValues',\n\t  targetX: 'targetX',\n\t  targetY: 'targetY',\n\t  textAnchor: 'text-anchor',\n\t  textDecoration: 'text-decoration',\n\t  textRendering: 'text-rendering',\n\t  textLength: 'textLength',\n\t  to: 0,\n\t  transform: 0,\n\t  u1: 0,\n\t  u2: 0,\n\t  underlinePosition: 'underline-position',\n\t  underlineThickness: 'underline-thickness',\n\t  unicode: 0,\n\t  unicodeBidi: 'unicode-bidi',\n\t  unicodeRange: 'unicode-range',\n\t  unitsPerEm: 'units-per-em',\n\t  vAlphabetic: 'v-alphabetic',\n\t  vHanging: 'v-hanging',\n\t  vIdeographic: 'v-ideographic',\n\t  vMathematical: 'v-mathematical',\n\t  values: 0,\n\t  vectorEffect: 'vector-effect',\n\t  version: 0,\n\t  vertAdvY: 'vert-adv-y',\n\t  vertOriginX: 'vert-origin-x',\n\t  vertOriginY: 'vert-origin-y',\n\t  viewBox: 'viewBox',\n\t  viewTarget: 'viewTarget',\n\t  visibility: 0,\n\t  widths: 0,\n\t  wordSpacing: 'word-spacing',\n\t  writingMode: 'writing-mode',\n\t  x: 0,\n\t  xHeight: 'x-height',\n\t  x1: 0,\n\t  x2: 0,\n\t  xChannelSelector: 'xChannelSelector',\n\t  xlinkActuate: 'xlink:actuate',\n\t  xlinkArcrole: 'xlink:arcrole',\n\t  xlinkHref: 'xlink:href',\n\t  xlinkRole: 'xlink:role',\n\t  xlinkShow: 'xlink:show',\n\t  xlinkTitle: 'xlink:title',\n\t  xlinkType: 'xlink:type',\n\t  xmlBase: 'xml:base',\n\t  xmlns: 0,\n\t  xmlnsXlink: 'xmlns:xlink',\n\t  xmlLang: 'xml:lang',\n\t  xmlSpace: 'xml:space',\n\t  y: 0,\n\t  y1: 0,\n\t  y2: 0,\n\t  yChannelSelector: 'yChannelSelector',\n\t  z: 0,\n\t  zoomAndPan: 'zoomAndPan'\n\t};\n\t\n\tvar SVGDOMPropertyConfig = {\n\t  Properties: {},\n\t  DOMAttributeNamespaces: {\n\t    xlinkActuate: NS.xlink,\n\t    xlinkArcrole: NS.xlink,\n\t    xlinkHref: NS.xlink,\n\t    xlinkRole: NS.xlink,\n\t    xlinkShow: NS.xlink,\n\t    xlinkTitle: NS.xlink,\n\t    xlinkType: NS.xlink,\n\t    xmlBase: NS.xml,\n\t    xmlLang: NS.xml,\n\t    xmlSpace: NS.xml\n\t  },\n\t  DOMAttributeNames: {}\n\t};\n\t\n\tObject.keys(ATTRS).forEach(function (key) {\n\t  SVGDOMPropertyConfig.Properties[key] = 0;\n\t  if (ATTRS[key]) {\n\t    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];\n\t  }\n\t});\n\t\n\tmodule.exports = SVGDOMPropertyConfig;\n\n/***/ },\n/* 142 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SelectEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventPropagators = __webpack_require__(20);\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactInputSelection = __webpack_require__(68);\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\tvar getActiveElement = __webpack_require__(86);\n\tvar isTextInputElement = __webpack_require__(82);\n\tvar keyOf = __webpack_require__(15);\n\tvar shallowEqual = __webpack_require__(56);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\t\n\tvar eventTypes = {\n\t  select: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSelect: null }),\n\t      captured: keyOf({ onSelectCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]\n\t  }\n\t};\n\t\n\tvar activeElement = null;\n\tvar activeElementInst = null;\n\tvar lastSelection = null;\n\tvar mouseDown = false;\n\t\n\t// Track whether a listener exists for this plugin. If none exist, we do\n\t// not extract events. See #3639.\n\tvar hasListener = false;\n\tvar ON_SELECT_KEY = keyOf({ onSelect: null });\n\t\n\t/**\n\t * Get an object which is a unique representation of the current selection.\n\t *\n\t * The return value will not be consistent across nodes or browsers, but\n\t * two identical selections on the same node will return identical objects.\n\t *\n\t * @param {DOMElement} node\n\t * @return {object}\n\t */\n\tfunction getSelection(node) {\n\t  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n\t    return {\n\t      start: node.selectionStart,\n\t      end: node.selectionEnd\n\t    };\n\t  } else if (window.getSelection) {\n\t    var selection = window.getSelection();\n\t    return {\n\t      anchorNode: selection.anchorNode,\n\t      anchorOffset: selection.anchorOffset,\n\t      focusNode: selection.focusNode,\n\t      focusOffset: selection.focusOffset\n\t    };\n\t  } else if (document.selection) {\n\t    var range = document.selection.createRange();\n\t    return {\n\t      parentElement: range.parentElement(),\n\t      text: range.text,\n\t      top: range.boundingTop,\n\t      left: range.boundingLeft\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Poll selection to see whether it's changed.\n\t *\n\t * @param {object} nativeEvent\n\t * @return {?SyntheticEvent}\n\t */\n\tfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n\t  // Ensure we have the right element, and that the user is not dragging a\n\t  // selection (this matches native `select` event behavior). In HTML5, select\n\t  // fires only on input and textarea thus if there's no focused element we\n\t  // won't dispatch.\n\t  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n\t    return null;\n\t  }\n\t\n\t  // Only fire when selection has actually changed.\n\t  var currentSelection = getSelection(activeElement);\n\t  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n\t    lastSelection = currentSelection;\n\t\n\t    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\t\n\t    syntheticEvent.type = 'select';\n\t    syntheticEvent.target = activeElement;\n\t\n\t    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\t\n\t    return syntheticEvent;\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\t/**\n\t * This plugin creates an `onSelect` event that normalizes select events\n\t * across form elements.\n\t *\n\t * Supported elements are:\n\t * - input (see `isTextInputElement`)\n\t * - textarea\n\t * - contentEditable\n\t *\n\t * This differs from native browser implementations in the following ways:\n\t * - Fires on contentEditable fields as well as inputs.\n\t * - Fires for collapsed selection.\n\t * - Fires after user input.\n\t */\n\tvar SelectEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    if (!hasListener) {\n\t      return null;\n\t    }\n\t\n\t    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\t\n\t    switch (topLevelType) {\n\t      // Track the input node that has focus.\n\t      case topLevelTypes.topFocus:\n\t        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n\t          activeElement = targetNode;\n\t          activeElementInst = targetInst;\n\t          lastSelection = null;\n\t        }\n\t        break;\n\t      case topLevelTypes.topBlur:\n\t        activeElement = null;\n\t        activeElementInst = null;\n\t        lastSelection = null;\n\t        break;\n\t\n\t      // Don't fire the event while the user is dragging. This matches the\n\t      // semantics of the native select event.\n\t      case topLevelTypes.topMouseDown:\n\t        mouseDown = true;\n\t        break;\n\t      case topLevelTypes.topContextMenu:\n\t      case topLevelTypes.topMouseUp:\n\t        mouseDown = false;\n\t        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\t\n\t      // Chrome and IE fire non-standard event when selection is changed (and\n\t      // sometimes when it hasn't). IE's event fires out of order with respect\n\t      // to key and input events on deletion, so we discard it.\n\t      //\n\t      // Firefox doesn't support selectionchange, so check selection status\n\t      // after each key entry. The selection changes after keydown and before\n\t      // keyup, but we check on keydown as well in the case of holding down a\n\t      // key, when multiple keydown events are fired but only one keyup is.\n\t      // This is also our approach for IE handling, for the reason above.\n\t      case topLevelTypes.topSelectionChange:\n\t        if (skipSelectionChangeEvent) {\n\t          break;\n\t        }\n\t      // falls through\n\t      case topLevelTypes.topKeyDown:\n\t      case topLevelTypes.topKeyUp:\n\t        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\t    }\n\t\n\t    return null;\n\t  },\n\t\n\t  didPutListener: function (inst, registrationName, listener) {\n\t    if (registrationName === ON_SELECT_KEY) {\n\t      hasListener = true;\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = SelectEventPlugin;\n\n/***/ },\n/* 143 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SimpleEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar EventConstants = __webpack_require__(11);\n\tvar EventListener = __webpack_require__(84);\n\tvar EventPropagators = __webpack_require__(20);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar SyntheticAnimationEvent = __webpack_require__(144);\n\tvar SyntheticClipboardEvent = __webpack_require__(145);\n\tvar SyntheticEvent = __webpack_require__(12);\n\tvar SyntheticFocusEvent = __webpack_require__(148);\n\tvar SyntheticKeyboardEvent = __webpack_require__(150);\n\tvar SyntheticMouseEvent = __webpack_require__(27);\n\tvar SyntheticDragEvent = __webpack_require__(147);\n\tvar SyntheticTouchEvent = __webpack_require__(151);\n\tvar SyntheticTransitionEvent = __webpack_require__(152);\n\tvar SyntheticUIEvent = __webpack_require__(22);\n\tvar SyntheticWheelEvent = __webpack_require__(153);\n\t\n\tvar emptyFunction = __webpack_require__(8);\n\tvar getEventCharCode = __webpack_require__(49);\n\tvar invariant = __webpack_require__(1);\n\tvar keyOf = __webpack_require__(15);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tvar eventTypes = {\n\t  abort: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onAbort: true }),\n\t      captured: keyOf({ onAbortCapture: true })\n\t    }\n\t  },\n\t  animationEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onAnimationEnd: true }),\n\t      captured: keyOf({ onAnimationEndCapture: true })\n\t    }\n\t  },\n\t  animationIteration: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onAnimationIteration: true }),\n\t      captured: keyOf({ onAnimationIterationCapture: true })\n\t    }\n\t  },\n\t  animationStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onAnimationStart: true }),\n\t      captured: keyOf({ onAnimationStartCapture: true })\n\t    }\n\t  },\n\t  blur: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onBlur: true }),\n\t      captured: keyOf({ onBlurCapture: true })\n\t    }\n\t  },\n\t  canPlay: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCanPlay: true }),\n\t      captured: keyOf({ onCanPlayCapture: true })\n\t    }\n\t  },\n\t  canPlayThrough: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCanPlayThrough: true }),\n\t      captured: keyOf({ onCanPlayThroughCapture: true })\n\t    }\n\t  },\n\t  click: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onClick: true }),\n\t      captured: keyOf({ onClickCapture: true })\n\t    }\n\t  },\n\t  contextMenu: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onContextMenu: true }),\n\t      captured: keyOf({ onContextMenuCapture: true })\n\t    }\n\t  },\n\t  copy: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCopy: true }),\n\t      captured: keyOf({ onCopyCapture: true })\n\t    }\n\t  },\n\t  cut: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCut: true }),\n\t      captured: keyOf({ onCutCapture: true })\n\t    }\n\t  },\n\t  doubleClick: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDoubleClick: true }),\n\t      captured: keyOf({ onDoubleClickCapture: true })\n\t    }\n\t  },\n\t  drag: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDrag: true }),\n\t      captured: keyOf({ onDragCapture: true })\n\t    }\n\t  },\n\t  dragEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragEnd: true }),\n\t      captured: keyOf({ onDragEndCapture: true })\n\t    }\n\t  },\n\t  dragEnter: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragEnter: true }),\n\t      captured: keyOf({ onDragEnterCapture: true })\n\t    }\n\t  },\n\t  dragExit: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragExit: true }),\n\t      captured: keyOf({ onDragExitCapture: true })\n\t    }\n\t  },\n\t  dragLeave: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragLeave: true }),\n\t      captured: keyOf({ onDragLeaveCapture: true })\n\t    }\n\t  },\n\t  dragOver: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragOver: true }),\n\t      captured: keyOf({ onDragOverCapture: true })\n\t    }\n\t  },\n\t  dragStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragStart: true }),\n\t      captured: keyOf({ onDragStartCapture: true })\n\t    }\n\t  },\n\t  drop: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDrop: true }),\n\t      captured: keyOf({ onDropCapture: true })\n\t    }\n\t  },\n\t  durationChange: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDurationChange: true }),\n\t      captured: keyOf({ onDurationChangeCapture: true })\n\t    }\n\t  },\n\t  emptied: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onEmptied: true }),\n\t      captured: keyOf({ onEmptiedCapture: true })\n\t    }\n\t  },\n\t  encrypted: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onEncrypted: true }),\n\t      captured: keyOf({ onEncryptedCapture: true })\n\t    }\n\t  },\n\t  ended: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onEnded: true }),\n\t      captured: keyOf({ onEndedCapture: true })\n\t    }\n\t  },\n\t  error: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onError: true }),\n\t      captured: keyOf({ onErrorCapture: true })\n\t    }\n\t  },\n\t  focus: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onFocus: true }),\n\t      captured: keyOf({ onFocusCapture: true })\n\t    }\n\t  },\n\t  input: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onInput: true }),\n\t      captured: keyOf({ onInputCapture: true })\n\t    }\n\t  },\n\t  invalid: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onInvalid: true }),\n\t      captured: keyOf({ onInvalidCapture: true })\n\t    }\n\t  },\n\t  keyDown: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onKeyDown: true }),\n\t      captured: keyOf({ onKeyDownCapture: true })\n\t    }\n\t  },\n\t  keyPress: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onKeyPress: true }),\n\t      captured: keyOf({ onKeyPressCapture: true })\n\t    }\n\t  },\n\t  keyUp: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onKeyUp: true }),\n\t      captured: keyOf({ onKeyUpCapture: true })\n\t    }\n\t  },\n\t  load: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onLoad: true }),\n\t      captured: keyOf({ onLoadCapture: true })\n\t    }\n\t  },\n\t  loadedData: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onLoadedData: true }),\n\t      captured: keyOf({ onLoadedDataCapture: true })\n\t    }\n\t  },\n\t  loadedMetadata: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onLoadedMetadata: true }),\n\t      captured: keyOf({ onLoadedMetadataCapture: true })\n\t    }\n\t  },\n\t  loadStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onLoadStart: true }),\n\t      captured: keyOf({ onLoadStartCapture: true })\n\t    }\n\t  },\n\t  // Note: We do not allow listening to mouseOver events. Instead, use the\n\t  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\n\t  mouseDown: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseDown: true }),\n\t      captured: keyOf({ onMouseDownCapture: true })\n\t    }\n\t  },\n\t  mouseMove: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseMove: true }),\n\t      captured: keyOf({ onMouseMoveCapture: true })\n\t    }\n\t  },\n\t  mouseOut: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseOut: true }),\n\t      captured: keyOf({ onMouseOutCapture: true })\n\t    }\n\t  },\n\t  mouseOver: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseOver: true }),\n\t      captured: keyOf({ onMouseOverCapture: true })\n\t    }\n\t  },\n\t  mouseUp: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseUp: true }),\n\t      captured: keyOf({ onMouseUpCapture: true })\n\t    }\n\t  },\n\t  paste: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onPaste: true }),\n\t      captured: keyOf({ onPasteCapture: true })\n\t    }\n\t  },\n\t  pause: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onPause: true }),\n\t      captured: keyOf({ onPauseCapture: true })\n\t    }\n\t  },\n\t  play: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onPlay: true }),\n\t      captured: keyOf({ onPlayCapture: true })\n\t    }\n\t  },\n\t  playing: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onPlaying: true }),\n\t      captured: keyOf({ onPlayingCapture: true })\n\t    }\n\t  },\n\t  progress: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onProgress: true }),\n\t      captured: keyOf({ onProgressCapture: true })\n\t    }\n\t  },\n\t  rateChange: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onRateChange: true }),\n\t      captured: keyOf({ onRateChangeCapture: true })\n\t    }\n\t  },\n\t  reset: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onReset: true }),\n\t      captured: keyOf({ onResetCapture: true })\n\t    }\n\t  },\n\t  scroll: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onScroll: true }),\n\t      captured: keyOf({ onScrollCapture: true })\n\t    }\n\t  },\n\t  seeked: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSeeked: true }),\n\t      captured: keyOf({ onSeekedCapture: true })\n\t    }\n\t  },\n\t  seeking: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSeeking: true }),\n\t      captured: keyOf({ onSeekingCapture: true })\n\t    }\n\t  },\n\t  stalled: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onStalled: true }),\n\t      captured: keyOf({ onStalledCapture: true })\n\t    }\n\t  },\n\t  submit: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSubmit: true }),\n\t      captured: keyOf({ onSubmitCapture: true })\n\t    }\n\t  },\n\t  suspend: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSuspend: true }),\n\t      captured: keyOf({ onSuspendCapture: true })\n\t    }\n\t  },\n\t  timeUpdate: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTimeUpdate: true }),\n\t      captured: keyOf({ onTimeUpdateCapture: true })\n\t    }\n\t  },\n\t  touchCancel: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTouchCancel: true }),\n\t      captured: keyOf({ onTouchCancelCapture: true })\n\t    }\n\t  },\n\t  touchEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTouchEnd: true }),\n\t      captured: keyOf({ onTouchEndCapture: true })\n\t    }\n\t  },\n\t  touchMove: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTouchMove: true }),\n\t      captured: keyOf({ onTouchMoveCapture: true })\n\t    }\n\t  },\n\t  touchStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTouchStart: true }),\n\t      captured: keyOf({ onTouchStartCapture: true })\n\t    }\n\t  },\n\t  transitionEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTransitionEnd: true }),\n\t      captured: keyOf({ onTransitionEndCapture: true })\n\t    }\n\t  },\n\t  volumeChange: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onVolumeChange: true }),\n\t      captured: keyOf({ onVolumeChangeCapture: true })\n\t    }\n\t  },\n\t  waiting: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onWaiting: true }),\n\t      captured: keyOf({ onWaitingCapture: true })\n\t    }\n\t  },\n\t  wheel: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onWheel: true }),\n\t      captured: keyOf({ onWheelCapture: true })\n\t    }\n\t  }\n\t};\n\t\n\tvar topLevelEventsToDispatchConfig = {\n\t  topAbort: eventTypes.abort,\n\t  topAnimationEnd: eventTypes.animationEnd,\n\t  topAnimationIteration: eventTypes.animationIteration,\n\t  topAnimationStart: eventTypes.animationStart,\n\t  topBlur: eventTypes.blur,\n\t  topCanPlay: eventTypes.canPlay,\n\t  topCanPlayThrough: eventTypes.canPlayThrough,\n\t  topClick: eventTypes.click,\n\t  topContextMenu: eventTypes.contextMenu,\n\t  topCopy: eventTypes.copy,\n\t  topCut: eventTypes.cut,\n\t  topDoubleClick: eventTypes.doubleClick,\n\t  topDrag: eventTypes.drag,\n\t  topDragEnd: eventTypes.dragEnd,\n\t  topDragEnter: eventTypes.dragEnter,\n\t  topDragExit: eventTypes.dragExit,\n\t  topDragLeave: eventTypes.dragLeave,\n\t  topDragOver: eventTypes.dragOver,\n\t  topDragStart: eventTypes.dragStart,\n\t  topDrop: eventTypes.drop,\n\t  topDurationChange: eventTypes.durationChange,\n\t  topEmptied: eventTypes.emptied,\n\t  topEncrypted: eventTypes.encrypted,\n\t  topEnded: eventTypes.ended,\n\t  topError: eventTypes.error,\n\t  topFocus: eventTypes.focus,\n\t  topInput: eventTypes.input,\n\t  topInvalid: eventTypes.invalid,\n\t  topKeyDown: eventTypes.keyDown,\n\t  topKeyPress: eventTypes.keyPress,\n\t  topKeyUp: eventTypes.keyUp,\n\t  topLoad: eventTypes.load,\n\t  topLoadedData: eventTypes.loadedData,\n\t  topLoadedMetadata: eventTypes.loadedMetadata,\n\t  topLoadStart: eventTypes.loadStart,\n\t  topMouseDown: eventTypes.mouseDown,\n\t  topMouseMove: eventTypes.mouseMove,\n\t  topMouseOut: eventTypes.mouseOut,\n\t  topMouseOver: eventTypes.mouseOver,\n\t  topMouseUp: eventTypes.mouseUp,\n\t  topPaste: eventTypes.paste,\n\t  topPause: eventTypes.pause,\n\t  topPlay: eventTypes.play,\n\t  topPlaying: eventTypes.playing,\n\t  topProgress: eventTypes.progress,\n\t  topRateChange: eventTypes.rateChange,\n\t  topReset: eventTypes.reset,\n\t  topScroll: eventTypes.scroll,\n\t  topSeeked: eventTypes.seeked,\n\t  topSeeking: eventTypes.seeking,\n\t  topStalled: eventTypes.stalled,\n\t  topSubmit: eventTypes.submit,\n\t  topSuspend: eventTypes.suspend,\n\t  topTimeUpdate: eventTypes.timeUpdate,\n\t  topTouchCancel: eventTypes.touchCancel,\n\t  topTouchEnd: eventTypes.touchEnd,\n\t  topTouchMove: eventTypes.touchMove,\n\t  topTouchStart: eventTypes.touchStart,\n\t  topTransitionEnd: eventTypes.transitionEnd,\n\t  topVolumeChange: eventTypes.volumeChange,\n\t  topWaiting: eventTypes.waiting,\n\t  topWheel: eventTypes.wheel\n\t};\n\t\n\tfor (var type in topLevelEventsToDispatchConfig) {\n\t  topLevelEventsToDispatchConfig[type].dependencies = [type];\n\t}\n\t\n\tvar ON_CLICK_KEY = keyOf({ onClick: null });\n\tvar onClickListeners = {};\n\t\n\tfunction getDictionaryKey(inst) {\n\t  // Prevents V8 performance issue:\n\t  // https://github.com/facebook/react/pull/7232\n\t  return '.' + inst._rootNodeID;\n\t}\n\t\n\tvar SimpleEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n\t    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n\t    if (!dispatchConfig) {\n\t      return null;\n\t    }\n\t    var EventConstructor;\n\t    switch (topLevelType) {\n\t      case topLevelTypes.topAbort:\n\t      case topLevelTypes.topCanPlay:\n\t      case topLevelTypes.topCanPlayThrough:\n\t      case topLevelTypes.topDurationChange:\n\t      case topLevelTypes.topEmptied:\n\t      case topLevelTypes.topEncrypted:\n\t      case topLevelTypes.topEnded:\n\t      case topLevelTypes.topError:\n\t      case topLevelTypes.topInput:\n\t      case topLevelTypes.topInvalid:\n\t      case topLevelTypes.topLoad:\n\t      case topLevelTypes.topLoadedData:\n\t      case topLevelTypes.topLoadedMetadata:\n\t      case topLevelTypes.topLoadStart:\n\t      case topLevelTypes.topPause:\n\t      case topLevelTypes.topPlay:\n\t      case topLevelTypes.topPlaying:\n\t      case topLevelTypes.topProgress:\n\t      case topLevelTypes.topRateChange:\n\t      case topLevelTypes.topReset:\n\t      case topLevelTypes.topSeeked:\n\t      case topLevelTypes.topSeeking:\n\t      case topLevelTypes.topStalled:\n\t      case topLevelTypes.topSubmit:\n\t      case topLevelTypes.topSuspend:\n\t      case topLevelTypes.topTimeUpdate:\n\t      case topLevelTypes.topVolumeChange:\n\t      case topLevelTypes.topWaiting:\n\t        // HTML Events\n\t        // @see http://www.w3.org/TR/html5/index.html#events-0\n\t        EventConstructor = SyntheticEvent;\n\t        break;\n\t      case topLevelTypes.topKeyPress:\n\t        // Firefox creates a keypress event for function keys too. This removes\n\t        // the unwanted keypress events. Enter is however both printable and\n\t        // non-printable. One would expect Tab to be as well (but it isn't).\n\t        if (getEventCharCode(nativeEvent) === 0) {\n\t          return null;\n\t        }\n\t      /* falls through */\n\t      case topLevelTypes.topKeyDown:\n\t      case topLevelTypes.topKeyUp:\n\t        EventConstructor = SyntheticKeyboardEvent;\n\t        break;\n\t      case topLevelTypes.topBlur:\n\t      case topLevelTypes.topFocus:\n\t        EventConstructor = SyntheticFocusEvent;\n\t        break;\n\t      case topLevelTypes.topClick:\n\t        // Firefox creates a click event on right mouse clicks. This removes the\n\t        // unwanted click events.\n\t        if (nativeEvent.button === 2) {\n\t          return null;\n\t        }\n\t      /* falls through */\n\t      case topLevelTypes.topContextMenu:\n\t      case topLevelTypes.topDoubleClick:\n\t      case topLevelTypes.topMouseDown:\n\t      case topLevelTypes.topMouseMove:\n\t      case topLevelTypes.topMouseOut:\n\t      case topLevelTypes.topMouseOver:\n\t      case topLevelTypes.topMouseUp:\n\t        EventConstructor = SyntheticMouseEvent;\n\t        break;\n\t      case topLevelTypes.topDrag:\n\t      case topLevelTypes.topDragEnd:\n\t      case topLevelTypes.topDragEnter:\n\t      case topLevelTypes.topDragExit:\n\t      case topLevelTypes.topDragLeave:\n\t      case topLevelTypes.topDragOver:\n\t      case topLevelTypes.topDragStart:\n\t      case topLevelTypes.topDrop:\n\t        EventConstructor = SyntheticDragEvent;\n\t        break;\n\t      case topLevelTypes.topTouchCancel:\n\t      case topLevelTypes.topTouchEnd:\n\t      case topLevelTypes.topTouchMove:\n\t      case topLevelTypes.topTouchStart:\n\t        EventConstructor = SyntheticTouchEvent;\n\t        break;\n\t      case topLevelTypes.topAnimationEnd:\n\t      case topLevelTypes.topAnimationIteration:\n\t      case topLevelTypes.topAnimationStart:\n\t        EventConstructor = SyntheticAnimationEvent;\n\t        break;\n\t      case topLevelTypes.topTransitionEnd:\n\t        EventConstructor = SyntheticTransitionEvent;\n\t        break;\n\t      case topLevelTypes.topScroll:\n\t        EventConstructor = SyntheticUIEvent;\n\t        break;\n\t      case topLevelTypes.topWheel:\n\t        EventConstructor = SyntheticWheelEvent;\n\t        break;\n\t      case topLevelTypes.topCopy:\n\t      case topLevelTypes.topCut:\n\t      case topLevelTypes.topPaste:\n\t        EventConstructor = SyntheticClipboardEvent;\n\t        break;\n\t    }\n\t    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n\t    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n\t    EventPropagators.accumulateTwoPhaseDispatches(event);\n\t    return event;\n\t  },\n\t\n\t  didPutListener: function (inst, registrationName, listener) {\n\t    // Mobile Safari does not fire properly bubble click events on\n\t    // non-interactive elements, which means delegated click listeners do not\n\t    // fire. The workaround for this bug involves attaching an empty click\n\t    // listener on the target node.\n\t    if (registrationName === ON_CLICK_KEY) {\n\t      var key = getDictionaryKey(inst);\n\t      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\t      if (!onClickListeners[key]) {\n\t        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n\t      }\n\t    }\n\t  },\n\t\n\t  willDeleteListener: function (inst, registrationName) {\n\t    if (registrationName === ON_CLICK_KEY) {\n\t      var key = getDictionaryKey(inst);\n\t      onClickListeners[key].remove();\n\t      delete onClickListeners[key];\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = SimpleEventPlugin;\n\n/***/ },\n/* 144 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticAnimationEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n\t */\n\tvar AnimationEventInterface = {\n\t  animationName: null,\n\t  elapsedTime: null,\n\t  pseudoElement: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);\n\t\n\tmodule.exports = SyntheticAnimationEvent;\n\n/***/ },\n/* 145 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticClipboardEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/clipboard-apis/\n\t */\n\tvar ClipboardEventInterface = {\n\t  clipboardData: function (event) {\n\t    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\t\n\tmodule.exports = SyntheticClipboardEvent;\n\n/***/ },\n/* 146 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticCompositionEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n\t */\n\tvar CompositionEventInterface = {\n\t  data: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\t\n\tmodule.exports = SyntheticCompositionEvent;\n\n/***/ },\n/* 147 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticDragEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticMouseEvent = __webpack_require__(27);\n\t\n\t/**\n\t * @interface DragEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar DragEventInterface = {\n\t  dataTransfer: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\t\n\tmodule.exports = SyntheticDragEvent;\n\n/***/ },\n/* 148 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticFocusEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(22);\n\t\n\t/**\n\t * @interface FocusEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar FocusEventInterface = {\n\t  relatedTarget: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\t\n\tmodule.exports = SyntheticFocusEvent;\n\n/***/ },\n/* 149 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticInputEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n\t *      /#events-inputevents\n\t */\n\tvar InputEventInterface = {\n\t  data: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\t\n\tmodule.exports = SyntheticInputEvent;\n\n/***/ },\n/* 150 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticKeyboardEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(22);\n\t\n\tvar getEventCharCode = __webpack_require__(49);\n\tvar getEventKey = __webpack_require__(159);\n\tvar getEventModifierState = __webpack_require__(50);\n\t\n\t/**\n\t * @interface KeyboardEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar KeyboardEventInterface = {\n\t  key: getEventKey,\n\t  location: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  repeat: null,\n\t  locale: null,\n\t  getModifierState: getEventModifierState,\n\t  // Legacy Interface\n\t  charCode: function (event) {\n\t    // `charCode` is the result of a KeyPress event and represents the value of\n\t    // the actual printable character.\n\t\n\t    // KeyPress is deprecated, but its replacement is not yet final and not\n\t    // implemented in any major browser. Only KeyPress has charCode.\n\t    if (event.type === 'keypress') {\n\t      return getEventCharCode(event);\n\t    }\n\t    return 0;\n\t  },\n\t  keyCode: function (event) {\n\t    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n\t    // physical keyboard key.\n\t\n\t    // The actual meaning of the value depends on the users' keyboard layout\n\t    // which cannot be detected. Assuming that it is a US keyboard layout\n\t    // provides a surprisingly accurate mapping for US and European users.\n\t    // Due to this, it is left to the user to implement at this time.\n\t    if (event.type === 'keydown' || event.type === 'keyup') {\n\t      return event.keyCode;\n\t    }\n\t    return 0;\n\t  },\n\t  which: function (event) {\n\t    // `which` is an alias for either `keyCode` or `charCode` depending on the\n\t    // type of the event.\n\t    if (event.type === 'keypress') {\n\t      return getEventCharCode(event);\n\t    }\n\t    if (event.type === 'keydown' || event.type === 'keyup') {\n\t      return event.keyCode;\n\t    }\n\t    return 0;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\t\n\tmodule.exports = SyntheticKeyboardEvent;\n\n/***/ },\n/* 151 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticTouchEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(22);\n\t\n\tvar getEventModifierState = __webpack_require__(50);\n\t\n\t/**\n\t * @interface TouchEvent\n\t * @see http://www.w3.org/TR/touch-events/\n\t */\n\tvar TouchEventInterface = {\n\t  touches: null,\n\t  targetTouches: null,\n\t  changedTouches: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  getModifierState: getEventModifierState\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\t\n\tmodule.exports = SyntheticTouchEvent;\n\n/***/ },\n/* 152 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticTransitionEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(12);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n\t */\n\tvar TransitionEventInterface = {\n\t  propertyName: null,\n\t  elapsedTime: null,\n\t  pseudoElement: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);\n\t\n\tmodule.exports = SyntheticTransitionEvent;\n\n/***/ },\n/* 153 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticWheelEvent\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticMouseEvent = __webpack_require__(27);\n\t\n\t/**\n\t * @interface WheelEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar WheelEventInterface = {\n\t  deltaX: function (event) {\n\t    return 'deltaX' in event ? event.deltaX :\n\t    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n\t    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n\t  },\n\t  deltaY: function (event) {\n\t    return 'deltaY' in event ? event.deltaY :\n\t    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n\t    'wheelDeltaY' in event ? -event.wheelDeltaY :\n\t    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n\t    'wheelDelta' in event ? -event.wheelDelta : 0;\n\t  },\n\t  deltaZ: null,\n\t\n\t  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n\t  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n\t  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n\t  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n\t  deltaMode: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticMouseEvent}\n\t */\n\tfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\t\n\tmodule.exports = SyntheticWheelEvent;\n\n/***/ },\n/* 154 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule adler32\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar MOD = 65521;\n\t\n\t// adler32 is not cryptographically strong, and is only used to sanity check that\n\t// markup generated on the server matches the markup generated on the client.\n\t// This implementation (a modified version of the SheetJS version) has been optimized\n\t// for our use case, at the expense of conforming to the adler32 specification\n\t// for non-ascii inputs.\n\tfunction adler32(data) {\n\t  var a = 1;\n\t  var b = 0;\n\t  var i = 0;\n\t  var l = data.length;\n\t  var m = l & ~0x3;\n\t  while (i < m) {\n\t    var n = Math.min(i + 4096, m);\n\t    for (; i < n; i += 4) {\n\t      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n\t    }\n\t    a %= MOD;\n\t    b %= MOD;\n\t  }\n\t  for (; i < l; i++) {\n\t    b += a += data.charCodeAt(i);\n\t  }\n\t  a %= MOD;\n\t  b %= MOD;\n\t  return a | b << 16;\n\t}\n\t\n\tmodule.exports = adler32;\n\n/***/ },\n/* 155 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule checkReactTypeSpec\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactPropTypeLocationNames = __webpack_require__(44);\n\tvar ReactPropTypesSecret = __webpack_require__(46);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar ReactComponentTreeHook;\n\t\n\tif (typeof process !== 'undefined' && ({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"/site\"}) && (\"production\") === 'test') {\n\t  // Temporary hack.\n\t  // Inline requires don't work well with Jest:\n\t  // https://github.com/facebook/react/issues/7240\n\t  // Remove the inline requires when we don't need them anymore:\n\t  // https://github.com/facebook/react/pull/7178\n\t  ReactComponentTreeHook = __webpack_require__(41);\n\t}\n\t\n\tvar loggedTypeFailures = {};\n\t\n\t/**\n\t * Assert that the values match with the type specs.\n\t * Error messages are memorized and will only be shown once.\n\t *\n\t * @param {object} typeSpecs Map of name to a ReactPropType\n\t * @param {object} values Runtime values that need to be type-checked\n\t * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t * @param {string} componentName Name of the component for error messages.\n\t * @param {?object} element The React element that is being type-checked\n\t * @param {?number} debugID The React component instance that is being type-checked\n\t * @private\n\t */\n\tfunction checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {\n\t  for (var typeSpecName in typeSpecs) {\n\t    if (typeSpecs.hasOwnProperty(typeSpecName)) {\n\t      var error;\n\t      // Prop type validation may throw. In case they do, we don't want to\n\t      // fail the render phase where it didn't fail before. So we log it.\n\t      // After these have been cleaned up, we'll let them throw.\n\t      try {\n\t        // This is intentionally an invariant that gets caught. It's the same\n\t        // behavior as without this statement except with a better message.\n\t        !(typeof typeSpecs[typeSpecName] === 'function') ?  false ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;\n\t        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n\t      } catch (ex) {\n\t        error = ex;\n\t      }\n\t       false ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;\n\t      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t        // Only monitor this failure once because there tends to be a lot of the\n\t        // same error.\n\t        loggedTypeFailures[error.message] = true;\n\t\n\t        var componentStackInfo = '';\n\t\n\t        if (false) {\n\t          if (!ReactComponentTreeHook) {\n\t            ReactComponentTreeHook = require('./ReactComponentTreeHook');\n\t          }\n\t          if (debugID !== null) {\n\t            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);\n\t          } else if (element !== null) {\n\t            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);\n\t          }\n\t        }\n\t\n\t         false ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = checkReactTypeSpec;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ },\n/* 156 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule dangerousStyleValue\n\t */\n\t\n\t'use strict';\n\t\n\tvar CSSProperty = __webpack_require__(58);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\n\tvar styleWarnings = {};\n\t\n\t/**\n\t * Convert a value into the proper css writable value. The style name `name`\n\t * should be logical (no hyphens), as specified\n\t * in `CSSProperty.isUnitlessNumber`.\n\t *\n\t * @param {string} name CSS property name such as `topMargin`.\n\t * @param {*} value CSS property value such as `10px`.\n\t * @param {ReactDOMComponent} component\n\t * @return {string} Normalized style value with dimensions applied.\n\t */\n\tfunction dangerousStyleValue(name, value, component) {\n\t  // Note that we've removed escapeTextForBrowser() calls here since the\n\t  // whole string will be escaped when the attribute is injected into\n\t  // the markup. If you provide unsafe user data here they can inject\n\t  // arbitrary CSS which may be problematic (I couldn't repro this):\n\t  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n\t  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n\t  // This is not an XSS hole but instead a potential CSS injection issue\n\t  // which has lead to a greater discussion about how we're going to\n\t  // trust URLs moving forward. See #2115901\n\t\n\t  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n\t  if (isEmpty) {\n\t    return '';\n\t  }\n\t\n\t  var isNonNumeric = isNaN(value);\n\t  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n\t    return '' + value; // cast to string\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    if (false) {\n\t      // Allow '0' to pass through without warning. 0 is already special and\n\t      // doesn't require units, so we don't need to warn about it.\n\t      if (component && value !== '0') {\n\t        var owner = component._currentElement._owner;\n\t        var ownerName = owner ? owner.getName() : null;\n\t        if (ownerName && !styleWarnings[ownerName]) {\n\t          styleWarnings[ownerName] = {};\n\t        }\n\t        var warned = false;\n\t        if (ownerName) {\n\t          var warnings = styleWarnings[ownerName];\n\t          warned = warnings[name];\n\t          if (!warned) {\n\t            warnings[name] = true;\n\t          }\n\t        }\n\t        if (!warned) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n\t        }\n\t      }\n\t    }\n\t    value = value.trim();\n\t  }\n\t  return value + 'px';\n\t}\n\t\n\tmodule.exports = dangerousStyleValue;\n\n/***/ },\n/* 157 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule findDOMNode\n\t */\n\t\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(14);\n\tvar ReactDOMComponentTree = __webpack_require__(5);\n\tvar ReactInstanceMap = __webpack_require__(21);\n\t\n\tvar getHostComponentFromComposite = __webpack_require__(78);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Returns the DOM node rendered by this element.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n\t *\n\t * @param {ReactComponent|DOMElement} componentOrElement\n\t * @return {?DOMElement} The root node of this element.\n\t */\n\tfunction findDOMNode(componentOrElement) {\n\t  if (false) {\n\t    var owner = ReactCurrentOwner.current;\n\t    if (owner !== null) {\n\t      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n\t      owner._warnedAboutRefsInRender = true;\n\t    }\n\t  }\n\t  if (componentOrElement == null) {\n\t    return null;\n\t  }\n\t  if (componentOrElement.nodeType === 1) {\n\t    return componentOrElement;\n\t  }\n\t\n\t  var inst = ReactInstanceMap.get(componentOrElement);\n\t  if (inst) {\n\t    inst = getHostComponentFromComposite(inst);\n\t    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n\t  }\n\t\n\t  if (typeof componentOrElement.render === 'function') {\n\t     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n\t  } else {\n\t     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n\t  }\n\t}\n\t\n\tmodule.exports = findDOMNode;\n\n/***/ },\n/* 158 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule flattenChildren\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar KeyEscapeUtils = __webpack_require__(37);\n\tvar traverseAllChildren = __webpack_require__(54);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar ReactComponentTreeHook;\n\t\n\tif (typeof process !== 'undefined' && ({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\"/site\"}) && (\"production\") === 'test') {\n\t  // Temporary hack.\n\t  // Inline requires don't work well with Jest:\n\t  // https://github.com/facebook/react/issues/7240\n\t  // Remove the inline requires when we don't need them anymore:\n\t  // https://github.com/facebook/react/pull/7178\n\t  ReactComponentTreeHook = __webpack_require__(41);\n\t}\n\t\n\t/**\n\t * @param {function} traverseContext Context passed through traversal.\n\t * @param {?ReactComponent} child React child component.\n\t * @param {!string} name String name of key path to child.\n\t * @param {number=} selfDebugID Optional debugID of the current internal instance.\n\t */\n\tfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n\t  // We found a component instance.\n\t  if (traverseContext && typeof traverseContext === 'object') {\n\t    var result = traverseContext;\n\t    var keyUnique = result[name] === undefined;\n\t    if (false) {\n\t      if (!ReactComponentTreeHook) {\n\t        ReactComponentTreeHook = require('./ReactComponentTreeHook');\n\t      }\n\t      if (!keyUnique) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n\t      }\n\t    }\n\t    if (keyUnique && child != null) {\n\t      result[name] = child;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Flattens children that are typically specified as `props.children`. Any null\n\t * children will not be included in the resulting object.\n\t * @return {!object} flattened children keyed by name.\n\t */\n\tfunction flattenChildren(children, selfDebugID) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var result = {};\n\t\n\t  if (false) {\n\t    traverseAllChildren(children, function (traverseContext, child, name) {\n\t      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n\t    }, result);\n\t  } else {\n\t    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = flattenChildren;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ },\n/* 159 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getEventKey\n\t */\n\t\n\t'use strict';\n\t\n\tvar getEventCharCode = __webpack_require__(49);\n\t\n\t/**\n\t * Normalization of deprecated HTML5 `key` values\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n\t */\n\tvar normalizeKey = {\n\t  'Esc': 'Escape',\n\t  'Spacebar': ' ',\n\t  'Left': 'ArrowLeft',\n\t  'Up': 'ArrowUp',\n\t  'Right': 'ArrowRight',\n\t  'Down': 'ArrowDown',\n\t  'Del': 'Delete',\n\t  'Win': 'OS',\n\t  'Menu': 'ContextMenu',\n\t  'Apps': 'ContextMenu',\n\t  'Scroll': 'ScrollLock',\n\t  'MozPrintableKey': 'Unidentified'\n\t};\n\t\n\t/**\n\t * Translation from legacy `keyCode` to HTML5 `key`\n\t * Only special keys supported, all others depend on keyboard layout or browser\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n\t */\n\tvar translateToKey = {\n\t  8: 'Backspace',\n\t  9: 'Tab',\n\t  12: 'Clear',\n\t  13: 'Enter',\n\t  16: 'Shift',\n\t  17: 'Control',\n\t  18: 'Alt',\n\t  19: 'Pause',\n\t  20: 'CapsLock',\n\t  27: 'Escape',\n\t  32: ' ',\n\t  33: 'PageUp',\n\t  34: 'PageDown',\n\t  35: 'End',\n\t  36: 'Home',\n\t  37: 'ArrowLeft',\n\t  38: 'ArrowUp',\n\t  39: 'ArrowRight',\n\t  40: 'ArrowDown',\n\t  45: 'Insert',\n\t  46: 'Delete',\n\t  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n\t  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n\t  144: 'NumLock',\n\t  145: 'ScrollLock',\n\t  224: 'Meta'\n\t};\n\t\n\t/**\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {string} Normalized `key` property.\n\t */\n\tfunction getEventKey(nativeEvent) {\n\t  if (nativeEvent.key) {\n\t    // Normalize inconsistent values reported by browsers due to\n\t    // implementations of a working draft specification.\n\t\n\t    // FireFox implements `key` but returns `MozPrintableKey` for all\n\t    // printable characters (normalized to `Unidentified`), ignore it.\n\t    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n\t    if (key !== 'Unidentified') {\n\t      return key;\n\t    }\n\t  }\n\t\n\t  // Browser does not implement `key`, polyfill as much of it as we can.\n\t  if (nativeEvent.type === 'keypress') {\n\t    var charCode = getEventCharCode(nativeEvent);\n\t\n\t    // The enter-key is technically both printable and non-printable and can\n\t    // thus be captured by `keypress`, no other non-printable key should.\n\t    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n\t  }\n\t  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n\t    // While user keyboard layout determines the actual meaning of each\n\t    // `keyCode` value, almost all function keys have a universal value.\n\t    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n\t  }\n\t  return '';\n\t}\n\t\n\tmodule.exports = getEventKey;\n\n/***/ },\n/* 160 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getNodeForCharacterOffset\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Given any node return the first leaf node without children.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @return {DOMElement|DOMTextNode}\n\t */\n\t\n\tfunction getLeafNode(node) {\n\t  while (node && node.firstChild) {\n\t    node = node.firstChild;\n\t  }\n\t  return node;\n\t}\n\t\n\t/**\n\t * Get the next sibling within a container. This will walk up the\n\t * DOM if a node's siblings have been exhausted.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @return {?DOMElement|DOMTextNode}\n\t */\n\tfunction getSiblingNode(node) {\n\t  while (node) {\n\t    if (node.nextSibling) {\n\t      return node.nextSibling;\n\t    }\n\t    node = node.parentNode;\n\t  }\n\t}\n\t\n\t/**\n\t * Get object describing the nodes which contain characters at offset.\n\t *\n\t * @param {DOMElement|DOMTextNode} root\n\t * @param {number} offset\n\t * @return {?object}\n\t */\n\tfunction getNodeForCharacterOffset(root, offset) {\n\t  var node = getLeafNode(root);\n\t  var nodeStart = 0;\n\t  var nodeEnd = 0;\n\t\n\t  while (node) {\n\t    if (node.nodeType === 3) {\n\t      nodeEnd = nodeStart + node.textContent.length;\n\t\n\t      if (nodeStart <= offset && nodeEnd >= offset) {\n\t        return {\n\t          node: node,\n\t          offset: offset - nodeStart\n\t        };\n\t      }\n\t\n\t      nodeStart = nodeEnd;\n\t    }\n\t\n\t    node = getLeafNode(getSiblingNode(node));\n\t  }\n\t}\n\t\n\tmodule.exports = getNodeForCharacterOffset;\n\n/***/ },\n/* 161 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getVendorPrefixedEventName\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\t/**\n\t * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n\t *\n\t * @param {string} styleProp\n\t * @param {string} eventName\n\t * @returns {object}\n\t */\n\tfunction makePrefixMap(styleProp, eventName) {\n\t  var prefixes = {};\n\t\n\t  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n\t  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n\t  prefixes['Moz' + styleProp] = 'moz' + eventName;\n\t  prefixes['ms' + styleProp] = 'MS' + eventName;\n\t  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n\t\n\t  return prefixes;\n\t}\n\t\n\t/**\n\t * A list of event names to a configurable list of vendor prefixes.\n\t */\n\tvar vendorPrefixes = {\n\t  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n\t  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n\t  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n\t  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n\t};\n\t\n\t/**\n\t * Event names that have already been detected and prefixed (if applicable).\n\t */\n\tvar prefixedEventNames = {};\n\t\n\t/**\n\t * Element to check for prefixes on.\n\t */\n\tvar style = {};\n\t\n\t/**\n\t * Bootstrap if a DOM exists.\n\t */\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  style = document.createElement('div').style;\n\t\n\t  // On some platforms, in particular some releases of Android 4.x,\n\t  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n\t  // style object but the events that fire will still be prefixed, so we need\n\t  // to check if the un-prefixed events are usable, and if not remove them from the map.\n\t  if (!('AnimationEvent' in window)) {\n\t    delete vendorPrefixes.animationend.animation;\n\t    delete vendorPrefixes.animationiteration.animation;\n\t    delete vendorPrefixes.animationstart.animation;\n\t  }\n\t\n\t  // Same as above\n\t  if (!('TransitionEvent' in window)) {\n\t    delete vendorPrefixes.transitionend.transition;\n\t  }\n\t}\n\t\n\t/**\n\t * Attempts to determine the correct vendor prefixed event name.\n\t *\n\t * @param {string} eventName\n\t * @returns {string}\n\t */\n\tfunction getVendorPrefixedEventName(eventName) {\n\t  if (prefixedEventNames[eventName]) {\n\t    return prefixedEventNames[eventName];\n\t  } else if (!vendorPrefixes[eventName]) {\n\t    return eventName;\n\t  }\n\t\n\t  var prefixMap = vendorPrefixes[eventName];\n\t\n\t  for (var styleProp in prefixMap) {\n\t    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n\t      return prefixedEventNames[eventName] = prefixMap[styleProp];\n\t    }\n\t  }\n\t\n\t  return '';\n\t}\n\t\n\tmodule.exports = getVendorPrefixedEventName;\n\n/***/ },\n/* 162 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule onlyChild\n\t */\n\t'use strict';\n\t\n\tvar _prodInvariant = __webpack_require__(2);\n\t\n\tvar ReactElement = __webpack_require__(9);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Returns the first child in a collection of children and verifies that there\n\t * is only one child in the collection.\n\t *\n\t * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n\t *\n\t * The current implementation of this function assumes that a single child gets\n\t * passed without a wrapper, but the purpose of this helper function is to\n\t * abstract away the particular structure of children.\n\t *\n\t * @param {?object} children Child collection structure.\n\t * @return {ReactElement} The first and only `ReactElement` contained in the\n\t * structure.\n\t */\n\tfunction onlyChild(children) {\n\t  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n\t  return children;\n\t}\n\t\n\tmodule.exports = onlyChild;\n\n/***/ },\n/* 163 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule quoteAttributeValueForBrowser\n\t */\n\t\n\t'use strict';\n\t\n\tvar escapeTextContentForBrowser = __webpack_require__(28);\n\t\n\t/**\n\t * Escapes attribute value to prevent scripting attacks.\n\t *\n\t * @param {*} value Value to escape.\n\t * @return {string} An escaped string.\n\t */\n\tfunction quoteAttributeValueForBrowser(value) {\n\t  return '\"' + escapeTextContentForBrowser(value) + '\"';\n\t}\n\t\n\tmodule.exports = quoteAttributeValueForBrowser;\n\n/***/ },\n/* 164 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t* @providesModule renderSubtreeIntoContainer\n\t*/\n\t\n\t'use strict';\n\t\n\tvar ReactMount = __webpack_require__(69);\n\t\n\tmodule.exports = ReactMount.renderSubtreeIntoContainer;\n\n/***/ },\n/* 165 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar _hyphenPattern = /-(.)/g;\n\t\n\t/**\n\t * Camelcases a hyphenated string, for example:\n\t *\n\t *   > camelize('background-color')\n\t *   < \"backgroundColor\"\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction camelize(string) {\n\t  return string.replace(_hyphenPattern, function (_, character) {\n\t    return character.toUpperCase();\n\t  });\n\t}\n\t\n\tmodule.exports = camelize;\n\n/***/ },\n/* 166 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar camelize = __webpack_require__(165);\n\t\n\tvar msPattern = /^-ms-/;\n\t\n\t/**\n\t * Camelcases a hyphenated CSS property name, for example:\n\t *\n\t *   > camelizeStyleName('background-color')\n\t *   < \"backgroundColor\"\n\t *   > camelizeStyleName('-moz-transition')\n\t *   < \"MozTransition\"\n\t *   > camelizeStyleName('-ms-transition')\n\t *   < \"msTransition\"\n\t *\n\t * As Andi Smith suggests\n\t * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n\t * is converted to lowercase `ms`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction camelizeStyleName(string) {\n\t  return camelize(string.replace(msPattern, 'ms-'));\n\t}\n\t\n\tmodule.exports = camelizeStyleName;\n\n/***/ },\n/* 167 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t */\n\t\n\tvar isTextNode = __webpack_require__(175);\n\t\n\t/*eslint-disable no-bitwise */\n\t\n\t/**\n\t * Checks if a given DOM node contains or is another DOM node.\n\t */\n\tfunction containsNode(outerNode, innerNode) {\n\t  if (!outerNode || !innerNode) {\n\t    return false;\n\t  } else if (outerNode === innerNode) {\n\t    return true;\n\t  } else if (isTextNode(outerNode)) {\n\t    return false;\n\t  } else if (isTextNode(innerNode)) {\n\t    return containsNode(outerNode, innerNode.parentNode);\n\t  } else if ('contains' in outerNode) {\n\t    return outerNode.contains(innerNode);\n\t  } else if (outerNode.compareDocumentPosition) {\n\t    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\t\n\tmodule.exports = containsNode;\n\n/***/ },\n/* 168 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Convert array-like objects to arrays.\n\t *\n\t * This API assumes the caller knows the contents of the data type. For less\n\t * well defined inputs use createArrayFromMixed.\n\t *\n\t * @param {object|function|filelist} obj\n\t * @return {array}\n\t */\n\tfunction toArray(obj) {\n\t  var length = obj.length;\n\t\n\t  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList\n\t  // in old versions of Safari).\n\t  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;\n\t\n\t  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;\n\t\n\t  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;\n\t\n\t  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;\n\t\n\t  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n\t  // without method will throw during the slice call and skip straight to the\n\t  // fallback.\n\t  if (obj.hasOwnProperty) {\n\t    try {\n\t      return Array.prototype.slice.call(obj);\n\t    } catch (e) {\n\t      // IE < 9 does not support Array#slice on collections objects\n\t    }\n\t  }\n\t\n\t  // Fall back to copying key by key. This assumes all keys have a value,\n\t  // so will not preserve sparsely populated inputs.\n\t  var ret = Array(length);\n\t  for (var ii = 0; ii < length; ii++) {\n\t    ret[ii] = obj[ii];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Perform a heuristic test to determine if an object is \"array-like\".\n\t *\n\t *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n\t *   Joshu replied: \"Mu.\"\n\t *\n\t * This function determines if its argument has \"array nature\": it returns\n\t * true if the argument is an actual array, an `arguments' object, or an\n\t * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n\t *\n\t * It will return false for other array-like objects like Filelist.\n\t *\n\t * @param {*} obj\n\t * @return {boolean}\n\t */\n\tfunction hasArrayNature(obj) {\n\t  return (\n\t    // not null/false\n\t    !!obj && (\n\t    // arrays are objects, NodeLists are functions in Safari\n\t    typeof obj == 'object' || typeof obj == 'function') &&\n\t    // quacks like an array\n\t    'length' in obj &&\n\t    // not window\n\t    !('setInterval' in obj) &&\n\t    // no DOM node should be considered an array-like\n\t    // a 'select' element has 'length' and 'item' properties on IE8\n\t    typeof obj.nodeType != 'number' && (\n\t    // a real array\n\t    Array.isArray(obj) ||\n\t    // arguments\n\t    'callee' in obj ||\n\t    // HTMLCollection/NodeList\n\t    'item' in obj)\n\t  );\n\t}\n\t\n\t/**\n\t * Ensure that the argument is an array by wrapping it in an array if it is not.\n\t * Creates a copy of the argument if it is already an array.\n\t *\n\t * This is mostly useful idiomatically:\n\t *\n\t *   var createArrayFromMixed = require('createArrayFromMixed');\n\t *\n\t *   function takesOneOrMoreThings(things) {\n\t *     things = createArrayFromMixed(things);\n\t *     ...\n\t *   }\n\t *\n\t * This allows you to treat `things' as an array, but accept scalars in the API.\n\t *\n\t * If you need to convert an array-like object, like `arguments`, into an array\n\t * use toArray instead.\n\t *\n\t * @param {*} obj\n\t * @return {array}\n\t */\n\tfunction createArrayFromMixed(obj) {\n\t  if (!hasArrayNature(obj)) {\n\t    return [obj];\n\t  } else if (Array.isArray(obj)) {\n\t    return obj.slice();\n\t  } else {\n\t    return toArray(obj);\n\t  }\n\t}\n\t\n\tmodule.exports = createArrayFromMixed;\n\n/***/ },\n/* 169 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/*eslint-disable fb-www/unsafe-html*/\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar createArrayFromMixed = __webpack_require__(168);\n\tvar getMarkupWrap = __webpack_require__(170);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Dummy container used to render all markup.\n\t */\n\tvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\t\n\t/**\n\t * Pattern used by `getNodeName`.\n\t */\n\tvar nodeNamePattern = /^\\s*<(\\w+)/;\n\t\n\t/**\n\t * Extracts the `nodeName` of the first element in a string of markup.\n\t *\n\t * @param {string} markup String of markup.\n\t * @return {?string} Node name of the supplied markup.\n\t */\n\tfunction getNodeName(markup) {\n\t  var nodeNameMatch = markup.match(nodeNamePattern);\n\t  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n\t}\n\t\n\t/**\n\t * Creates an array containing the nodes rendered from the supplied markup. The\n\t * optionally supplied `handleScript` function will be invoked once for each\n\t * <script> element that is rendered. If no `handleScript` function is supplied,\n\t * an exception is thrown if any <script> elements are rendered.\n\t *\n\t * @param {string} markup A string of valid HTML markup.\n\t * @param {?function} handleScript Invoked once for each rendered <script>.\n\t * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n\t */\n\tfunction createNodesFromMarkup(markup, handleScript) {\n\t  var node = dummyNode;\n\t  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n\t  var nodeName = getNodeName(markup);\n\t\n\t  var wrap = nodeName && getMarkupWrap(nodeName);\n\t  if (wrap) {\n\t    node.innerHTML = wrap[1] + markup + wrap[2];\n\t\n\t    var wrapDepth = wrap[0];\n\t    while (wrapDepth--) {\n\t      node = node.lastChild;\n\t    }\n\t  } else {\n\t    node.innerHTML = markup;\n\t  }\n\t\n\t  var scripts = node.getElementsByTagName('script');\n\t  if (scripts.length) {\n\t    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n\t    createArrayFromMixed(scripts).forEach(handleScript);\n\t  }\n\t\n\t  var nodes = Array.from(node.childNodes);\n\t  while (node.lastChild) {\n\t    node.removeChild(node.lastChild);\n\t  }\n\t  return nodes;\n\t}\n\t\n\tmodule.exports = createNodesFromMarkup;\n\n/***/ },\n/* 170 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t */\n\t\n\t/*eslint-disable fb-www/unsafe-html */\n\t\n\tvar ExecutionEnvironment = __webpack_require__(6);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Dummy container used to detect which wraps are necessary.\n\t */\n\tvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\t\n\t/**\n\t * Some browsers cannot use `innerHTML` to render certain elements standalone,\n\t * so we wrap them, render the wrapped nodes, then extract the desired node.\n\t *\n\t * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n\t */\n\t\n\tvar shouldWrap = {};\n\t\n\tvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\n\tvar tableWrap = [1, '<table>', '</table>'];\n\tvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\t\n\tvar markupWrap = {\n\t  '*': [1, '?<div>', '</div>'],\n\t\n\t  'area': [1, '<map>', '</map>'],\n\t  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n\t  'legend': [1, '<fieldset>', '</fieldset>'],\n\t  'param': [1, '<object>', '</object>'],\n\t  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\t\n\t  'optgroup': selectWrap,\n\t  'option': selectWrap,\n\t\n\t  'caption': tableWrap,\n\t  'colgroup': tableWrap,\n\t  'tbody': tableWrap,\n\t  'tfoot': tableWrap,\n\t  'thead': tableWrap,\n\t\n\t  'td': trWrap,\n\t  'th': trWrap\n\t};\n\t\n\t// Initialize the SVG elements since we know they'll always need to be wrapped\n\t// consistently. If they are created inside a <div> they will be initialized in\n\t// the wrong namespace (and will not display).\n\tvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\n\tsvgElements.forEach(function (nodeName) {\n\t  markupWrap[nodeName] = svgWrap;\n\t  shouldWrap[nodeName] = true;\n\t});\n\t\n\t/**\n\t * Gets the markup wrap configuration for the supplied `nodeName`.\n\t *\n\t * NOTE: This lazily detects which wraps are necessary for the current browser.\n\t *\n\t * @param {string} nodeName Lowercase `nodeName`.\n\t * @return {?array} Markup wrap configuration, if applicable.\n\t */\n\tfunction getMarkupWrap(nodeName) {\n\t  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n\t  if (!markupWrap.hasOwnProperty(nodeName)) {\n\t    nodeName = '*';\n\t  }\n\t  if (!shouldWrap.hasOwnProperty(nodeName)) {\n\t    if (nodeName === '*') {\n\t      dummyNode.innerHTML = '<link />';\n\t    } else {\n\t      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n\t    }\n\t    shouldWrap[nodeName] = !dummyNode.firstChild;\n\t  }\n\t  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n\t}\n\t\n\tmodule.exports = getMarkupWrap;\n\n/***/ },\n/* 171 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Gets the scroll position of the supplied element or window.\n\t *\n\t * The return values are unbounded, unlike `getScrollPosition`. This means they\n\t * may be negative or exceed the element boundaries (which is possible using\n\t * inertial scrolling).\n\t *\n\t * @param {DOMWindow|DOMElement} scrollable\n\t * @return {object} Map with `x` and `y` keys.\n\t */\n\t\n\tfunction getUnboundedScrollPosition(scrollable) {\n\t  if (scrollable === window) {\n\t    return {\n\t      x: window.pageXOffset || document.documentElement.scrollLeft,\n\t      y: window.pageYOffset || document.documentElement.scrollTop\n\t    };\n\t  }\n\t  return {\n\t    x: scrollable.scrollLeft,\n\t    y: scrollable.scrollTop\n\t  };\n\t}\n\t\n\tmodule.exports = getUnboundedScrollPosition;\n\n/***/ },\n/* 172 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar _uppercasePattern = /([A-Z])/g;\n\t\n\t/**\n\t * Hyphenates a camelcased string, for example:\n\t *\n\t *   > hyphenate('backgroundColor')\n\t *   < \"background-color\"\n\t *\n\t * For CSS style names, use `hyphenateStyleName` instead which works properly\n\t * with all vendor prefixes, including `ms`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction hyphenate(string) {\n\t  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n\t}\n\t\n\tmodule.exports = hyphenate;\n\n/***/ },\n/* 173 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar hyphenate = __webpack_require__(172);\n\t\n\tvar msPattern = /^ms-/;\n\t\n\t/**\n\t * Hyphenates a camelcased CSS property name, for example:\n\t *\n\t *   > hyphenateStyleName('backgroundColor')\n\t *   < \"background-color\"\n\t *   > hyphenateStyleName('MozTransition')\n\t *   < \"-moz-transition\"\n\t *   > hyphenateStyleName('msTransition')\n\t *   < \"-ms-transition\"\n\t *\n\t * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n\t * is converted to `-ms-`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction hyphenateStyleName(string) {\n\t  return hyphenate(string).replace(msPattern, '-ms-');\n\t}\n\t\n\tmodule.exports = hyphenateStyleName;\n\n/***/ },\n/* 174 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM node.\n\t */\n\tfunction isNode(object) {\n\t  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n\t}\n\t\n\tmodule.exports = isNode;\n\n/***/ },\n/* 175 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar isNode = __webpack_require__(174);\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM text node.\n\t */\n\tfunction isTextNode(object) {\n\t  return isNode(object) && object.nodeType == 3;\n\t}\n\t\n\tmodule.exports = isTextNode;\n\n/***/ },\n/* 176 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * \n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Memoizes the return value of a function that accepts one string argument.\n\t */\n\t\n\tfunction memoizeStringOnly(callback) {\n\t  var cache = {};\n\t  return function (string) {\n\t    if (!cache.hasOwnProperty(string)) {\n\t      cache[string] = callback.call(this, string);\n\t    }\n\t    return cache[string];\n\t  };\n\t}\n\t\n\tmodule.exports = memoizeStringOnly;\n\n/***/ }\n/******/ ])));\n\n\n/** WEBPACK FOOTER **\n ** static/js/main.f02dc7da.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/site/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3af453783720649484d3\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/invariant.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule reactProdInvariant\n * \n */\n'use strict';\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\nfunction reactProdInvariant(code) {\n  var argCount = arguments.length - 1;\n\n  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\n  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n  }\n\n  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\n  var error = new Error(message);\n  error.name = 'Invariant Violation';\n  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\n  throw error;\n}\n\nmodule.exports = reactProdInvariant;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/reactProdInvariant.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  })();\n}\n\nmodule.exports = warning;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/warning.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/object-assign/index.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponentTree\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentFlags = require('./ReactDOMComponentFlags');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar Flags = ReactDOMComponentFlags;\n\nvar internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);\n\n/**\n * Drill down (through composites and empty components) until we get a host or\n * host text component.\n *\n * This is pretty polymorphic but unavoidable with the current structure we have\n * for `_renderedChildren`.\n */\nfunction getRenderedHostOrTextFromComponent(component) {\n  var rendered;\n  while (rendered = component._renderedComponent) {\n    component = rendered;\n  }\n  return component;\n}\n\n/**\n * Populate `_hostNode` on the rendered host/text component with the given\n * DOM node. The passed `inst` can be a composite.\n */\nfunction precacheNode(inst, node) {\n  var hostInst = getRenderedHostOrTextFromComponent(inst);\n  hostInst._hostNode = node;\n  node[internalInstanceKey] = hostInst;\n}\n\nfunction uncacheNode(inst) {\n  var node = inst._hostNode;\n  if (node) {\n    delete node[internalInstanceKey];\n    inst._hostNode = null;\n  }\n}\n\n/**\n * Populate `_hostNode` on each child of `inst`, assuming that the children\n * match up with the DOM (element) children of `node`.\n *\n * We cache entire levels at once to avoid an n^2 problem where we access the\n * children of a node sequentially and have to walk from the start to our target\n * node every time.\n *\n * Since we update `_renderedChildren` and the actual DOM at (slightly)\n * different times, we could race here and see a newer `_renderedChildren` than\n * the DOM nodes we see. To avoid this, ReactMultiChild calls\n * `prepareToManageChildren` before we change `_renderedChildren`, at which\n * time the container's child nodes are always cached (until it unmounts).\n */\nfunction precacheChildNodes(inst, node) {\n  if (inst._flags & Flags.hasCachedChildNodes) {\n    return;\n  }\n  var children = inst._renderedChildren;\n  var childNode = node.firstChild;\n  outer: for (var name in children) {\n    if (!children.hasOwnProperty(name)) {\n      continue;\n    }\n    var childInst = children[name];\n    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;\n    if (childID === 0) {\n      // We're currently unmounting this child in ReactMultiChild; skip it.\n      continue;\n    }\n    // We assume the child nodes are in the same order as the child instances.\n    for (; childNode !== null; childNode = childNode.nextSibling) {\n      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {\n        precacheNode(childInst, childNode);\n        continue outer;\n      }\n    }\n    // We reached the end of the DOM children without finding an ID match.\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;\n  }\n  inst._flags |= Flags.hasCachedChildNodes;\n}\n\n/**\n * Given a DOM node, return the closest ReactDOMComponent or\n * ReactDOMTextComponent instance ancestor.\n */\nfunction getClosestInstanceFromNode(node) {\n  if (node[internalInstanceKey]) {\n    return node[internalInstanceKey];\n  }\n\n  // Walk up the tree until we find an ancestor whose instance we have cached.\n  var parents = [];\n  while (!node[internalInstanceKey]) {\n    parents.push(node);\n    if (node.parentNode) {\n      node = node.parentNode;\n    } else {\n      // Top of the tree. This node must not be part of a React tree (or is\n      // unmounted, potentially).\n      return null;\n    }\n  }\n\n  var closest;\n  var inst;\n  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {\n    closest = inst;\n    if (parents.length) {\n      precacheChildNodes(inst, node);\n    }\n  }\n\n  return closest;\n}\n\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\nfunction getInstanceFromNode(node) {\n  var inst = getClosestInstanceFromNode(node);\n  if (inst != null && inst._hostNode === node) {\n    return inst;\n  } else {\n    return null;\n  }\n}\n\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\nfunction getNodeFromInstance(inst) {\n  // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  if (inst._hostNode) {\n    return inst._hostNode;\n  }\n\n  // Walk up the tree until we find an ancestor whose DOM node we have cached.\n  var parents = [];\n  while (!inst._hostNode) {\n    parents.push(inst);\n    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;\n    inst = inst._hostParent;\n  }\n\n  // Now parents contains each ancestor that does *not* have a cached native\n  // node, and `inst` is the deepest ancestor that does.\n  for (; parents.length; inst = parents.pop()) {\n    precacheChildNodes(inst, inst._hostNode);\n  }\n\n  return inst._hostNode;\n}\n\nvar ReactDOMComponentTree = {\n  getClosestInstanceFromNode: getClosestInstanceFromNode,\n  getInstanceFromNode: getInstanceFromNode,\n  getNodeFromInstance: getNodeFromInstance,\n  precacheChildNodes: precacheChildNodes,\n  precacheNode: precacheNode,\n  uncacheNode: uncacheNode\n};\n\nmodule.exports = ReactDOMComponentTree;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMComponentTree.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/ExecutionEnvironment.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstrumentation\n */\n\n'use strict';\n\nvar debugTool = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactDebugTool = require('./ReactDebugTool');\n  debugTool = ReactDebugTool;\n}\n\nmodule.exports = { debugTool: debugTool };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInstrumentation.js\n ** module id = 7\n ** module chunks = 0\n **/","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/emptyFunction.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar warning = require('fbjs/lib/warning');\nvar canDefineProperty = require('./canDefineProperty');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\nfunction hasValidRef(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      Object.defineProperty(element, '_shadowChildren', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: shadowChildren\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._shadowChildren = shadowChildren;\n      element._source = source;\n    }\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n */\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n */\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n */\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * Verifies the object is a ReactElement.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;\n\nmodule.exports = ReactElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactElement.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdates\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactReconciler = require('./ReactReconciler');\nvar Transaction = require('./Transaction');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar dirtyComponents = [];\nvar updateBatchNumber = 0;\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;\n}\n\nvar NESTED_UPDATES = {\n  initialize: function () {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function () {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function () {\n    this.callbackQueue.reset();\n  },\n  close: function () {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */true);\n}\n\n_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function () {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function (method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d, e) {\n  ensureInjected();\n  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  // Any updates enqueued while reconciling must be performed after this entire\n  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and\n  // C, B could update twice in a single batch if C's render enqueues an update\n  // to B (since B would have already updated, we should skip it, and the only\n  // way we can know to do so is by checking the batch counter).\n  updateBatchNumber++;\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    var markerName;\n    if (ReactFeatureFlags.logTopLevelRenders) {\n      var namedComponent = component;\n      // Duck type TopLevelWrapper. This is probably always true.\n      if (component._currentElement.props === component._renderedComponent._currentElement) {\n        namedComponent = component._renderedComponent;\n      }\n      markerName = 'React update: ' + namedComponent.getName();\n      console.time(markerName);\n    }\n\n    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);\n\n    if (markerName) {\n      console.timeEnd(markerName);\n    }\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function () {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n  if (component._updateBatchNumber == null) {\n    component._updateBatchNumber = updateBatchNumber + 1;\n  }\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function (ReconcileTransaction) {\n    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function (_batchingStrategy) {\n    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;\n    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;\n    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactUpdates.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventConstants\n */\n\n'use strict';\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\nvar PropagationPhases = keyMirror({ bubbled: null, captured: null });\n\n/**\n * Types of raw signals from the browser caught at the top level.\n */\nvar topLevelTypes = keyMirror({\n  topAbort: null,\n  topAnimationEnd: null,\n  topAnimationIteration: null,\n  topAnimationStart: null,\n  topBlur: null,\n  topCanPlay: null,\n  topCanPlayThrough: null,\n  topChange: null,\n  topClick: null,\n  topCompositionEnd: null,\n  topCompositionStart: null,\n  topCompositionUpdate: null,\n  topContextMenu: null,\n  topCopy: null,\n  topCut: null,\n  topDoubleClick: null,\n  topDrag: null,\n  topDragEnd: null,\n  topDragEnter: null,\n  topDragExit: null,\n  topDragLeave: null,\n  topDragOver: null,\n  topDragStart: null,\n  topDrop: null,\n  topDurationChange: null,\n  topEmptied: null,\n  topEncrypted: null,\n  topEnded: null,\n  topError: null,\n  topFocus: null,\n  topInput: null,\n  topInvalid: null,\n  topKeyDown: null,\n  topKeyPress: null,\n  topKeyUp: null,\n  topLoad: null,\n  topLoadedData: null,\n  topLoadedMetadata: null,\n  topLoadStart: null,\n  topMouseDown: null,\n  topMouseMove: null,\n  topMouseOut: null,\n  topMouseOver: null,\n  topMouseUp: null,\n  topPaste: null,\n  topPause: null,\n  topPlay: null,\n  topPlaying: null,\n  topProgress: null,\n  topRateChange: null,\n  topReset: null,\n  topScroll: null,\n  topSeeked: null,\n  topSeeking: null,\n  topSelectionChange: null,\n  topStalled: null,\n  topSubmit: null,\n  topSuspend: null,\n  topTextInput: null,\n  topTimeUpdate: null,\n  topTouchCancel: null,\n  topTouchEnd: null,\n  topTouchMove: null,\n  topTouchStart: null,\n  topTransitionEnd: null,\n  topVolumeChange: null,\n  topWaiting: null,\n  topWheel: null\n});\n\nvar EventConstants = {\n  topLevelTypes: topLevelTypes,\n  PropagationPhases: PropagationPhases\n};\n\nmodule.exports = EventConstants;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventConstants.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnForAddedNewProperty = false;\nvar isProxySupported = typeof Proxy === 'function';\n\nvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n  if (process.env.NODE_ENV !== 'production') {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n  return this;\n}\n\n_assign(SyntheticEvent.prototype, {\n\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      // eslint-disable-line valid-typeof\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // eslint-disable-line valid-typeof\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      if (process.env.NODE_ENV !== 'production') {\n        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n      } else {\n        this[propName] = null;\n      }\n    }\n    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n      this[shouldBeReleasedProperties[i]] = null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n    }\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (isProxySupported) {\n    /*eslint-disable no-func-assign */\n    SyntheticEvent = new Proxy(SyntheticEvent, {\n      construct: function (target, args) {\n        return this.apply(target, Object.create(target.prototype), args);\n      },\n      apply: function (constructor, that, args) {\n        return new Proxy(constructor.apply(that, args), {\n          set: function (target, prop, value) {\n            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;\n              didWarnForAddedNewProperty = true;\n            }\n            target[prop] = value;\n            return true;\n          }\n        });\n      }\n    });\n    /*eslint-enable no-func-assign */\n  }\n}\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n\n  var E = function () {};\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  _assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = _assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n\n/**\n  * Helper to nullify syntheticEvent instance properties when destructing\n  *\n  * @param {object} SyntheticEvent\n  * @param {String} propName\n  * @return {object} defineProperty object\n  */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  var isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n\n  function set(val) {\n    var action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? 'accessing the method' : 'accessing the property';\n    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    var warningCondition = false;\n    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\\'re seeing this, ' + 'you\\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticEvent.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PooledClass\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/PooledClass.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCurrentOwner\n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\n\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactCurrentOwner.js\n ** module id = 14\n ** module chunks = 0\n **/","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/**\n * Allows extraction of a minified key. Let's the build system minify keys\n * without losing the ability to dynamically use key strings as values\n * themselves. Pass in an object with a single key/val pair and it will return\n * you the string key of that single record. Suppose you want to grab the\n * value for a key 'className' inside of an object. Key/val minification may\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n * reuse those resolutions.\n */\nvar keyOf = function keyOf(oneKeyObj) {\n  var key;\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n    return key;\n  }\n  return null;\n};\n\nmodule.exports = keyOf;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/keyOf.js\n ** module id = 15\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMLazyTree\n */\n\n'use strict';\n\nvar DOMNamespaces = require('./DOMNamespaces');\nvar setInnerHTML = require('./setInnerHTML');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setTextContent = require('./setTextContent');\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * In IE (8-11) and Edge, appending nodes with no children is dramatically\n * faster than appending a full subtree, so we essentially queue up the\n * .appendChild calls here and apply them so each node is added to its parent\n * before any children are added.\n *\n * In other browsers, doing so is slower or neutral compared to the other order\n * (in Firefox, twice as slow) so we only do this inversion in IE.\n *\n * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.\n */\nvar enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\\bEdge\\/\\d/.test(navigator.userAgent);\n\nfunction insertTreeChildren(tree) {\n  if (!enableLazy) {\n    return;\n  }\n  var node = tree.node;\n  var children = tree.children;\n  if (children.length) {\n    for (var i = 0; i < children.length; i++) {\n      insertTreeBefore(node, children[i], null);\n    }\n  } else if (tree.html != null) {\n    setInnerHTML(node, tree.html);\n  } else if (tree.text != null) {\n    setTextContent(node, tree.text);\n  }\n}\n\nvar insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {\n  // DocumentFragments aren't actually part of the DOM after insertion so\n  // appending children won't update the DOM. We need to ensure the fragment\n  // is properly populated first, breaking out of our lazy approach for just\n  // this level. Also, some <object> plugins (like Flash Player) will read\n  // <param> nodes immediately upon insertion into the DOM, so <object>\n  // must also be populated prior to insertion into the DOM.\n  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {\n    insertTreeChildren(tree);\n    parentNode.insertBefore(tree.node, referenceNode);\n  } else {\n    parentNode.insertBefore(tree.node, referenceNode);\n    insertTreeChildren(tree);\n  }\n});\n\nfunction replaceChildWithTree(oldNode, newTree) {\n  oldNode.parentNode.replaceChild(newTree.node, oldNode);\n  insertTreeChildren(newTree);\n}\n\nfunction queueChild(parentTree, childTree) {\n  if (enableLazy) {\n    parentTree.children.push(childTree);\n  } else {\n    parentTree.node.appendChild(childTree.node);\n  }\n}\n\nfunction queueHTML(tree, html) {\n  if (enableLazy) {\n    tree.html = html;\n  } else {\n    setInnerHTML(tree.node, html);\n  }\n}\n\nfunction queueText(tree, text) {\n  if (enableLazy) {\n    tree.text = text;\n  } else {\n    setTextContent(tree.node, text);\n  }\n}\n\nfunction toString() {\n  return this.node.nodeName;\n}\n\nfunction DOMLazyTree(node) {\n  return {\n    node: node,\n    children: [],\n    html: null,\n    text: null,\n    toString: toString\n  };\n}\n\nDOMLazyTree.insertTreeBefore = insertTreeBefore;\nDOMLazyTree.replaceChildWithTree = replaceChildWithTree;\nDOMLazyTree.queueChild = queueChild;\nDOMLazyTree.queueHTML = queueHTML;\nDOMLazyTree.queueText = queueText;\n\nmodule.exports = DOMLazyTree;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMLazyTree.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMProperty\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_PROPERTY: 0x1,\n  HAS_BOOLEAN_VALUE: 0x4,\n  HAS_NUMERIC_VALUE: 0x8,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n   * attribute namespace URL. (Attribute names not specified use no namespace.)\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function (domPropertyConfig) {\n    var Injection = DOMPropertyInjection;\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n    }\n\n    for (var propName in Properties) {\n      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property \\'%s\\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;\n\n      var lowerCased = propName.toLowerCase();\n      var propConfig = Properties[propName];\n\n      var propertyInfo = {\n        attributeName: lowerCased,\n        attributeNamespace: null,\n        propertyName: propName,\n        mutationMethod: null,\n\n        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n      };\n      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;\n\n      if (process.env.NODE_ENV !== 'production') {\n        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n      }\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        propertyInfo.attributeName = attributeName;\n        if (process.env.NODE_ENV !== 'production') {\n          DOMProperty.getPossibleStandardName[attributeName] = propName;\n        }\n      }\n\n      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n      }\n\n      if (DOMPropertyNames.hasOwnProperty(propName)) {\n        propertyInfo.propertyName = DOMPropertyNames[propName];\n      }\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n      }\n\n      DOMProperty.properties[propName] = propertyInfo;\n    }\n  }\n};\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n  ROOT_ATTRIBUTE_NAME: 'data-reactroot',\n\n  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,\n  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040',\n\n  /**\n   * Map from property \"standard name\" to an object with info about how to set\n   * the property in the DOM. Each object contains:\n   *\n   * attributeName:\n   *   Used when rendering markup or with `*Attribute()`.\n   * attributeNamespace\n   * propertyName:\n   *   Used on DOM node instances. (This includes properties that mutate due to\n   *   external factors.)\n   * mutationMethod:\n   *   If non-null, used instead of the property or `setAttribute()` after\n   *   initial render.\n   * mustUseProperty:\n   *   Whether the property must be accessed and mutated as an object property.\n   * hasBooleanValue:\n   *   Whether the property should be removed when set to a falsey value.\n   * hasNumericValue:\n   *   Whether the property must be numeric or parse as a numeric and should be\n   *   removed when set to a falsey value.\n   * hasPositiveNumericValue:\n   *   Whether the property must be positive numeric or parse as a positive\n   *   numeric and should be removed when set to a falsey value.\n   * hasOverloadedBooleanValue:\n   *   Whether the property can be used as a flag as well as with a value.\n   *   Removed when strictly equal to false; present without a value when\n   *   strictly equal to true; present with a value otherwise.\n   */\n  properties: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties. Available only in __DEV__.\n   * @type {Object}\n   */\n  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function (attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMProperty.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconciler\n */\n\n'use strict';\n\nvar ReactRef = require('./ReactRef');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} the containing host component instance\n   * @param {?object} info about the host container\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots\n  ) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n      }\n    }\n    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n      }\n    }\n    return markup;\n  },\n\n  /**\n   * Returns a value that can be passed to\n   * ReactComponentEnvironment.replaceNodeWithMarkup.\n   */\n  getHostNode: function (internalInstance) {\n    return internalInstance.getHostNode();\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (internalInstance, safely) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n      }\n    }\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent(safely);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && context === internalInstance._context) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n\n      // TODO: Bailing out early is just a perf optimization right?\n      // TODO: Removing the return statement should affect correctness?\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n      }\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n      // The component's enqueued batch number should always be the current\n      // batch or the following one.\n      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n      }\n    }\n    internalInstance.performUpdateIfNecessary(transaction);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactReconciler.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginHub\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function (event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function (e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e, false);\n};\n\nvar getDictionaryKey = function (inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n};\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {function} listener The callback to store.\n   */\n  putListener: function (inst, registrationName, listener) {\n    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\n    var key = getDictionaryKey(inst);\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[key] = listener;\n\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.didPutListener) {\n      PluginModule.didPutListener(inst, registrationName, listener);\n    }\n  },\n\n  /**\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function (inst, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    var key = getDictionaryKey(inst);\n    return bankForRegistrationName && bankForRegistrationName[key];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function (inst, registrationName) {\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.willDeleteListener) {\n      PluginModule.willDeleteListener(inst, registrationName);\n    }\n\n    var bankForRegistrationName = listenerBank[registrationName];\n    // TODO: This should never be null -- when is it?\n    if (bankForRegistrationName) {\n      var key = getDictionaryKey(inst);\n      delete bankForRegistrationName[key];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   */\n  deleteAllListeners: function (inst) {\n    var key = getDictionaryKey(inst);\n    for (var registrationName in listenerBank) {\n      if (!listenerBank.hasOwnProperty(registrationName)) {\n        continue;\n      }\n\n      if (!listenerBank[registrationName][key]) {\n        continue;\n      }\n\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n      if (PluginModule && PluginModule.willDeleteListener) {\n        PluginModule.willDeleteListener(inst, registrationName);\n      }\n\n      delete listenerBank[registrationName][key];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function (events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function (simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n    } else {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n    }\n    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function () {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function () {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPluginHub.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPropagators\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginUtils = require('./EventPluginUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar warning = require('fbjs/lib/warning');\n\nvar PropagationPhases = EventConstants.PropagationPhases;\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(inst, upwards, event) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;\n  }\n  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\n  var listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n */\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    var targetInst = event._targetInst;\n    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;\n    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\n  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPropagators.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceMap\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInstanceMap.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticUIEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function (event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function (event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticUIEvent.js\n ** module id = 22\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Transaction\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar Mixin = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function () {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (this.wrapperInitData) {\n      this.wrapperInitData.length = 0;\n    } else {\n      this.wrapperInitData = [];\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function () {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked. The optional arguments helps prevent the need\n   * to bind in many cases.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} a Argument to pass to the method.\n   * @param {Object?=} b Argument to pass to the method.\n   * @param {Object?=} c Argument to pass to the method.\n   * @param {Object?=} d Argument to pass to the method.\n   * @param {Object?=} e Argument to pass to the method.\n   * @param {Object?=} f Argument to pass to the method.\n   *\n   * @return {*} Return value from `method`.\n   */\n  perform: function (method, scope, a, b, c, d, e, f) {\n    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {}\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function (startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n      } finally {\n        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {}\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function (startIndex) {\n    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {}\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nvar Transaction = {\n\n  Mixin: Mixin,\n\n  /**\n   * Token to look for to determine if an error occurred.\n   */\n  OBSERVED_ERROR: {}\n\n};\n\nmodule.exports = Transaction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/Transaction.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/emptyObject.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DisabledInputUtils\n */\n\n'use strict';\n\nvar disableableMouseListenerNames = {\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n};\n\n/**\n * Implements a host component that does not receive mouse events\n * when `disabled` is set.\n */\nvar DisabledInputUtils = {\n  getHostProps: function (inst, props) {\n    if (!props.disabled) {\n      return props;\n    }\n\n    // Copy the props, except the mouse listeners\n    var hostProps = {};\n    for (var key in props) {\n      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {\n        hostProps[key] = props[key];\n      }\n    }\n\n    return hostProps;\n  }\n};\n\nmodule.exports = DisabledInputUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DisabledInputUtils.js\n ** module id = 25\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getVendorPrefixedEventName = require('./getVendorPrefixedEventName');\nvar isEventSupported = require('./isEventSupported');\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar hasEventPageXY;\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topAbort: 'abort',\n  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\n  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\n  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\n  topBlur: 'blur',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topScroll: 'scroll',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topSelectionChange: 'selectionchange',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTextInput: 'textInput',\n  topTimeUpdate: 'timeupdate',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   EventPluginHub.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\n    var topLevelTypes = EventConstants.topLevelTypes;\n    for (var i = 0; i < dependencies.length; i++) {\n      var dependency = dependencies[i];\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Protect against document.createEvent() returning null\n   * Some popup blocker extensions appear to do this:\n   * https://github.com/facebook/react/issues/6887\n   */\n  supportsEventPageXY: function () {\n    if (!document.createEvent) {\n      return false;\n    }\n    var ev = document.createEvent('MouseEvent');\n    return ev != null && 'pageX' in ev;\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n   * pageX/pageY isn't supported (legacy browsers).\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (hasEventPageXY === undefined) {\n      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\n    }\n    if (!hasEventPageXY && !isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  }\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactBrowserEventEmitter.js\n ** module id = 26\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticMouseEvent\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticMouseEvent.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Based on the escape-html library, which is used under the MIT License below:\n *\n * Copyright (c) 2012-2013 TJ Holowaychuk\n * Copyright (c) 2015 Andreas Lubbe\n * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @providesModule escapeTextContentForBrowser\n */\n\n'use strict';\n\n// code copied and modified from escape-html\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escape = '&quot;';\n        break;\n      case 38:\n        // &\n        escape = '&amp;';\n        break;\n      case 39:\n        // '\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n        break;\n      case 60:\n        // <\n        escape = '&lt;';\n        break;\n      case 62:\n        // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n}\n// end code copied and modified from escape-html\n\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  if (typeof text === 'boolean' || typeof text === 'number') {\n    // this shortcircuit helps perf for types that we know will never have\n    // special characters, especially given that this function is used often\n    // for numeric dom ids.\n    return '' + text;\n  }\n  return escapeHtml(text);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/escapeTextContentForBrowser.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setInnerHTML\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar DOMNamespaces = require('./DOMNamespaces');\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\n\n// SVG temp container for IE lacking innerHTML\nvar reusableSVGContainer;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n  // IE does not have innerHTML for SVG nodes, so instead we inject the\n  // new markup in a temp node and then move the child nodes across into\n  // the target node\n  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {\n    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n    var svgNode = reusableSVGContainer.firstChild;\n    while (svgNode.firstChild) {\n      node.appendChild(svgNode.firstChild);\n    }\n  } else {\n    node.innerHTML = html;\n  }\n});\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function (node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n        // the actual Unicode character (by Babel, for example).\n        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n  testElement = null;\n}\n\nmodule.exports = setInnerHTML;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/setInnerHTML.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require('./invariant');\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function keyMirror(obj) {\n  var ret = {};\n  var key;\n  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/keyMirror.js\n ** module id = 30\n ** module chunks = 0\n **/","/*! p5.js v0.5.4 October 01, 2016 */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.p5 = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\n},{}],2:[function(_dereq_,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function(predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],3:[function(_dereq_,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],4:[function(_dereq_,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    var code = c.charCodeAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs.get(i);\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    var code = s.charCodeAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs.get(glyphIndex);\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs.get(i);\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],5:[function(_dereq_,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = _dereq_('./path');\nvar sfnt = _dereq_('./tables/sfnt');\nvar encoding = _dereq_('./encoding');\nvar glyphset = _dereq_('./glyphset');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function(c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function(s) {\n    var glyphs = [];\n    for (var i = 0; i < s.length; i += 1) {\n        var c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function(name) {\n    var glyphIndex = this.nametoGlyphIndex(name);\n    var glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    if (!this.supported) {\n        return;\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    var kerning = options.kerning === undefined ? true : options.kerning;\n    var fontScale = 1 / this.unitsPerEm * fontSize;\n    var glyphs = this.stringToGlyphs(text);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function() {\n    var warnings = [];\n    var _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(_this[attrName] && _this[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function() {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function() {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function(fs) {\n        fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n            fileEntry.createWriter(function(writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                writer.addEventListener('writeend', function() {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                }, false);\n            });\n        });\n    },\n\n    function(err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":4,\"./glyphset\":7,\"./path\":10,\"./tables/sfnt\":25}],6:[function(_dereq_,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = _dereq_('./check');\nvar draw = _dereq_('./draw');\nvar path = _dereq_('./path');\n\nfunction getPathDefinition(glyph, path) {\n    var _path = path || { commands: [] };\n    return {\n        configurable: true,\n\n        get: function() {\n            if (typeof _path === 'function') {\n                _path = _path();\n            }\n\n            return _path;\n        },\n\n        set: function(p) {\n            _path = p;\n        }\n    };\n}\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    // By putting all the code on a prototype function (which is only declared once)\n    // we reduce the memory requirements for larger fonts by some 2%\n    this.bindConstructorValues(options);\n}\n\nGlyph.prototype.bindConstructorValues = function(options) {\n    this.index = options.index || 0;\n\n    // These three values cannnot be deferred for memory optimization:\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n\n    // But by binding these values only when necessary, we reduce can\n    // the memory requirements by almost 3% for larger fonts.\n    if (options.xMin) {\n        this.xMin = options.xMin;\n    }\n\n    if (options.yMin) {\n        this.yMin = options.yMin;\n    }\n\n    if (options.xMax) {\n        this.xMax = options.xMax;\n    }\n\n    if (options.yMax) {\n        this.yMax = options.yMax;\n    }\n\n    if (options.advanceWidth) {\n        this.advanceWidth = options.advanceWidth;\n    }\n\n    // The path for a glyph is the most memory intensive, and is bound as a value\n    // with a getter/setter to ensure we actually do path parsing only once the\n    // path is actually needed by anything.\n    Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n};\n\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function(x, y, fontSize) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var scale = 1 / this.path.unitsPerEm * fontSize;\n    var p = new path.Path();\n    var commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function() {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (var j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    var scale = 1 / this.path.unitsPerEm * fontSize;\n\n    var blueCircles = [];\n    var redCircles = [];\n    var path = this.path;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.path.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // This code is here due to memory optimization: by not using\n    // defaults in the constructor, we save a notable amount of memory.\n    var xMin = this.xMin || 0;\n    var yMin = this.yMin || 0;\n    var xMax = this.xMax || 0;\n    var yMax = this.yMax || 0;\n    var advanceWidth = this.advanceWidth || 0;\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (xMin * scale), -10000, x + (xMin * scale), 10000);\n    draw.line(ctx, x + (xMax * scale), -10000, x + (xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-yMin * scale), 10000, y + (-yMin * scale));\n    draw.line(ctx, -10000, y + (-yMax * scale), 10000, y + (-yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (advanceWidth * scale), -10000, x + (advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":2,\"./draw\":3,\"./path\":10}],7:[function(_dereq_,module,exports){\n// The GlyphSet object\n\n'use strict';\n\nvar _glyph = _dereq_('./glyph');\n\n// A GlyphSet represents all glyphs available in the font, but modelled using\n// a deferred glyph loader, for retrieving glyphs only once they are absolutely\n// necessary, to keep the memory footprint down.\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (var i = 0; i < glyphs.length; i++) {\n            this.glyphs[i] = glyphs[i];\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\nGlyphSet.prototype.get = function(index) {\n    if (typeof this.glyphs[index] === 'function') {\n        this.glyphs[index] = this.glyphs[index]();\n    }\n\n    return this.glyphs[index];\n};\n\nGlyphSet.prototype.push = function(index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\nfunction glyphLoader(font, index) {\n    return new _glyph.Glyph({index: index, font: font});\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n */\n\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function() {\n        var glyph = new _glyph.Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            parseGlyph(glyph, data, position);\n            var path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function() {\n        var glyph = new _glyph.Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            var path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nexports.GlyphSet = GlyphSet;\nexports.glyphLoader = glyphLoader;\nexports.ttfGlyphLoader = ttfGlyphLoader;\nexports.cffGlyphLoader = cffGlyphLoader;\n\n},{\"./glyph\":6}],8:[function(_dereq_,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2015 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = _dereq_('./encoding');\nvar _font = _dereq_('./font');\nvar glyph = _dereq_('./glyph');\nvar parse = _dereq_('./parse');\nvar path = _dereq_('./path');\n\nvar cmap = _dereq_('./tables/cmap');\nvar cff = _dereq_('./tables/cff');\nvar glyf = _dereq_('./tables/glyf');\nvar gpos = _dereq_('./tables/gpos');\nvar head = _dereq_('./tables/head');\nvar hhea = _dereq_('./tables/hhea');\nvar hmtx = _dereq_('./tables/hmtx');\nvar kern = _dereq_('./tables/kern');\nvar loca = _dereq_('./tables/loca');\nvar maxp = _dereq_('./tables/maxp');\nvar _name = _dereq_('./tables/name');\nvar os2 = _dereq_('./tables/os2');\nvar post = _dereq_('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var arrayBuffer = new ArrayBuffer(buffer.length);\n    var data = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = _dereq_('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var indexToLocFormat;\n    var hmtxOffset;\n    var glyfOffset;\n    var locaOffset;\n    var cffOffset;\n    var kernOffset;\n    var gposOffset;\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    var font = new _font.Font();\n    var data = new DataView(buffer, 0);\n\n    var version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    var numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = loca.parse(data, locaOffset, font.numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n\n        return callback(null, font);\n    });\n}\n\nexports._parse = parse;\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":4,\"./font\":5,\"./glyph\":6,\"./parse\":9,\"./path\":10,\"./tables/cff\":12,\"./tables/cmap\":13,\"./tables/glyf\":14,\"./tables/gpos\":15,\"./tables/head\":16,\"./tables/hhea\":17,\"./tables/hmtx\":18,\"./tables/kern\":19,\"./tables/loca\":20,\"./tables/maxp\":21,\"./tables/name\":22,\"./tables/os2\":23,\"./tables/post\":24,\"fs\":1}],9:[function(_dereq_,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function(dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function(dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function(dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],10:[function(_dereq_,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function(decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],11:[function(_dereq_,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = _dereq_('./check');\nvar encode = _dereq_('./types').encode;\nvar sizeOf = _dereq_('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function() {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n\n    return v;\n};\n\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":2,\"./types\":26}],12:[function(_dereq_,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = _dereq_('../encoding');\nvar glyphset = _dereq_('../glyphset');\nvar parse = _dereq_('../parse');\nvar path = _dereq_('../path');\nvar table = _dereq_('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    //var i, objectOffset, endOffset;\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var i;\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        var pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n        var value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n\n        newDict[m.name] = value;\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var i;\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var i;\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(font, glyph, code) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new path.Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var width = font.defaultWidthX;\n    var open = false;\n    var x = 0;\n    var y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    stack.shift();                // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();\n                    } else {\n                        y = c4y + stack.shift();\n                    }\n\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + glyph.index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                if (open) {\n                    p.closePath();\n                    open = false;\n                }\n\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + glyph.index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n\n    glyph.advanceWidth = width;\n    return p;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    var privateDictOffset = start + topDict['private'][1];\n    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = new glyphset.GlyphSet(font);\n    for (var i = 0; i < font.nGlyphs; i += 1) {\n        var charString = charStringsIndex.objects[i];\n        font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var sid;\n\n    // Is the string in the CFF standard strings?\n    var i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {};\n    for (var i = 0; i < meta.length; i += 1) {\n        var entry = meta[i];\n        var value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [];\n    var path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var dx;\n        var dy;\n        var cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            var dx1 = Math.round(cmd.x1 - x);\n            var dy1 = Math.round(cmd.y1 - y);\n            var dx2 = Math.round(cmd.x2 - cmd.x1);\n            var dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs.get(i);\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    var fontScale = 1 / options.unitsPerEm;\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        fontMatrix: [fontScale, 0, 0, fontScale, 0, 0],\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n    var glyph;\n\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyph = glyphs.get(i);\n        glyphNames.push(glyph.name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":4,\"../glyphset\":7,\"../parse\":9,\"../path\":10,\"../table\":11}],13:[function(_dereq_,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = _dereq_('../check');\nvar parse = _dereq_('../parse');\nvar table = _dereq_('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var i;\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (i = 0; i < cmap.numTables; i += 1) {\n        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex;\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs.get(i);\n        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    var endCounts = [];\n    var startCounts = [];\n    var idDeltas = [];\n    var idRangeOffsets = [];\n    var glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":2,\"../parse\":9,\"../table\":11}],14:[function(_dereq_,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = _dereq_('../check');\nvar glyphset = _dereq_('../glyphset');\nvar parse = _dereq_('../parse');\nvar path = _dereq_('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(glyph, data, start) {\n    var p = new parse.Parser(data, start);\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    var flags;\n    var flag;\n    if (glyph.numberOfContours > 0) {\n        var i;\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new path.Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n    for (var i = 0; i < contours.length; i += 1) {\n        var contour = contours[i];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var curvePt;\n        var realFirstPoint;\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            var pt = contour[j];\n            var prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n\n    p.closePath();\n    return p;\n}\n\nfunction buildPath(glyphs, glyph) {\n    if (glyph.isComposite) {\n        for (var j = 0; j < glyph.components.length; j += 1) {\n            var component = glyph.components[j];\n            var componentGlyph = glyphs.get(component.glyphIndex);\n            if (componentGlyph.points) {\n                var transformedPoints = transformPoints(componentGlyph.points, component);\n                glyph.points = glyph.points.concat(transformedPoints);\n            }\n        }\n    }\n\n    return getPath(glyph.points);\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs = new glyphset.GlyphSet(font);\n    var i;\n\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    }\n\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":2,\"../glyphset\":7,\"../parse\":9,\"../path\":10}],15:[function(_dereq_,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = _dereq_('../check');\nvar parse = _dereq_('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var n = p.parseUShort();\n    var list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var coverage = [];\n        for (; count--;) {\n            var begin = p.parseUShort();\n            var end = p.parseUShort();\n            var index = p.parseUShort();\n            for (var i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort();\n        var glyphCount = p.parseUShort();\n        var classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort();\n        var startGlyphs = [];\n        var endGlyphs = [];\n        var classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            var l = 0;\n            var r = startGlyphs.length - 1;\n            while (l < r) {\n                var c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    var format = p.parseUShort();\n    var coverageOffset = p.parseUShort();\n    var coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    var valueFormat1 = p.parseUShort();\n    var valueFormat2 = p.parseUShort();\n    var value1;\n    var value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    var sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount = p.parseUShort();\n        var pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            var pairSetOffset = pairSetOffsets[firstGlyph];\n            var sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                var pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    var secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset = p.parseUShort();\n        var classDef2Offset = p.parseUShort();\n        var class1Count = p.parseUShort();\n        var class2Count = p.parseUShort();\n        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        var kerningMatrix = [];\n        for (var i = 0; i < class1Count; i++) {\n            var kerningRow = kerningMatrix[i] = [];\n            for (var j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        var covered = {};\n        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph);\n            var class2 = getClass2(rightGlyph);\n            var kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var lookupType = p.parseUShort();\n    var lookupFlag = p.parseUShort();\n    var useMarkFilteringSet = lookupFlag & 0x10;\n    var subTableCount = p.parseUShort();\n    var subTableOffsets = p.parseOffset16List(subTableCount);\n    var table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        var subtables = [];\n        for (var i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    var lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    var lookupCount = p.parseUShort();\n    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n    var lookupListAbsoluteOffset = start + lookupListOffset;\n    for (var i = 0; i < lookupCount; i++) {\n        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":2,\"../parse\":9}],16:[function(_dereq_,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = _dereq_('../check');\nvar parse = _dereq_('../parse');\nvar table = _dereq_('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":2,\"../parse\":9,\"../table\":11}],17:[function(_dereq_,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = _dereq_('../parse');\nvar table = _dereq_('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":9,\"../table\":11}],18:[function(_dereq_,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = _dereq_('../parse');\nvar table = _dereq_('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs.get(i);\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs.get(i);\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n},{\"../parse\":9,\"../table\":11}],19:[function(_dereq_,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = _dereq_('../check');\nvar parse = _dereq_('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs = {};\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    var subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":2,\"../parse\":9}],20:[function(_dereq_,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = _dereq_('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":9}],21:[function(_dereq_,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = _dereq_('../parse');\nvar table = _dereq_('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":9,\"../table\":11}],22:[function(_dereq_,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = _dereq_('../types').encode;\nvar parse = _dereq_('../parse');\nvar table = _dereq_('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {};\n    var p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort();\n    var stringOffset = p.offset + p.parseUShort();\n    var unknownCount = 0;\n    for (var i = 0; i < count; i++) {\n        var platformID = p.parseUShort();\n        var encodingID = p.parseUShort();\n        var languageID = p.parseUShort();\n        var nameID = p.parseUShort();\n        var property = nameTableNames[nameID];\n        var byteLength = p.parseUShort();\n        var offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            var codePoints = [];\n            var length = byteLength / 2;\n            for (var j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset + offset);\n            }\n\n            var str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown' + unknownCount] = str;\n            }\n        }\n\n    }\n\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    var i;\n    var s;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":9,\"../table\":11,\"../types\":26}],23:[function(_dereq_,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = _dereq_('../parse');\nvar table = _dereq_('../table');\n\nvar unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (var i = 0; i < unicodeRanges.length; i += 1) {\n        var range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.unicodeRanges = unicodeRanges;\nexports.getUnicodeRange = getUnicodeRange;\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":9,\"../table\":11}],24:[function(_dereq_,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = _dereq_('../encoding');\nvar parse = _dereq_('../parse');\nvar table = _dereq_('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    var i;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                var nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":4,\"../parse\":9,\"../table\":11}],25:[function(_dereq_,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = _dereq_('../check');\nvar table = _dereq_('../table');\n\nvar cmap = _dereq_('./cmap');\nvar cff = _dereq_('./cff');\nvar head = _dereq_('./head');\nvar hhea = _dereq_('./hhea');\nvar hmtx = _dereq_('./hmtx');\nvar maxp = _dereq_('./maxp');\nvar _name = _dereq_('./name');\nvar os2 = _dereq_('./os2');\nvar post = _dereq_('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs.get(glyphIndex);\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    var firstCharIndex;\n    var lastCharIndex = 0;\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs.get(i);\n        var unicode = glyph.unicode | 0;\n        if (firstCharIndex > unicode || firstCharIndex === null) {\n            firstCharIndex = unicode;\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        var position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName,\n        unitsPerEm: font.unitsPerEm\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    var tableFields = sfntTable.fields;\n    var checkSumAdjusted = false;\n    for (i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":2,\"../table\":11,\"./cff\":12,\"./cmap\":13,\"./head\":16,\"./hhea\":17,\"./hmtx\":18,\"./maxp\":21,\"./name\":22,\"./os2\":23,\"./post\":24}],26:[function(_dereq_,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = _dereq_('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function() {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.REAL = function(v) {\n    var value = v.toString();\n\n    // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n    // This code converts it back to a number without the epsilon.\n    var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n    if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(v * epsilon) / epsilon).toString();\n    }\n\n    var nibbles = '';\n    var i;\n    var ii;\n    for (i = 0, ii = value.length; i < ii; i += 1) {\n        var c = value[i];\n        if (c === 'e') {\n            nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (c === '.') {\n            nibbles += 'a';\n        } else if (c === '-') {\n            nibbles += 'e';\n        } else {\n            nibbles += c;\n        }\n    }\n\n    nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n    var out = [30];\n    for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n    }\n\n    return out;\n};\n\nsizeOf.REAL = function(v) {\n    return encode.REAL(v).length;\n};\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    var dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else if (type === 'number') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'real') {\n            d = d.concat(encode.REAL(v));\n        } else {\n            throw new Error('Unknown operand type ' + type);\n            // FIXME Add support for booleans\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function(ops) {\n    if (wmm && wmm.has(ops)) {\n        return wmm.get(ops);\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":2}],27:[function(_dereq_,module,exports){\n/*!\n  * Reqwest! A general purpose XHR connection manager\n  * license MIT (c) Dustin Diaz 2014\n  * https://github.com/ded/reqwest\n  */\n\n!function (name, context, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else context[name] = definition()\n}('reqwest', this, function () {\n\n  var win = window\n    , doc = document\n    , httpsRe = /^http/\n    , protocolRe = /(^\\w+):\\/\\//\n    , twoHundo = /^(20\\d|1223)$/ //http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n    , byTag = 'getElementsByTagName'\n    , readyState = 'readyState'\n    , contentType = 'Content-Type'\n    , requestedWith = 'X-Requested-With'\n    , head = doc[byTag]('head')[0]\n    , uniqid = 0\n    , callbackPrefix = 'reqwest_' + (+new Date())\n    , lastValue // data stored by the most recent JSONP callback\n    , xmlHttpRequest = 'XMLHttpRequest'\n    , xDomainRequest = 'XDomainRequest'\n    , noop = function () {}\n\n    , isArray = typeof Array.isArray == 'function'\n        ? Array.isArray\n        : function (a) {\n            return a instanceof Array\n          }\n\n    , defaultHeaders = {\n          'contentType': 'application/x-www-form-urlencoded'\n        , 'requestedWith': xmlHttpRequest\n        , 'accept': {\n              '*':  'text/javascript, text/html, application/xml, text/xml, */*'\n            , 'xml':  'application/xml, text/xml'\n            , 'html': 'text/html'\n            , 'text': 'text/plain'\n            , 'json': 'application/json, text/javascript'\n            , 'js':   'application/javascript, text/javascript'\n          }\n      }\n\n    , xhr = function(o) {\n        // is it x-domain\n        if (o['crossOrigin'] === true) {\n          var xhr = win[xmlHttpRequest] ? new XMLHttpRequest() : null\n          if (xhr && 'withCredentials' in xhr) {\n            return xhr\n          } else if (win[xDomainRequest]) {\n            return new XDomainRequest()\n          } else {\n            throw new Error('Browser does not support cross-origin requests')\n          }\n        } else if (win[xmlHttpRequest]) {\n          return new XMLHttpRequest()\n        } else {\n          return new ActiveXObject('Microsoft.XMLHTTP')\n        }\n      }\n    , globalSetupOptions = {\n        dataFilter: function (data) {\n          return data\n        }\n      }\n\n  function succeed(r) {\n    var protocol = protocolRe.exec(r.url);\n    protocol = (protocol && protocol[1]) || window.location.protocol;\n    return httpsRe.test(protocol) ? twoHundo.test(r.request.status) : !!r.request.response;\n  }\n\n  function handleReadyState(r, success, error) {\n    return function () {\n      // use _aborted to mitigate against IE err c00c023f\n      // (can't read props on aborted request objects)\n      if (r._aborted) return error(r.request)\n      if (r._timedOut) return error(r.request, 'Request is aborted: timeout')\n      if (r.request && r.request[readyState] == 4) {\n        r.request.onreadystatechange = noop\n        if (succeed(r)) success(r.request)\n        else\n          error(r.request)\n      }\n    }\n  }\n\n  function setHeaders(http, o) {\n    var headers = o['headers'] || {}\n      , h\n\n    headers['Accept'] = headers['Accept']\n      || defaultHeaders['accept'][o['type']]\n      || defaultHeaders['accept']['*']\n\n    var isAFormData = typeof FormData === 'function' && (o['data'] instanceof FormData);\n    // breaks cross-origin requests with legacy browsers\n    if (!o['crossOrigin'] && !headers[requestedWith]) headers[requestedWith] = defaultHeaders['requestedWith']\n    if (!headers[contentType] && !isAFormData) headers[contentType] = o['contentType'] || defaultHeaders['contentType']\n    for (h in headers)\n      headers.hasOwnProperty(h) && 'setRequestHeader' in http && http.setRequestHeader(h, headers[h])\n  }\n\n  function setCredentials(http, o) {\n    if (typeof o['withCredentials'] !== 'undefined' && typeof http.withCredentials !== 'undefined') {\n      http.withCredentials = !!o['withCredentials']\n    }\n  }\n\n  function generalCallback(data) {\n    lastValue = data\n  }\n\n  function urlappend (url, s) {\n    return url + (/\\?/.test(url) ? '&' : '?') + s\n  }\n\n  function handleJsonp(o, fn, err, url) {\n    var reqId = uniqid++\n      , cbkey = o['jsonpCallback'] || 'callback' // the 'callback' key\n      , cbval = o['jsonpCallbackName'] || reqwest.getcallbackPrefix(reqId)\n      , cbreg = new RegExp('((^|\\\\?|&)' + cbkey + ')=([^&]+)')\n      , match = url.match(cbreg)\n      , script = doc.createElement('script')\n      , loaded = 0\n      , isIE10 = navigator.userAgent.indexOf('MSIE 10.0') !== -1\n\n    if (match) {\n      if (match[3] === '?') {\n        url = url.replace(cbreg, '$1=' + cbval) // wildcard callback func name\n      } else {\n        cbval = match[3] // provided callback func name\n      }\n    } else {\n      url = urlappend(url, cbkey + '=' + cbval) // no callback details, add 'em\n    }\n\n    win[cbval] = generalCallback\n\n    script.type = 'text/javascript'\n    script.src = url\n    script.async = true\n    if (typeof script.onreadystatechange !== 'undefined' && !isIE10) {\n      // need this for IE due to out-of-order onreadystatechange(), binding script\n      // execution to an event listener gives us control over when the script\n      // is executed. See http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html\n      script.htmlFor = script.id = '_reqwest_' + reqId\n    }\n\n    script.onload = script.onreadystatechange = function () {\n      if ((script[readyState] && script[readyState] !== 'complete' && script[readyState] !== 'loaded') || loaded) {\n        return false\n      }\n      script.onload = script.onreadystatechange = null\n      script.onclick && script.onclick()\n      // Call the user callback with the last value stored and clean up values and scripts.\n      fn(lastValue)\n      lastValue = undefined\n      head.removeChild(script)\n      loaded = 1\n    }\n\n    // Add the script to the DOM head\n    head.appendChild(script)\n\n    // Enable JSONP timeout\n    return {\n      abort: function () {\n        script.onload = script.onreadystatechange = null\n        err({}, 'Request is aborted: timeout', {})\n        lastValue = undefined\n        head.removeChild(script)\n        loaded = 1\n      }\n    }\n  }\n\n  function getRequest(fn, err) {\n    var o = this.o\n      , method = (o['method'] || 'GET').toUpperCase()\n      , url = typeof o === 'string' ? o : o['url']\n      // convert non-string objects to query-string form unless o['processData'] is false\n      , data = (o['processData'] !== false && o['data'] && typeof o['data'] !== 'string')\n        ? reqwest.toQueryString(o['data'])\n        : (o['data'] || null)\n      , http\n      , sendWait = false\n\n    // if we're working on a GET request and we have data then we should append\n    // query string to end of URL and not post data\n    if ((o['type'] == 'jsonp' || method == 'GET') && data) {\n      url = urlappend(url, data)\n      data = null\n    }\n\n    if (o['type'] == 'jsonp') return handleJsonp(o, fn, err, url)\n\n    // get the xhr from the factory if passed\n    // if the factory returns null, fall-back to ours\n    http = (o.xhr && o.xhr(o)) || xhr(o)\n\n    http.open(method, url, o['async'] === false ? false : true)\n    setHeaders(http, o)\n    setCredentials(http, o)\n    if (win[xDomainRequest] && http instanceof win[xDomainRequest]) {\n        http.onload = fn\n        http.onerror = err\n        // NOTE: see\n        // http://social.msdn.microsoft.com/Forums/en-US/iewebdevelopment/thread/30ef3add-767c-4436-b8a9-f1ca19b4812e\n        http.onprogress = function() {}\n        sendWait = true\n    } else {\n      http.onreadystatechange = handleReadyState(this, fn, err)\n    }\n    o['before'] && o['before'](http)\n    if (sendWait) {\n      setTimeout(function () {\n        http.send(data)\n      }, 200)\n    } else {\n      http.send(data)\n    }\n    return http\n  }\n\n  function Reqwest(o, fn) {\n    this.o = o\n    this.fn = fn\n\n    init.apply(this, arguments)\n  }\n\n  function setType(header) {\n    // json, javascript, text/plain, text/html, xml\n    if (header.match('json')) return 'json'\n    if (header.match('javascript')) return 'js'\n    if (header.match('text')) return 'html'\n    if (header.match('xml')) return 'xml'\n  }\n\n  function init(o, fn) {\n\n    this.url = typeof o == 'string' ? o : o['url']\n    this.timeout = null\n\n    // whether request has been fulfilled for purpose\n    // of tracking the Promises\n    this._fulfilled = false\n    // success handlers\n    this._successHandler = function(){}\n    this._fulfillmentHandlers = []\n    // error handlers\n    this._errorHandlers = []\n    // complete (both success and fail) handlers\n    this._completeHandlers = []\n    this._erred = false\n    this._responseArgs = {}\n\n    var self = this\n\n    fn = fn || function () {}\n\n    if (o['timeout']) {\n      this.timeout = setTimeout(function () {\n        timedOut()\n      }, o['timeout'])\n    }\n\n    if (o['success']) {\n      this._successHandler = function () {\n        o['success'].apply(o, arguments)\n      }\n    }\n\n    if (o['error']) {\n      this._errorHandlers.push(function () {\n        o['error'].apply(o, arguments)\n      })\n    }\n\n    if (o['complete']) {\n      this._completeHandlers.push(function () {\n        o['complete'].apply(o, arguments)\n      })\n    }\n\n    function complete (resp) {\n      o['timeout'] && clearTimeout(self.timeout)\n      self.timeout = null\n      while (self._completeHandlers.length > 0) {\n        self._completeHandlers.shift()(resp)\n      }\n    }\n\n    function success (resp) {\n      var type = o['type'] || resp && setType(resp.getResponseHeader('Content-Type')) // resp can be undefined in IE\n      resp = (type !== 'jsonp') ? self.request : resp\n      // use global data filter on response text\n      var filteredResponse = globalSetupOptions.dataFilter(resp.responseText, type)\n        , r = filteredResponse\n      try {\n        resp.responseText = r\n      } catch (e) {\n        // can't assign this in IE<=8, just ignore\n      }\n      if (r) {\n        switch (type) {\n        case 'json':\n          try {\n            resp = win.JSON ? win.JSON.parse(r) : eval('(' + r + ')')\n          } catch (err) {\n            return error(resp, 'Could not parse JSON in response', err)\n          }\n          break\n        case 'js':\n          resp = eval(r)\n          break\n        case 'html':\n          resp = r\n          break\n        case 'xml':\n          resp = resp.responseXML\n              && resp.responseXML.parseError // IE trololo\n              && resp.responseXML.parseError.errorCode\n              && resp.responseXML.parseError.reason\n            ? null\n            : resp.responseXML\n          break\n        }\n      }\n\n      self._responseArgs.resp = resp\n      self._fulfilled = true\n      fn(resp)\n      self._successHandler(resp)\n      while (self._fulfillmentHandlers.length > 0) {\n        resp = self._fulfillmentHandlers.shift()(resp)\n      }\n\n      complete(resp)\n    }\n\n    function timedOut() {\n      self._timedOut = true\n      self.request.abort()      \n    }\n\n    function error(resp, msg, t) {\n      resp = self.request\n      self._responseArgs.resp = resp\n      self._responseArgs.msg = msg\n      self._responseArgs.t = t\n      self._erred = true\n      while (self._errorHandlers.length > 0) {\n        self._errorHandlers.shift()(resp, msg, t)\n      }\n      complete(resp)\n    }\n\n    this.request = getRequest.call(this, success, error)\n  }\n\n  Reqwest.prototype = {\n    abort: function () {\n      this._aborted = true\n      this.request.abort()\n    }\n\n  , retry: function () {\n      init.call(this, this.o, this.fn)\n    }\n\n    /**\n     * Small deviation from the Promises A CommonJs specification\n     * http://wiki.commonjs.org/wiki/Promises/A\n     */\n\n    /**\n     * `then` will execute upon successful requests\n     */\n  , then: function (success, fail) {\n      success = success || function () {}\n      fail = fail || function () {}\n      if (this._fulfilled) {\n        this._responseArgs.resp = success(this._responseArgs.resp)\n      } else if (this._erred) {\n        fail(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t)\n      } else {\n        this._fulfillmentHandlers.push(success)\n        this._errorHandlers.push(fail)\n      }\n      return this\n    }\n\n    /**\n     * `always` will execute whether the request succeeds or fails\n     */\n  , always: function (fn) {\n      if (this._fulfilled || this._erred) {\n        fn(this._responseArgs.resp)\n      } else {\n        this._completeHandlers.push(fn)\n      }\n      return this\n    }\n\n    /**\n     * `fail` will execute when the request fails\n     */\n  , fail: function (fn) {\n      if (this._erred) {\n        fn(this._responseArgs.resp, this._responseArgs.msg, this._responseArgs.t)\n      } else {\n        this._errorHandlers.push(fn)\n      }\n      return this\n    }\n  , 'catch': function (fn) {\n      return this.fail(fn)\n    }\n  }\n\n  function reqwest(o, fn) {\n    return new Reqwest(o, fn)\n  }\n\n  // normalize newline variants according to spec -> CRLF\n  function normalize(s) {\n    return s ? s.replace(/\\r?\\n/g, '\\r\\n') : ''\n  }\n\n  function serial(el, cb) {\n    var n = el.name\n      , t = el.tagName.toLowerCase()\n      , optCb = function (o) {\n          // IE gives value=\"\" even where there is no value attribute\n          // 'specified' ref: http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-862529273\n          if (o && !o['disabled'])\n            cb(n, normalize(o['attributes']['value'] && o['attributes']['value']['specified'] ? o['value'] : o['text']))\n        }\n      , ch, ra, val, i\n\n    // don't serialize elements that are disabled or without a name\n    if (el.disabled || !n) return\n\n    switch (t) {\n    case 'input':\n      if (!/reset|button|image|file/i.test(el.type)) {\n        ch = /checkbox/i.test(el.type)\n        ra = /radio/i.test(el.type)\n        val = el.value\n        // WebKit gives us \"\" instead of \"on\" if a checkbox has no value, so correct it here\n        ;(!(ch || ra) || el.checked) && cb(n, normalize(ch && val === '' ? 'on' : val))\n      }\n      break\n    case 'textarea':\n      cb(n, normalize(el.value))\n      break\n    case 'select':\n      if (el.type.toLowerCase() === 'select-one') {\n        optCb(el.selectedIndex >= 0 ? el.options[el.selectedIndex] : null)\n      } else {\n        for (i = 0; el.length && i < el.length; i++) {\n          el.options[i].selected && optCb(el.options[i])\n        }\n      }\n      break\n    }\n  }\n\n  // collect up all form elements found from the passed argument elements all\n  // the way down to child elements; pass a '<form>' or form fields.\n  // called with 'this'=callback to use for serial() on each element\n  function eachFormElement() {\n    var cb = this\n      , e, i\n      , serializeSubtags = function (e, tags) {\n          var i, j, fa\n          for (i = 0; i < tags.length; i++) {\n            fa = e[byTag](tags[i])\n            for (j = 0; j < fa.length; j++) serial(fa[j], cb)\n          }\n        }\n\n    for (i = 0; i < arguments.length; i++) {\n      e = arguments[i]\n      if (/input|select|textarea/i.test(e.tagName)) serial(e, cb)\n      serializeSubtags(e, [ 'input', 'select', 'textarea' ])\n    }\n  }\n\n  // standard query string style serialization\n  function serializeQueryString() {\n    return reqwest.toQueryString(reqwest.serializeArray.apply(null, arguments))\n  }\n\n  // { 'name': 'value', ... } style serialization\n  function serializeHash() {\n    var hash = {}\n    eachFormElement.apply(function (name, value) {\n      if (name in hash) {\n        hash[name] && !isArray(hash[name]) && (hash[name] = [hash[name]])\n        hash[name].push(value)\n      } else hash[name] = value\n    }, arguments)\n    return hash\n  }\n\n  // [ { name: 'name', value: 'value' }, ... ] style serialization\n  reqwest.serializeArray = function () {\n    var arr = []\n    eachFormElement.apply(function (name, value) {\n      arr.push({name: name, value: value})\n    }, arguments)\n    return arr\n  }\n\n  reqwest.serialize = function () {\n    if (arguments.length === 0) return ''\n    var opt, fn\n      , args = Array.prototype.slice.call(arguments, 0)\n\n    opt = args.pop()\n    opt && opt.nodeType && args.push(opt) && (opt = null)\n    opt && (opt = opt.type)\n\n    if (opt == 'map') fn = serializeHash\n    else if (opt == 'array') fn = reqwest.serializeArray\n    else fn = serializeQueryString\n\n    return fn.apply(null, args)\n  }\n\n  reqwest.toQueryString = function (o, trad) {\n    var prefix, i\n      , traditional = trad || false\n      , s = []\n      , enc = encodeURIComponent\n      , add = function (key, value) {\n          // If value is a function, invoke it and return its value\n          value = ('function' === typeof value) ? value() : (value == null ? '' : value)\n          s[s.length] = enc(key) + '=' + enc(value)\n        }\n    // If an array was passed in, assume that it is an array of form elements.\n    if (isArray(o)) {\n      for (i = 0; o && i < o.length; i++) add(o[i]['name'], o[i]['value'])\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in o) {\n        if (o.hasOwnProperty(prefix)) buildParams(prefix, o[prefix], traditional, add)\n      }\n    }\n\n    // spaces should be + according to spec\n    return s.join('&').replace(/%20/g, '+')\n  }\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name, i, v\n      , rbracket = /\\[\\]$/\n\n    if (isArray(obj)) {\n      // Serialize array item.\n      for (i = 0; obj && i < obj.length; i++) {\n        v = obj[i]\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v)\n        } else {\n          buildParams(prefix + '[' + (typeof v === 'object' ? i : '') + ']', v, traditional, add)\n        }\n      }\n    } else if (obj && obj.toString() === '[object Object]') {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + '[' + name + ']', obj[name], traditional, add)\n      }\n\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj)\n    }\n  }\n\n  reqwest.getcallbackPrefix = function () {\n    return callbackPrefix\n  }\n\n  // jQuery and Zepto compatibility, differences can be remapped here so you can call\n  // .ajax.compat(options, callback)\n  reqwest.compat = function (o, fn) {\n    if (o) {\n      o['type'] && (o['method'] = o['type']) && delete o['type']\n      o['dataType'] && (o['type'] = o['dataType'])\n      o['jsonpCallback'] && (o['jsonpCallbackName'] = o['jsonpCallback']) && delete o['jsonpCallback']\n      o['jsonp'] && (o['jsonpCallback'] = o['jsonp'])\n    }\n    return new Reqwest(o, fn)\n  }\n\n  reqwest.ajaxSetup = function (options) {\n    options = options || {}\n    for (var k in options) {\n      globalSetupOptions[k] = options[k]\n    }\n  }\n\n  return reqwest\n});\n\n},{}],28:[function(_dereq_,module,exports){\n\n'use strict';\n\nvar p5 = _dereq_('./core/core');\n_dereq_('./color/p5.Color');\n_dereq_('./core/p5.Element');\n_dereq_('./typography/p5.Font');\n_dereq_('./core/p5.Graphics');\n_dereq_('./core/p5.Renderer2D');\n\n_dereq_('./image/p5.Image');\n_dereq_('./math/p5.Vector');\n_dereq_('./io/p5.TableRow');\n_dereq_('./io/p5.Table');\n_dereq_('./io/p5.XML');\n\n_dereq_('./color/creating_reading');\n_dereq_('./color/setting');\n_dereq_('./core/constants');\n_dereq_('./utilities/conversion');\n_dereq_('./utilities/array_functions');\n_dereq_('./utilities/string_functions');\n_dereq_('./core/environment');\n_dereq_('./image/image');\n_dereq_('./image/loading_displaying');\n_dereq_('./image/pixels');\n_dereq_('./io/files');\n_dereq_('./events/keyboard');\n_dereq_('./events/acceleration'); //john\n_dereq_('./events/mouse');\n_dereq_('./utilities/time_date');\n_dereq_('./events/touch');\n_dereq_('./math/math');\n_dereq_('./math/calculation');\n_dereq_('./math/random');\n_dereq_('./math/noise');\n_dereq_('./math/trigonometry');\n_dereq_('./core/rendering');\n_dereq_('./core/2d_primitives');\n\n_dereq_('./core/attributes');\n_dereq_('./core/curves');\n_dereq_('./core/vertex');\n_dereq_('./core/structure');\n_dereq_('./core/transform');\n_dereq_('./typography/attributes');\n_dereq_('./typography/loading_displaying');\n\n_dereq_('./webgl/p5.RendererGL');\n_dereq_('./webgl/p5.Geometry');\n_dereq_('./webgl/p5.RendererGL.Retained');\n_dereq_('./webgl/p5.RendererGL.Immediate');\n_dereq_('./webgl/primitives');\n_dereq_('./webgl/loading');\n_dereq_('./webgl/p5.Matrix');\n_dereq_('./webgl/material');\n_dereq_('./webgl/light');\n_dereq_('./webgl/shader');\n_dereq_('./webgl/camera');\n_dereq_('./webgl/interaction');\n\n/**\n * _globalInit\n *\n * TODO: ???\n * if sketch is on window\n * assume \"global\" mode\n * and instantiate p5 automatically\n * otherwise do nothing\n *\n * @return {Undefined}\n */\nvar _globalInit = function() {\n  if (!window.PHANTOMJS && !window.mocha) {\n    // If there is a setup or draw function on the window\n    // then instantiate p5 in \"global\" mode\n    if(((window.setup && typeof window.setup === 'function') ||\n       (window.draw && typeof window.draw === 'function')) &&\n       !p5.instance) {\n      new p5();\n    }\n  }\n};\n\n// TODO: ???\nif (document.readyState === 'complete') {\n  _globalInit();\n} else {\n  window.addEventListener('load', _globalInit , false);\n}\n\nmodule.exports = p5;\n\n},{\"./color/creating_reading\":30,\"./color/p5.Color\":31,\"./color/setting\":32,\"./core/2d_primitives\":33,\"./core/attributes\":34,\"./core/constants\":36,\"./core/core\":37,\"./core/curves\":38,\"./core/environment\":39,\"./core/p5.Element\":41,\"./core/p5.Graphics\":42,\"./core/p5.Renderer2D\":44,\"./core/rendering\":45,\"./core/structure\":47,\"./core/transform\":48,\"./core/vertex\":49,\"./events/acceleration\":50,\"./events/keyboard\":51,\"./events/mouse\":52,\"./events/touch\":53,\"./image/image\":55,\"./image/loading_displaying\":56,\"./image/p5.Image\":57,\"./image/pixels\":58,\"./io/files\":59,\"./io/p5.Table\":60,\"./io/p5.TableRow\":61,\"./io/p5.XML\":62,\"./math/calculation\":63,\"./math/math\":64,\"./math/noise\":65,\"./math/p5.Vector\":66,\"./math/random\":68,\"./math/trigonometry\":69,\"./typography/attributes\":70,\"./typography/loading_displaying\":71,\"./typography/p5.Font\":72,\"./utilities/array_functions\":73,\"./utilities/conversion\":74,\"./utilities/string_functions\":75,\"./utilities/time_date\":76,\"./webgl/camera\":77,\"./webgl/interaction\":78,\"./webgl/light\":79,\"./webgl/loading\":80,\"./webgl/material\":81,\"./webgl/p5.Geometry\":82,\"./webgl/p5.Matrix\":83,\"./webgl/p5.RendererGL\":86,\"./webgl/p5.RendererGL.Immediate\":84,\"./webgl/p5.RendererGL.Retained\":85,\"./webgl/primitives\":87,\"./webgl/shader\":88}],29:[function(_dereq_,module,exports){\n/**\n * module Conversion\n * submodule Color Conversion\n * @for p5\n * @requires core\n */\n\n'use strict';\n\n/**\n * Conversions adapted from <http://www.easyrgb.com/math.html>.\n *\n * In these functions, hue is always in the range [0,1); all other components\n * are in the range [0,1]. 'Brightness' and 'value' are used interchangeably.\n */\n\nvar p5 = _dereq_('../core/core');\np5.ColorConversion = {};\n\n/**\n * Convert an HSBA array to HSLA.\n */\np5.ColorConversion._hsbaToHSLA = function(hsba) {\n  var hue = hsba[0];\n  var sat = hsba[1];\n  var val = hsba[2];\n\n  // Calculate lightness.\n  var li = (2 - sat) * val / 2;\n\n  // Convert saturation.\n  if (li !== 0) {\n    if (li === 1) {\n      sat = 0;\n    } else if (li < 0.5) {\n      sat = sat / (2 - sat);\n    } else {\n      sat = sat * val / (2 - li * 2);\n    }\n  }\n\n  // Hue and alpha stay the same.\n  return [hue, sat, li, hsba[3]];\n};\n\n/**\n * Convert an HSBA array to RGBA.\n */\np5.ColorConversion._hsbaToRGBA = function(hsba) {\n  var hue = hsba[0] * 6;  // We will split hue into 6 sectors.\n  var sat = hsba[1];\n  var val = hsba[2];\n\n  var RGBA = [];\n\n  if (sat === 0) {\n    RGBA = [val, val, val, hsba[3]];  // Return early if grayscale.\n  } else {\n    var sector = Math.floor(hue);\n    var tint1 = val * (1 - sat);\n    var tint2 = val * (1 - sat * (hue - sector));\n    var tint3 = val * (1 - sat * (1 + sector - hue));\n    var red, green, blue;\n    if (sector === 1) {  // Yellow to green.\n      red = tint2;\n      green = val;\n      blue = tint1;\n    } else if (sector === 2) {  // Green to cyan.\n      red = tint1;\n      green = val;\n      blue = tint3;\n    } else if (sector === 3) {  // Cyan to blue.\n      red = tint1;\n      green = tint2;\n      blue = val;\n    } else if (sector === 4) {  // Blue to magenta.\n      red = tint3;\n      green = tint1;\n      blue = val;\n    } else if (sector === 5) {  // Magenta to red.\n      red = val;\n      green = tint1;\n      blue = tint2;\n    } else {  // Red to yellow (sector could be 0 or 6).\n      red = val;\n      green = tint3;\n      blue = tint1;\n    }\n    RGBA = [red, green, blue, hsba[3]];\n  }\n\n  return RGBA;\n};\n\n/**\n * Convert an HSLA array to HSBA.\n */\np5.ColorConversion._hslaToHSBA = function(hsla) {\n  var hue = hsla[0];\n  var sat = hsla[1];\n  var li = hsla[2];\n\n  // Calculate brightness.\n  var val;\n  if (li < 0.5) {\n    val = (1 + sat) * li;\n  } else {\n    val = li + sat - li * sat;\n  }\n\n  // Convert saturation.\n  sat = 2 * (val - li) / val;\n\n  // Hue and alpha stay the same.\n  return [hue, sat, val, hsla[3]];\n};\n\n/**\n * Convert an HSLA array to RGBA.\n *\n * We need to change basis from HSLA to something that can be more easily be\n * projected onto RGBA. We will choose hue and brightness as our first two\n * components, and pick a convenient third one ('zest') so that we don't need\n * to calculate formal HSBA saturation.\n */\np5.ColorConversion._hslaToRGBA = function(hsla){\n  var hue = hsla[0] * 6;  // We will split hue into 6 sectors.\n  var sat = hsla[1];\n  var li = hsla[2];\n\n  var RGBA = [];\n\n  if (sat === 0) {\n    RGBA = [li, li, li, hsla[3]]; // Return early if grayscale.\n  } else {\n\n    // Calculate brightness.\n    var val;\n    if (li < 0.5) {\n      val = (1 + sat) * li;\n    } else {\n      val = li + sat - li * sat;\n    }\n\n    // Define zest.\n    var zest = 2 * li - val;\n\n    // Implement projection (project onto green by default).\n    var hzvToRGB = function(hue, zest, val) {\n      if (hue < 0) {  // Hue must wrap to allow projection onto red and blue.\n        hue += 6;\n      } else if (hue >= 6) {\n        hue -= 6;\n      }\n      if (hue < 1) {  // Red to yellow (increasing green).\n        return (zest + (val - zest) * hue);\n      } else if (hue < 3) {  // Yellow to cyan (greatest green).\n        return val;\n      } else if (hue < 4) {  // Cyan to blue (decreasing green).\n        return (zest + (val - zest) * (4 - hue));\n      } else {  // Blue to red (least green).\n        return zest;\n      }\n    };\n\n    // Perform projections, offsetting hue as necessary.\n    RGBA = [hzvToRGB(hue + 2, zest, val),\n            hzvToRGB(hue    , zest, val),\n            hzvToRGB(hue - 2, zest, val),\n            hsla[3]];\n  }\n\n  return RGBA;\n};\n\n/**\n * Convert an RGBA array to HSBA.\n */\np5.ColorConversion._rgbaToHSBA = function(rgba) {\n  var red = rgba[0];\n  var green = rgba[1];\n  var blue = rgba[2];\n\n  var val = Math.max(red, green, blue);\n  var chroma = val - Math.min(red, green, blue);\n\n  var hue, sat;\n  if (chroma === 0) {  // Return early if grayscale.\n    hue = 0;\n    sat = 0;\n  }\n  else {\n    sat = chroma / val;\n    if (red === val) {  // Magenta to yellow.\n      hue = (green - blue) / chroma;\n    } else if (green === val) { // Yellow to cyan.\n      hue = 2 + (blue - red) / chroma;\n    } else if (blue === val) {  // Cyan to magenta.\n      hue = 4 + (red - green) / chroma;\n    }\n    if (hue < 0) {  // Confine hue to the interval [0, 1).\n      hue += 6;\n    } else if (hue >= 6) {\n      hue -= 6;\n    }\n  }\n\n  return [hue / 6, sat, val, rgba[3]];\n};\n\n/**\n * Convert an RGBA array to HSLA.\n */\np5.ColorConversion._rgbaToHSLA = function(rgba) {\n  var red = rgba[0];\n  var green = rgba[1];\n  var blue = rgba[2];\n\n  var val = Math.max(red, green, blue);\n  var min = Math.min(red, green, blue);\n  var li = val + min;  // We will halve this later.\n  var chroma = val - min;\n\n  var hue, sat;\n  if (chroma === 0) {  // Return early if grayscale.\n    hue = 0;\n    sat = 0;\n  } else {\n    if (li < 1) {\n      sat = chroma / li;\n    } else {\n      sat = chroma / (2 - chroma);\n    }\n    if (red === val) {  // Magenta to yellow.\n      hue = (green - blue) / chroma;\n    } else if (green === val) {  // Yellow to cyan.\n      hue = 2 + (blue - red) / chroma;\n    } else if (blue === val) {  // Cyan to magenta.\n      hue = 4 + (red - green) / chroma;\n    }\n    if (hue < 0) {  // Confine hue to the interval [0, 1).\n      hue += 6;\n    } else if (hue >= 6) {\n      hue -= 6;\n    }\n  }\n\n  return [hue / 6, sat, li / 2, rgba[3]];\n};\n\nmodule.exports = p5.ColorConversion;\n\n},{\"../core/core\":37}],30:[function(_dereq_,module,exports){\n/**\n * @module Color\n * @submodule Creating & Reading\n * @for p5\n * @requires core\n * @requires constants\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar constants = _dereq_('../core/constants');\n_dereq_('./p5.Color');\n\n/**\n * Extracts the alpha value from a color or pixel array.\n *\n * @method alpha\n * @param {Object} obj p5.Color object or pixel array\n * @example\n * <div>\n * <code>\n * noStroke();\n * c = color(0, 126, 255, 102);\n * fill(c);\n * rect(15, 15, 35, 70);\n * value = alpha(c);  // Sets 'value' to 102\n * fill(value);\n * rect(50, 15, 35, 70);\n * </code>\n * </div>\n *\n * @alt\n * Left half of canvas light blue and right half light charcoal grey.\n * Left half of canvas light purple and right half a royal blue.\n * Left half of canvas salmon pink and the right half white.\n * Yellow rect in middle right of canvas, with 55 pixel width and height.\n * Yellow ellipse in top left canvas, black ellipse in bottom right,both 80x80.\n * Bright fuschia rect in middle of canvas, 60 pixel width and height.\n * Two bright green rects on opposite sides of the canvas, both 45x80.\n * Four blue rects in each corner of the canvas, each are 35x35.\n * Bright sea green rect on left and darker rect on right of canvas, both 45x80.\n * Dark green rect on left and light green rect on right of canvas, both 45x80.\n * Dark blue rect on left and light teal rect on right of canvas, both 45x80.\n * blue rect on left and green on right, both with black outlines & 35x60.\n * salmon pink rect on left and black on right, both 35x60.\n * 4 rects, tan, brown, brownish purple and purple, with white outlines & 20x60.\n * light pastel green rect on left and dark grey rect on right, both 35x60.\n * yellow rect on left and red rect on right, both with black outlines & 35x60.\n * grey canvas\n * deep pink rect on left and grey rect on right, both 35x60.\n */\np5.prototype.alpha = function(c) {\n  if (c instanceof p5.Color || c instanceof Array) {\n    return this.color(c)._getAlpha();\n  } else {\n    throw new Error('Needs p5.Color or pixel array as argument.');\n  }\n};\n\n/**\n * Extracts the blue value from a color or pixel array.\n *\n * @method blue\n * @param {Object} obj p5.Color object or pixel array\n * @example\n * <div>\n * <code>\n * c = color(175, 100, 220);  // Define color 'c'\n * fill(c);  // Use color variable 'c' as fill color\n * rect(15, 20, 35, 60);  // Draw left rectangle\n *\n * blueValue = blue(c);  // Get blue in 'c'\n * print(blueValue);  // Prints \"220.0\"\n * fill(0, 0, blueValue);  // Use 'blueValue' in new fill\n * rect(50, 20, 35, 60);  // Draw right rectangle\n * </code>\n * </div>\n *\n * @alt\n * Left half of canvas light purple and right half a royal blue.\n *\n */\np5.prototype.blue = function(c) {\n  if (c instanceof p5.Color || c instanceof Array) {\n    return this.color(c)._getBlue();\n  } else {\n    throw new Error('Needs p5.Color or pixel array as argument.');\n  }\n};\n\n/**\n * Extracts the HSB brightness value from a color or pixel array.\n *\n * @method brightness\n * @param {Object} color p5.Color object or pixel array\n * @example\n * <div>\n * <code>\n * noStroke();\n * colorMode(HSB, 255);\n * c = color(0, 126, 255);\n * fill(c);\n * rect(15, 20, 35, 60);\n * value = brightness(c);  // Sets 'value' to 255\n * fill(value);\n * rect(50, 20, 35, 60);\n * </code>\n * </div>\n *\n * @alt\n * Left half of canvas salmon pink and the right half white.\n *\n */\np5.prototype.brightness = function(c) {\n  if (c instanceof p5.Color || c instanceof Array) {\n    return this.color(c)._getBrightness();\n  } else {\n    throw new Error('Needs p5.Color or pixel array as argument.');\n  }\n};\n\n/**\n * Creates colors for storing in variables of the color datatype. The\n * parameters are interpreted as RGB or HSB values depending on the\n * current colorMode(). The default mode is RGB values from 0 to 255\n * and, therefore, the function call color(255, 204, 0) will return a\n * bright yellow color.\n * <br><br>\n * Note that if only one value is provided to color(), it will be interpreted\n * as a grayscale value. Add a second value, and it will be used for alpha\n * transparency. When three values are specified, they are interpreted as\n * either RGB or HSB values. Adding a fourth value applies alpha\n * transparency. If a single string parameter is provided it will be\n * interpreted as a CSS-compatible color string.\n *\n * Colors are stored as Numbers or Arrays.\n *\n * @method color\n * @param  {Number|String} gray    number specifying value between white\n *                                 and black.\n * @param  {Number}        [alpha] alpha value relative to current color range\n *                                 (default is 0-100)\n * @return {Array}                 resulting color\n *\n * @example\n * <div>\n * <code>\n * var c = color(255, 204, 0);  // Define color 'c'\n * fill(c);  // Use color variable 'c' as fill color\n * noStroke();  // Don't draw a stroke around shapes\n * rect(30, 20, 55, 55);  // Draw rectangle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var c = color(255, 204, 0);  // Define color 'c'\n * fill(c);  // Use color variable 'c' as fill color\n * noStroke();  // Don't draw a stroke around shapes\n * ellipse(25, 25, 80, 80);  // Draw left circle\n *\n * // Using only one value with color()\n * // generates a grayscale value.\n * var c = color(65);  // Update 'c' with grayscale value\n * fill(c);  // Use updated 'c' as fill color\n * ellipse(75, 75, 80, 80);  // Draw right circle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Named SVG & CSS colors may be used,\n * var c = color('magenta');\n * fill(c);  // Use 'c' as fill color\n * noStroke();  // Don't draw a stroke around shapes\n * rect(20, 20, 60, 60);  // Draw rectangle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // as can hex color codes:\n * noStroke();  // Don't draw a stroke around shapes\n * var c = color('#0f0');\n * fill(c);  // Use 'c' as fill color\n * rect(0, 10, 45, 80);  // Draw rectangle\n *\n * c = color('#00ff00');\n * fill(c);  // Use updated 'c' as fill color\n * rect(55, 10, 45, 80);  // Draw rectangle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // RGB and RGBA color strings are also supported:\n * // these all set to the same color (solid blue)\n * var c;\n * noStroke();  // Don't draw a stroke around shapes\n * c = color('rgb(0,0,255)');\n * fill(c); // Use 'c' as fill color\n * rect(10, 10, 35, 35);  // Draw rectangle\n *\n * c = color('rgb(0%, 0%, 100%)');\n * fill(c); // Use updated 'c' as fill color\n * rect(55, 10, 35, 35);  // Draw rectangle\n *\n * c = color('rgba(0, 0, 255, 1)');\n * fill(c); // Use updated 'c' as fill color\n * rect(10, 55, 35, 35);  // Draw rectangle\n *\n * c = color('rgba(0%, 0%, 100%, 1)');\n * fill(c); // Use updated 'c' as fill color\n * rect(55, 55, 35, 35);  // Draw rectangle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // HSL color is also supported and can be specified\n * // by value\n * var c;\n * noStroke();  // Don't draw a stroke around shapes\n * c = color('hsl(160, 100%, 50%)');\n * fill(c);  // Use 'c' as fill color\n * rect(0, 10, 45, 80);  // Draw rectangle\n *\n * c = color('hsla(160, 100%, 50%, 0.5)');\n * fill(c); // Use updated 'c' as fill color\n * rect(55, 10, 45, 80);  // Draw rectangle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // HSB color is also supported and can be specified\n * // by value\n * var c;\n * noStroke();  // Don't draw a stroke around shapes\n * c = color('hsb(160, 100%, 50%)');\n * fill(c);  // Use 'c' as fill color\n * rect(0, 10, 45, 80);  // Draw rectangle\n *\n * c = color('hsba(160, 100%, 50%, 0.5)');\n * fill(c); // Use updated 'c' as fill color\n * rect(55, 10, 45, 80);  // Draw rectangle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var c;  // Declare color 'c'\n * noStroke();  // Don't draw a stroke around shapes\n *\n * // If no colorMode is specified, then the\n * // default of RGB with scale of 0-255 is used.\n * c = color(50, 55, 100);  // Create a color for 'c'\n * fill(c);  // Use color variable 'c' as fill color\n * rect(0, 10, 45, 80);  // Draw left rect\n *\n * colorMode(HSB, 100);  // Use HSB with scale of 0-100\n * c = color(50, 55, 100);  // Update 'c' with new color\n * fill(c);  // Use updated 'c' as fill color\n * rect(55, 10, 45, 80);  // Draw right rect\n * </code>\n * </div>\n *\n * @alt\n * Yellow rect in middle right of canvas, with 55 pixel width and height.\n * Yellow ellipse in top left of canvas, black ellipse in bottom right,both 80x80.\n * Bright fuschia rect in middle of canvas, 60 pixel width and height.\n * Two bright green rects on opposite sides of the canvas, both 45x80.\n * Four blue rects in each corner of the canvas, each are 35x35.\n * Bright sea green rect on left and darker rect on right of canvas, both 45x80.\n * Dark green rect on left and lighter green rect on right of canvas, both 45x80.\n * Dark blue rect on left and light teal rect on right of canvas, both 45x80.\n *\n */\n\n/**\n * @method color\n * @param  {Number|String} v1      red or hue value relative to\n *                                 the current color range, or a color string\n * @param  {Number}        v2      green or saturation value\n *                                 relative to the current color range\n * @param  {Number}        v3      blue or brightness value\n *                                 relative to the current color range\n * @param  {Number}        [alpha]\n */\n\np5.prototype.color = function() {\n  if (arguments[0] instanceof p5.Color) {\n    return arguments[0];  // Do nothing if argument is already a color object.\n  } else if (arguments[0] instanceof Array) {\n    if (this instanceof p5.Renderer) {\n      return new p5.Color(this, arguments[0]);\n    } else {\n      return new p5.Color(this._renderer, arguments[0]);\n    }\n  } else {\n    if (this instanceof p5.Renderer) {\n      return new p5.Color(this, arguments);\n    } else {\n      return new p5.Color(this._renderer, arguments);\n    }\n  }\n};\n\n/**\n * Extracts the green value from a color or pixel array.\n *\n * @method green\n * @param {Object} color p5.Color object or pixel array\n * @example\n * <div>\n * <code>\n * c = color(20, 75, 200);  // Define color 'c'\n * fill(c);  // Use color variable 'c' as fill color\n * rect(15, 20, 35, 60);  // Draw left rectangle\n *\n * greenValue = green(c);  // Get green in 'c'\n * print(greenValue);  // Print \"75.0\"\n * fill(0, greenValue, 0);  // Use 'greenValue' in new fill\n * rect(50, 20, 35, 60);  // Draw right rectangle\n * </code>\n * </div>\n *\n * @alt\n * blue rect on left and green on right, both with black outlines & 35x60.\n *\n */\n\np5.prototype.green = function(c) {\n  if (c instanceof p5.Color || c instanceof Array) {\n    return this.color(c)._getGreen();\n  } else {\n    throw new Error('Needs p5.Color or pixel array as argument.');\n  }\n};\n\n/**\n * Extracts the hue value from a color or pixel array.\n *\n * Hue exists in both HSB and HSL. This function will return the\n * HSB-normalized hue when supplied with an HSB color object (or when supplied\n * with a pixel array while the color mode is HSB), but will default to the\n * HSL-normalized hue otherwise. (The values will only be different if the\n * maximum hue setting for each system is different.)\n *\n * @method hue\n * @param {Object} color p5.Color object or pixel array\n * @example\n * <div>\n * <code>\n * noStroke();\n * colorMode(HSB, 255);\n * c = color(0, 126, 255);\n * fill(c);\n * rect(15, 20, 35, 60);\n * value = hue(c);  // Sets 'value' to \"0\"\n * fill(value);\n * rect(50, 20, 35, 60);\n * </code>\n * </div>\n *\n * @alt\n * salmon pink rect on left and black on right, both 35x60.\n *\n */\n\np5.prototype.hue = function(c) {\n  if (c instanceof p5.Color || c instanceof Array) {\n    return this.color(c)._getHue();\n  } else {\n    throw new Error('Needs p5.Color or pixel array as argument.');\n  }\n};\n\n/**\n * Blends two colors to find a third color somewhere between them. The amt\n * parameter is the amount to interpolate between the two values where 0.0\n * equal to the first color, 0.1 is very near the first color, 0.5 is halfway\n * in between, etc. An amount below 0 will be treated as 0. Likewise, amounts\n * above 1 will be capped at 1. This is different from the behavior of lerp(),\n * but necessary because otherwise numbers outside the range will produce\n * strange and unexpected colors.\n * <br><br>\n * The way that colours are interpolated depends on the current color mode.\n *\n * @method lerpColor\n * @param  {Array/Number} c1  interpolate from this color\n * @param  {Array/Number} c2  interpolate to this color\n * @param  {Number}       amt number between 0 and 1\n * @return {Array/Number}     interpolated color\n * @example\n * <div>\n * <code>\n * colorMode(RGB);\n * stroke(255);\n * background(51);\n * from = color(218, 165, 32);\n * to = color(72, 61, 139);\n * colorMode(RGB);  // Try changing to HSB.\n * interA = lerpColor(from, to, .33);\n * interB = lerpColor(from, to, .66);\n * fill(from);\n * rect(10, 20, 20, 60);\n * fill(interA);\n * rect(30, 20, 20, 60);\n * fill(interB);\n * rect(50, 20, 20, 60);\n * fill(to);\n * rect(70, 20, 20, 60);\n * </code>\n * </div>\n *\n * @alt\n * 4 rects one tan, brown, brownish purple, purple, with white outlines & 20x60\n *\n */\n\np5.prototype.lerpColor = function(c1, c2, amt) {\n  var mode = this._renderer._colorMode;\n  var maxes = this._renderer._colorMaxes;\n  var l0, l1, l2, l3;\n  var fromArray, toArray;\n\n  if (mode === constants.RGB) {\n    fromArray = c1.levels.map(function(level) {\n      return level / 255;\n    });\n    toArray = c2.levels.map(function(level) {\n      return level / 255;\n    });\n  } else if (mode === constants.HSB) {\n    c1._getBrightness();  // Cache hsba so it definitely exists.\n    c2._getBrightness();\n    fromArray = c1.hsba;\n    toArray = c2.hsba;\n  } else if (mode === constants.HSL) {\n    c1._getLightness();  // Cache hsla so it definitely exists.\n    c2._getLightness();\n    fromArray = c1.hsla;\n    toArray = c2.hsla;\n  } else {\n    throw new Error (mode + 'cannot be used for interpolation.');\n  }\n\n  // Prevent extrapolation.\n  amt = Math.max(Math.min(amt, 1), 0);\n\n  // Perform interpolation.\n  l0 = this.lerp(fromArray[0], toArray[0], amt);\n  l1 = this.lerp(fromArray[1], toArray[1], amt);\n  l2 = this.lerp(fromArray[2], toArray[2], amt);\n  l3 = this.lerp(fromArray[3], toArray[3], amt);\n\n  // Scale components.\n  l0 *= maxes[mode][0];\n  l1 *= maxes[mode][1];\n  l2 *= maxes[mode][2];\n  l3 *= maxes[mode][3];\n\n  return this.color(l0, l1, l2, l3);\n};\n\n/**\n * Extracts the HSL lightness value from a color or pixel array.\n *\n * @method lightness\n * @param {Object} color p5.Color object or pixel array\n * @example\n * <div>\n * <code>\n * noStroke();\n * colorMode(HSL);\n * c = color(156, 100, 50, 1);\n * fill(c);\n * rect(15, 20, 35, 60);\n * value = lightness(c);  // Sets 'value' to 50\n * fill(value);\n * rect(50, 20, 35, 60);\n * </code>\n * </div>\n *\n * @alt\n * light pastel green rect on left and dark grey rect on right, both 35x60.\n *\n */\np5.prototype.lightness = function(c) {\n  if (c instanceof p5.Color || c instanceof Array) {\n    return this.color(c)._getLightness();\n  } else {\n    throw new Error('Needs p5.Color or pixel array as argument.');\n  }\n};\n\n/**\n * Extracts the red value from a color or pixel array.\n *\n * @method red\n * @param {Object} obj p5.Color object or pixel array\n * @example\n * <div>\n * <code>\n * c = color(255, 204, 0);  // Define color 'c'\n * fill(c);  // Use color variable 'c' as fill color\n * rect(15, 20, 35, 60);  // Draw left rectangle\n *\n * redValue = red(c);  // Get red in 'c'\n * print(redValue);  // Print \"255.0\"\n * fill(redValue, 0, 0);  // Use 'redValue' in new fill\n * rect(50, 20, 35, 60);  // Draw right rectangle\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * colorMode(RGB, 255);\n * var c = color(127, 255, 0);\n * colorMode(RGB, 1);\n * var myColor = red(c);\n * print(myColor);\n * </code>\n * </div>\n *\n * @alt\n * yellow rect on left and red rect on right, both with black outlines and 35x60.\n * grey canvas\n */\np5.prototype.red = function(c) {\n  if (c instanceof p5.Color || c instanceof Array) {\n    return this.color(c)._getRed();\n  } else {\n    throw new Error('Needs p5.Color or pixel array as argument.');\n  }\n};\n\n/**\n * Extracts the saturation value from a color or pixel array.\n *\n * Saturation is scaled differently in HSB and HSL. This function will return\n * the HSB saturation when supplied with an HSB color object (or when supplied\n * with a pixel array while the color mode is HSB), but will default to the\n * HSL saturation otherwise.\n *\n * @method saturation\n * @param {Object} color p5.Color object or pixel array\n * @example\n * <div>\n * <code>\n * noStroke();\n * colorMode(HSB, 255);\n * c = color(0, 126, 255);\n * fill(c);\n * rect(15, 20, 35, 60);\n * value = saturation(c);  // Sets 'value' to 126\n * fill(value);\n * rect(50, 20, 35, 60);\n * </code>\n * </div>\n *\n * @alt\n *deep pink rect on left and grey rect on right, both 35x60.\n *\n */\n\np5.prototype.saturation = function(c) {\n  if (c instanceof p5.Color || c instanceof Array) {\n    return this.color(c)._getSaturation();\n  } else {\n    throw new Error('Needs p5.Color or pixel array as argument.');\n  }\n};\n\nmodule.exports = p5;\n\n},{\"../core/constants\":36,\"../core/core\":37,\"./p5.Color\":31}],31:[function(_dereq_,module,exports){\n/**\n * @module Color\n * @submodule Creating & Reading\n * @for p5\n * @requires core\n * @requires constants\n * @requires color_conversion\n */\n\nvar p5 = _dereq_('../core/core');\nvar constants = _dereq_('../core/constants');\nvar color_conversion = _dereq_('./color_conversion');\n\n/**\n * We define colors to be immutable objects. Each color stores the color mode\n * and level maxes that applied at the time of its construction. These are\n * used to interpret the input arguments and to format the output e.g. when\n * saturation() is requested.\n *\n * Internally we store an array representing the ideal RGBA values in floating\n * point form, normalized from 0 to 1. From this we calculate the closest\n * screen color (RGBA levels from 0 to 255) and expose this to the renderer.\n *\n * We also cache normalized, floating point components of the color in various\n * representations as they are calculated. This is done to prevent repeating a\n * conversion that has already been performed.\n *\n * @class p5.Color\n * @constructor\n */\np5.Color = function(renderer, vals) {\n\n  // Record color mode and maxes at time of construction.\n  this.mode = renderer._colorMode;\n  this.maxes = renderer._colorMaxes;\n\n  // Calculate normalized RGBA values.\n  if (this.mode !== constants.RGB &&\n      this.mode !== constants.HSL &&\n      this.mode !== constants.HSB) {\n    throw new Error(this.mode + ' is an invalid colorMode.');\n  } else {\n    this._array = p5.Color._parseInputs.apply(renderer, vals);\n  }\n\n  // Expose closest screen color.\n  this.levels = this._array.map(function(level) {\n    return Math.round(level * 255);\n  });\n\n  return this;\n};\n\np5.Color.prototype.toString = function() {\n  var a = this.levels;\n  var alpha = this._array[3];  // String representation uses normalized alpha.\n  return 'rgba('+a[0]+','+a[1]+','+a[2]+','+ alpha +')';\n};\n\np5.Color.prototype._getAlpha = function() {\n  return this._array[3] * this.maxes[this.mode][3];\n};\n\np5.Color.prototype._getBlue = function() {\n  return this._array[2] * this.maxes[constants.RGB][2];\n};\n\np5.Color.prototype._getBrightness = function() {\n  if (!this.hsba) {\n    this.hsba = color_conversion._rgbaToHSBA(this._array);\n  }\n  return this.hsba[2] * this.maxes[constants.HSB][2];\n};\n\np5.Color.prototype._getGreen = function() {\n  return this._array[1] * this.maxes[constants.RGB][1];\n};\n\n/**\n * Hue is the same in HSB and HSL, but the maximum value may be different.\n * This function will return the HSB-normalized saturation when supplied with\n * an HSB color object, but will default to the HSL-normalized saturation\n * otherwise.\n */\np5.Color.prototype._getHue = function() {\n  if (this.mode === constants.HSB) {\n    if (!this.hsba) {\n      this.hsba = color_conversion._rgbaToHSBA(this._array);\n    }\n    return this.hsba[0] * this.maxes[constants.HSB][0];\n  } else {\n    if (!this.hsla) {\n      this.hsla = color_conversion._rgbaToHSLA(this._array);\n    }\n    return this.hsla[0] * this.maxes[constants.HSL][0];\n  }\n};\n\np5.Color.prototype._getLightness = function() {\n  if (!this.hsla) {\n    this.hsla = color_conversion._rgbaToHSLA(this._array);\n  }\n  return this.hsla[2] * this.maxes[constants.HSL][2];\n};\n\np5.Color.prototype._getRed = function() {\n  return this._array[0] * this.maxes[constants.RGB][0];\n};\n\n/**\n * Saturation is scaled differently in HSB and HSL. This function will return\n * the HSB saturation when supplied with an HSB color object, but will default\n * to the HSL saturation otherwise.\n */\np5.Color.prototype._getSaturation = function() {\n  if (this.mode === constants.HSB) {\n    if (!this.hsba) {\n      this.hsba = color_conversion._rgbaToHSBA(this._array);\n    }\n    return this.hsba[1] * this.maxes[constants.HSB][1];\n  } else {\n    if (!this.hsla) {\n      this.hsla = color_conversion._rgbaToHSLA(this._array);\n    }\n    return this.hsla[1] * this.maxes[constants.HSL][1];\n  }\n};\n\n/**\n * CSS named colors.\n */\nvar namedColors = {\n  aliceblue:             '#f0f8ff',\n  antiquewhite:          '#faebd7',\n  aqua:                  '#00ffff',\n  aquamarine:            '#7fffd4',\n  azure:                 '#f0ffff',\n  beige:                 '#f5f5dc',\n  bisque:                '#ffe4c4',\n  black:                 '#000000',\n  blanchedalmond:        '#ffebcd',\n  blue:                  '#0000ff',\n  blueviolet:            '#8a2be2',\n  brown:                 '#a52a2a',\n  burlywood:             '#deb887',\n  cadetblue:             '#5f9ea0',\n  chartreuse:            '#7fff00',\n  chocolate:             '#d2691e',\n  coral:                 '#ff7f50',\n  cornflowerblue:        '#6495ed',\n  cornsilk:              '#fff8dc',\n  crimson:               '#dc143c',\n  cyan:                  '#00ffff',\n  darkblue:              '#00008b',\n  darkcyan:              '#008b8b',\n  darkgoldenrod:         '#b8860b',\n  darkgray:              '#a9a9a9',\n  darkgreen:             '#006400',\n  darkgrey:              '#a9a9a9',\n  darkkhaki:             '#bdb76b',\n  darkmagenta:           '#8b008b',\n  darkolivegreen:        '#556b2f',\n  darkorange:            '#ff8c00',\n  darkorchid:            '#9932cc',\n  darkred:               '#8b0000',\n  darksalmon:            '#e9967a',\n  darkseagreen:          '#8fbc8f',\n  darkslateblue:         '#483d8b',\n  darkslategray:         '#2f4f4f',\n  darkslategrey:         '#2f4f4f',\n  darkturquoise:         '#00ced1',\n  darkviolet:            '#9400d3',\n  deeppink:              '#ff1493',\n  deepskyblue:           '#00bfff',\n  dimgray:               '#696969',\n  dimgrey:               '#696969',\n  dodgerblue:            '#1e90ff',\n  firebrick:             '#b22222',\n  floralwhite:           '#fffaf0',\n  forestgreen:           '#228b22',\n  fuchsia:               '#ff00ff',\n  gainsboro:             '#dcdcdc',\n  ghostwhite:            '#f8f8ff',\n  gold:                  '#ffd700',\n  goldenrod:             '#daa520',\n  gray:                  '#808080',\n  green:                 '#008000',\n  greenyellow:           '#adff2f',\n  grey:                  '#808080',\n  honeydew:              '#f0fff0',\n  hotpink:               '#ff69b4',\n  indianred:             '#cd5c5c',\n  indigo:                '#4b0082',\n  ivory:                 '#fffff0',\n  khaki:                 '#f0e68c',\n  lavender:              '#e6e6fa',\n  lavenderblush:         '#fff0f5',\n  lawngreen:             '#7cfc00',\n  lemonchiffon:          '#fffacd',\n  lightblue:             '#add8e6',\n  lightcoral:            '#f08080',\n  lightcyan:             '#e0ffff',\n  lightgoldenrodyellow:  '#fafad2',\n  lightgray:             '#d3d3d3',\n  lightgreen:            '#90ee90',\n  lightgrey:             '#d3d3d3',\n  lightpink:             '#ffb6c1',\n  lightsalmon:           '#ffa07a',\n  lightseagreen:         '#20b2aa',\n  lightskyblue:          '#87cefa',\n  lightslategray:        '#778899',\n  lightslategrey:        '#778899',\n  lightsteelblue:        '#b0c4de',\n  lightyellow:           '#ffffe0',\n  lime:                  '#00ff00',\n  limegreen:             '#32cd32',\n  linen:                 '#faf0e6',\n  magenta:               '#ff00ff',\n  maroon:                '#800000',\n  mediumaquamarine:      '#66cdaa',\n  mediumblue:            '#0000cd',\n  mediumorchid:          '#ba55d3',\n  mediumpurple:          '#9370db',\n  mediumseagreen:        '#3cb371',\n  mediumslateblue:       '#7b68ee',\n  mediumspringgreen:     '#00fa9a',\n  mediumturquoise:       '#48d1cc',\n  mediumvioletred:       '#c71585',\n  midnightblue:          '#191970',\n  mintcream:             '#f5fffa',\n  mistyrose:             '#ffe4e1',\n  moccasin:              '#ffe4b5',\n  navajowhite:           '#ffdead',\n  navy:                  '#000080',\n  oldlace:               '#fdf5e6',\n  olive:                 '#808000',\n  olivedrab:             '#6b8e23',\n  orange:                '#ffa500',\n  orangered:             '#ff4500',\n  orchid:                '#da70d6',\n  palegoldenrod:         '#eee8aa',\n  palegreen:             '#98fb98',\n  paleturquoise:         '#afeeee',\n  palevioletred:         '#db7093',\n  papayawhip:            '#ffefd5',\n  peachpuff:             '#ffdab9',\n  peru:                  '#cd853f',\n  pink:                  '#ffc0cb',\n  plum:                  '#dda0dd',\n  powderblue:            '#b0e0e6',\n  purple:                '#800080',\n  red:                   '#ff0000',\n  rosybrown:             '#bc8f8f',\n  royalblue:             '#4169e1',\n  saddlebrown:           '#8b4513',\n  salmon:                '#fa8072',\n  sandybrown:            '#f4a460',\n  seagreen:              '#2e8b57',\n  seashell:              '#fff5ee',\n  sienna:                '#a0522d',\n  silver:                '#c0c0c0',\n  skyblue:               '#87ceeb',\n  slateblue:             '#6a5acd',\n  slategray:             '#708090',\n  slategrey:             '#708090',\n  snow:                  '#fffafa',\n  springgreen:           '#00ff7f',\n  steelblue:             '#4682b4',\n  tan:                   '#d2b48c',\n  teal:                  '#008080',\n  thistle:               '#d8bfd8',\n  tomato:                '#ff6347',\n  turquoise:             '#40e0d0',\n  violet:                '#ee82ee',\n  wheat:                 '#f5deb3',\n  white:                 '#ffffff',\n  whitesmoke:            '#f5f5f5',\n  yellow:                '#ffff00',\n  yellowgreen:           '#9acd32'\n};\n\n/**\n * These regular expressions are used to build up the patterns for matching\n * viable CSS color strings: fragmenting the regexes in this way increases the\n * legibility and comprehensibility of the code.\n *\n * Note that RGB values of .9 are not parsed by IE, but are supported here for\n * color string consistency.\n */\nvar WHITESPACE = /\\s*/;  // Match zero or more whitespace characters.\nvar INTEGER = /(\\d{1,3})/;  // Match integers: 79, 255, etc.\nvar DECIMAL = /((?:\\d+(?:\\.\\d+)?)|(?:\\.\\d+))/;  // Match 129.6, 79, .9, etc.\nvar PERCENT = new RegExp(DECIMAL.source + '%');  // Match 12.9%, 79%, .9%, etc.\n\n/**\n * Full color string patterns. The capture groups are necessary.\n */\nvar colorPatterns = {\n  // Match colors in format #XXX, e.g. #416.\n  HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,\n\n  // Match colors in format #XXXXXX, e.g. #b4d455.\n  HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,\n\n  // Match colors in format rgb(R, G, B), e.g. rgb(255, 0, 128).\n  RGB: new RegExp([\n    '^rgb\\\\(',\n    INTEGER.source,\n    ',',\n    INTEGER.source,\n    ',',\n    INTEGER.source,\n    '\\\\)$'\n  ].join(WHITESPACE.source), 'i'),\n\n  // Match colors in format rgb(R%, G%, B%), e.g. rgb(100%, 0%, 28.9%).\n  RGB_PERCENT: new RegExp([\n    '^rgb\\\\(',\n    PERCENT.source,\n    ',',\n    PERCENT.source,\n    ',',\n    PERCENT.source,\n    '\\\\)$'\n  ].join(WHITESPACE.source), 'i'),\n\n  // Match colors in format rgb(R, G, B, A), e.g. rgb(255, 0, 128, 0.25).\n  RGBA: new RegExp([\n    '^rgba\\\\(',\n    INTEGER.source,\n    ',',\n    INTEGER.source,\n    ',',\n    INTEGER.source,\n    ',',\n    DECIMAL.source,\n    '\\\\)$'\n  ].join(WHITESPACE.source), 'i'),\n\n  // Match colors in format rgb(R%, G%, B%, A), e.g. rgb(100%, 0%, 28.9%, 0.5).\n  RGBA_PERCENT: new RegExp([\n    '^rgba\\\\(',\n    PERCENT.source,\n    ',',\n    PERCENT.source,\n    ',',\n    PERCENT.source,\n    ',',\n    DECIMAL.source,\n    '\\\\)$'\n  ].join(WHITESPACE.source), 'i'),\n\n  // Match colors in format hsla(H, S%, L%), e.g. hsl(100, 40%, 28.9%).\n  HSL: new RegExp([\n    '^hsl\\\\(',\n    INTEGER.source,\n    ',',\n    PERCENT.source,\n    ',',\n    PERCENT.source,\n    '\\\\)$'\n  ].join(WHITESPACE.source), 'i'),\n\n  // Match colors in format hsla(H, S%, L%, A), e.g. hsla(100, 40%, 28.9%, 0.5).\n  HSLA: new RegExp([\n    '^hsla\\\\(',\n    INTEGER.source,\n    ',',\n    PERCENT.source,\n    ',',\n    PERCENT.source,\n    ',',\n    DECIMAL.source,\n    '\\\\)$'\n  ].join(WHITESPACE.source), 'i'),\n\n  // Match colors in format hsb(H, S%, B%), e.g. hsb(100, 40%, 28.9%).\n  HSB: new RegExp([\n    '^hsb\\\\(',\n    INTEGER.source,\n    ',',\n    PERCENT.source,\n    ',',\n    PERCENT.source,\n    '\\\\)$'\n  ].join(WHITESPACE.source), 'i'),\n\n  // Match colors in format hsba(H, S%, B%, A), e.g. hsba(100, 40%, 28.9%, 0.5).\n  HSBA: new RegExp([\n    '^hsba\\\\(',\n    INTEGER.source,\n    ',',\n    PERCENT.source,\n    ',',\n    PERCENT.source,\n    ',',\n    DECIMAL.source,\n    '\\\\)$'\n  ].join(WHITESPACE.source), 'i')\n};\n\n/**\n * For a number of different inputs, returns a color formatted as [r, g, b, a]\n * arrays, with each component normalized between 0 and 1.\n *\n * @param {Array-like} args An 'array-like' object that represents a list of\n *                          arguments\n * @return {Array}          a color formatted as [r, g, b, a]\n *                          Example:\n *                          input        ==> output\n *                          g            ==> [g, g, g, 255]\n *                          g,a          ==> [g, g, g, a]\n *                          r, g, b      ==> [r, g, b, 255]\n *                          r, g, b, a   ==> [r, g, b, a]\n *                          [g]          ==> [g, g, g, 255]\n *                          [g, a]       ==> [g, g, g, a]\n *                          [r, g, b]    ==> [r, g, b, 255]\n *                          [r, g, b, a] ==> [r, g, b, a]\n * @example\n * <div>\n * <code>\n * // todo\n * </code>\n * </div>\n *\n * @alt\n * //todo\n *\n */\np5.Color._parseInputs = function() {\n  var numArgs = arguments.length;\n  var mode = this._colorMode;\n  var maxes = this._colorMaxes;\n  var results = [];\n\n  if (numArgs >= 3) {  // Argument is a list of component values.\n\n    results[0] = arguments[0] / maxes[mode][0];\n    results[1] = arguments[1] / maxes[mode][1];\n    results[2] = arguments[2] / maxes[mode][2];\n\n    // Alpha may be undefined, so default it to 100%.\n    if (typeof arguments[3] === 'number') {\n      results[3] = arguments[3] / maxes[mode][3];\n    } else {\n      results[3] = 1;\n    }\n\n    // Constrain components to the range [0,1].\n    results = results.map(function(value) {\n      return Math.max(Math.min(value, 1), 0);\n    });\n\n    // Convert to RGBA and return.\n    if (mode === constants.HSL) {\n      return color_conversion._hslaToRGBA(results);\n    } else if (mode === constants.HSB) {\n      return color_conversion._hsbaToRGBA(results);\n    } else {\n      return results;\n    }\n\n  } else if (numArgs === 1 && typeof arguments[0] === 'string') {\n\n    var str = arguments[0].trim().toLowerCase();\n\n    // Return if string is a named colour.\n    if (namedColors[str]) {\n      return p5.Color._parseInputs.apply(this, [namedColors[str]]);\n    }\n\n    // Try RGBA pattern matching.\n    if (colorPatterns.HEX3.test(str)) {  // #rgb\n      results = colorPatterns.HEX3.exec(str).slice(1).map(function(color) {\n        return parseInt(color + color, 16) / 255;\n      });\n      results[3] = 1;\n      return results;\n    } else if (colorPatterns.HEX6.test(str)) {  // #rrggbb\n      results = colorPatterns.HEX6.exec(str).slice(1).map(function(color) {\n        return parseInt(color, 16) / 255;\n      });\n      results[3] = 1;\n      return results;\n    } else if (colorPatterns.RGB.test(str)) {  // rgb(R,G,B)\n      results = colorPatterns.RGB.exec(str).slice(1).map(function(color) {\n        return color / 255;\n      });\n      results[3] = 1;\n      return results;\n    } else if (colorPatterns.RGB_PERCENT.test(str)) {  // rgb(R%,G%,B%)\n      results = colorPatterns.RGB_PERCENT.exec(str).slice(1)\n        .map(function(color) {\n          return parseFloat(color) / 100;\n        });\n      results[3] = 1;\n      return results;\n    } else if (colorPatterns.RGBA.test(str)) {  // rgba(R,G,B,A)\n      results = colorPatterns.RGBA.exec(str).slice(1)\n        .map(function(color, idx) {\n          if (idx === 3) {\n            return parseFloat(color);\n          }\n          return color / 255;\n        });\n      return results;\n    } else if (colorPatterns.RGBA_PERCENT.test(str)) {  // rgba(R%,G%,B%,A%)\n      results = colorPatterns.RGBA_PERCENT.exec(str).slice(1)\n        .map(function(color, idx) {\n          if (idx === 3) {\n            return parseFloat(color);\n          }\n          return parseFloat(color) / 100;\n        });\n      return results;\n    }\n\n    // Try HSLA pattern matching.\n    if (colorPatterns.HSL.test(str)) {  // hsl(H,S,L)\n      results = colorPatterns.HSL.exec(str).slice(1)\n        .map(function(color, idx) {\n        if (idx === 0) {\n          return parseInt(color, 10) / 360;\n        }\n        return parseInt(color, 10) / 100;\n      });\n      results[3] = 1;\n    } else if (colorPatterns.HSLA.test(str)) {  // hsla(H,S,L,A)\n      results = colorPatterns.HSLA.exec(str).slice(1)\n        .map(function(color, idx) {\n        if (idx === 0) {\n          return parseInt(color, 10) / 360;\n        }\n        else if (idx === 3) {\n          return parseFloat(color);\n        }\n        return parseInt(color, 10) / 100;\n      });\n    }\n    if (results.length) {\n      return color_conversion._hslaToRGBA(results);\n    }\n\n    // Try HSBA pattern matching.\n    if (colorPatterns.HSB.test(str)) {  // hsb(H,S,B)\n      results = colorPatterns.HSB.exec(str).slice(1)\n        .map(function(color, idx) {\n        if (idx === 0) {\n          return parseInt(color, 10) / 360;\n        }\n        return parseInt(color, 10) / 100;\n      });\n      results[3] = 1;\n    } else if (colorPatterns.HSBA.test(str)) {  // hsba(H,S,B,A)\n      results = colorPatterns.HSBA.exec(str).slice(1)\n        .map(function(color, idx) {\n        if (idx === 0) {\n          return parseInt(color, 10) / 360;\n        }\n        else if (idx === 3) {\n          return parseFloat(color);\n        }\n        return parseInt(color, 10) / 100;\n      });\n    }\n    if (results.length) {\n      return color_conversion._hsbaToRGBA(results);\n    }\n\n    // Input did not match any CSS color pattern: default to white.\n    results = [1, 1, 1, 1];\n\n  } else if ((numArgs === 1 || numArgs === 2) &&\n              typeof arguments[0] === 'number') {  // 'Grayscale' mode.\n\n    /**\n     * For HSB and HSL, interpret the gray level as a brightness/lightness\n     * value (they are equivalent when chroma is zero). For RGB, normalize the\n     * gray level according to the blue maximum.\n     */\n    results[0] = arguments[0] / maxes[mode][2];\n    results[1] = arguments[0] / maxes[mode][2];\n    results[2] = arguments[0] / maxes[mode][2];\n\n    // Alpha may be undefined, so default it to 100%.\n    if (typeof arguments[1] === 'number') {\n      results[3] = arguments[1] / maxes[mode][3];\n    } else {\n      results[3] = 1;\n    }\n\n    // Constrain components to the range [0,1].\n    results = results.map(function(value) {\n      return Math.max(Math.min(value, 1), 0);\n    });\n\n  } else {\n    throw new Error (arguments + 'is not a valid color representation.');\n  }\n\n  return results;\n};\n\nmodule.exports = p5.Color;\n\n},{\"../core/constants\":36,\"../core/core\":37,\"./color_conversion\":29}],32:[function(_dereq_,module,exports){\n/**\n * @module Color\n * @submodule Setting\n * @for p5\n * @requires core\n * @requires constants\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar constants = _dereq_('../core/constants');\n_dereq_('./p5.Color');\n\n/**\n * The background() function sets the color used for the background of the\n * p5.js canvas. The default background is light gray. This function is\n * typically used within draw() to clear the display window at the beginning\n * of each frame, but it can be used inside setup() to set the background on\n * the first frame of animation or if the background need only be set once.\n *\n * @method background\n * @param {p5.Color} color     any value created by the color() function\n * @param {Number} [a]         opacity of the background relative to current\n *                             color range (default is 0-100)\n *\n * @example\n * <div>\n * <code>\n * // Grayscale integer value\n * background(51);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // R, G & B integer values\n * background(255, 204, 0);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // H, S & B integer values\n * colorMode(HSB);\n * background(255, 204, 100);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Named SVG/CSS color string\n * background('red');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // three-digit hexadecimal RGB notation\n * background('#fae');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // six-digit hexadecimal RGB notation\n * background('#222222');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // integer RGB notation\n * background('rgb(0,255,0)');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // integer RGBA notation\n * background('rgba(0,255,0, 0.25)');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // percentage RGB notation\n * background('rgb(100%,0%,10%)');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // percentage RGBA notation\n * background('rgba(100%,0%,100%,0.5)');\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // p5 Color object\n * background(color(0, 0, 255));\n * </code>\n * </div>\n *\n * @alt\n * canvas with darkest charcoal grey background.\n * canvas with yellow background.\n * canvas with royal blue background.\n * canvas with red background.\n * canvas with pink background.\n * canvas with black background.\n * canvas with bright green background.\n * canvas with soft green background.\n * canvas with red background.\n * canvas with light purple background.\n * canvas with blue background.\n */\n\n/**\n * @method background\n * @param {String} colorstring color string, possible formats include: integer\n *                         rgb() or rgba(), percentage rgb() or rgba(),\n *                         3-digit hex, 6-digit hex\n * @param {Number} [a]\n */\n\n/**\n * @method background\n * @param {Number} gray   specifies a value between white and black\n * @param {Number} [a]\n */\n\n/**\n * @method background\n * @param {Number} v1     red or hue value (depending on the current color\n *                        mode)\n * @param {Number} v2     green or saturation value (depending on the current\n *                        color mode)\n * @param {Number} v3     blue or brightness value (depending on the current\n *                        color mode)\n * @param  {Number} [a]\n */\n\n/**\n * @method background\n * @param {p5.Image} image     image created with loadImage() or createImage(),\n *                             to set as background\n *                             (must be same size as the sketch window)\n * @param  {Number}  [a]\n */\np5.prototype.background = function() {\n  if (arguments[0] instanceof p5.Image) {\n    this.image(arguments[0], 0, 0, this.width, this.height);\n  } else {\n    this._renderer.background.apply(this._renderer, arguments);\n  }\n  return this;\n};\n\n/**\n * Clears the pixels within a buffer. This function only works on p5.Canvas\n * objects created with the createCanvas() function; it won't work with the\n * main display window. Unlike the main graphics context, pixels in\n * additional graphics areas created with createGraphics() can be entirely\n * or partially transparent. This function clears everything to make all of\n * the pixels 100% transparent.\n *\n * @method clear\n * @example\n * <div>\n * <code>\n * // Clear the screen on mouse press.\n * function setup() {\n *   createCanvas(100, 100);\n * }\n *\n * function draw() {\n *   ellipse(mouseX, mouseY, 20, 20);\n * }\n *\n * function mousePressed() {\n *   clear();\n * }\n * </code>\n * </div>\n *\n * @alt\n * 20x20 white ellipses are continually drawn at mouse x and y coordinates.\n *\n */\n\np5.prototype.clear = function() {\n  this._renderer.clear();\n  return this;\n};\n\n/**\n * colorMode() changes the way p5.js interprets color data. By default, the\n * parameters for fill(), stroke(), background(), and color() are defined by\n * values between 0 and 255 using the RGB color model. This is equivalent to\n * setting colorMode(RGB, 255). Setting colorMode(HSB) lets you use the HSB\n * system instead. By default, this is colorMode(HSB, 360, 100, 100, 1). You\n * can also use HSL.\n * <br><br>\n * Note: existing color objects remember the mode that they were created in,\n * so you can change modes as you like without affecting their appearance.\n *\n * @method colorMode\n * @param {Constant} mode   either RGB or HSB, corresponding to\n *                          Red/Green/Blue and Hue/Saturation/Brightness\n *                          (or Lightness)\n * @param {Number} [max1] range for the red or hue depending on the\n *                              current color mode, or range for all values\n * @param {Number} [max2] range for the green or saturation depending\n *                              on the current color mode\n * @param {Number} [max3] range for the blue or brightness/lighntess\n *                              depending on the current color mode\n * @param {Number} [maxA] range for the alpha\n * @example\n * <div>\n * <code>\n * noStroke();\n * colorMode(RGB, 100);\n * for (i = 0; i < 100; i++) {\n *   for (j = 0; j < 100; j++) {\n *     stroke(i, j, 0);\n *     point(i, j);\n *   }\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noStroke();\n * colorMode(HSB, 100);\n * for (i = 0; i < 100; i++) {\n *   for (j = 0; j < 100; j++) {\n *     stroke(i, j, 100);\n *     point(i, j);\n *   }\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * colorMode(RGB, 255);\n * var c = color(127, 255, 0);\n *\n * colorMode(RGB, 1);\n * var myColor = c._getRed();\n * text(myColor, 10, 10, 80, 80);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noFill();\n * colorMode(RGB, 255, 255, 255, 1);\n * background(255);\n *\n * strokeWeight(4);\n * stroke(255, 0 , 10, 0.3);\n * ellipse(40, 40, 50, 50);\n * ellipse(50, 50, 40, 40);\n * </code>\n * </div>\n *\n * @alt\n *Green to red gradient from bottom L to top R. shading originates from top left.\n *Rainbow gradient from left to right. Brightness increasing to white at top.\n *unknown image.\n *50x50 ellipse at middle L & 40x40 ellipse at center. Transluscent pink outlines.\n *\n */\np5.prototype.colorMode = function() {\n  if (arguments[0] === constants.RGB ||\n      arguments[0] === constants.HSB ||\n      arguments[0] === constants.HSL) {\n\n    // Set color mode.\n    this._renderer._colorMode = arguments[0];\n\n    // Set color maxes.\n    var maxes = this._renderer._colorMaxes[this._renderer._colorMode];\n    if (arguments.length === 2) {\n      maxes[0] = arguments[1];  // Red\n      maxes[1] = arguments[1];  // Green\n      maxes[2] = arguments[1];  // Blue\n      maxes[3] = arguments[1];  // Alpha\n    } else if (arguments.length === 4) {\n      maxes[0] = arguments[1];  // Red\n      maxes[1] = arguments[2];  // Green\n      maxes[2] = arguments[3];  // Blue\n    } else if (arguments.length === 5) {\n      maxes[0] = arguments[1];  // Red\n      maxes[1] = arguments[2];  // Green\n      maxes[2] = arguments[3];  // Blue\n      maxes[3] = arguments[4];  // Alpha\n    }\n  }\n\n  return this;\n};\n\n/**\n * Sets the color used to fill shapes. For example, if you run\n * fill(204, 102, 0), all subsequent shapes will be filled with orange. This\n * color is either specified in terms of the RGB or HSB color depending on\n * the current colorMode(). (The default color space is RGB, with each value\n * in the range from 0 to 255).\n * <br><br>\n * If a single string argument is provided, RGB, RGBA and Hex CSS color strings\n * and all named color strings are supported. A p5 Color object can also be\n * provided to set the fill color.\n *\n * @method fill\n * @param {Number|Array|String|p5.Color} v1   gray value, red or hue value\n *                                            (depending on the current color\n *                                            mode), or color Array, or CSS\n *                                            color string\n * @param {Number}                       [v2] green or saturation value\n *                                            (depending on the current\n *                                            color mode)\n * @param {Number}                       [v3] blue or brightness value\n *                                            (depending on the current\n *                                            color mode)\n * @param {Number}                       [a]  opacity of the background\n *\n * @example\n * <div>\n * <code>\n * // Grayscale integer value\n * fill(51);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // R, G & B integer values\n * fill(255, 204, 0);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // H, S & B integer values\n * colorMode(HSB);\n * fill(255, 204, 100);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Named SVG/CSS color string\n * fill('red');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // three-digit hexadecimal RGB notation\n * fill('#fae');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // six-digit hexadecimal RGB notation\n * fill('#222222');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // integer RGB notation\n * fill('rgb(0,255,0)');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // integer RGBA notation\n * fill('rgba(0,255,0, 0.25)');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // percentage RGB notation\n * fill('rgb(100%,0%,10%)');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // percentage RGBA notation\n * fill('rgba(100%,0%,100%,0.5)');\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // p5 Color object\n * fill(color(0, 0, 255));\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n * @alt\n * 60x60 dark charcoal grey rect with black outline in center of canvas.\n * 60x60 yellow rect with black outline in center of canvas.\n * 60x60 royal blue rect with black outline in center of canvas.\n * 60x60 red rect with black outline in center of canvas.\n * 60x60 pink rect with black outline in center of canvas.\n * 60x60 black rect with black outline in center of canvas.\n * 60x60 light green rect with black outline in center of canvas.\n * 60x60 soft green rect with black outline in center of canvas.\n * 60x60 red rect with black outline in center of canvas.\n * 60x60 dark fushcia rect with black outline in center of canvas.\n * 60x60 blue rect with black outline in center of canvas.\n */\n\np5.prototype.fill = function() {\n  this._renderer._setProperty('_fillSet', true);\n  this._renderer._setProperty('_doFill', true);\n  this._renderer.fill.apply(this._renderer, arguments);\n  return this;\n};\n\n/**\n * Disables filling geometry. If both noStroke() and noFill() are called,\n * nothing will be drawn to the screen.\n *\n * @method noFill\n * @example\n * <div>\n * <code>\n * rect(15, 10, 55, 55);\n * noFill();\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n * @alt\n * white rect top middle and noFill rect center. Both 60x60 with black outlines.\n */\np5.prototype.noFill = function() {\n  this._renderer._setProperty('_doFill', false);\n  return this;\n};\n\n/**\n * Disables drawing the stroke (outline). If both noStroke() and noFill()\n * are called, nothing will be drawn to the screen.\n *\n * @method noStroke\n * @example\n * <div>\n * <code>\n * noStroke();\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n *\n * @alt\n *60x60 white rect at center. no outline.\n *\n */\n\np5.prototype.noStroke = function() {\n  this._renderer._setProperty('_doStroke', false);\n  return this;\n};\n\n/**\n * Sets the color used to draw lines and borders around shapes. This color\n * is either specified in terms of the RGB or HSB color depending on the\n * current colorMode() (the default color space is RGB, with each value in\n * the range from 0 to 255).\n * <br><br>\n * If a single string argument is provided, RGB, RGBA and Hex CSS color\n * strings and all named color strings are supported. A p5 Color object\n * can also be provided to set the stroke color.\n *\n * @method stroke\n * @param {Number|Array|String|p5.Color} v1   gray value, red or hue value\n *                                            (depending on the current color\n *                                            mode), or color Array, or CSS\n *                                            color string\n * @param {Number}                       [v2] green or saturation value\n *                                            (depending on the current\n *                                            color mode)\n * @param {Number}                       [v3] blue or brightness value\n *                                            (depending on the current\n *                                            color mode)\n * @param {Number}                       [a]  opacity of the background\n *\n * @example\n * <div>\n * <code>\n * // Grayscale integer value\n * strokeWeight(4);\n * stroke(51);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // R, G & B integer values\n * stroke(255, 204, 0);\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // H, S & B integer values\n * colorMode(HSB);\n * strokeWeight(4);\n * stroke(255, 204, 100);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // Named SVG/CSS color string\n * stroke('red');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // three-digit hexadecimal RGB notation\n * stroke('#fae');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // six-digit hexadecimal RGB notation\n * stroke('#222222');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // integer RGB notation\n * stroke('rgb(0,255,0)');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // integer RGBA notation\n * stroke('rgba(0,255,0,0.25)');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // percentage RGB notation\n * stroke('rgb(100%,0%,10%)');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // percentage RGBA notation\n * stroke('rgba(100%,0%,100%,0.5)');\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // p5 Color object\n * stroke(color(0, 0, 255));\n * strokeWeight(4);\n * rect(20, 20, 60, 60);\n * </code>\n * </div>\n *\n * @alt\n * 60x60 white rect at center. Dark charcoal grey outline.\n * 60x60 white rect at center. Yellow outline.\n * 60x60 white rect at center. Royal blue outline.\n * 60x60 white rect at center. Red outline.\n * 60x60 white rect at center. Pink outline.\n * 60x60 white rect at center. Black outline.\n * 60x60 white rect at center. Bright green outline.\n * 60x60 white rect at center. Soft green outline.\n * 60x60 white rect at center. Red outline.\n * 60x60 white rect at center. Dark fushcia outline.\n * 60x60 white rect at center. Blue outline.\n */\n\np5.prototype.stroke = function() {\n  this._renderer._setProperty('_strokeSet', true);\n  this._renderer._setProperty('_doStroke', true);\n  this._renderer.stroke.apply(this._renderer, arguments);\n  return this;\n};\n\nmodule.exports = p5;\n\n},{\"../core/constants\":36,\"../core/core\":37,\"./p5.Color\":31}],33:[function(_dereq_,module,exports){\n/**\n * @module Shape\n * @submodule 2D Primitives\n * @for p5\n * @requires core\n * @requires constants\n */\n\n'use strict';\n\nvar p5 = _dereq_('./core');\nvar constants = _dereq_('./constants');\nvar canvas = _dereq_('./canvas');\n_dereq_('./error_helpers');\n\n/**\n * Draw an arc to the screen. If called with only a, b, c, d, start, and\n * stop, the arc will be drawn as an open pie. If mode is provided, the arc\n * will be drawn either open, as a chord, or as a pie as specified. The\n * origin may be changed with the ellipseMode() function.<br><br>\n * Note that drawing a full circle (ex: 0 to TWO_PI) will appear blank\n * because 0 and TWO_PI are the same position on the unit circle. The\n * best way to handle this is by using the ellipse() function instead\n * to create a closed ellipse, and to use the arc() function\n * only to draw parts of an ellipse.\n *\n * @method arc\n * @param  {Number} a      x-coordinate of the arc's ellipse\n * @param  {Number} b      y-coordinate of the arc's ellipse\n * @param  {Number} c      width of the arc's ellipse by default\n * @param  {Number} d      height of the arc's ellipse by default\n * @param  {Number} start  angle to start the arc, specified in radians\n * @param  {Number} stop   angle to stop the arc, specified in radians\n * @param  {Constant} [mode] optional parameter to determine the way of drawing\n *                         the arc\n * @return {Object}        the p5 object\n * @example\n * <div>\n * <code>\n * arc(50, 55, 50, 50, 0, HALF_PI);\n * noFill();\n * arc(50, 55, 60, 60, HALF_PI, PI);\n * arc(50, 55, 70, 70, PI, PI+QUARTER_PI);\n * arc(50, 55, 80, 80, PI+QUARTER_PI, TWO_PI);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * arc(50, 50, 80, 80, 0, PI+QUARTER_PI, OPEN);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * arc(50, 50, 80, 80, 0, PI+QUARTER_PI, CHORD);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * arc(50, 50, 80, 80, 0, PI+QUARTER_PI, PIE);\n * </code>\n * </div>\n *\n * @alt\n *shattered outline of an ellipse with a quarter of a white circle bottom-right.\n *white ellipse with black outline with top right missing.\n *white ellipse with top right missing with black outline around shape.\n *white ellipse with top right quarter missing with black outline around the shape.\n *\n */\np5.prototype.arc = function(x, y, w, h, start, stop, mode) {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  if (!this._renderer._doStroke && !this._renderer._doFill) {\n    return this;\n  }\n  if (this._angleMode === constants.DEGREES) {\n    start = this.radians(start);\n    stop = this.radians(stop);\n  }\n\n  // Make all angles positive...\n  while (start < 0) {\n    start += constants.TWO_PI;\n  }\n  while (stop < 0) {\n    stop += constants.TWO_PI;\n  }\n  // ...and confine them to the interval [0,TWO_PI).\n  start %= constants.TWO_PI;\n  stop %= constants.TWO_PI;\n\n  // account for full circle\n  if (stop === start) {\n    stop += constants.TWO_PI;\n  }\n\n  // Adjust angles to counter linear scaling.\n  if (start <= constants.HALF_PI) {\n    start = Math.atan(w / h * Math.tan(start));\n  } else  if (start > constants.HALF_PI && start <= 3 * constants.HALF_PI) {\n    start = Math.atan(w / h * Math.tan(start)) + constants.PI;\n  } else {\n    start = Math.atan(w / h * Math.tan(start)) + constants.TWO_PI;\n  }\n  if (stop <= constants.HALF_PI) {\n    stop = Math.atan(w / h * Math.tan(stop));\n  } else  if (stop > constants.HALF_PI && stop <= 3 * constants.HALF_PI) {\n    stop = Math.atan(w / h * Math.tan(stop)) + constants.PI;\n  } else {\n    stop = Math.atan(w / h * Math.tan(stop)) + constants.TWO_PI;\n  }\n\n  // Exceed the interval if necessary in order to preserve the size and\n  // orientation of the arc.\n  if (start > stop) {\n    stop += constants.TWO_PI;\n  }\n  // p5 supports negative width and heights for ellipses\n  w = Math.abs(w);\n  h = Math.abs(h);\n  this._renderer.arc(x, y, w, h, start, stop, mode);\n  return this;\n};\n\n/**\n * Draws an ellipse (oval) to the screen. An ellipse with equal width and\n * height is a circle. By default, the first two parameters set the location,\n * and the third and fourth parameters set the shape's width and height. If\n * no height is specified, the value of width is used for both the width and\n * height. The origin may be changed with the ellipseMode() function.\n *\n * @method ellipse\n * @param  {Number} x x-coordinate of the ellipse.\n * @param  {Number} y y-coordinate of the ellipse.\n * @param  {Number} w width of the ellipse.\n * @param  {Number} [h] height of the ellipse.\n * @return {p5}       the p5 object\n * @example\n * <div>\n * <code>\n * ellipse(56, 46, 55, 55);\n * </code>\n * </div>\n *\n * @alt\n *white ellipse with black outline in middle-right of canvas that is 55x55.\n *\n */\n/**\n * @method ellipse\n * @param {Number} x\n * @param {Number} y\n * @param {Number} w\n * @param {Number} [h]\n * @return {p5}\n */\np5.prototype.ellipse = function() {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  // Duplicate 3rd argument if only 3 given.\n  if (args.length === 3) {\n    args.push(args[2]);\n  }\n  // p5 supports negative width and heights for rects\n  if (args[2] < 0){args[2] = Math.abs(args[2]);}\n  if (args[3] < 0){args[3] = Math.abs(args[3]);}\n  if (!this._renderer._doStroke && !this._renderer._doFill) {\n    return this;\n  }\n  var vals = canvas.modeAdjust(\n    args[0],\n    args[1],\n    args[2],\n    args[3],\n    this._renderer._ellipseMode);\n  args[0] = vals.x;\n  args[1] = vals.y;\n  args[2] = vals.w;\n  args[3] = vals.h;\n  this._renderer.ellipse(args);\n  return this;\n};\n/**\n * Draws a line (a direct path between two points) to the screen. The version\n * of line() with four parameters draws the line in 2D. To color a line, use\n * the stroke() function. A line cannot be filled, therefore the fill()\n * function will not affect the color of a line. 2D lines are drawn with a\n * width of one pixel by default, but this can be changed with the\n * strokeWeight() function.\n *\n * @method line\n * @param  {Number} x1 the x-coordinate of the first point\n * @param  {Number} y1 the y-coordinate of the first point\n * @param  {Number} x2 the x-coordinate of the second point\n * @param  {Number} y2 the y-coordinate of the second point\n * @return {p5}        the p5 object\n * @example\n * <div>\n * <code>\n * line(30, 20, 85, 75);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * line(30, 20, 85, 20);\n * stroke(126);\n * line(85, 20, 85, 75);\n * stroke(255);\n * line(85, 75, 30, 75);\n * </code>\n * </div>\n *\n * @alt\n *line 78 pixels long running from mid-top to bottom-right of canvas.\n *3 lines of various stroke sizes. Form top, bottom and right sides of a square.\n *\n */\n////commented out original\n// p5.prototype.line = function(x1, y1, x2, y2) {\n//   if (!this._renderer._doStroke) {\n//     return this;\n//   }\n//   if(this._renderer.isP3D){\n//   } else {\n//     this._renderer.line(x1, y1, x2, y2);\n//   }\n// };\np5.prototype.line = function() {\n  if (!this._renderer._doStroke) {\n    return this;\n  }\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  //check whether we should draw a 3d line or 2d\n  if(this._renderer.isP3D){\n    this._renderer.line(\n      args[0],\n      args[1],\n      args[2],\n      args[3],\n      args[4],\n      args[5]);\n  } else {\n    this._renderer.line(\n      args[0],\n      args[1],\n      args[2],\n      args[3]);\n  }\n  return this;\n};\n\n/**\n * Draws a point, a coordinate in space at the dimension of one pixel.\n * The first parameter is the horizontal value for the point, the second\n * value is the vertical value for the point. The color of the point is\n * determined by the current stroke.\n *\n * @method point\n * @param  {Number} x the x-coordinate\n * @param  {Number} y the y-coordinate\n * @return {p5}       the p5 object\n * @example\n * <div>\n * <code>\n * point(30, 20);\n * point(85, 20);\n * point(85, 75);\n * point(30, 75);\n * </code>\n * </div>\n *\n * @alt\n *4 points centered in the middle-right of the canvas.\n *\n */\np5.prototype.point = function() {\n  if (!this._renderer._doStroke) {\n    return this;\n  }\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  //check whether we should draw a 3d line or 2d\n  if(this._renderer.isP3D){\n    this._renderer.point(\n      args[0],\n      args[1],\n      args[2]\n      );\n  } else {\n    this._renderer.point(\n      args[0],\n      args[1]\n    );\n  }\n  return this;\n};\n\n\n/**\n * Draw a quad. A quad is a quadrilateral, a four sided polygon. It is\n * similar to a rectangle, but the angles between its edges are not\n * constrained to ninety degrees. The first pair of parameters (x1,y1)\n * sets the first vertex and the subsequent pairs should proceed\n * clockwise or counter-clockwise around the defined shape.\n *\n * @method quad\n * @param {Number} x1 the x-coordinate of the first point\n * @param {Number} y1 the y-coordinate of the first point\n * @param {Number} x2 the x-coordinate of the second point\n * @param {Number} y2 the y-coordinate of the second point\n * @param {Number} x3 the x-coordinate of the third point\n * @param {Number} y3 the y-coordinate of the third point\n * @param {Number} x4 the x-coordinate of the fourth point\n * @param {Number} y4 the y-coordinate of the fourth point\n * @return {p5}     the p5 object\n * @example\n * <div>\n * <code>\n * quad(38, 31, 86, 20, 69, 63, 30, 76);\n * </code>\n * </div>\n *\n * @alt\n *irregular white quadrilateral shape with black outline mid-right of canvas.\n *\n */\n/**\n * @method quad\n * @param {Number} x1\n * @param {Number} y1\n * @param {Number} x2\n * @param {Number} y2\n * @param {Number} x3\n * @param {Number} y3\n * @param {Number} x4\n * @param {Number} y4\n * @return {p5} the p5 object\n */\np5.prototype.quad = function() {\n  if (!this._renderer._doStroke && !this._renderer._doFill) {\n    return this;\n  }\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  if(this._renderer.isP3D){\n    this._renderer.quad(\n      args[0],\n      args[1],\n      args[2],\n      args[3],\n      args[4],\n      args[5],\n      args[6],\n      args[7],\n      args[8],\n      args[9],\n      args[10],\n      args[11]\n      );\n  } else {\n    this._renderer.quad(\n     args[0],\n     args[1],\n     args[2],\n     args[3],\n     args[4],\n     args[5],\n     args[6],\n    args[7]\n    );\n  }\n  return this;\n};\n\n/**\n* Draws a rectangle to the screen. A rectangle is a four-sided shape with\n* every angle at ninety degrees. By default, the first two parameters set\n* the location of the upper-left corner, the third sets the width, and the\n* fourth sets the height. The way these parameters are interpreted, however,\n* may be changed with the rectMode() function.\n* <br><br>\n* The fifth, sixth, seventh and eighth parameters, if specified,\n* determine corner radius for the top-right, top-left, lower-right and\n* lower-left corners, respectively. An omitted corner radius parameter is set\n* to the value of the previously specified radius value in the parameter list.\n*\n* @method rect\n* @param  {Number} x  x-coordinate of the rectangle.\n* @param  {Number} y  y-coordinate of the rectangle.\n* @param  {Number} w  width of the rectangle.\n* @param  {Number} h  height of the rectangle.\n* @param  {Number} [tl] optional radius of top-left corner.\n* @param  {Number} [tr] optional radius of top-right corner.\n* @param  {Number} [br] optional radius of bottom-right corner.\n* @param  {Number} [bl] optional radius of bottom-left corner.\n* @return {p5}          the p5 object.\n* @example\n* <div>\n* <code>\n* // Draw a rectangle at location (30, 20) with a width and height of 55.\n* rect(30, 20, 55, 55);\n* </code>\n* </div>\n*\n* <div>\n* <code>\n* // Draw a rectangle with rounded corners, each having a radius of 20.\n* rect(30, 20, 55, 55, 20);\n* </code>\n* </div>\n*\n* <div>\n* <code>\n* // Draw a rectangle with rounded corners having the following radii:\n* // top-left = 20, top-right = 15, bottom-right = 10, bottom-left = 5.\n* rect(30, 20, 55, 55, 20, 15, 10, 5);\n* </code>\n* </div>\n*\n* @alt\n* 55x55 white rect with black outline in mid-right of canvas.\n* 55x55 white rect with black outline and rounded edges in mid-right of canvas.\n* 55x55 white rect with black outline and rounded edges of different radii.\n*/\n/**\n* @method rect\n* @param  {Number} x\n* @param  {Number} y\n* @param  {Number} w\n* @param  {Number} h\n* @param  {Number} [detailX]\n* @param  {Number} [detailY]\n* @return {p5}          the p5 object.\n*/\np5.prototype.rect = function () {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  if (!this._renderer._doStroke && !this._renderer._doFill) {\n    return;\n  }\n  var vals = canvas.modeAdjust(\n    args[0],\n    args[1],\n    args[2],\n    args[3],\n    this._renderer._rectMode);\n  args[0] = vals.x;\n  args[1] = vals.y;\n  args[2] = vals.w;\n  args[3] = vals.h;\n  this._renderer.rect(args);\n  return this;\n};\n\n/**\n* A triangle is a plane created by connecting three points. The first two\n* arguments specify the first point, the middle two arguments specify the\n* second point, and the last two arguments specify the third point.\n*\n* @method triangle\n* @param  {Number} x1 x-coordinate of the first point\n* @param  {Number} y1 y-coordinate of the first point\n* @param  {Number} x2 x-coordinate of the second point\n* @param  {Number} y2 y-coordinate of the second point\n* @param  {Number} x3 x-coordinate of the third point\n* @param  {Number} y3 y-coordinate of the third point\n* @return {p5}        the p5 object\n* @example\n* <div>\n* <code>\n* triangle(30, 75, 58, 20, 86, 75);\n* </code>\n* </div>\n*\n*@alt\n* white triangle with black outline in mid-right of canvas.\n*\n*/\np5.prototype.triangle = function() {\n\n  if (!this._renderer._doStroke && !this._renderer._doFill) {\n    return this;\n  }\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  this._renderer.triangle(args);\n  return this;\n};\n\nmodule.exports = p5;\n\n},{\"./canvas\":35,\"./constants\":36,\"./core\":37,\"./error_helpers\":40}],34:[function(_dereq_,module,exports){\n/**\n * @module Shape\n * @submodule Attributes\n * @for p5\n * @requires core\n * @requires constants\n */\n\n'use strict';\n\nvar p5 = _dereq_('./core');\nvar constants = _dereq_('./constants');\n\n/**\n * Modifies the location from which ellipses are drawn by changing the way\n * in which parameters given to ellipse() are interpreted.\n * <br><br>\n * The default mode is ellipseMode(CENTER), which interprets the first two\n * parameters of ellipse() as the shape's center point, while the third and\n * fourth parameters are its width and height.\n * <br><br>\n * ellipseMode(RADIUS) also uses the first two parameters of ellipse() as\n * the shape's center point, but uses the third and fourth parameters to\n * specify half of the shapes's width and height.\n * <br><br>\n * ellipseMode(CORNER) interprets the first two parameters of ellipse() as\n * the upper-left corner of the shape, while the third and fourth parameters\n * are its width and height.\n * <br><br>\n * ellipseMode(CORNERS) interprets the first two parameters of ellipse() as\n * the location of one corner of the ellipse's bounding box, and the third\n * and fourth parameters as the location of the opposite corner.\n * <br><br>\n * The parameter must be written in ALL CAPS because Javascript is a\n * case-sensitive language.\n *\n * @method ellipseMode\n * @param  {Constant} mode either CENTER, RADIUS, CORNER, or CORNERS\n * @return {p5}                   the p5 object\n * @example\n * <div>\n * <code>\n * ellipseMode(RADIUS);  // Set ellipseMode to RADIUS\n * fill(255);  // Set fill to white\n * ellipse(50, 50, 30, 30);  // Draw white ellipse using RADIUS mode\n *\n * ellipseMode(CENTER);  // Set ellipseMode to CENTER\n * fill(100);  // Set fill to gray\n * ellipse(50, 50, 30, 30);  // Draw gray ellipse using CENTER mode\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * ellipseMode(CORNER);  // Set ellipseMode is CORNER\n * fill(255);  // Set fill to white\n * ellipse(25, 25, 50, 50);  // Draw white ellipse using CORNER mode\n *\n * ellipseMode(CORNERS);  // Set ellipseMode to CORNERS\n * fill(100);  // Set fill to gray\n * ellipse(25, 25, 50, 50);  // Draw gray ellipse using CORNERS mode\n * </code>\n * </div>\n *\n * @alt\n * 60x60 white ellipse and 30x30 grey ellipse with black outlines at center.\n * 60x60 white ellipse @center and 30x30 grey ellipse top-right, black outlines.\n *\n */\np5.prototype.ellipseMode = function(m) {\n  if (m === constants.CORNER ||\n    m === constants.CORNERS ||\n    m === constants.RADIUS ||\n    m === constants.CENTER) {\n    this._renderer._ellipseMode = m;\n  }\n  return this;\n};\n\n/**\n * Draws all geometry with jagged (aliased) edges. Note that smooth() is\n * active by default, so it is necessary to call noSmooth() to disable\n * smoothing of geometry, images, and fonts.\n *\n * @method noSmooth\n * @return {p5} the p5 object\n * @example\n * <div>\n * <code>\n * background(0);\n * noStroke();\n * smooth();\n * ellipse(30, 48, 36, 36);\n * noSmooth();\n * ellipse(70, 48, 36, 36);\n * </code>\n * </div>\n *\n * @alt\n * 2 pixelated 36x36 white ellipses to left & right of center, black background\n *\n */\np5.prototype.noSmooth = function() {\n  this._renderer.noSmooth();\n  return this;\n};\n\n/**\n * Modifies the location from which rectangles are drawn by changing the way\n * in which parameters given to rect() are interpreted.\n * <br><br>\n * The default mode is rectMode(CORNER), which interprets the first two\n * parameters of rect() as the upper-left corner of the shape, while the\n * third and fourth parameters are its width and height.\n * <br><br>\n * rectMode(CORNERS) interprets the first two parameters of rect() as the\n * location of one corner, and the third and fourth parameters as the\n * location of the opposite corner.\n * <br><br>\n * rectMode(CENTER) interprets the first two parameters of rect() as the\n * shape's center point, while the third and fourth parameters are its\n * width and height.\n * <br><br>\n * rectMode(RADIUS) also uses the first two parameters of rect() as the\n * shape's center point, but uses the third and fourth parameters to specify\n * half of the shapes's width and height.\n * <br><br>\n * The parameter must be written in ALL CAPS because Javascript is a\n * case-sensitive language.\n *\n * @method rectMode\n * @param  {Constant} mode either CORNER, CORNERS, CENTER, or RADIUS\n * @return {p5}                   the p5 object\n * @example\n * <div>\n * <code>\n * rectMode(CORNER);  // Default rectMode is CORNER\n * fill(255);  // Set fill to white\n * rect(25, 25, 50, 50);  // Draw white rect using CORNER mode\n *\n * rectMode(CORNERS);  // Set rectMode to CORNERS\n * fill(100);  // Set fill to gray\n * rect(25, 25, 50, 50);  // Draw gray rect using CORNERS mode\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * rectMode(RADIUS);  // Set rectMode to RADIUS\n * fill(255);  // Set fill to white\n * rect(50, 50, 30, 30);  // Draw white rect using RADIUS mode\n *\n * rectMode(CENTER);  // Set rectMode to CENTER\n * fill(100);  // Set fill to gray\n * rect(50, 50, 30, 30);  // Draw gray rect using CENTER mode\n * </code>\n * </div>\n *\n * @alt\n * 50x50 white rect at center and 25x25 grey rect in the top left of the other.\n * 50x50 white rect at center and 25x25 grey rect in the center of the other.\n *\n */\np5.prototype.rectMode = function(m) {\n  if (m === constants.CORNER ||\n    m === constants.CORNERS ||\n    m === constants.RADIUS ||\n    m === constants.CENTER) {\n    this._renderer._rectMode = m;\n  }\n  return this;\n};\n\n/**\n * Draws all geometry with smooth (anti-aliased) edges. smooth() will also\n * improve image quality of resized images. Note that smooth() is active by\n * default; noSmooth() can be used to disable smoothing of geometry,\n * images, and fonts.\n *\n * @method smooth\n * @return {p5} the p5 object\n * @example\n * <div>\n * <code>\n * background(0);\n * noStroke();\n * smooth();\n * ellipse(30, 48, 36, 36);\n * noSmooth();\n * ellipse(70, 48, 36, 36);\n * </code>\n * </div>\n *\n * @alt\n * 2 pixelated 36x36 white ellipses one left one right of center. On black.\n *\n */\np5.prototype.smooth = function() {\n  this._renderer.smooth();\n  return this;\n};\n\n/**\n * Sets the style for rendering line endings. These ends are either squared,\n * extended, or rounded, each of which specified with the corresponding\n * parameters: SQUARE, PROJECT, and ROUND. The default cap is ROUND.\n *\n * @method strokeCap\n * @param  {Number/Constant} cap either SQUARE, PROJECT, or ROUND\n * @return {p5}                  the p5 object\n * @example\n * <div>\n * <code>\n * strokeWeight(12.0);\n * strokeCap(ROUND);\n * line(20, 30, 80, 30);\n * strokeCap(SQUARE);\n * line(20, 50, 80, 50);\n * strokeCap(PROJECT);\n * line(20, 70, 80, 70);\n * </code>\n * </div>\n *\n * @alt\n * 3 lines. Top line: rounded ends, mid: squared, bottom:longer squared ends.\n *\n */\np5.prototype.strokeCap = function(cap) {\n  if (cap === constants.ROUND ||\n    cap === constants.SQUARE ||\n    cap === constants.PROJECT) {\n    this._renderer.strokeCap(cap);\n  }\n  return this;\n};\n\n/**\n * Sets the style of the joints which connect line segments. These joints\n * are either mitered, beveled, or rounded and specified with the\n * corresponding parameters MITER, BEVEL, and ROUND. The default joint is\n * MITER.\n *\n * @method strokeJoin\n * @param  {Number/Constant} join either MITER, BEVEL, ROUND\n * @return {p5}                   the p5 object\n * @example\n * <div>\n * <code>\n * noFill();\n * strokeWeight(10.0);\n * strokeJoin(MITER);\n * beginShape();\n * vertex(35, 20);\n * vertex(65, 50);\n * vertex(35, 80);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noFill();\n * strokeWeight(10.0);\n * strokeJoin(BEVEL);\n * beginShape();\n * vertex(35, 20);\n * vertex(65, 50);\n * vertex(35, 80);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noFill();\n * strokeWeight(10.0);\n * strokeJoin(ROUND);\n * beginShape();\n * vertex(35, 20);\n * vertex(65, 50);\n * vertex(35, 80);\n * endShape();\n * </code>\n * </div>\n *\n * @alt\n * Right-facing arrowhead shape with pointed tip in center of canvas.\n * Right-facing arrowhead shape with flat tip in center of canvas.\n * Right-facing arrowhead shape with rounded tip in center of canvas.\n *\n */\np5.prototype.strokeJoin = function(join) {\n  if (join === constants.ROUND ||\n    join === constants.BEVEL ||\n    join === constants.MITER) {\n    this._renderer.strokeJoin(join);\n  }\n  return this;\n};\n\n/**\n * Sets the width of the stroke used for lines, points, and the border\n * around shapes. All widths are set in units of pixels.\n *\n * @method strokeWeight\n * @param  {Number} weight the weight (in pixels) of the stroke\n * @return {p5}            the p5 object\n * @example\n * <div>\n * <code>\n * strokeWeight(1);  // Default\n * line(20, 20, 80, 20);\n * strokeWeight(4);  // Thicker\n * line(20, 40, 80, 40);\n * strokeWeight(10);  // Beastly\n * line(20, 70, 80, 70);\n * </code>\n * </div>\n *\n * @alt\n * 3 horizontal black lines. Top line: thin, mid: medium, bottom:thick.\n *\n */\np5.prototype.strokeWeight = function(w) {\n  this._renderer.strokeWeight(w);\n  return this;\n};\n\nmodule.exports = p5;\n\n},{\"./constants\":36,\"./core\":37}],35:[function(_dereq_,module,exports){\n/**\n * @requires constants\n */\n\nvar constants = _dereq_('./constants');\n\nmodule.exports = {\n\n  modeAdjust: function(a, b, c, d, mode) {\n    if (mode === constants.CORNER) {\n      return { x: a, y: b, w: c, h: d };\n    } else if (mode === constants.CORNERS) {\n      return { x: a, y: b, w: c-a, h: d-b };\n    } else if (mode === constants.RADIUS) {\n      return { x: a-c, y: b-d, w: 2*c, h: 2*d };\n    } else if (mode === constants.CENTER) {\n      return { x: a-c*0.5, y: b-d*0.5, w: c, h: d };\n    }\n  },\n\n  arcModeAdjust: function(a, b, c, d, mode) {\n    if (mode === constants.CORNER) {\n      return { x: a+c*0.5, y: b+d*0.5, w: c, h: d };\n    } else if (mode === constants.CORNERS) {\n      return { x: a, y: b, w: c+a, h: d+b };\n    } else if (mode === constants.RADIUS) {\n      return { x: a, y: b, w: 2*c, h: 2*d };\n    } else if (mode === constants.CENTER) {\n      return { x: a, y: b, w: c, h: d };\n    }\n  }\n\n};\n\n\n},{\"./constants\":36}],36:[function(_dereq_,module,exports){\n/**\n * @module Constants\n * @submodule Constants\n * @for p5\n */\n\nvar PI = Math.PI;\n\nmodule.exports = {\n\n  // GRAPHICS RENDERER\n  P2D: 'p2d',\n  WEBGL: 'webgl',\n\n  // ENVIRONMENT\n  ARROW: 'default',\n  CROSS: 'crosshair',\n  HAND: 'pointer',\n  MOVE: 'move',\n  TEXT: 'text',\n  WAIT: 'wait',\n\n  // TRIGONOMETRY\n\n  /**\n   * HALF_PI is a mathematical constant with the value\n   * 1.57079632679489661923. It is half the ratio of the\n   * circumference of a circle to its diameter. It is useful in\n   * combination with the trigonometric functions sin() and cos().\n   *\n   * @property HALF_PI\n   *\n   * @example\n   * <div><code>\n   * arc(50, 50, 80, 80, 0, HALF_PI);\n   * </code></div>\n   *\n   * @alt\n   * 80x80 white quarter-circle with curve toward bottom right of canvas.\n   *\n   */\n  HALF_PI: PI / 2,\n  /**\n   * PI is a mathematical constant with the value\n   * 3.14159265358979323846. It is the ratio of the circumference\n   * of a circle to its diameter. It is useful in combination with\n   * the trigonometric functions sin() and cos().\n   *\n   * @property PI\n   *\n   * @example\n   * <div><code>\n   * arc(50, 50, 80, 80, 0, PI);\n   * </code></div>\n   *\n   * @alt\n   * white half-circle with curve toward bottom of canvas.\n   *\n   */\n  PI: PI,\n  /**\n   * QUARTER_PI is a mathematical constant with the value 0.7853982.\n   * It is one quarter the ratio of the circumference of a circle to\n   * its diameter. It is useful in combination with the trigonometric\n   * functions sin() and cos().\n   *\n   * @property QUARTER_PI\n   *\n   * @example\n   * <div><code>\n   * arc(50, 50, 80, 80, 0, QUARTER_PI);\n   * </code></div>\n   *\n   * @alt\n   * white eighth-circle rotated about 40 degrees with curve bottom right canvas.\n   *\n   */\n  QUARTER_PI: PI / 4,\n  /**\n   * TAU is an alias for TWO_PI, a mathematical constant with the\n   * value 6.28318530717958647693. It is twice the ratio of the\n   * circumference of a circle to its diameter. It is useful in\n   * combination with the trigonometric functions sin() and cos().\n   *\n   * @property TAU\n   *\n   * @example\n   * <div><code>\n   * arc(50, 50, 80, 80, 0, TAU);\n   * </code></div>\n   *\n   * @alt\n   * 80x80 white ellipse shape in center of canvas.\n   *\n   */\n  TAU: PI * 2,\n  /**\n   * TWO_PI is a mathematical constant with the value\n   * 6.28318530717958647693. It is twice the ratio of the\n   * circumference of a circle to its diameter. It is useful in\n   * combination with the trigonometric functions sin() and cos().\n   *\n   * @property TWO_PI\n   *\n   * @example\n   * <div><code>\n   * arc(50, 50, 80, 80, 0, TWO_PI);\n   * </code></div>\n   *\n   * @alt\n   * 80x80 white ellipse shape in center of canvas.\n   *\n   */\n  TWO_PI: PI * 2,\n  DEGREES: 'degrees',\n  RADIANS: 'radians',\n\n  // SHAPE\n  CORNER: 'corner',\n  CORNERS: 'corners',\n  RADIUS: 'radius',\n  RIGHT: 'right',\n  LEFT: 'left',\n  CENTER: 'center',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n  BASELINE: 'alphabetic',\n  POINTS: 0x0000,\n  LINES: 0x0001,\n  LINE_STRIP: 0x0003,\n  LINE_LOOP: 0x0002,\n  TRIANGLES: 0x0004,\n  TRIANGLE_FAN: 0x0006,\n  TRIANGLE_STRIP: 0x0005,\n  QUADS: 'quads',\n  QUAD_STRIP: 'quad_strip',\n  CLOSE: 'close',\n  OPEN: 'open',\n  CHORD: 'chord',\n  PIE: 'pie',\n  PROJECT: 'square', // PEND: careful this is counterintuitive\n  SQUARE: 'butt',\n  ROUND: 'round',\n  BEVEL: 'bevel',\n  MITER: 'miter',\n\n  // COLOR\n  RGB: 'rgb',\n  HSB: 'hsb',\n  HSL: 'hsl',\n\n  // DOM EXTENSION\n  AUTO: 'auto',\n\n  // INPUT\n  ALT: 18,\n  BACKSPACE: 8,\n  CONTROL: 17,\n  DELETE: 46,\n  DOWN_ARROW: 40,\n  ENTER: 13,\n  ESCAPE: 27,\n  LEFT_ARROW: 37,\n  OPTION: 18,\n  RETURN: 13,\n  RIGHT_ARROW: 39,\n  SHIFT: 16,\n  TAB: 9,\n  UP_ARROW: 38,\n\n  // RENDERING\n  BLEND: 'normal',\n  ADD: 'lighter',\n  //ADD: 'add', //\n  //SUBTRACT: 'subtract', //\n  DARKEST: 'darken',\n  LIGHTEST: 'lighten',\n  DIFFERENCE: 'difference',\n  EXCLUSION: 'exclusion',\n  MULTIPLY: 'multiply',\n  SCREEN: 'screen',\n  REPLACE: 'source-over',\n  OVERLAY: 'overlay',\n  HARD_LIGHT: 'hard-light',\n  SOFT_LIGHT: 'soft-light',\n  DODGE: 'color-dodge',\n  BURN: 'color-burn',\n\n  // FILTERS\n  THRESHOLD: 'threshold',\n  GRAY: 'gray',\n  OPAQUE: 'opaque',\n  INVERT: 'invert',\n  POSTERIZE: 'posterize',\n  DILATE: 'dilate',\n  ERODE: 'erode',\n  BLUR: 'blur',\n\n  // TYPOGRAPHY\n  NORMAL: 'normal',\n  ITALIC: 'italic',\n  BOLD: 'bold',\n\n  // TYPOGRAPHY-INTERNAL\n  _DEFAULT_TEXT_FILL: '#000000',\n  _DEFAULT_LEADMULT: 1.25,\n  _CTX_MIDDLE: 'middle',\n\n  // VERTICES\n  LINEAR: 'linear',\n  QUADRATIC: 'quadratic',\n  BEZIER: 'bezier',\n  CURVE: 'curve',\n\n  // DEFAULTS\n  _DEFAULT_STROKE: '#000000',\n  _DEFAULT_FILL: '#FFFFFF'\n\n};\n\n},{}],37:[function(_dereq_,module,exports){\n/**\n * @module Structure\n * @submodule Structure\n * @for p5\n * @requires constants\n */\n\n'use strict';\n\n_dereq_('./shim');\n\n// Core needs the PVariables object\nvar constants = _dereq_('./constants');\n\n/**\n * This is the p5 instance constructor.\n *\n * A p5 instance holds all the properties and methods related to\n * a p5 sketch.  It expects an incoming sketch closure and it can also\n * take an optional node parameter for attaching the generated p5 canvas\n * to a node.  The sketch closure takes the newly created p5 instance as\n * its sole argument and may optionally set preload(), setup(), and/or\n * draw() properties on it for running a sketch.\n *\n * A p5 sketch can run in \"global\" or \"instance\" mode:\n * \"global\"   - all properties and methods are attached to the window\n * \"instance\" - all properties and methods are bound to this p5 object\n *\n * @param  {Function}    sketch a closure that can set optional preload(),\n *                              setup(), and/or draw() properties on the\n *                              given p5 instance\n * @param  {HTMLElement|boolean} [node] element to attach canvas to, if a\n *                                      boolean is passed in use it as sync\n * @param  {boolean}     [sync] start synchronously (optional)\n * @return {p5}                 a p5 instance\n */\nvar p5 = function(sketch, node, sync) {\n\n  if (arguments.length === 2 && typeof node === 'boolean') {\n    sync = node;\n    node = undefined;\n  }\n\n  //////////////////////////////////////////////\n  // PUBLIC p5 PROPERTIES AND METHODS\n  //////////////////////////////////////////////\n\n\n  /**\n   * Called directly before setup(), the preload() function is used to handle\n   * asynchronous loading of external files. If a preload function is\n   * defined, setup() will wait until any load calls within have finished.\n   * Nothing besides load calls should be inside preload (loadImage,\n   * loadJSON, loadFont, loadStrings, etc).\n   *\n   * @method preload\n   * @example\n   * <div><code>\n   * var img;\n   * var c;\n   * function preload() {  // preload() runs once\n   *   img = loadImage('assets/laDefense.jpg');\n   * }\n   *\n   * function setup() {  // setup() waits until preload() is done\n   *   img.loadPixels();\n   *   // get color of middle pixel\n   *   c = img.get(img.width/2, img.height/2);\n   * }\n   *\n   * function draw() {\n   *   background(c);\n   *   image(img, 25, 25, 50, 50);\n   * }\n   * </code></div>\n   *\n   * @alt\n   * nothing displayed\n   *\n   */\n\n  /**\n   * The setup() function is called once when the program starts. It's used to\n   * define initial environment properties such as screen size and background\n   * color and to load media such as images and fonts as the program starts.\n   * There can only be one setup() function for each program and it shouldn't\n   * be called again after its initial execution.\n   * <br><br>\n   * Note: Variables declared within setup() are not accessible within other\n   * functions, including draw().\n   *\n   * @method setup\n   * @example\n   * <div><code>\n   * var a = 0;\n   *\n   * function setup() {\n   *   background(0);\n   *   noStroke();\n   *   fill(102);\n   * }\n   *\n   * function draw() {\n   *   rect(a++%width, 10, 2, 80);\n   * }\n   * </code></div>\n   *\n   * @alt\n   * nothing displayed\n   *\n   */\n\n  /**\n   * Called directly after setup(), the draw() function continuously executes\n   * the lines of code contained inside its block until the program is stopped\n   * or noLoop() is called. Note if noLoop() is called in setup(), draw() will\n   * still be executed once before stopping. draw() is called automatically and\n   * should never be called explicitly.\n   * <br><br>\n   * It should always be controlled with noLoop(), redraw() and loop(). After\n   * noLoop() stops the code in draw() from executing, redraw() causes the\n   * code inside draw() to execute once, and loop() will cause the code\n   * inside draw() to resume executing continuously.\n   * <br><br>\n   * The number of times draw() executes in each second may be controlled with\n   * the frameRate() function.\n   * <br><br>\n   * There can only be one draw() function for each sketch, and draw() must\n   * exist if you want the code to run continuously, or to process events such\n   * as mousePressed(). Sometimes, you might have an empty call to draw() in\n   * your program, as shown in the above example.\n   * <br><br>\n   * It is important to note that the drawing coordinate system will be reset\n   * at the beginning of each draw() call. If any transformations are performed\n   * within draw() (ex: scale, rotate, translate, their effects will be\n   * undone at the beginning of draw(), so transformations will not accumulate\n   * over time. On the other hand, styling applied (ex: fill, stroke, etc) will\n   * remain in effect.\n   *\n   * @method draw\n   * @example\n   * <div><code>\n   * var yPos = 0;\n   * function setup() {  // setup() runs once\n   *   frameRate(30);\n   * }\n   * function draw() {  // draw() loops forever, until stopped\n   *   background(204);\n   *   yPos = yPos - 1;\n   *   if (yPos < 0) {\n   *     yPos = height;\n   *   }\n   *   line(0, yPos, width, yPos);\n   * }\n   * </code></div>\n   *\n   * @alt\n   * nothing displayed\n   *\n   */\n\n\n  //////////////////////////////////////////////\n  // PRIVATE p5 PROPERTIES AND METHODS\n  //////////////////////////////////////////////\n\n  this._setupDone = false;\n  // for handling hidpi\n  this._pixelDensity = Math.ceil(window.devicePixelRatio) || 1;\n  this._userNode = node;\n  this._curElement = null;\n  this._elements = [];\n  this._requestAnimId = 0;\n  this._preloadCount = 0;\n  this._isGlobal = false;\n  this._loop = true;\n  this._styles = [];\n  this._defaultCanvasSize = {\n    width: 100,\n    height: 100\n  };\n  this._events = { // keep track of user-events for unregistering later\n    'mousemove': null,\n    'mousedown': null,\n    'mouseup': null,\n    'dragend': null,\n    'dragover': null,\n    'click': null,\n    'mouseover': null,\n    'mouseout': null,\n    'keydown': null,\n    'keyup': null,\n    'keypress': null,\n    'touchstart': null,\n    'touchmove': null,\n    'touchend': null,\n    'resize': null,\n    'blur': null\n  };\n\n  this._events.wheel = null;\n  this._loadingScreenId = 'p5_loading';\n\n  if (window.DeviceOrientationEvent) {\n    this._events.deviceorientation = null;\n  }\n  if (window.DeviceMotionEvent && !window._isNodeWebkit) {\n    this._events.devicemotion = null;\n  }\n\n  this._start = function () {\n    // Find node if id given\n    if (this._userNode) {\n      if (typeof this._userNode === 'string') {\n        this._userNode = document.getElementById(this._userNode);\n      }\n    }\n\n    // Always create a default canvas.\n    // Later on if the user calls createCanvas, this default one\n    // will be replaced\n    this.createCanvas(\n      this._defaultCanvasSize.width,\n      this._defaultCanvasSize.height,\n      'p2d',\n      true\n    );\n\n    var userPreload = this.preload || window.preload; // look for \"preload\"\n    if (userPreload) {\n\n      // Setup loading screen\n      // Set loading scfeen into dom if not present\n      // Otherwise displays and removes user provided loading screen\n      var loadingScreen = document.getElementById(this._loadingScreenId);\n      if(!loadingScreen){\n        loadingScreen = document.createElement('div');\n        loadingScreen.innerHTML = 'Loading...';\n        loadingScreen.style.position = 'absolute';\n        loadingScreen.id = this._loadingScreenId;\n        var node = this._userNode || document.body;\n        node.appendChild(loadingScreen);\n      }\n      // var methods = this._preloadMethods;\n      for (var method in this._preloadMethods){\n        // default to p5 if no object defined\n        this._preloadMethods[method] = this._preloadMethods[method] || p5;\n        var obj = this._preloadMethods[method];\n        //it's p5, check if it's global or instance\n        if (obj === p5.prototype || obj === p5){\n          obj = this._isGlobal ? window : this;\n        }\n        this._registeredPreloadMethods[method] = obj[method];\n        obj[method] = this._wrapPreload(obj, method);\n      }\n\n      userPreload();\n      this._runIfPreloadsAreDone();\n    } else {\n      this._setup();\n      this._runFrames();\n      this._draw();\n    }\n  }.bind(this);\n\n  this._runIfPreloadsAreDone = function(){\n    var context = this._isGlobal ? window : this;\n    if (context._preloadCount === 0) {\n      var loadingScreen = document.getElementById(context._loadingScreenId);\n      if (loadingScreen) {\n        loadingScreen.parentNode.removeChild(loadingScreen);\n      }\n      context._setup();\n      context._runFrames();\n      context._draw();\n    }\n  };\n\n  this._decrementPreload = function(){\n    var context = this._isGlobal ? window : this;\n    context._setProperty('_preloadCount', context._preloadCount - 1);\n    context._runIfPreloadsAreDone();\n  };\n\n  this._wrapPreload = function(obj, fnName){\n    return function(){\n      //increment counter\n      this._incrementPreload();\n      //call original function\n      var args = new Array(arguments.length);\n      for (var i = 0; i < args.length; ++i) {\n        args[i] = arguments[i];\n      }\n      args.push(this._decrementPreload.bind(this));\n      return this._registeredPreloadMethods[fnName].apply(obj, args);\n    }.bind(this);\n  };\n\n  this._incrementPreload = function(){\n    var context = this._isGlobal ? window : this;\n    context._setProperty('_preloadCount', context._preloadCount + 1);\n  };\n\n  this._setup = function() {\n\n    // return preload functions to their normal vals if switched by preload\n    var context = this._isGlobal ? window : this;\n    if (typeof context.preload === 'function') {\n      for (var f in this._preloadMethods) {\n        context[f] = this._preloadMethods[f][f];\n        if (context[f] && this) {\n          context[f] = context[f].bind(this);\n        }\n      }\n    }\n\n    // Short-circuit on this, in case someone used the library in \"global\"\n    // mode earlier\n    if (typeof context.setup === 'function') {\n      context.setup();\n    }\n\n    // unhide any hidden canvases that were created\n    var canvases = document.getElementsByTagName('canvas');\n    for (var i = 0; i < canvases.length; i++) {\n      var k = canvases[i];\n      if (k.dataset.hidden === 'true') {\n        k.style.visibility = '';\n        delete(k.dataset.hidden);\n      }\n    }\n    this._setupDone = true;\n\n  }.bind(this);\n\n  this._draw = function () {\n    var now = window.performance.now();\n    var time_since_last = now - this._lastFrameTime;\n    var target_time_between_frames = 1000 / this._targetFrameRate;\n\n    // only draw if we really need to; don't overextend the browser.\n    // draw if we're within 5ms of when our next frame should paint\n    // (this will prevent us from giving up opportunities to draw\n    // again when it's really about time for us to do so). fixes an\n    // issue where the frameRate is too low if our refresh loop isn't\n    // in sync with the browser. note that we have to draw once even\n    // if looping is off, so we bypass the time delay if that\n    // is the case.\n    var epsilon = 5;\n    if (!this._loop ||\n        time_since_last >= target_time_between_frames - epsilon) {\n\n      //mandatory update values(matrixs and stack)\n\n      this._setProperty('frameCount', this.frameCount + 1);\n      this.redraw();\n      this._updateMouseCoords();\n      this._updateTouchCoords();\n      this._frameRate = 1000.0/(now - this._lastFrameTime);\n      this._lastFrameTime = now;\n    }\n\n    // get notified the next time the browser gives us\n    // an opportunity to draw.\n    if (this._loop) {\n      this._requestAnimId = window.requestAnimationFrame(this._draw);\n    }\n  }.bind(this);\n\n  this._runFrames = function() {\n    if (this._updateInterval) {\n      clearInterval(this._updateInterval);\n    }\n  }.bind(this);\n\n  this._setProperty = function(prop, value) {\n    this[prop] = value;\n    if (this._isGlobal) {\n      window[prop] = value;\n    }\n  }.bind(this);\n\n  /**\n   * Removes the entire p5 sketch. This will remove the canvas and any\n   * elements created by p5.js. It will also stop the draw loop and unbind\n   * any properties or methods from the window global scope. It will\n   * leave a variable p5 in case you wanted to create a new p5 sketch.\n   * If you like, you can set p5 = null to erase it.\n   * @method remove\n   * @example\n   * <div class='norender'><code>\n   * function draw() {\n   *   ellipse(50, 50, 10, 10);\n   * }\n   *\n   * function mousePressed() {\n   *   remove(); // remove whole sketch on mouse press\n   * }\n   * </code></div>\n   *\n   * @alt\n   * nothing displayed\n   *\n   */\n  this.remove = function() {\n    if (this._curElement) {\n\n      // stop draw\n      this._loop = false;\n      if (this._requestAnimId) {\n        window.cancelAnimationFrame(this._requestAnimId);\n      }\n\n      // unregister events sketch-wide\n      for (var ev in this._events) {\n        window.removeEventListener(ev, this._events[ev]);\n      }\n\n      // remove DOM elements created by p5, and listeners\n      for (var i=0; i<this._elements.length; i++) {\n        var e = this._elements[i];\n        if (e.elt.parentNode) {\n          e.elt.parentNode.removeChild(e.elt);\n        }\n        for (var elt_ev in e._events) {\n          e.elt.removeEventListener(elt_ev, e._events[elt_ev]);\n        }\n      }\n\n      // call any registered remove functions\n      var self = this;\n      this._registeredMethods.remove.forEach(function (f) {\n        if (typeof(f) !== 'undefined') {\n          f.call(self);\n        }\n      });\n\n      // remove window bound properties and methods\n      if (this._isGlobal) {\n        for (var p in p5.prototype) {\n          try {\n            delete window[p];\n          } catch (x) {\n            window[p] = undefined;\n          }\n        }\n        for (var p2 in this) {\n          if (this.hasOwnProperty(p2)) {\n            try {\n              delete window[p2];\n            } catch (x) {\n              window[p2] = undefined;\n            }\n          }\n        }\n      }\n    }\n    // window.p5 = undefined;\n  }.bind(this);\n\n  // call any registered init functions\n  this._registeredMethods.init.forEach(function (f) {\n    if (typeof(f) !== 'undefined') {\n      f.call(this);\n    }\n  }, this);\n\n  var friendlyBindGlobal = this._createFriendlyGlobalFunctionBinder();\n\n  // If the user has created a global setup or draw function,\n  // assume \"global\" mode and make everything global (i.e. on the window)\n  if (!sketch) {\n    this._isGlobal = true;\n    p5.instance = this;\n    // Loop through methods on the prototype and attach them to the window\n    for (var p in p5.prototype) {\n      if(typeof p5.prototype[p] === 'function') {\n        var ev = p.substring(2);\n        if (!this._events.hasOwnProperty(ev)) {\n          if (Math.hasOwnProperty(p) && (Math[p] === p5.prototype[p])) {\n            // Multiple p5 methods are just native Math functions. These can be\n            // called without any binding.\n            friendlyBindGlobal(p, p5.prototype[p]);\n          } else {\n            friendlyBindGlobal(p, p5.prototype[p].bind(this));\n          }\n        }\n      } else {\n        friendlyBindGlobal(p, p5.prototype[p]);\n      }\n    }\n    // Attach its properties to the window\n    for (var p2 in this) {\n      if (this.hasOwnProperty(p2)) {\n        friendlyBindGlobal(p2, this[p2]);\n      }\n    }\n\n  } else {\n    // Else, the user has passed in a sketch closure that may set\n    // user-provided 'setup', 'draw', etc. properties on this instance of p5\n    sketch(this);\n  }\n\n  // Bind events to window (not using container div bc key events don't work)\n\n  for (var e in this._events) {\n    var f = this['_on'+e];\n    if (f) {\n      var m = f.bind(this);\n      window.addEventListener(e, m);\n      this._events[e] = m;\n    }\n  }\n\n  var focusHandler = function() {\n    this._setProperty('focused', true);\n  }.bind(this);\n  var blurHandler = function() {\n    this._setProperty('focused', false);\n  }.bind(this);\n  window.addEventListener('focus', focusHandler);\n  window.addEventListener('blur', blurHandler);\n  this.registerMethod('remove', function() {\n    window.removeEventListener('focus', focusHandler);\n    window.removeEventListener('blur', blurHandler);\n  });\n\n  if (sync) {\n    this._start();\n  } else {\n    if (document.readyState === 'complete') {\n      this._start();\n    } else {\n      window.addEventListener('load', this._start.bind(this), false);\n    }\n  }\n};\n\n// This is a pointer to our global mode p5 instance, if we're in\n// global mode.\np5.instance = null;\n\n// Allows for the friendly error system to be turned off when creating a sketch,\n// which can give a significant boost to performance when needed.\np5.disableFriendlyErrors = false;\n\n// attach constants to p5 prototype\nfor (var k in constants) {\n  p5.prototype[k] = constants[k];\n}\n\n// functions that cause preload to wait\n// more can be added by using registerPreloadMethod(func)\np5.prototype._preloadMethods = {\n  loadJSON: p5.prototype,\n  loadImage: p5.prototype,\n  loadStrings: p5.prototype,\n  loadXML: p5.prototype,\n  loadShape: p5.prototype,\n  loadTable: p5.prototype,\n  loadFont: p5.prototype,\n  loadModel: p5.prototype\n};\n\np5.prototype._registeredMethods = { init: [], pre: [], post: [], remove: [] };\n\np5.prototype._registeredPreloadMethods = {};\n\np5.prototype.registerPreloadMethod = function(fnString, obj) {\n  // obj = obj || p5.prototype;\n  if (!p5.prototype._preloadMethods.hasOwnProperty(fnString)) {\n    p5.prototype._preloadMethods[fnString] = obj;\n  }\n};\n\np5.prototype.registerMethod = function(name, m) {\n  if (!p5.prototype._registeredMethods.hasOwnProperty(name)) {\n    p5.prototype._registeredMethods[name] = [];\n  }\n  p5.prototype._registeredMethods[name].push(m);\n};\n\np5.prototype._createFriendlyGlobalFunctionBinder = function(options) {\n  options = options || {};\n\n  var globalObject = options.globalObject || window;\n  var log = options.log || console.log.bind(console);\n  var propsToForciblyOverwrite = {\n    // p5.print actually always overwrites an existing global function,\n    // albeit one that is very unlikely to be used:\n    //\n    //   https://developer.mozilla.org/en-US/docs/Web/API/Window/print\n    'print': true\n  };\n\n  return function(prop, value) {\n    if (!p5.disableFriendlyErrors &&\n        typeof(IS_MINIFIED) === 'undefined' &&\n        typeof(value) === 'function' &&\n        !(prop in p5.prototype._preloadMethods)) {\n      try {\n        // Because p5 has so many common function names, it's likely\n        // that users may accidentally overwrite global p5 functions with\n        // their own variables. Let's allow this but log a warning to\n        // help users who may be doing this unintentionally.\n        //\n        // For more information, see:\n        //\n        //   https://github.com/processing/p5.js/issues/1317\n\n        if (prop in globalObject && !(prop in propsToForciblyOverwrite)) {\n          throw new Error('global \"' + prop + '\" already exists');\n        }\n\n        // It's possible that this might throw an error because there\n        // are a lot of edge-cases in which `Object.defineProperty` might\n        // not succeed; since this functionality is only intended to\n        // help beginners anyways, we'll just catch such an exception\n        // if it occurs, and fall back to legacy behavior.\n        Object.defineProperty(globalObject, prop, {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return value;\n          },\n          set: function(newValue) {\n            Object.defineProperty(globalObject, prop, {\n              configurable: true,\n              enumerable: true,\n              value: newValue,\n              writable: true\n            });\n            log(\n              'You just changed the value of \"' + prop + '\", which was ' +\n              'a p5 function. This could cause problems later if you\\'re ' +\n              'not careful.'\n            );\n          }\n        });\n      } catch (e) {\n        log(\n          'p5 had problems creating the global function \"' + prop + '\", ' +\n          'possibly because your code is already using that name as ' +\n          'a variable. You may want to rename your variable to something ' +\n          'else.'\n        );\n        globalObject[prop] = value;\n      }\n    } else {\n      globalObject[prop] = value;\n    }\n  };\n};\n\nmodule.exports = p5;\n\n},{\"./constants\":36,\"./shim\":46}],38:[function(_dereq_,module,exports){\n/**\n * @module Shape\n * @submodule Curves\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('./core');\n\n_dereq_('./error_helpers');\n\nvar bezierDetail = 20;\nvar curveDetail = 20;\n\n/**\n * Draws a cubic Bezier curve on the screen. These curves are defined by a\n * series of anchor and control points. The first two parameters specify\n * the first anchor point and the last two parameters specify the other\n * anchor point, which become the first and last points on the curve. The\n * middle parameters specify the two control points which define the shape\n * of the curve. Approximately speaking, control points \"pull\" the curve\n * towards them.<br /><br />Bezier curves were developed by French\n * automotive engineer Pierre Bezier, and are commonly used in computer\n * graphics to define gently sloping curves. See also curve().\n *\n * @method bezier\n * @param  {Number} x1 x-coordinate for the first anchor point\n * @param  {Number} y1 y-coordinate for the first anchor point\n * @param  {Number} x2 x-coordinate for the first control point\n * @param  {Number} y2 y-coordinate for the first control point\n * @param  {Number} x3 x-coordinate for the second control point\n * @param  {Number} y3 y-coordinate for the second control point\n * @param  {Number} x4 x-coordinate for the second anchor point\n * @param  {Number} y4 y-coordinate for the second anchor point\n * @return {Object}    the p5 object\n * @example\n * <div>\n * <code>\n * noFill();\n * stroke(255, 102, 0);\n * line(85, 20, 10, 10);\n * line(90, 90, 15, 80);\n * stroke(0, 0, 0);\n * bezier(85, 20, 10, 10, 90, 90, 15, 80);\n * </code>\n * </div>\n * @alt\n * stretched black s-shape in center with orange lines extending from end points.\n * stretched black s-shape with 10 5x5 white ellipses along the shape.\n * stretched black s-shape with 7 5x5 ellipses and orange lines along the shape.\n * stretched black s-shape with 17 small orange lines extending from under shape.\n * horseshoe shape with orange ends facing left and black curved center.\n * horseshoe shape with orange ends facing left and black curved center.\n * Line shaped like right-facing arrow,points move with mouse-x and warp shape.\n * horizontal line that hooks downward on the right and 13 5x5 ellipses along it.\n * right curving line mid-right of canvas with 7 short lines radiating from it.\n */\n/**\n * @method bezier\n * @param  {Number} z1 z-coordinate for the first anchor point\n * @param  {Number} z2 z-coordinate for the first control point\n * @param  {Number} z3 z-coordinate for the first anchor point\n * @param  {Number} z4 z-coordinate for the first control point\n * @return {p5.Renderer3D}   [description]\n * @example\n * <div>\n * <code>\n *background(0, 0, 0);\n *noFill();\n *stroke(255);\n *bezier(250,250,0, 100,100,0, 100,0,0, 0,100,0);\n * </code>\n * </div>\n*/\np5.prototype.bezier = function() {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  if(this._renderer.isP3D){\n    this._validateParameters(\n      'bezier',\n      args,\n      ['Number', 'Number', 'Number',\n      'Number', 'Number', 'Number',\n      'Number', 'Number', 'Number',\n      'Number', 'Number', 'Number'\n      ]\n    );\n  } else{\n    this._validateParameters(\n      'bezier',\n      args,\n      [ 'Number', 'Number', 'Number', 'Number',\n        'Number', 'Number', 'Number', 'Number' ]\n    );\n  }\n  if (!this._renderer._doStroke) {\n    return this;\n  }\n  if (this._renderer.isP3D){\n    args.push(bezierDetail);//adding value of bezier detail to the args array\n    this._renderer.bezier(args);\n  } else{\n    this._renderer.bezier(args[0],args[1],\n      args[2],args[3],\n      args[4],args[5],\n      args[6],args[7]);\n  }\n\n  return this;\n};\n\n/**\n * Sets the resolution at which Beziers display.\n *\n * The default value is 20.\n *\n * @param {Number} detail resolution of the curves\n * @return {Object} the p5 object\n * @example\n * <div>\n * <code>\n * background(204);\n * bezierDetail(50);\n * bezier(85, 20, 10, 10, 90, 90, 15, 80);\n * </code>\n * </div>\n *\n * @alt\n * stretched black s-shape with 7 5x5 ellipses and orange lines along the shape.\n *\n */\np5.prototype.bezierDetail = function(d) {\n  bezierDetail = d;\n  return this;\n};\n\n/**\n * Evaluates the Bezier at position t for points a, b, c, d.\n * The parameters a and d are the first and last points\n * on the curve, and b and c are the control points.\n * The final parameter t varies between 0 and 1.\n * This can be done once with the x coordinates and a second time\n * with the y coordinates to get the location of a bezier curve at t.\n *\n * @method bezierPoint\n * @param {Number} a coordinate of first point on the curve\n * @param {Number} b coordinate of first control point\n * @param {Number} c coordinate of second control point\n * @param {Number} d coordinate of second point on the curve\n * @param {Number} t value between 0 and 1\n * @return {Number} the value of the Bezier at position t\n * @example\n * <div>\n * <code>\n * noFill();\n * x1 = 85, x2 = 10, x3 = 90, x4 = 15;\n * y1 = 20, y2 = 10, y3 = 90, y4 = 80;\n * bezier(x1, y1, x2, y2, x3, y3, x4, y4);\n * fill(255);\n * steps = 10;\n * for (i = 0; i <= steps; i++) {\n *   t = i / steps;\n *   x = bezierPoint(x1, x2, x3, x4, t);\n *   y = bezierPoint(y1, y2, y3, y4, t);\n *   ellipse(x, y, 5, 5);\n * }\n * </code>\n * </div>\n *\n * @alt\n * stretched black s-shape with 17 small orange lines extending from under shape.\n *\n */\np5.prototype.bezierPoint = function(a, b, c, d, t) {\n  var adjustedT = 1-t;\n  return Math.pow(adjustedT,3)*a +\n   3*(Math.pow(adjustedT,2))*t*b +\n   3*adjustedT*Math.pow(t,2)*c +\n   Math.pow(t,3)*d;\n};\n\n/**\n * Evaluates the tangent to the Bezier at position t for points a, b, c, d.\n * The parameters a and d are the first and last points\n * on the curve, and b and c are the control points.\n * The final parameter t varies between 0 and 1.\n *\n * @method bezierTangent\n * @param {Number} a coordinate of first point on the curve\n * @param {Number} b coordinate of first control point\n * @param {Number} c coordinate of second control point\n * @param {Number} d coordinate of second point on the curve\n * @param {Number} t value between 0 and 1\n * @return {Number} the tangent at position t\n * @example\n * <div>\n * <code>\n * noFill();\n * bezier(85, 20, 10, 10, 90, 90, 15, 80);\n * steps = 6;\n * fill(255);\n * for (i = 0; i <= steps; i++) {\n *   t = i / steps;\n *   // Get the location of the point\n *   x = bezierPoint(85, 10, 90, 15, t);\n *   y = bezierPoint(20, 10, 90, 80, t);\n *   // Get the tangent points\n *   tx = bezierTangent(85, 10, 90, 15, t);\n *   ty = bezierTangent(20, 10, 90, 80, t);\n *   // Calculate an angle from the tangent points\n *   a = atan2(ty, tx);\n *   a += PI;\n *   stroke(255, 102, 0);\n *   line(x, y, cos(a)*30 + x, sin(a)*30 + y);\n *   // The following line of code makes a line\n *   // inverse of the above line\n *   //line(x, y, cos(a)*-30 + x, sin(a)*-30 + y);\n *   stroke(0);\n *   ellipse(x, y, 5, 5);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noFill();\n * bezier(85, 20, 10, 10, 90, 90, 15, 80);\n * stroke(255, 102, 0);\n * steps = 16;\n * for (i = 0; i <= steps; i++) {\n *   t = i / steps;\n *   x = bezierPoint(85, 10, 90, 15, t);\n *   y = bezierPoint(20, 10, 90, 80, t);\n *   tx = bezierTangent(85, 10, 90, 15, t);\n *   ty = bezierTangent(20, 10, 90, 80, t);\n *   a = atan2(ty, tx);\n *   a -= HALF_PI;\n *   line(x, y, cos(a)*8 + x, sin(a)*8 + y);\n * }\n * </code>\n * </div>\n *\n * @alt\n * s-shaped line with 17 short orange lines extending from underside of shape\n *\n */\np5.prototype.bezierTangent = function(a, b, c, d, t) {\n  var adjustedT = 1-t;\n  return 3*d*Math.pow(t,2) -\n   3*c*Math.pow(t,2) +\n   6*c*adjustedT*t -\n   6*b*adjustedT*t +\n   3*b*Math.pow(adjustedT,2) -\n   3*a*Math.pow(adjustedT,2);\n};\n\n/**\n * Draws a curved line on the screen between two points, given as the\n * middle four parameters. The first two parameters are a control point, as\n * if the curve came from this point even though it's not drawn. The last\n * two parameters similarly describe the other control point. <br /><br />\n * Longer curves can be created by putting a series of curve() functions\n * together or using curveVertex(). An additional function called\n * curveTightness() provides control for the visual quality of the curve.\n * The curve() function is an implementation of Catmull-Rom splines.\n *\n * @method curve\n * @param  {Number} x1 x-coordinate for the beginning control point\n * @param  {Number} y1 y-coordinate for the beginning control point\n * @param  {Number} x2 x-coordinate for the first point\n * @param  {Number} y2 y-coordinate for the first point\n * @param  {Number} x3 x-coordinate for the second point\n * @param  {Number} y3 y-coordinate for the second point\n * @param  {Number} x4 x-coordinate for the ending control point\n * @param  {Number} y4 y-coordinate for the ending control point\n * @return {Object}    the p5 object\n * @example\n * <div>\n * <code>\n * noFill();\n * stroke(255, 102, 0);\n * curve(5, 26, 5, 26, 73, 24, 73, 61);\n * stroke(0);\n * curve(5, 26, 73, 24, 73, 61, 15, 65);\n * stroke(255, 102, 0);\n * curve(73, 24, 73, 61, 15, 65, 15, 65);\n * </code>\n * </div>\n * <div>\n * <code>\n * // Define the curve points as JavaScript objects\n * p1 = {x: 5, y: 26}, p2 = {x: 73, y: 24}\n * p3 = {x: 73, y: 61}, p4 = {x: 15, y: 65}\n * noFill();\n * stroke(255, 102, 0);\n * curve(p1.x, p1.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y)\n * stroke(0);\n * curve(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y)\n * stroke(255, 102, 0);\n * curve(p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, p4.x, p4.y)\n * </code>\n * </div>\n *\n * @alt\n * horseshoe shape with orange ends facing left and black curved center.\n * horseshoe shape with orange ends facing left and black curved center.\n *\n */\n/**\n * @method curve\n * @param  {Number} z1 z-coordinate for the beginning control point\n * @param  {Number} z2 z-coordinate for the first point\n * @param  {Number} z3 z-coordinate for the second point\n * @param  {Number} z4 z-coordinate for the ending control point\n * @return {Object}    the p5 object\n * @example\n * <div>\n * <code>\n * noFill();\n * stroke(255, 102, 0);\n * curve(5,26,0, 5,26,0, 73,24,0, 73,61,0);\n * stroke(0);\n * curve(5,26,0, 73,24,0, 73,61,0, 15,65,0);\n * stroke(255, 102, 0);\n * curve(73,24,0, 73,61,0, 15,65,0, 15,65,0);\n * </code>\n * </div>\n *\n * @alt\n * curving black and orange lines.\n */\np5.prototype.curve = function() {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  if(this._renderer.isP3D){\n    this._validateParameters(\n      'curve',\n      args,\n      ['Number', 'Number', 'Number',\n      'Number', 'Number', 'Number',\n      'Number', 'Number', 'Number',\n      'Number', 'Number', 'Number'\n      ]\n    );\n  } else{\n    this._validateParameters(\n      'curve',\n      args,\n      [ 'Number', 'Number', 'Number', 'Number',\n        'Number', 'Number', 'Number', 'Number' ]\n    );\n  }\n  if (!this._renderer._doStroke) {\n    return this;\n  }\n  if (this._renderer.isP3D){\n    args.push(curveDetail);\n    this._renderer.curve(args);\n  } else{\n    this._renderer.curve(args[0],args[1],\n      args[2],args[3],\n      args[4],args[5],\n      args[6],args[7]);\n  }\n  return this;\n};\n\n/**\n * Sets the resolution at which curves display.\n *\n * The default value is 20.\n *\n * @param {Number} resolution of the curves\n * @return {Object} the p5 object\n * @example\n * <div>\n * <code>\n * background(204);\n * curveDetail(20);\n * curve(5, 26, 5, 26, 73, 24, 73, 61);\n * </code>\n * </div>\n *\n * @alt\n * white arch shape in top-mid canvas.\n *\n */\np5.prototype.curveDetail = function(d) {\n  curveDetail = d;\n  return this;\n};\n\n/**\n * Modifies the quality of forms created with curve() and curveVertex().\n * The parameter tightness determines how the curve fits to the vertex\n * points. The value 0.0 is the default value for tightness (this value\n * defines the curves to be Catmull-Rom splines) and the value 1.0 connects\n * all the points with straight lines. Values within the range -5.0 and 5.0\n * will deform the curves but will leave them recognizable and as values\n * increase in magnitude, they will continue to deform.\n *\n * @method curveTightness\n * @param {Number} amount of deformation from the original vertices\n * @return {Object} the p5 object\n * @example\n * <div>\n * <code>\n * // Move the mouse left and right to see the curve change\n *\n * function setup() {\n *   createCanvas(100, 100);\n *   noFill();\n * }\n *\n * function draw() {\n *   background(204);\n *   var t = map(mouseX, 0, width, -5, 5);\n *   curveTightness(t);\n *   beginShape();\n *   curveVertex(10, 26);\n *   curveVertex(10, 26);\n *   curveVertex(83, 24);\n *   curveVertex(83, 61);\n *   curveVertex(25, 65);\n *   curveVertex(25, 65);\n *   endShape();\n * }\n * </code>\n * </div>\n *\n * @alt\n * Line shaped like right-facing arrow,points move with mouse-x and warp shape.\n */\np5.prototype.curveTightness = function (t) {\n  this._renderer._curveTightness = t;\n};\n\n/**\n * Evaluates the curve at position t for points a, b, c, d.\n * The parameter t varies between 0 and 1, a and d are points\n * on the curve, and b and c are the control points.\n * This can be done once with the x coordinates and a second time\n * with the y coordinates to get the location of a curve at t.\n *\n * @method curvePoint\n * @param {Number} a coordinate of first point on the curve\n * @param {Number} b coordinate of first control point\n * @param {Number} c coordinate of second control point\n * @param {Number} d coordinate of second point on the curve\n * @param {Number} t value between 0 and 1\n * @return {Number} bezier value at position t\n * @example\n * <div>\n * <code>\n * noFill();\n * curve(5, 26, 5, 26, 73, 24, 73, 61);\n * curve(5, 26, 73, 24, 73, 61, 15, 65);\n * fill(255);\n * ellipseMode(CENTER);\n * steps = 6;\n * for (i = 0; i <= steps; i++) {\n *   t = i / steps;\n *   x = curvePoint(5, 5, 73, 73, t);\n *   y = curvePoint(26, 26, 24, 61, t);\n *   ellipse(x, y, 5, 5);\n *   x = curvePoint(5, 73, 73, 15, t);\n *   y = curvePoint(26, 24, 61, 65, t);\n *   ellipse(x, y, 5, 5);\n * }\n * </code>\n * </div>\n *\n *line hooking down to right-bottom with 13 5x5 white ellipse points\n */\np5.prototype.curvePoint = function(a, b, c, d, t) {\n  var t3 = t*t*t,\n    t2 = t*t,\n    f1 = -0.5 * t3 + t2 - 0.5 * t,\n    f2 = 1.5 * t3 - 2.5 * t2 + 1.0,\n    f3 = -1.5 * t3 + 2.0 * t2 + 0.5 * t,\n    f4 = 0.5 * t3 - 0.5 * t2;\n  return a*f1 + b*f2 + c*f3 + d*f4;\n};\n\n/**\n * Evaluates the tangent to the curve at position t for points a, b, c, d.\n * The parameter t varies between 0 and 1, a and d are points on the curve,\n * and b and c are the control points.\n *\n * @method curveTangent\n * @param {Number} a coordinate of first point on the curve\n * @param {Number} b coordinate of first control point\n * @param {Number} c coordinate of second control point\n * @param {Number} d coordinate of second point on the curve\n * @param {Number} t value between 0 and 1\n * @return {Number} the tangent at position t\n * @example\n * <div>\n * <code>\n * noFill();\n * curve(5, 26, 73, 24, 73, 61, 15, 65);\n * steps = 6;\n * for (i = 0; i <= steps; i++) {\n *   t = i / steps;\n *   x = curvePoint(5, 73, 73, 15, t);\n *   y = curvePoint(26, 24, 61, 65, t);\n *   //ellipse(x, y, 5, 5);\n *   tx = curveTangent(5, 73, 73, 15, t);\n *   ty = curveTangent(26, 24, 61, 65, t);\n *   a = atan2(ty, tx);\n *   a -= PI/2.0;\n *   line(x, y, cos(a)*8 + x, sin(a)*8 + y);\n * }\n * </code>\n * </div>\n *\n * @alt\n *right curving line mid-right of canvas with 7 short lines radiating from it.\n */\np5.prototype.curveTangent = function(a, b,c, d, t) {\n  var t2 = t*t,\n    f1 = (-3*t2)/2 + 2*t - 0.5,\n    f2 = (9*t2)/2 - 5*t,\n    f3 = (-9*t2)/2 + 4*t + 0.5,\n    f4 = (3*t2)/2 - t;\n  return a*f1 + b*f2 + c*f3 + d*f4;\n};\n\nmodule.exports = p5;\n\n},{\"./core\":37,\"./error_helpers\":40}],39:[function(_dereq_,module,exports){\n/**\n * @module Environment\n * @submodule Environment\n * @for p5\n * @requires core\n * @requires constants\n */\n\n'use strict';\n\nvar p5 = _dereq_('./core');\nvar C = _dereq_('./constants');\n\nvar standardCursors = [C.ARROW, C.CROSS, C.HAND, C.MOVE, C.TEXT, C.WAIT];\n\np5.prototype._frameRate = 0;\np5.prototype._lastFrameTime = window.performance.now();\np5.prototype._targetFrameRate = 60;\n\nvar _windowPrint = window.print;\n\n\nif (window.console && console.log) {\n  /**\n   * The print() function writes to the console area of your browser.\n   * This function is often helpful for looking at the data a program is\n   * producing. This function creates a new line of text for each call to\n   * the function. Individual elements can be\n   * separated with quotes (\"\") and joined with the addition operator (+).\n   * <br><br>\n   * While print() is similar to console.log(), it does not directly map to\n   * it in order to simulate easier to understand behavior than\n   * console.log(). Due to this, it is slower. For fastest results, use\n   * console.log().\n   *\n   * @method print\n   * @param {Any} contents any combination of Number, String, Object, Boolean,\n   *                       Array to print\n   * @example\n   * <div><code class='norender'>\n   * var x = 10;\n   * print(\"The value of x is \" + x);\n   * // prints \"The value of x is 10\"\n   * </code></div>\n   * @alt\n   * default grey canvas\n   */\n  // Converts passed args into a string and then parses that string to\n  // simulate synchronous behavior. This is a hack and is gross.\n  // Since this will not work on all objects, particularly circular\n  // structures, simply console.log() on error.\n  p5.prototype.print = function(args) {\n    try {\n      if (arguments.length === 0) {\n        _windowPrint();\n      }\n      else if (arguments.length > 1) {\n        console.log.apply(console, arguments);\n      } else {\n        var newArgs = JSON.parse(JSON.stringify(args));\n        console.log(newArgs);\n      }\n    } catch(err) {\n      console.log(args);\n    }\n  };\n} else {\n  p5.prototype.print = function() {};\n}\n\n\n/**\n * The system variable frameCount contains the number of frames that have\n * been displayed since the program started. Inside setup() the value is 0,\n * after the first iteration of draw it is 1, etc.\n *\n * @property frameCount\n * @example\n *   <div><code>\n *     function setup() {\n *       frameRate(30);\n *       textSize(20);\n *       textSize(30);\n *       textAlign(CENTER);\n *     }\n *\n *     function draw() {\n *       background(200);\n *       text(frameCount, width/2, height/2);\n *     }\n *   </code></div>\n *\n * @alt\n * numbers rapidly counting upward with frame count set to 30.\n *\n */\np5.prototype.frameCount = 0;\n\n/**\n * Confirms if the window a p5.js program is in is \"focused,\" meaning that\n * the sketch will accept mouse or keyboard input. This variable is\n * \"true\" if the window is focused and \"false\" if not.\n *\n * @property focused\n * @example\n * <div><code>\n * // To demonstrate, put two windows side by side.\n * // Click on the window that the p5 sketch isn't in!\n * function draw() {\n *   background(200);\n *   noStroke();\n *   fill(0, 200, 0);\n *   ellipse(25, 25, 50, 50);\n *\n *   if (!focused) {  // or \"if (focused === false)\"\n *     stroke(200,0,0);\n *     line(0, 0, 100, 100);\n *     line(100, 0, 0, 100);\n *   }\n * }\n * </code></div>\n *\n * @alt\n * green 50x50 ellipse at top left. Red X covers canvas when page focus changes\n *\n */\np5.prototype.focused = (document.hasFocus());\n\n/**\n * Sets the cursor to a predefined symbol or an image, or makes it visible\n * if already hidden. If you are trying to set an image as the cursor, the\n * recommended size is 16x16 or 32x32 pixels. It is not possible to load an\n * image as the cursor if you are exporting your program for the Web, and not\n * all MODES work with all browsers. The values for parameters x and y must\n * be less than the dimensions of the image.\n *\n * @method cursor\n * @param {Number/Constant} type either ARROW, CROSS, HAND, MOVE, TEXT, or\n *                               WAIT, or path for image\n * @param {Number}          [x]  the horizontal active spot of the cursor\n * @param {Number}          [y]  the vertical active spot of the cursor\n * @example\n * <div><code>\n * // Move the mouse left and right across the image\n * // to see the cursor change from a cross to a hand\n * function draw() {\n *   line(width/2, 0, width/2, height);\n *   if (mouseX < 50) {\n *     cursor(CROSS);\n *   } else {\n *     cursor(HAND);\n *   }\n * }\n * </code></div>\n *\n * @alt\n * horizontal line divides canvas. cursor on left is a cross, right is hand.\n *\n */\np5.prototype.cursor = function(type, x, y) {\n  var cursor = 'auto';\n  var canvas = this._curElement.elt;\n  if (standardCursors.indexOf(type) > -1) {\n    // Standard css cursor\n    cursor = type;\n  } else if (typeof type === 'string') {\n    var coords = '';\n    if (x && y && (typeof x === 'number' && typeof y === 'number')) {\n      // Note that x and y values must be unit-less positive integers < 32\n      // https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\n      coords = x + ' ' + y;\n    }\n    if (type.substring(0, 6) !== 'http://') {\n      // Image (absolute url)\n      cursor = 'url(' + type + ') ' + coords + ', auto';\n    } else if (/\\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(type)) {\n      // Image file (relative path) - Separated for performance reasons\n      cursor = 'url(' + type + ') ' + coords + ', auto';\n    } else {\n      // Any valid string for the css cursor property\n      cursor = type;\n    }\n  }\n  canvas.style.cursor = cursor;\n};\n\n/**\n * Specifies the number of frames to be displayed every second. For example,\n * the function call frameRate(30) will attempt to refresh 30 times a second.\n * If the processor is not fast enough to maintain the specified rate, the\n * frame rate will not be achieved. Setting the frame rate within setup() is\n * recommended. The default rate is 60 frames per second. This is the same as\n * setFrameRate(val).\n * <br><br>\n * Calling frameRate() with no arguments returns the current framerate. This\n * is the same as getFrameRate().\n * <br><br>\n * Calling frameRate() with arguments that are not of the type numbers\n * or are non positive also returns current framerate.\n *\n * @method frameRate\n * @param  {Number} [fps] number of frames to be displayed every second\n * @return {Number}       current frameRate\n * @example\n *\n * <div><code>\n * var rectX = 0;\n * var fr = 30; //starting FPS\n * var clr;\n *\n * function setup() {\n *   background(200);\n *   frameRate(fr); // Attempt to refresh at starting FPS\n *   clr = color(255,0,0);\n * }\n *\n * function draw() {\n *   background(200);\n *   rectX = rectX += 1; // Move Rectangle\n *\n *   if (rectX >= width) { // If you go off screen.\n *     if (fr == 30) {\n *       clr = color(0,0,255);\n *       fr = 10;\n *       frameRate(fr); // make frameRate 10 FPS\n *     } else {\n *       clr = color(255,0,0);\n *       fr = 30;\n *       frameRate(fr); // make frameRate 30 FPS\n *     }\n *     rectX = 0;\n *   }\n *   fill(clr);\n *   rect(rectX, 40, 20,20);\n * }\n * </div></code>\n *\n * @alt\n * blue rect moves left to right, followed by red rect moving faster. Loops.\n *\n */\np5.prototype.frameRate = function(fps) {\n  if (typeof fps !== 'number' || fps <= 0) {\n    return this._frameRate;\n  } else {\n    this._setProperty('_targetFrameRate', fps);\n    this._runFrames();\n    return this;\n  }\n};\n/**\n * Returns the current framerate.\n *\n * @return {Number} current frameRate\n */\np5.prototype.getFrameRate = function() {\n  return this.frameRate();\n};\n\n/**\n * Specifies the number of frames to be displayed every second. For example,\n * the function call frameRate(30) will attempt to refresh 30 times a second.\n * If the processor is not fast enough to maintain the specified rate, the\n * frame rate will not be achieved. Setting the frame rate within setup() is\n * recommended. The default rate is 60 frames per second.\n *\n * Calling frameRate() with no arguments returns the current framerate.\n *\n * @param {Number} [fps] number of frames to be displayed every second\n */\np5.prototype.setFrameRate = function(fps) {\n  return this.frameRate(fps);\n};\n\n/**\n * Hides the cursor from view.\n *\n * @method noCursor\n * @example\n * <div><code>\n * function setup() {\n *   noCursor();\n * }\n *\n * function draw() {\n *   background(200);\n *   ellipse(mouseX, mouseY, 10, 10);\n * }\n * </code></div>\n *\n *\n * @alt\n * cursor becomes 10x 10 white ellipse the moves with mouse x and y.\n *\n */\np5.prototype.noCursor = function() {\n  this._curElement.elt.style.cursor = 'none';\n};\n\n\n/**\n * System variable that stores the width of the entire screen display. This\n * is used to run a full-screen program on any display size.\n *\n * @property displayWidth\n * @example\n * <div class=\"norender\"><code>\n * createCanvas(displayWidth, displayHeight);\n * </code></div>\n *\n * @alt\n * cursor becomes 10x 10 white ellipse the moves with mouse x and y.\n *\n */\np5.prototype.displayWidth = screen.width;\n\n/**\n * System variable that stores the height of the entire screen display. This\n * is used to run a full-screen program on any display size.\n *\n * @property displayHeight\n * @example\n * <div class=\"norender\"><code>\n * createCanvas(displayWidth, displayHeight);\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.prototype.displayHeight = screen.height;\n\n/**\n * System variable that stores the width of the inner window, it maps to\n * window.innerWidth.\n *\n * @property windowWidth\n * @example\n * <div class=\"norender\"><code>\n * createCanvas(windowWidth, windowHeight);\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.prototype.windowWidth = getWindowWidth();\n/**\n * System variable that stores the height of the inner window, it maps to\n * window.innerHeight.\n *\n * @property windowHeight\n * @example\n * <div class=\"norender\"><code>\n * createCanvas(windowWidth, windowHeight);\n * </code></div>\n*@alt\n * no display.\n *\n*/\np5.prototype.windowHeight = getWindowHeight();\n\n/**\n * The windowResized() function is called once every time the browser window\n * is resized. This is a good place to resize the canvas or do any other\n * adjustements to accomodate the new window size.\n *\n * @method windowResized\n * @example\n * <div class=\"norender\"><code>\n * function setup() {\n *   createCanvas(windowWidth, windowHeight);\n * }\n *\n * function draw() {\n *  background(0, 100, 200);\n * }\n *\n * function windowResized() {\n *   resizeCanvas(windowWidth, windowHeight);\n * }\n * </code></div>\n * @alt\n * no display.\n */\np5.prototype._onresize = function(e){\n  this._setProperty('windowWidth', getWindowWidth());\n  this._setProperty('windowHeight', getWindowHeight());\n  var context = this._isGlobal ? window : this;\n  var executeDefault;\n  if (typeof context.windowResized === 'function') {\n    executeDefault = context.windowResized(e);\n    if (executeDefault !== undefined && !executeDefault) {\n      e.preventDefault();\n    }\n  }\n};\n\nfunction getWindowWidth() {\n  return window.innerWidth ||\n         document.documentElement && document.documentElement.clientWidth ||\n         document.body && document.body.clientWidth ||\n         0;\n}\n\nfunction getWindowHeight() {\n  return window.innerHeight ||\n         document.documentElement && document.documentElement.clientHeight ||\n         document.body && document.body.clientHeight ||\n         0;\n}\n\n/**\n * System variable that stores the width of the drawing canvas. This value\n * is set by the first parameter of the createCanvas() function.\n * For example, the function call createCanvas(320, 240) sets the width\n * variable to the value 320. The value of width defaults to 100 if\n * createCanvas() is not used in a program.\n *\n * @property width\n */\np5.prototype.width = 0;\n\n/**\n * System variable that stores the height of the drawing canvas. This value\n * is set by the second parameter of the createCanvas() function. For\n * example, the function call createCanvas(320, 240) sets the height\n * variable to the value 240. The value of height defaults to 100 if\n * createCanvas() is not used in a program.\n *\n * @property height\n */\np5.prototype.height = 0;\n\n/**\n * If argument is given, sets the sketch to fullscreen or not based on the\n * value of the argument. If no argument is given, returns the current\n * fullscreen state. Note that due to browser restrictions this can only\n * be called on user input, for example, on mouse press like the example\n * below.\n *\n * @method fullscreen\n * @param  {Boolean} [val] whether the sketch should be in fullscreen mode\n * or not\n * @return {Boolean} current fullscreen state\n * @example\n * <div>\n * <code>\n * // Clicking in the box toggles fullscreen on and off.\n * function setup() {\n *   background(200);\n * }\n * function mousePressed() {\n *   if (mouseX > 0 && mouseX < 100 && mouseY > 0 && mouseY < 100) {\n *     var fs = fullscreen();\n *     fullscreen(!fs);\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * no display.\n *\n */\np5.prototype.fullscreen = function(val) {\n  // no arguments, return fullscreen or not\n  if (typeof val === 'undefined') {\n    return document.fullscreenElement ||\n           document.webkitFullscreenElement ||\n           document.mozFullScreenElement ||\n           document.msFullscreenElement;\n  } else { // otherwise set to fullscreen or not\n    if (val) {\n      launchFullscreen(document.documentElement);\n    } else {\n      exitFullscreen();\n    }\n  }\n};\n\n/**\n * Sets the pixel scaling for high pixel density displays. By default\n * pixel density is set to match display density, call pixelDensity(1)\n * to turn this off. Calling pixelDensity() with no arguments returns\n * the current pixel density of the sketch.\n *\n *\n * @method pixelDensity\n * @param  {Number} [val] whether or how much the sketch should scale\n * @returns {Number} current pixel density of the sketch\n * @example\n * <div>\n * <code>\n * function setup() {\n *   pixelDensity(1);\n *   createCanvas(100, 100);\n *   background(200);\n *   ellipse(width/2, height/2, 50, 50);\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * function setup() {\n *   pixelDensity(3.0);\n *   createCanvas(100, 100);\n *   background(200);\n *   ellipse(width/2, height/2, 50, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * fuzzy 50x50 white ellipse with black outline in center of canvas.\n * sharp 50x50 white ellipse with black outline in center of canvas.\n */\np5.prototype.pixelDensity = function(val) {\n  if (typeof val === 'number') {\n    this._pixelDensity = val;\n  } else {\n    return this._pixelDensity;\n  }\n  this.resizeCanvas(this.width, this.height, true);\n};\n\n/**\n * Returns the pixel density of the current display the sketch is running on.\n *\n * @method displayDensity\n * @returns {Number} current pixel density of the display\n * @example\n * <div>\n * <code>\n * function setup() {\n *   var density = displayDensity();\n *   pixelDensity(density);\n *   createCanvas(100, 100);\n *   background(200);\n *   ellipse(width/2, height/2, 50, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 white ellipse with black outline in center of canvas.\n */\np5.prototype.displayDensity = function() {\n  return window.devicePixelRatio;\n};\n\nfunction launchFullscreen(element) {\n  var enabled = document.fullscreenEnabled ||\n                document.webkitFullscreenEnabled ||\n                document.mozFullScreenEnabled ||\n                document.msFullscreenEnabled;\n  if (!enabled) {\n    throw new Error('Fullscreen not enabled in this browser.');\n  }\n  if(element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if(element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if(element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if(element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  }\n}\n\nfunction exitFullscreen() {\n  if(document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if(document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if(document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  }\n}\n\n\n/**\n * Gets the current URL.\n * @method getURL\n * @return {String} url\n * @example\n * <div>\n * <code>\n * var url;\n * var x = 100;\n *\n * function setup() {\n *   fill(0);\n *   noStroke();\n *   url = getURL();\n * }\n *\n * function draw() {\n *   background(200);\n *   text(url, x, height/2);\n *   x--;\n * }\n * </code>\n * </div>\n *\n * @alt\n * current url (http://p5js.org/reference/#/p5/getURL) moves right to left.\n *\n */\np5.prototype.getURL = function() {\n  return location.href;\n};\n/**\n * Gets the current URL path as an array.\n * @method getURLPath\n * @return {Array} path components\n * @example\n * <div class='norender'><code>\n * function setup() {\n *   var urlPath = getURLPath();\n *   for (var i=0; i&lt;urlPath.length; i++) {\n *     text(urlPath[i], 10, i*20+20);\n *   }\n * }\n * </code></div>\n *\n * @alt\n *no display\n *\n */\np5.prototype.getURLPath = function() {\n  return location.pathname.split('/').filter(function(v){return v!=='';});\n};\n/**\n * Gets the current URL params as an Object.\n * @method getURLParams\n * @return {Object} URL params\n * @example\n * <div class='norender'>\n * <code>\n * // Example: http://p5js.org?year=2014&month=May&day=15\n *\n * function setup() {\n *   var params = getURLParams();\n *   text(params.day, 10, 20);\n *   text(params.month, 10, 40);\n *   text(params.year, 10, 60);\n * }\n * </code>\n * </div>\n * @alt\n * no display.\n *\n */\np5.prototype.getURLParams = function() {\n  var re = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim;\n  var m;\n  var v={};\n  while ((m = re.exec(location.search)) != null) {\n    if (m.index === re.lastIndex) {\n      re.lastIndex++;\n    }\n    v[m[1]]=m[2];\n  }\n  return v;\n};\n\nmodule.exports = p5;\n\n},{\"./constants\":36,\"./core\":37}],40:[function(_dereq_,module,exports){\n/**\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('./core');\nvar doFriendlyWelcome = false; // TEMP until we get it all working LM\n\n// -- Borrowed from jQuery 1.11.3 --\nvar class2type = {};\nvar toString = class2type.toString;\nvar names = ['Boolean', 'Number', 'String', 'Function',\n             'Array', 'Date', 'RegExp', 'Object', 'Error'];\nfor (var n=0; n<names.length; n++) {\n  class2type[ '[object ' + names[n] + ']' ] = names[n].toLowerCase();\n}\nvar getType = function( obj ) {\n  if ( obj == null ) {\n    return obj + '';\n  }\n  return typeof obj === 'object' || typeof obj === 'function' ?\n    class2type[ toString.call(obj) ] || 'object' :\n    typeof obj;\n};\nvar isArray = Array.isArray || function( obj ) {\n  return getType(obj) === 'array';\n};\nvar isNumeric =function( obj ) {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;\n};\n// -- End borrow --\n\n/**\n * Checks the definition type against the argument type\n * If any of these passes (in order), it matches:\n *\n * - p5.* definitions are checked with instanceof\n * - Booleans are let through (everything is truthy or falsey)\n * - Lowercase of the definition is checked against the js type\n * - Number types are checked to see if they are numerically castable\n */\nvar numberTypes = ['Number', 'Integer', 'Number/Constant'];\nfunction typeMatches(defType, argType, arg) {\n  if(defType.match(/^p5\\./)) {\n    var parts = defType.split('.');\n    return arg instanceof p5[parts[1]];\n  }\n  return defType === 'Boolean' || // Anything is truthy, cover in Debug Guide\n    (defType.toLowerCase() === argType) ||\n    (numberTypes.indexOf(defType) > -1 && isNumeric(arg));\n}\n\n/**\n * Prints out a fancy, colorful message to the console log\n *\n * @param  {String}               message the words to be said\n * @param  {String}               func    the name of the function to link\n * @param  {Integer/Color String} color   CSS color string or error type\n *\n * @return console logs\n */\n// Wrong number of params, undefined param, wrong type\nvar PARAM_COUNT = 0;\nvar EMPTY_VAR = 1;\nvar WRONG_TYPE = 2;\nvar FILE_LOAD = 3;\n// p5.js blue, p5.js orange, auto dark green; fallback p5.js darkened magenta\n// See testColors below for all the color codes and names\nvar typeColors = ['#2D7BB6', '#EE9900', '#4DB200', '#C83C00'];\nfunction report(message, func, color) {\n  if(doFriendlyWelcome){\n    friendlyWelcome();\n    doFriendlyWelcome =false;\n  }\n  if ('undefined' === getType(color)) {\n    color   = '#B40033'; // dark magenta\n  } else if (getType(color) === 'number') { // Type to color\n    color = typeColors[color];\n  }\n  // LM TEMP commenting this out until we get the whole system working\n  // if (func.substring(0,4) === 'load'){\n  //   console.log(\n  //     '%c> p5.js says: '+message+'%c'+\n  //     '[https://github.com/processing/p5.js/wiki/Local-server]',\n  //     'background-color:' + color + ';color:#FFF;',\n  //     'background-color:transparent;color:' + color +';',\n  //     'background-color:' + color + ';color:#FFF;',\n  //     'background-color:transparent;color:' + color +';'\n  //   );\n  // }\n  // else{\n  //   console.log(\n  //     '%c> p5.js says: '+message+'%c [http://p5js.org/reference/#p5/'+func+\n  //     ']', 'background-color:' + color + ';color:#FFF;',\n  //     'background-color:transparent;color:' + color +';'\n  //   );\n  // }\n}\n\n/**\n * Validate all the parameters of a function for number and type\n * NOTE THIS FUNCTION IS TEMPORARILY DISABLED UNTIL FURTHER WORK\n * AND UPDATES ARE IMPLEMENTED. -LMCCART\n *\n * @param  {String} func  name of function we're checking\n * @param  {Array}  args  pass of the JS default arguments array\n * @param  {Array}  types List of types accepted ['Number', 'String, ...] OR\n *                        a list of lists for each format: [\n *                          ['String', 'Number', 'Number'],\n *                          ['String', 'Number', 'Number', 'Number', 'Number'\n *                        ]\n *\n * @return console logs\n */\np5.prototype._validateParameters = function(func, args, types) {\n  if (!isArray(types[0])) {\n    types = [types];\n  }\n  // Check number of parameters\n  // Example: \"You wrote ellipse(X,X,X). ellipse was expecting 4\n  //          parameters. Try ellipse(X,X,X,X).\"\n  var diff = Math.abs(args.length-types[0].length);\n  var message, tindex = 0;\n  for (var i=1, len=types.length; i<len; i++) {\n    var d = Math.abs(args.length-types[i].length);\n    if (d <= diff) {\n      tindex = i;\n      diff = d;\n    }\n  }\n  var symbol = 'X'; // Parameter placeholder\n  if(diff > 0) {\n    message = 'You wrote ' + func + '(';\n    // Concat an appropriate number of placeholders for call\n    if (args.length > 0) {\n      message += symbol + Array(args.length).join(',' + symbol);\n    }\n    message += '). ' + func + ' was expecting ' + types[tindex].length +\n      ' parameters. Try ' + func + '(';\n    // Concat an appropriate number of placeholders for definition\n    if (types[tindex].length > 0) {\n      message += symbol + Array(types[tindex].length).join(',' + symbol);\n    }\n    message += ').';\n    // If multiple definitions\n    if (types.length > 1) {\n      message += ' ' + func + ' takes different numbers of parameters ' +\n        'depending on what you want to do. Click this link to learn more: ';\n    }\n    report(message, func, PARAM_COUNT);\n  }\n  // Type checking\n  // Example: \"It looks like ellipse received an empty variable in spot #2.\"\n  // Example: \"ellipse was expecting a number for parameter #1,\n  //           received \"foo\" instead.\"\n  for (var format=0; format<types.length; format++) {\n    for (var p=0; p < types[format].length && p < args.length; p++) {\n      var defType = types[format][p];\n      var argType = getType(args[p]);\n      if ('undefined' === argType || null === argType) {\n        report('It looks like ' + func +\n          ' received an empty variable in spot #' + (p+1) +\n          '. If not intentional, this is often a problem with scope: ' +\n          '[link to scope].', func, EMPTY_VAR);\n      } else if (defType !== '*' && !typeMatches(defType, argType, args[p])) {\n        message = func + ' was expecting a ' + defType.toLowerCase() +\n          ' for parameter #' + (p+1) + ', received ';\n        // Wrap strings in quotes\n        message += 'string' === argType ? '\"' + args[p] + '\"' : args[p];\n        message += ' instead.';\n        // If multiple definitions\n        if (types.length > 1) {\n          message += ' ' + func + ' takes different numbers of parameters ' +\n            'depending on what you want to do. ' +\n            'Click this link to learn more:';\n        }\n        report(message, func, WRONG_TYPE);\n      }\n    }\n  }\n};\n/*\n * NOTE THIS FUNCTION IS TEMPORARILY DISABLED UNTIL FURTHER WORK\n * AND UPDATES ARE IMPLEMENTED. -LMCCART\n */\np5.prototype._validateParameters = function() {\n  return true;\n};\n\nvar errorCases = {\n  '0': {\n    fileType: 'image',\n    method: 'loadImage',\n    message: ' hosting the image online,'\n  },\n  '1': {\n    fileType: 'XML file',\n    method: 'loadXML'\n  },\n  '2': {\n    fileType: 'table file',\n    method: 'loadTable'\n  },\n  '3': {\n    fileType: 'text file',\n    method: 'loadStrings'\n  },\n  '4': {\n    fileType: 'font',\n    method: 'loadFont',\n    message: ' hosting the font online,'\n  },\n};\np5._friendlyFileLoadError = function (errorType, filePath) {\n  var errorInfo = errorCases[ errorType ];\n  var message = 'It looks like there was a problem' +\n  ' loading your ' + errorInfo.fileType + '.' +\n  ' Try checking if the file path%c [' + filePath + '] %cis correct,' +\n  (errorInfo.message || '') + ' or running a local server.';\n  report(message, errorInfo.method, FILE_LOAD);\n};\n\nfunction friendlyWelcome() {\n  // p5.js brand - magenta: #ED225D\n  var astrixBgColor = 'transparent';\n  var astrixTxtColor = '#ED225D';\n  var welcomeBgColor = '#ED225D';\n  var welcomeTextColor = 'white';\n  console.log(\n  '%c    _ \\n'+\n  ' /\\\\| |/\\\\ \\n'+\n  ' \\\\ ` \\' /  \\n'+\n  ' / , . \\\\  \\n'+\n  ' \\\\/|_|\\\\/ '+\n  '\\n\\n%c> p5.js says: Welcome! '+\n  'This is your friendly debugger. ' +\n  'To turn me off switch to using “p5.min.js”.',\n  'background-color:'+astrixBgColor+';color:' + astrixTxtColor +';',\n  'background-color:'+welcomeBgColor+';color:' + welcomeTextColor +';'\n  );\n}\n\n/**\n * Prints out all the colors in the color pallete with white text.\n * For color blindness testing.\n */\n/* function testColors() {\n  var str = 'A box of biscuits, a box of mixed biscuits and a biscuit mixer';\n  report(str, 'print', '#ED225D'); // p5.js magenta\n  report(str, 'print', '#2D7BB6'); // p5.js blue\n  report(str, 'print', '#EE9900'); // p5.js orange\n  report(str, 'print', '#A67F59'); // p5.js light brown\n  report(str, 'print', '#704F21'); // p5.js gold\n  report(str, 'print', '#1CC581'); // auto cyan\n  report(str, 'print', '#FF6625'); // auto orange\n  report(str, 'print', '#79EB22'); // auto green\n  report(str, 'print', '#B40033'); // p5.js darkened magenta\n  report(str, 'print', '#084B7F'); // p5.js darkened blue\n  report(str, 'print', '#945F00'); // p5.js darkened orange\n  report(str, 'print', '#6B441D'); // p5.js darkened brown\n  report(str, 'print', '#2E1B00'); // p5.js darkened gold\n  report(str, 'print', '#008851'); // auto dark cyan\n  report(str, 'print', '#C83C00'); // auto dark orange\n  report(str, 'print', '#4DB200'); // auto dark green\n} */\n\n// This is a lazily-defined list of p5 symbols that may be\n// misused by beginners at top-level code, outside of setup/draw. We'd like\n// to detect these errors and help the user by suggesting they move them\n// into setup/draw.\n//\n// For more details, see https://github.com/processing/p5.js/issues/1121.\nvar misusedAtTopLevelCode = null;\nvar FAQ_URL = 'https://github.com/processing/p5.js/wiki/' +\n              'Frequently-Asked-Questions' +\n              '#why-cant-i-assign-variables-using-p5-functions-and-' +\n              'variables-before-setup';\n\nfunction defineMisusedAtTopLevelCode() {\n  var uniqueNamesFound = {};\n\n  var getSymbols = function(obj) {\n    return Object.getOwnPropertyNames(obj).filter(function(name) {\n      if (name[0] === '_') {\n        return false;\n      }\n      if (name in uniqueNamesFound) {\n        return false;\n      }\n\n      uniqueNamesFound[name] = true;\n\n      return true;\n    }).map(function(name) {\n      var type;\n\n      if (typeof(obj[name]) === 'function') {\n        type = 'function';\n      } else if (name === name.toUpperCase()) {\n        type = 'constant';\n      } else {\n        type = 'variable';\n      }\n\n      return {name: name, type: type};\n    });\n  };\n\n  misusedAtTopLevelCode = [].concat(\n    getSymbols(p5.prototype),\n    // At present, p5 only adds its constants to p5.prototype during\n    // construction, which may not have happened at the time a\n    // ReferenceError is thrown, so we'll manually add them to our list.\n    getSymbols(_dereq_('./constants'))\n  );\n\n  // This will ultimately ensure that we report the most specific error\n  // possible to the user, e.g. advising them about HALF_PI instead of PI\n  // when their code misuses the former.\n  misusedAtTopLevelCode.sort(function(a, b) {\n    return b.name.length - a.name.length;\n  });\n}\n\nfunction helpForMisusedAtTopLevelCode(e, log) {\n  if (!log) {\n    log = console.log.bind(console);\n  }\n\n  if (!misusedAtTopLevelCode) {\n    defineMisusedAtTopLevelCode();\n  }\n\n  // If we find that we're logging lots of false positives, we can\n  // uncomment the following code to avoid displaying anything if the\n  // user's code isn't likely to be using p5's global mode. (Note that\n  // setup/draw are more likely to be defined due to JS function hoisting.)\n  //\n  //if (!('setup' in window || 'draw' in window)) {\n  //  return;\n  //}\n\n  misusedAtTopLevelCode.some(function(symbol) {\n    // Note that while just checking for the occurrence of the\n    // symbol name in the error message could result in false positives,\n    // a more rigorous test is difficult because different browsers\n    // log different messages, and the format of those messages may\n    // change over time.\n    //\n    // For example, if the user uses 'PI' in their code, it may result\n    // in any one of the following messages:\n    //\n    //   * 'PI' is undefined                           (Microsoft Edge)\n    //   * ReferenceError: PI is undefined             (Firefox)\n    //   * Uncaught ReferenceError: PI is not defined  (Chrome)\n\n    if (e.message && e.message.indexOf(symbol.name) !== -1) {\n      log('%cDid you just try to use p5.js\\'s ' + symbol.name +\n          (symbol.type === 'function' ? '() ' : ' ') + symbol.type +\n          '? If so, you may want to ' +\n          'move it into your sketch\\'s setup() function.\\n\\n' +\n          'For more details, see: ' + FAQ_URL,\n          'color: #B40033' /* Dark magenta */);\n      return true;\n    }\n  });\n}\n\n// Exposing this primarily for unit testing.\np5.prototype._helpForMisusedAtTopLevelCode = helpForMisusedAtTopLevelCode;\n\nif (document.readyState !== 'complete') {\n  window.addEventListener('error', helpForMisusedAtTopLevelCode, false);\n\n  // Our job is only to catch ReferenceErrors that are thrown when\n  // global (non-instance mode) p5 APIs are used at the top-level\n  // scope of a file, so we'll unbind our error listener now to make\n  // sure we don't log false positives later.\n  window.addEventListener('load', function() {\n    window.removeEventListener('error', helpForMisusedAtTopLevelCode, false);\n  });\n}\n\nmodule.exports = p5;\n\n},{\"./constants\":36,\"./core\":37}],41:[function(_dereq_,module,exports){\n/**\n * @module DOM\n * @submodule DOM\n * @for p5.Element\n */\n\nvar p5 = _dereq_('./core');\n\n/**\n * Base class for all elements added to a sketch, including canvas,\n * graphics buffers, and other HTML elements. Methods in blue are\n * included in the core functionality, methods in brown are added\n * with the <a href=\"http://p5js.org/reference/#/libraries/p5.dom\">p5.dom\n * library</a>.\n * It is not called directly, but p5.Element\n * objects are created by calling createCanvas, createGraphics,\n * or in the p5.dom library, createDiv, createImg, createInput, etc.\n *\n * @class p5.Element\n * @constructor\n * @param {String} elt DOM node that is wrapped\n * @param {Object} [pInst] pointer to p5 instance\n */\np5.Element = function(elt, pInst) {\n  /**\n   * Underlying HTML element. All normal HTML methods can be called on this.\n   *\n   * @property elt\n   */\n  this.elt = elt;\n  this._pInst = pInst;\n  this._events = {};\n  this.width = this.elt.offsetWidth;\n  this.height = this.elt.offsetHeight;\n};\n\n/**\n *\n * Attaches the element to the parent specified. A way of setting\n * the container for the element. Accepts either a string ID, DOM\n * node, or p5.Element. If no arguments given, parent node is returned.\n * For more ways to position the canvas, see the\n * <a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>\n * positioning the canvas</a> wiki page.\n *\n * @method parent\n * @param  {String|Object} parent the ID, DOM node, or p5.Element\n *                         of desired parent element\n * @return {p5.Element}\n * @example\n * <div class=\"norender\"><code>\n * // in the html file:\n * &lt;div id=\"myContainer\">&lt;/div>\n * // in the js file:\n * var cnv = createCanvas(100, 100);\n * cnv.parent(\"myContainer\");\n * </code></div>\n * <div class='norender'><code>\n * var div0 = createDiv('this is the parent');\n * var div1 = createDiv('this is the child');\n * div1.parent(div0); // use p5.Element\n * </code></div>\n * <div class='norender'><code>\n * var div0 = createDiv('this is the parent');\n * div0.id('apples');\n * var div1 = createDiv('this is the child');\n * div1.parent('apples'); // use id\n * </code></div>\n * <div class='norender'><code>\n * var elt = document.getElementById('myParentDiv');\n * var div1 = createDiv('this is the child');\n * div1.parent(elt); // use element from page\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.parent = function(p) {\n  if (arguments.length === 0){\n    return this.elt.parentNode;\n  } else {\n    if (typeof p === 'string') {\n      if (p[0] === '#') {\n        p = p.substring(1);\n      }\n      p = document.getElementById(p);\n    } else if (p instanceof p5.Element) {\n      p = p.elt;\n    }\n    p.appendChild(this.elt);\n    return this;\n  }\n};\n\n/**\n *\n * Sets the ID of the element. If no ID argument is passed in, it instead\n * returns the current ID of the element.\n *\n * @method id\n * @param  {String} [id] ID of the element\n * @return {p5.Element|String}\n * @example\n * <div><code class='norender'>\n * function setup() {\n *   var cnv = createCanvas(100, 100);\n *   // Assigns a CSS selector ID to\n *   // the canvas element.\n *   cnv.id(\"mycanvas\");\n * }\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.id = function(id) {\n  if (arguments.length === 0) {\n    return this.elt.id;\n  } else {\n    this.elt.id = id;\n    this.width = this.elt.offsetWidth;\n    this.height = this.elt.offsetHeight;\n    return this;\n  }\n};\n\n/**\n *\n * Adds given class to the element. If no class argument is passed in, it\n * instead returns a string containing the current class(es) of the element.\n *\n * @method class\n * @param  {String} [class] class to add\n * @return {p5.Element|String}\n */\np5.Element.prototype.class = function(c) {\n  if (arguments.length === 0) {\n    return this.elt.className;\n  } else {\n    this.elt.className = c;\n    return this;\n  }\n};\n\n/**\n * The .mousePressed() function is called once after every time a\n * mouse button is pressed over the element. This can be used to\n * attach element specific event listeners.\n *\n * @method mousePressed\n * @param  {Function} fxn function to be fired when mouse is\n *                    pressed over the element.\n * @return {p5.Element}\n * @example\n * <div class='norender'><code>\n * var cnv;\n * var d;\n * var g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mousePressed(changeGray); // attach listener for\n *                                 // canvas click only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width/2, height/2, d, d);\n * }\n *\n * // this function fires with any click anywhere\n * function mousePressed() {\n *   d = d + 10;\n * }\n *\n * // this function fires only when cnv is clicked\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mousePressed = function (fxn) {\n  attachListener('mousedown', fxn, this);\n  attachListener('touchstart', fxn, this);\n  return this;\n};\n\n/**\n * The .mouseWheel() function is called once after every time a\n * mouse wheel is scrolled over the element. This can be used to\n * attach element specific event listeners.\n * <br><br>\n * The function accepts a callback function as argument which will be executed\n * when the `wheel` event is triggered on the element, the callabck function is\n * passed one argument `event`. The `event.deltaY` property returns negative\n * values if the mouse wheel is rotated up or away from the user and positive\n * in the other direction. The `event.deltaX` does the same as `event.deltaY`\n * except it reads the horizontal wheel scroll of the mouse wheel.\n * <br><br>\n * On OS X with \"natural\" scrolling enabled, the `event.deltaY` values are\n * reversed.\n *\n * @method mouseWheel\n * @param  {Function} fxn function to be fired when mouse wheel is\n *                    scrolled over the element.\n * @return {p5.Element}\n * @example\n * <div class='norender'><code>\n * var cnv;\n * var d;\n * var g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mouseWheel(changeSize); // attach listener for\n *                               // activity on canvas only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width/2, height/2, d, d);\n * }\n *\n * // this function fires with mousewheel movement\n * // anywhere on screen\n * function mouseWheel() {\n *   g = g + 10;\n * }\n *\n * // this function fires with mousewheel movement\n * // over canvas only\n * function changeSize(event) {\n *   if (event.deltaY > 0) {\n *     d = d + 10;\n *   } else {\n *     d = d - 10;\n *   }\n * }\n * </code></div>\n *\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mouseWheel = function (fxn) {\n  attachListener('wheel', fxn, this);\n  return this;\n};\n\n/**\n * The .mouseReleased() function is called once after every time a\n * mouse button is released over the element. This can be used to\n * attach element specific event listeners.\n *\n * @method mouseReleased\n * @param  {Function} fxn function to be fired when mouse is\n *                    released over the element.\n * @return {p5.Element}\n * @example\n * <div class='norender'><code>\n * var cnv;\n * var d;\n * var g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mouseReleased(changeGray); // attach listener for\n *                                  // activity on canvas only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width/2, height/2, d, d);\n * }\n *\n * // this function fires after the mouse has been\n * // released\n * function mouseReleased() {\n *   d = d + 10;\n * }\n *\n * // this function fires after the mouse has been\n * // released while on canvas\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code></div>\n *\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mouseReleased = function (fxn) {\n  attachListener('mouseup', fxn, this);\n  attachListener('touchend', fxn, this);\n  return this;\n};\n\n\n/**\n * The .mouseClicked() function is called once after a mouse button is\n * pressed and released over the element. This can be used to\n * attach element specific event listeners.\n *\n * @method mouseClicked\n * @param  {Function} fxn function to be fired when mouse is\n *                    clicked over the element.\n * @return {p5.Element}\n * @example\n * var cnv;\n * var d;\n * var g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mouseClicked(changeGray); // attach listener for\n *                                 // activity on canvas only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width/2, height/2, d, d);\n * }\n *\n * // this function fires after the mouse has been\n * // clicked anywhere\n * function mouseClicked() {\n *   d = d + 10;\n * }\n *\n * // this function fires after the mouse has been\n * // clicked on canvas\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code></div>\n *\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mouseClicked = function (fxn) {\n  attachListener('click', fxn, this);\n  return this;\n};\n\n/**\n * The .mouseMoved() function is called once every time a\n * mouse moves over the element. This can be used to attach an\n * element specific event listener.\n *\n * @method mouseMoved\n * @param  {Function} fxn function to be fired when mouse is\n *                    moved over the element.\n * @return {p5.Element}\n * @example\n * <div class='norender'><code>\n * var cnv;\n * var d = 30;\n * var g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mouseMoved(changeSize); // attach listener for\n *                               // activity on canvas only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   fill(200);\n *   ellipse(width/2, height/2, d, d);\n * }\n *\n * // this function fires when mouse moves anywhere on\n * // page\n * function mouseMoved() {\n *   g = g + 5;\n *   if (g > 255) {\n *     g = 0;\n *   }\n * }\n *\n * // this function fires when mouse moves over canvas\n * function changeSize() {\n *   d = d + 2;\n *   if (d > 100) {\n *     d = 0;\n *   }\n * }\n * </code></div>\n *\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mouseMoved = function (fxn) {\n  attachListener('mousemove', fxn, this);\n  attachListener('touchmove', fxn, this);\n  return this;\n};\n\n/**\n * The .mouseOver() function is called once after every time a\n * mouse moves onto the element. This can be used to attach an\n * element specific event listener.\n *\n * @method mouseOver\n * @param  {Function} fxn function to be fired when mouse is\n *                    moved over the element.\n * @return {p5.Element}\n * @example\n * <div class='norender'><code>\n * var cnv;\n * var d;\n * var g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mouseOver(changeGray);\n *   d = 10;\n * }\n *\n * function draw() {\n *   ellipse(width/2, height/2, d, d);\n * }\n *\n * function changeGray() {\n *   d = d + 10;\n *   if (d > 100) {\n *     d = 0;\n *   }\n * }\n * </code></div>\n *\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mouseOver = function (fxn) {\n  attachListener('mouseover', fxn, this);\n  return this;\n};\n\n\n/**\n * The .changed() function is called when the value of an\n * element is changed.\n * This can be used to attach an element specific event listener.\n *\n * @method changed\n * @param  {Function} fxn function to be fired when the value of an\n * element changes.\n * @return {p5.Element}\n * @example\n * <div><code>\n * var sel;\n *\n * function setup() {\n *   textAlign(CENTER);\n *   background(200);\n *   sel = createSelect();\n *   sel.position(10, 10);\n *   sel.option('pear');\n *   sel.option('kiwi');\n *   sel.option('grape');\n *   sel.changed(mySelectEvent);\n * }\n *\n * function mySelectEvent() {\n *   var item = sel.value();\n *   background(200);\n *   text(\"it's a \"+item+\"!\", 50, 50);\n * }\n * </code></div>\n * <div><code>\n * var checkbox;\n * var cnv;\n *\n * function setup() {\n *   checkbox = createCheckbox(\" fill\");\n *   checkbox.changed(changeFill);\n *   cnv = createCanvas(100, 100);\n *   cnv.position(0, 30);\n *   noFill();\n * }\n *\n * function draw() {\n *   background(200);\n *   ellipse(50, 50, 50, 50);\n * }\n *\n * function changeFill() {\n *   if (checkbox.checked()) {\n *     fill(0);\n *   } else {\n *     noFill();\n *   }\n * }\n * </code></div>\n *\n * @alt\n * dropdown: pear, kiwi, grape. When selected text \"its a\" + selection shown.\n *\n */\np5.Element.prototype.changed = function (fxn) {\n  attachListener('change', fxn, this);\n  return this;\n};\n\n/**\n * The .input() function is called when any user input is\n * detected with an element. The input event is often used\n * to detect keystrokes in a input element, or changes on a\n * slider element. This can be used to attach an element specific\n * event listener.\n *\n * @method input\n * @param  {Function} fxn function to be fired on user input.\n * @return {p5.Element}\n * @example\n * <div class='norender'><code>\n * // Open your console to see the output\n * function setup() {\n *   var inp = createInput('');\n *   inp.input(myInputEvent);\n * }\n *\n * function myInputEvent() {\n *   console.log('you are typing: ', this.value());\n * }\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.input = function (fxn) {\n  attachListener('input', fxn, this);\n  return this;\n};\n\n/**\n * The .mouseOut() function is called once after every time a\n * mouse moves off the element. This can be used to attach an\n * element specific event listener.\n *\n * @method mouseOut\n * @param  {Function} fxn function to be fired when mouse is\n *                    moved off the element.\n * @return {p5.Element}\n * @example\n * <div class='norender'><code>\n * var cnv;\n * var d;\n * var g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.mouseOut(changeGray);\n *   d = 10;\n * }\n *\n * function draw() {\n *   ellipse(width/2, height/2, d, d);\n * }\n *\n * function changeGray() {\n *   d = d + 10;\n *   if (d > 100) {\n *     d = 0;\n *   }\n * }\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.mouseOut = function (fxn) {\n  attachListener('mouseout', fxn, this);\n  return this;\n};\n\n/**\n * The .touchStarted() function is called once after every time a touch is\n * registered. This can be used to attach element specific event listeners.\n *\n * @method touchStarted\n * @param  {Function} fxn function to be fired when touch is\n *                    started over the element.\n * @return {p5.Element}\n * @example\n * <div class='norender'><code>\n * var cnv;\n * var d;\n * var g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.touchStarted(changeGray); // attach listener for\n *                                 // canvas click only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width/2, height/2, d, d);\n * }\n *\n * // this function fires with any touch anywhere\n * function touchStarted() {\n *   d = d + 10;\n * }\n *\n * // this function fires only when cnv is clicked\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.touchStarted = function (fxn) {\n  attachListener('touchstart', fxn, this);\n  attachListener('mousedown', fxn, this);\n  return this;\n};\n\n/**\n * The .touchMoved() function is called once after every time a touch move is\n * registered. This can be used to attach element specific event listeners.\n *\n * @method touchMoved\n * @param  {Function} fxn function to be fired when touch is moved\n *                    over the element.\n * @return {p5.Element}\n * @example\n * <div class='norender'><code>\n * var cnv;\n * var g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.touchMoved(changeGray); // attach listener for\n *                               // canvas click only\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n * }\n *\n * // this function fires only when cnv is clicked\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code></div>\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.touchMoved = function (fxn) {\n  attachListener('touchmove', fxn, this);\n  attachListener('mousemove', fxn, this);\n  return this;\n};\n\n/**\n * The .touchEnded() function is called once after every time a touch is\n * registered. This can be used to attach element specific event listeners.\n *\n * @method touchEnded\n * @param  {Function} fxn function to be fired when touch is\n *                    ended over the element.\n * @return {p5.Element}\n * @example\n * <div class='norender'><code>\n * var cnv;\n * var d;\n * var g;\n * function setup() {\n *   cnv = createCanvas(100, 100);\n *   cnv.touchEnded(changeGray);   // attach listener for\n *                                 // canvas click only\n *   d = 10;\n *   g = 100;\n * }\n *\n * function draw() {\n *   background(g);\n *   ellipse(width/2, height/2, d, d);\n * }\n *\n * // this function fires with any touch anywhere\n * function touchEnded() {\n *   d = d + 10;\n * }\n *\n * // this function fires only when cnv is clicked\n * function changeGray() {\n *   g = random(0, 255);\n * }\n * </code></div>\n *\n *\n * @alt\n * no display.\n *\n */\np5.Element.prototype.touchEnded = function (fxn) {\n  attachListener('touchend', fxn, this);\n  attachListener('mouseup', fxn, this);\n  return this;\n};\n\n\n\n/**\n * The .dragOver() function is called once after every time a\n * file is dragged over the element. This can be used to attach an\n * element specific event listener.\n *\n * @method dragOver\n * @param  {Function} fxn function to be fired when mouse is\n *                    dragged over the element.\n * @return {p5.Element}\n */\np5.Element.prototype.dragOver = function (fxn) {\n  attachListener('dragover', fxn, this);\n  return this;\n};\n\n/**\n * The .dragLeave() function is called once after every time a\n * dragged file leaves the element area. This can be used to attach an\n * element specific event listener.\n *\n * @method dragLeave\n * @param  {Function} fxn function to be fired when mouse is\n *                    dragged over the element.\n * @return {p5.Element}\n */\np5.Element.prototype.dragLeave = function (fxn) {\n  attachListener('dragleave', fxn, this);\n  return this;\n};\n\n/**\n * The .drop() function is called for each file dropped on the element.\n * It requires a callback that is passed a p5.File object.  You can\n * optionally pass two callbacks, the first one (required) is triggered\n * for each file dropped when the file is loaded.  The second (optional)\n * is triggered just once when a file (or files) are dropped.\n *\n * @method drop\n * @param  {Function} callback triggered when files are dropped.\n * @param  {Function} callback to receive loaded file.\n * @return {p5.Element}\n * @example\n * <div><code>\n * function setup() {\n *   var c = createCanvas(100, 100);\n *   background(200);\n *   textAlign(CENTER);\n *   text('drop image', width/2, height/2);\n *   c.drop(gotFile);\n * }\n *\n * function gotFile(file) {\n *   var img = createImg(file.data).hide();\n *   // Draw the image onto the canvas\n *   image(img, 0, 0, width, height);\n * }\n * </code></div>\n *\n * @alt\n * Canvas turns into whatever image is dragged/dropped onto it.\n *\n */\np5.Element.prototype.drop = function (callback, fxn) {\n  // Make a file loader callback and trigger user's callback\n  function makeLoader(theFile) {\n    // Making a p5.File object\n    var p5file = new p5.File(theFile);\n    return function(e) {\n      p5file.data = e.target.result;\n      callback(p5file);\n    };\n  }\n\n  // Is the file stuff supported?\n  if (window.File && window.FileReader && window.FileList && window.Blob) {\n\n    // If you want to be able to drop you've got to turn off\n    // a lot of default behavior\n    attachListener('dragover',function(evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    },this);\n\n    // If this is a drag area we need to turn off the default behavior\n    attachListener('dragleave',function(evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    },this);\n\n    // If just one argument it's the callback for the files\n    if (arguments.length > 1) {\n      attachListener('drop', fxn, this);\n    }\n\n    // Deal with the files\n    attachListener('drop', function(evt) {\n\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      // A FileList\n      var files = evt.dataTransfer.files;\n\n      // Load each one and trigger the callback\n      for (var i = 0; i < files.length; i++) {\n        var f = files[i];\n        var reader = new FileReader();\n        reader.onload = makeLoader(f);\n\n\n        // Text or data?\n        // This should likely be improved\n        if (f.type.indexOf('text') > -1) {\n          reader.readAsText(f);\n        } else {\n          reader.readAsDataURL(f);\n        }\n      }\n    }, this);\n  } else {\n    console.log('The File APIs are not fully supported in this browser.');\n  }\n\n  return this;\n};\n\n\n\n\nfunction attachListener(ev, fxn, ctx) {\n  // LM removing, not sure why we had this?\n  // var _this = ctx;\n  // var f = function (e) { fxn(e, _this); };\n  var f = fxn.bind(ctx);\n  ctx.elt.addEventListener(ev, f, false);\n  ctx._events[ev] = f;\n}\n\n/**\n * Helper fxn for sharing pixel methods\n *\n */\np5.Element.prototype._setProperty = function (prop, value) {\n  this[prop] = value;\n};\n\n\nmodule.exports = p5.Element;\n\n},{\"./core\":37}],42:[function(_dereq_,module,exports){\n/**\n * @module Rendering\n * @submodule Rendering\n * @for p5\n */\n\nvar p5 = _dereq_('./core');\nvar constants = _dereq_('./constants');\n\n/**\n * Thin wrapper around a renderer, to be used for creating a\n * graphics buffer object. Use this class if you need\n * to draw into an off-screen graphics buffer. The two parameters define the\n * width and height in pixels. The fields and methods for this class are\n * extensive, but mirror the normal drawing API for p5.\n *\n * @class p5.Graphics\n * @constructor\n * @extends p5.Element\n * @param {String} elt DOM node that is wrapped\n * @param {Object} [pInst] pointer to p5 instance\n * @param {Boolean} whether we're using it as main canvas\n */\np5.Graphics = function(w, h, renderer, pInst) {\n\n  var r = renderer || constants.P2D;\n\n  var c = document.createElement('canvas');\n  var node = this._userNode || document.body;\n  node.appendChild(c);\n\n  p5.Element.call(this, c, pInst, false);\n  this._styles = [];\n  this.width = w;\n  this.height = h;\n  this._pixelDensity = pInst._pixelDensity;\n\n  if (r === constants.WEBGL) {\n    this._renderer = new p5.RendererGL(c, this, false);\n  } else {\n    this._renderer = new p5.Renderer2D(c, this, false);\n  }\n\n  this._renderer.resize(w, h);\n  this._renderer._applyDefaults();\n\n  pInst._elements.push(this);\n\n  // bind methods and props of p5 to the new object\n  for (var p in p5.prototype) {\n    if (!this[p]) {\n      if (typeof p5.prototype[p] === 'function') {\n        this[p] = p5.prototype[p].bind(this);\n      } else {\n        this[p] = p5.prototype[p];\n      }\n    }\n  }\n\n  return this;\n};\n\np5.Graphics.prototype = Object.create(p5.Element.prototype);\n\nmodule.exports = p5.Graphics;\n\n},{\"./constants\":36,\"./core\":37}],43:[function(_dereq_,module,exports){\n/**\n * @module Rendering\n * @submodule Rendering\n * @for p5\n */\n\nvar p5 = _dereq_('./core');\nvar constants = _dereq_('../core/constants');\n\n/**\n * Main graphics and rendering context, as well as the base API\n * implementation for p5.js \"core\". To be used as the superclass for\n * Renderer2D and Renderer3D classes, respecitvely.\n *\n * @class p5.Renderer\n * @constructor\n * @extends p5.Element\n * @param {String} elt DOM node that is wrapped\n * @param {Object} [pInst] pointer to p5 instance\n * @param {Boolean} whether we're using it as main canvas\n */\np5.Renderer = function(elt, pInst, isMainCanvas) {\n  p5.Element.call(this, elt, pInst);\n  this.canvas = elt;\n  this._pInst = pInst;\n  if (isMainCanvas) {\n    this._isMainCanvas = true;\n    // for pixel method sharing with pimage\n    this._pInst._setProperty('_curElement', this);\n    this._pInst._setProperty('canvas', this.canvas);\n    this._pInst._setProperty('width', this.width);\n    this._pInst._setProperty('height', this.height);\n  } else { // hide if offscreen buffer by default\n    this.canvas.style.display = 'none';\n    this._styles = []; // non-main elt styles stored in p5.Renderer\n  }\n\n\n  this._textSize = 12;\n  this._textLeading = 15;\n  this._textFont = 'sans-serif';\n  this._textStyle = constants.NORMAL;\n  this._textAscent = null;\n  this._textDescent = null;\n\n\n  this._rectMode = constants.CORNER;\n  this._ellipseMode = constants.CENTER;\n  this._curveTightness = 0;\n  this._imageMode = constants.CORNER;\n\n  this._tint = null;\n  this._doStroke = true;\n  this._doFill = true;\n  this._strokeSet = false;\n  this._fillSet = false;\n  this._colorMode = constants.RGB;\n  this._colorMaxes = {\n    rgb: [255, 255, 255, 255],\n    hsb: [360, 100, 100, 1],\n    hsl: [360, 100, 100, 1]\n  };\n\n};\n\np5.Renderer.prototype = Object.create(p5.Element.prototype);\n\n\n\n\n/**\n * Resize our canvas element.\n */\np5.Renderer.prototype.resize = function(w, h) {\n  this.width = w;\n  this.height = h;\n  this.elt.width = w * this._pInst._pixelDensity;\n  this.elt.height = h * this._pInst._pixelDensity;\n  this.elt.style.width = w +'px';\n  this.elt.style.height = h + 'px';\n  if (this._isMainCanvas) {\n    this._pInst._setProperty('width', this.width);\n    this._pInst._setProperty('height', this.height);\n  }\n};\n\np5.Renderer.prototype.textLeading = function(l) {\n\n  if (arguments.length && arguments[0]) {\n\n    this._setProperty('_textLeading', l);\n    return this;\n  }\n\n  return this._textLeading;\n};\n\np5.Renderer.prototype.textSize = function(s) {\n\n  if (arguments.length && arguments[0]) {\n\n    this._setProperty('_textSize', s);\n    this._setProperty('_textLeading', s * constants._DEFAULT_LEADMULT);\n    return this._applyTextProperties();\n  }\n\n  return this._textSize;\n};\n\np5.Renderer.prototype.textStyle = function(s) {\n\n  if (arguments.length && arguments[0]) {\n\n    if (s === constants.NORMAL ||\n      s === constants.ITALIC ||\n      s === constants.BOLD) {\n      this._setProperty('_textStyle', s);\n    }\n\n    return this._applyTextProperties();\n  }\n\n  return this._textStyle;\n};\n\np5.Renderer.prototype.textAscent = function() {\n  if (this._textAscent === null) {\n    this._updateTextMetrics();\n  }\n  return this._textAscent;\n};\n\np5.Renderer.prototype.textDescent = function() {\n\n  if (this._textDescent === null) {\n    this._updateTextMetrics();\n  }\n  return this._textDescent;\n};\n\np5.Renderer.prototype._applyDefaults = function(){\n  return this;\n};\n\n/**\n * Helper fxn to check font type (system or otf)\n */\np5.Renderer.prototype._isOpenType = function(f) {\n\n  f = f || this._textFont;\n  return (typeof f === 'object' && f.font && f.font.supported);\n};\n\np5.Renderer.prototype._updateTextMetrics = function() {\n\n  if (this._isOpenType()) {\n\n    this._setProperty('_textAscent', this._textFont._textAscent());\n    this._setProperty('_textDescent', this._textFont._textDescent());\n    return this;\n  }\n\n  // Adapted from http://stackoverflow.com/a/25355178\n  var text = document.createElement('span');\n  text.style.fontFamily = this._textFont;\n  text.style.fontSize = this._textSize + 'px';\n  text.innerHTML = 'ABCjgq|';\n\n  var block = document.createElement('div');\n  block.style.display = 'inline-block';\n  block.style.width = '1px';\n  block.style.height = '0px';\n\n  var container = document.createElement('div');\n  container.appendChild(text);\n  container.appendChild(block);\n\n  container.style.height = '0px';\n  container.style.overflow = 'hidden';\n  document.body.appendChild(container);\n\n  block.style.verticalAlign = 'baseline';\n  var blockOffset = calculateOffset(block);\n  var textOffset = calculateOffset(text);\n  var ascent = blockOffset[1] - textOffset[1];\n\n  block.style.verticalAlign = 'bottom';\n  blockOffset = calculateOffset(block);\n  textOffset = calculateOffset(text);\n  var height = blockOffset[1] - textOffset[1];\n  var descent = height - ascent;\n\n  document.body.removeChild(container);\n\n  this._setProperty('_textAscent', ascent);\n  this._setProperty('_textDescent', descent);\n\n  return this;\n};\n\n/**\n * Helper fxn to measure ascent and descent.\n * Adapted from http://stackoverflow.com/a/25355178\n */\nfunction calculateOffset(object) {\n  var currentLeft = 0,\n    currentTop = 0;\n  if (object.offsetParent) {\n    do {\n      currentLeft += object.offsetLeft;\n      currentTop += object.offsetTop;\n    } while (object = object.offsetParent);\n  } else {\n    currentLeft += object.offsetLeft;\n    currentTop += object.offsetTop;\n  }\n  return [currentLeft, currentTop];\n}\n\nmodule.exports = p5.Renderer;\n\n},{\"../core/constants\":36,\"./core\":37}],44:[function(_dereq_,module,exports){\n\nvar p5 = _dereq_('./core');\nvar canvas = _dereq_('./canvas');\nvar constants = _dereq_('./constants');\nvar filters = _dereq_('../image/filters');\n\n_dereq_('./p5.Renderer');\n\n/**\n * p5.Renderer2D\n * The 2D graphics canvas renderer class.\n * extends p5.Renderer\n */\nvar styleEmpty = 'rgba(0,0,0,0)';\n// var alphaThreshold = 0.00125; // minimum visible\n\np5.Renderer2D = function(elt, pInst, isMainCanvas){\n  p5.Renderer.call(this, elt, pInst, isMainCanvas);\n  this.drawingContext = this.canvas.getContext('2d');\n  this._pInst._setProperty('drawingContext', this.drawingContext);\n  return this;\n};\n\np5.Renderer2D.prototype = Object.create(p5.Renderer.prototype);\n\np5.Renderer2D.prototype._applyDefaults = function() {\n  this.drawingContext.fillStyle = constants._DEFAULT_FILL;\n  this.drawingContext.strokeStyle = constants._DEFAULT_STROKE;\n  this.drawingContext.lineCap = constants.ROUND;\n  this.drawingContext.font = 'normal 12px sans-serif';\n};\n\np5.Renderer2D.prototype.resize = function(w,h) {\n  p5.Renderer.prototype.resize.call(this, w,h);\n  this.drawingContext.scale(this._pInst._pixelDensity,\n                            this._pInst._pixelDensity);\n};\n\n//////////////////////////////////////////////\n// COLOR | Setting\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.background = function() {\n  this.drawingContext.save();\n  this.drawingContext.setTransform(1, 0, 0, 1, 0, 0);\n  this.drawingContext.scale(this._pInst._pixelDensity,\n                            this._pInst._pixelDensity);\n\n  if (arguments[0] instanceof p5.Image) {\n    this._pInst.image(arguments[0], 0, 0, this.width, this.height);\n  } else {\n    var curFill = this.drawingContext.fillStyle;\n    // create background rect\n    var color = this._pInst.color.apply(this, arguments);\n    var newFill = color.toString();\n    this.drawingContext.fillStyle = newFill;\n    this.drawingContext.fillRect(0, 0, this.width, this.height);\n    // reset fill\n    this.drawingContext.fillStyle = curFill;\n  }\n  this.drawingContext.restore();\n};\n\np5.Renderer2D.prototype.clear = function() {\n  this.drawingContext.clearRect(0, 0, this.width, this.height);\n};\n\np5.Renderer2D.prototype.fill = function() {\n\n  var ctx = this.drawingContext;\n  var color = this._pInst.color.apply(this, arguments);\n  ctx.fillStyle = color.toString();\n};\n\np5.Renderer2D.prototype.stroke = function() {\n  var ctx = this.drawingContext;\n  var color = this._pInst.color.apply(this, arguments);\n  ctx.strokeStyle = color.toString();\n};\n\n//////////////////////////////////////////////\n// IMAGE | Loading & Displaying\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.image =\n  function (img, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) {\n  var cnv;\n  try {\n    if (this._tint) {\n      if (p5.MediaElement && img instanceof p5.MediaElement) {\n        img.loadPixels();\n      }\n      if (img.canvas) {\n        cnv = this._getTintedImageCanvas(img);\n      }\n    }\n    if (!cnv) {\n      cnv = img.canvas || img.elt;\n    }\n    this.drawingContext.drawImage(cnv, sx, sy, sWidth, sHeight, dx, dy,\n      dWidth, dHeight);\n  } catch (e) {\n    if (e.name !== 'NS_ERROR_NOT_AVAILABLE') {\n      throw e;\n    }\n  }\n};\n\np5.Renderer2D.prototype._getTintedImageCanvas = function (img) {\n  if (!img.canvas) {\n    return img;\n  }\n  var pixels = filters._toPixels(img.canvas);\n  var tmpCanvas = document.createElement('canvas');\n  tmpCanvas.width = img.canvas.width;\n  tmpCanvas.height = img.canvas.height;\n  var tmpCtx = tmpCanvas.getContext('2d');\n  var id = tmpCtx.createImageData(img.canvas.width, img.canvas.height);\n  var newPixels = id.data;\n  for (var i = 0; i < pixels.length; i += 4) {\n    var r = pixels[i];\n    var g = pixels[i + 1];\n    var b = pixels[i + 2];\n    var a = pixels[i + 3];\n    newPixels[i] = r * this._tint[0] / 255;\n    newPixels[i + 1] = g * this._tint[1] / 255;\n    newPixels[i + 2] = b * this._tint[2] / 255;\n    newPixels[i + 3] = a * this._tint[3] / 255;\n  }\n  tmpCtx.putImageData(id, 0, 0);\n  return tmpCanvas;\n};\n\n\n//////////////////////////////////////////////\n// IMAGE | Pixels\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.blendMode = function(mode) {\n  this.drawingContext.globalCompositeOperation = mode;\n};\np5.Renderer2D.prototype.blend = function() {\n  var currBlend = this.drawingContext.globalCompositeOperation;\n  var blendMode = arguments[arguments.length - 1];\n\n  var copyArgs = Array.prototype.slice.call(\n    arguments,\n    0,\n    arguments.length - 1\n  );\n\n  this.drawingContext.globalCompositeOperation = blendMode;\n  if (this._pInst) {\n    this._pInst.copy.apply(this._pInst, copyArgs);\n  } else {\n    this.copy.apply(this, copyArgs);\n  }\n  this.drawingContext.globalCompositeOperation = currBlend;\n};\n\np5.Renderer2D.prototype.copy = function () {\n  var srcImage, sx, sy, sw, sh, dx, dy, dw, dh;\n  if (arguments.length === 9) {\n    srcImage = arguments[0];\n    sx = arguments[1];\n    sy = arguments[2];\n    sw = arguments[3];\n    sh = arguments[4];\n    dx = arguments[5];\n    dy = arguments[6];\n    dw = arguments[7];\n    dh = arguments[8];\n  } else if (arguments.length === 8) {\n    srcImage = this._pInst;\n    sx = arguments[0];\n    sy = arguments[1];\n    sw = arguments[2];\n    sh = arguments[3];\n    dx = arguments[4];\n    dy = arguments[5];\n    dw = arguments[6];\n    dh = arguments[7];\n  } else {\n    throw new Error('Signature not supported');\n  }\n  p5.Renderer2D._copyHelper(srcImage, sx, sy, sw, sh, dx, dy, dw, dh);\n};\n\np5.Renderer2D._copyHelper =\nfunction (srcImage, sx, sy, sw, sh, dx, dy, dw, dh) {\n  if (!srcImage.canvas) {\n    srcImage.loadPixels();\n  }\n  var s = srcImage.canvas.width / srcImage.width;\n  this.drawingContext.drawImage(srcImage.canvas,\n    s * sx, s * sy, s * sw, s * sh, dx, dy, dw, dh);\n};\n\np5.Renderer2D.prototype.get = function(x, y, w, h) {\n  if (x === undefined && y === undefined &&\n      w === undefined && h === undefined){\n    x = 0;\n    y = 0;\n    w = this.width;\n    h = this.height;\n  } else if (w === undefined && h === undefined) {\n    w = 1;\n    h = 1;\n  }\n\n  // if the section does not overlap the canvas\n  if(x + w < 0 || y + h < 0 || x > this.width || y > this.height){\n    return [0, 0, 0, 255];\n  }\n\n  var ctx = this._pInst || this;\n\n  var pd = ctx._pixelDensity;\n\n  // round down to get integer numbers\n  x = Math.floor(x);\n  y = Math.floor(y);\n\n  var sx = x * pd;\n  var sy = y * pd;\n  if (w === 1 && h === 1){\n    var imageData = this.drawingContext.getImageData(sx, sy, 1, 1).data;\n    //imageData = [0,0,0,0];\n    return [\n      imageData[0],\n      imageData[1],\n      imageData[2],\n      imageData[3]\n    ];\n  } else {\n    //auto constrain the width and height to\n    //dimensions of the source image\n    var dw = Math.min(w, ctx.width);\n    var dh = Math.min(h, ctx.height);\n    var sw = dw * pd;\n    var sh = dh * pd;\n\n    var region = new p5.Image(dw, dh);\n    region.canvas.getContext('2d').drawImage(this.canvas, sx, sy, sw, sh,\n      0, 0, dw, dh);\n\n    return region;\n  }\n};\n\np5.Renderer2D.prototype.loadPixels = function () {\n  var pd = this._pixelDensity || this._pInst._pixelDensity;\n  var w = this.width * pd;\n  var h = this.height * pd;\n  var imageData = this.drawingContext.getImageData(0, 0, w, h);\n  // @todo this should actually set pixels per object, so diff buffers can\n  // have diff pixel arrays.\n  if (this._pInst) {\n    this._pInst._setProperty('imageData', imageData);\n    this._pInst._setProperty('pixels', imageData.data);\n  } else { // if called by p5.Image\n    this._setProperty('imageData', imageData);\n    this._setProperty('pixels', imageData.data);\n  }\n};\n\np5.Renderer2D.prototype.set = function (x, y, imgOrCol) {\n  // round down to get integer numbers\n  x = Math.floor(x);\n  y = Math.floor(y);\n  if (imgOrCol instanceof p5.Image) {\n    this.drawingContext.save();\n    this.drawingContext.setTransform(1, 0, 0, 1, 0, 0);\n    this.drawingContext.scale(this._pInst._pixelDensity,\n      this._pInst._pixelDensity);\n    this.drawingContext.drawImage(imgOrCol.canvas, x, y);\n    this.loadPixels.call(this._pInst);\n    this.drawingContext.restore();\n  } else {\n    var ctx = this._pInst || this;\n    var r = 0, g = 0, b = 0, a = 0;\n    var idx = 4*((y * ctx._pixelDensity) *\n      (this.width * ctx._pixelDensity) + (x * ctx._pixelDensity));\n    if (!ctx.imageData) {\n      ctx.loadPixels.call(ctx);\n    }\n    if (typeof imgOrCol === 'number') {\n      if (idx < ctx.pixels.length) {\n        r = imgOrCol;\n        g = imgOrCol;\n        b = imgOrCol;\n        a = 255;\n        //this.updatePixels.call(this);\n      }\n    }\n    else if (imgOrCol instanceof Array) {\n      if (imgOrCol.length < 4) {\n        throw new Error('pixel array must be of the form [R, G, B, A]');\n      }\n      if (idx < ctx.pixels.length) {\n        r = imgOrCol[0];\n        g = imgOrCol[1];\n        b = imgOrCol[2];\n        a = imgOrCol[3];\n        //this.updatePixels.call(this);\n      }\n    } else if (imgOrCol instanceof p5.Color) {\n      if (idx < ctx.pixels.length) {\n        r = imgOrCol.levels[0];\n        g = imgOrCol.levels[1];\n        b = imgOrCol.levels[2];\n        a = imgOrCol.levels[3];\n        //this.updatePixels.call(this);\n      }\n    }\n    // loop over pixelDensity * pixelDensity\n    for (var i = 0; i < ctx._pixelDensity; i++) {\n      for (var j = 0; j < ctx._pixelDensity; j++) {\n        // loop over\n        idx = 4*((y * ctx._pixelDensity + j) * this.width *\n          ctx._pixelDensity + (x * ctx._pixelDensity + i));\n        ctx.pixels[idx] = r;\n        ctx.pixels[idx+1] = g;\n        ctx.pixels[idx+2] = b;\n        ctx.pixels[idx+3] = a;\n      }\n    }\n  }\n};\n\np5.Renderer2D.prototype.updatePixels = function (x, y, w, h) {\n  var pd = this._pixelDensity || this._pInst._pixelDensity;\n  if (x === undefined &&\n      y === undefined &&\n      w === undefined &&\n      h === undefined) {\n    x = 0;\n    y = 0;\n    w = this.width;\n    h = this.height;\n  }\n  w *= pd;\n  h *= pd;\n\n  if (this._pInst) {\n    this.drawingContext.putImageData(this._pInst.imageData, x, y, 0, 0, w, h);\n  } else {\n    this.drawingContext.putImageData(this.imageData, x, y, 0, 0, w, h);\n  }\n};\n\n//////////////////////////////////////////////\n// SHAPE | 2D Primitives\n//////////////////////////////////////////////\n\n/**\n * Generate a cubic Bezier representing an arc on the unit circle of total\n * angle `size` radians, beginning `start` radians above the x-axis. Up to\n * four of these curves are combined to make a full arc.\n *\n * See www.joecridge.me/bezier.pdf for an explanation of the method.\n */\np5.Renderer2D.prototype._acuteArcToBezier =\n  function _acuteArcToBezier(start, size) {\n  // Evauate constants.\n  var alpha = size / 2.0,\n    cos_alpha = Math.cos(alpha),\n    sin_alpha = Math.sin(alpha),\n    cot_alpha = 1.0 / Math.tan(alpha),\n    phi = start + alpha,  // This is how far the arc needs to be rotated.\n    cos_phi = Math.cos(phi),\n    sin_phi = Math.sin(phi),\n    lambda = (4.0 - cos_alpha) / 3.0,\n    mu = sin_alpha + (cos_alpha - lambda) * cot_alpha;\n\n  // Return rotated waypoints.\n  return {\n    ax: Math.cos(start),\n    ay: Math.sin(start),\n    bx: lambda * cos_phi + mu * sin_phi,\n    by: lambda * sin_phi - mu * cos_phi,\n    cx: lambda * cos_phi - mu * sin_phi,\n    cy: lambda * sin_phi + mu * cos_phi,\n    dx: Math.cos(start + size),\n    dy: Math.sin(start + size)\n  };\n};\n\np5.Renderer2D.prototype.arc =\n  function(x, y, w, h, start, stop, mode) {\n  var ctx = this.drawingContext;\n  var vals = canvas.arcModeAdjust(x, y, w, h, this._ellipseMode);\n  var rx = vals.w / 2.0;\n  var ry = vals.h / 2.0;\n  var epsilon = 0.00001;  // Smallest visible angle on displays up to 4K.\n  var arcToDraw = 0;\n  var curves = [];\n\n  // Create curves\n  while(stop - start > epsilon) {\n    arcToDraw = Math.min(stop - start, constants.HALF_PI);\n    curves.push(this._acuteArcToBezier(start, arcToDraw));\n    start += arcToDraw;\n  }\n\n  // Fill curves\n  if (this._doFill) {\n    ctx.beginPath();\n    curves.forEach(function (curve, index) {\n      if (index === 0) {\n        ctx.moveTo(vals.x + curve.ax * rx, vals.y + curve.ay * ry);\n      }\n      ctx.bezierCurveTo(vals.x + curve.bx * rx, vals.y + curve.by * ry,\n                        vals.x + curve.cx * rx, vals.y + curve.cy * ry,\n                        vals.x + curve.dx * rx, vals.y + curve.dy * ry);\n    });\n    if (mode === constants.PIE || mode == null) {\n      ctx.lineTo(vals.x, vals.y);\n    }\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  // Stroke curves\n  if (this._doStroke) {\n    ctx.beginPath();\n    curves.forEach(function (curve, index) {\n      if (index === 0) {\n        ctx.moveTo(vals.x + curve.ax * rx, vals.y + curve.ay * ry);\n      }\n      ctx.bezierCurveTo(vals.x + curve.bx * rx, vals.y + curve.by * ry,\n                        vals.x + curve.cx * rx, vals.y + curve.cy * ry,\n                        vals.x + curve.dx * rx, vals.y + curve.dy * ry);\n    });\n    if (mode === constants.PIE) {\n      ctx.lineTo(vals.x, vals.y);\n      ctx.closePath();\n    } else if (mode === constants.CHORD) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.ellipse = function(args) {\n  var ctx = this.drawingContext;\n  var doFill = this._doFill, doStroke = this._doStroke;\n  var x = args[0],\n    y = args[1],\n    w = args[2],\n    h = args[3];\n  if (doFill && !doStroke) {\n    if(ctx.fillStyle === styleEmpty) {\n      return this;\n    }\n  } else if (!doFill && doStroke) {\n    if(ctx.strokeStyle === styleEmpty) {\n      return this;\n    }\n  }\n  var kappa = 0.5522847498,\n    ox = (w / 2) * kappa, // control point offset horizontal\n    oy = (h / 2) * kappa, // control point offset vertical\n    xe = x + w,      // x-end\n    ye = y + h,      // y-end\n    xm = x + w / 2,  // x-middle\n    ym = y + h / 2;  // y-middle\n  ctx.beginPath();\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n  if (doFill) {\n    ctx.fill();\n  }\n  if (doStroke) {\n    ctx.stroke();\n  }\n};\n\np5.Renderer2D.prototype.line = function(x1, y1, x2, y2) {\n  var ctx = this.drawingContext;\n  if (!this._doStroke) {\n    return this;\n  } else if(ctx.strokeStyle === styleEmpty){\n    return this;\n  }\n  // Translate the line by (0.5, 0.5) to draw it crisp\n  if (ctx.lineWidth % 2 === 1) {\n    ctx.translate(0.5, 0.5);\n  }\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.stroke();\n  if (ctx.lineWidth % 2 === 1) {\n    ctx.translate(-0.5, -0.5);\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.point = function(x, y) {\n  var ctx = this.drawingContext;\n  var s = ctx.strokeStyle;\n  var f = ctx.fillStyle;\n  if (!this._doStroke) {\n    return this;\n  } else if(ctx.strokeStyle === styleEmpty){\n    return this;\n  }\n  x = Math.round(x);\n  y = Math.round(y);\n  ctx.fillStyle = s;\n  if (ctx.lineWidth > 1) {\n    ctx.beginPath();\n    ctx.arc(\n      x,\n      y,\n      ctx.lineWidth / 2,\n      0,\n      constants.TWO_PI,\n      false\n    );\n    ctx.fill();\n  } else {\n    ctx.fillRect(x, y, 1, 1);\n  }\n  ctx.fillStyle = f;\n};\n\np5.Renderer2D.prototype.quad =\n  function(x1, y1, x2, y2, x3, y3, x4, y4) {\n  var ctx = this.drawingContext;\n  var doFill = this._doFill, doStroke = this._doStroke;\n  if (doFill && !doStroke) {\n    if(ctx.fillStyle === styleEmpty) {\n      return this;\n    }\n  } else if (!doFill && doStroke) {\n    if(ctx.strokeStyle === styleEmpty) {\n      return this;\n    }\n  }\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x3, y3);\n  ctx.lineTo(x4, y4);\n  ctx.closePath();\n  if (doFill) {\n    ctx.fill();\n  }\n  if (doStroke) {\n    ctx.stroke();\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.rect = function(args) {\n  var x = args[0],\n    y = args[1],\n    w = args[2],\n    h = args[3],\n    tl = args[4],\n    tr = args[5],\n    br = args[6],\n    bl = args[7];\n  var ctx = this.drawingContext;\n  var doFill = this._doFill, doStroke = this._doStroke;\n  if (doFill && !doStroke) {\n    if(ctx.fillStyle === styleEmpty) {\n      return this;\n    }\n  } else if (!doFill && doStroke) {\n    if(ctx.strokeStyle === styleEmpty) {\n      return this;\n    }\n  }\n  // Translate the line by (0.5, 0.5) to draw a crisp rectangle border\n  if (this._doStroke && ctx.lineWidth % 2 === 1) {\n    ctx.translate(0.5, 0.5);\n  }\n  ctx.beginPath();\n\n  if (typeof tl === 'undefined') {\n    // No rounded corners\n    ctx.rect(x, y, w, h);\n  } else {\n    // At least one rounded corner\n    // Set defaults when not specified\n    if (typeof tr === 'undefined') { tr = tl; }\n    if (typeof br === 'undefined') { br = tr; }\n    if (typeof bl === 'undefined') { bl = br; }\n\n    var hw = w / 2;\n    var hh = h / 2;\n\n    // Clip radii\n    if (w < 2 * tl) { tl = hw; }\n    if (h < 2 * tl) { tl = hh; }\n    if (w < 2 * tr) { tr = hw; }\n    if (h < 2 * tr) { tr = hh; }\n    if (w < 2 * br) { br = hw; }\n    if (h < 2 * br) { br = hh; }\n    if (w < 2 * bl) { bl = hw; }\n    if (h < 2 * bl) { bl = hh; }\n\n    // Draw shape\n    ctx.beginPath();\n    ctx.moveTo(x + tl, y);\n    ctx.arcTo(x + w, y, x + w, y + h, tr);\n    ctx.arcTo(x + w, y + h, x, y + h, br);\n    ctx.arcTo(x, y + h, x, y, bl);\n    ctx.arcTo(x, y, x + w, y, tl);\n    ctx.closePath();\n  }\n  if (this._doFill) {\n    ctx.fill();\n  }\n  if (this._doStroke) {\n    ctx.stroke();\n  }\n  if (this._doStroke && ctx.lineWidth % 2 === 1) {\n    ctx.translate(-0.5, -0.5);\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.triangle = function(args) {\n  var ctx = this.drawingContext;\n  var doFill = this._doFill, doStroke = this._doStroke;\n  var x1=args[0], y1=args[1];\n  var x2=args[2], y2=args[3];\n  var x3=args[4], y3=args[5];\n  if (doFill && !doStroke) {\n    if(ctx.fillStyle === styleEmpty) {\n      return this;\n    }\n  } else if (!doFill && doStroke) {\n    if(ctx.strokeStyle === styleEmpty) {\n      return this;\n    }\n  }\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineTo(x3, y3);\n  ctx.closePath();\n  if (doFill) {\n    ctx.fill();\n  }\n  if (doStroke) {\n    ctx.stroke();\n  }\n};\n\np5.Renderer2D.prototype.endShape =\nfunction (mode, vertices, isCurve, isBezier,\n    isQuadratic, isContour, shapeKind) {\n  if (vertices.length === 0) {\n    return this;\n  }\n  if (!this._doStroke && !this._doFill) {\n    return this;\n  }\n  var closeShape = mode === constants.CLOSE;\n  var v;\n  if (closeShape && !isContour) {\n    vertices.push(vertices[0]);\n  }\n  var i, j;\n  var numVerts = vertices.length;\n  if (isCurve && (shapeKind === constants.POLYGON || shapeKind === null)) {\n    if (numVerts > 3) {\n      var b = [], s = 1 - this._curveTightness;\n      this.drawingContext.beginPath();\n      this.drawingContext.moveTo(vertices[1][0], vertices[1][1]);\n      for (i = 1; i + 2 < numVerts; i++) {\n        v = vertices[i];\n        b[0] = [\n          v[0],\n          v[1]\n        ];\n        b[1] = [\n          v[0] + (s * vertices[i + 1][0] - s * vertices[i - 1][0]) / 6,\n          v[1] + (s * vertices[i + 1][1] - s * vertices[i - 1][1]) / 6\n        ];\n        b[2] = [\n          vertices[i + 1][0] +\n          (s * vertices[i][0]-s * vertices[i + 2][0]) / 6,\n          vertices[i + 1][1]+(s * vertices[i][1] - s*vertices[i + 2][1]) / 6\n        ];\n        b[3] = [\n          vertices[i + 1][0],\n          vertices[i + 1][1]\n        ];\n        this.drawingContext.bezierCurveTo(b[1][0],b[1][1],\n          b[2][0],b[2][1],b[3][0],b[3][1]);\n      }\n      if (closeShape) {\n        this.drawingContext.lineTo(vertices[i + 1][0], vertices[i + 1][1]);\n      }\n      this._doFillStrokeClose();\n    }\n  } else if (isBezier&&(shapeKind===constants.POLYGON ||shapeKind === null)) {\n    this.drawingContext.beginPath();\n    for (i = 0; i < numVerts; i++) {\n      if (vertices[i].isVert) {\n        if (vertices[i].moveTo) {\n          this.drawingContext.moveTo(vertices[i][0], vertices[i][1]);\n        } else {\n          this.drawingContext.lineTo(vertices[i][0], vertices[i][1]);\n        }\n      } else {\n        this.drawingContext.bezierCurveTo(vertices[i][0], vertices[i][1],\n          vertices[i][2], vertices[i][3], vertices[i][4], vertices[i][5]);\n      }\n    }\n    this._doFillStrokeClose();\n  } else if (isQuadratic &&\n    (shapeKind === constants.POLYGON || shapeKind === null)) {\n    this.drawingContext.beginPath();\n    for (i = 0; i < numVerts; i++) {\n      if (vertices[i].isVert) {\n        if (vertices[i].moveTo) {\n          this.drawingContext.moveTo([0], vertices[i][1]);\n        } else {\n          this.drawingContext.lineTo(vertices[i][0], vertices[i][1]);\n        }\n      } else {\n        this.drawingContext.quadraticCurveTo(vertices[i][0], vertices[i][1],\n          vertices[i][2], vertices[i][3]);\n      }\n    }\n    this._doFillStrokeClose();\n  } else {\n    if (shapeKind === constants.POINTS) {\n      for (i = 0; i < numVerts; i++) {\n        v = vertices[i];\n        if (this._doStroke) {\n          this._pInst.stroke(v[6]);\n        }\n        this._pInst.point(v[0], v[1]);\n      }\n    } else if (shapeKind === constants.LINES) {\n      for (i = 0; i + 1 < numVerts; i += 2) {\n        v = vertices[i];\n        if (this._doStroke) {\n          this._pInst.stroke(vertices[i + 1][6]);\n        }\n        this._pInst.line(v[0], v[1], vertices[i + 1][0], vertices[i + 1][1]);\n      }\n    } else if (shapeKind === constants.TRIANGLES) {\n      for (i = 0; i + 2 < numVerts; i += 3) {\n        v = vertices[i];\n        this.drawingContext.beginPath();\n        this.drawingContext.moveTo(v[0], v[1]);\n        this.drawingContext.lineTo(vertices[i + 1][0], vertices[i + 1][1]);\n        this.drawingContext.lineTo(vertices[i + 2][0], vertices[i + 2][1]);\n        this.drawingContext.lineTo(v[0], v[1]);\n        if (this._doFill) {\n          this._pInst.fill(vertices[i + 2][5]);\n          this.drawingContext.fill();\n        }\n        if (this._doStroke) {\n          this._pInst.stroke(vertices[i + 2][6]);\n          this.drawingContext.stroke();\n        }\n        this.drawingContext.closePath();\n      }\n    } else if (shapeKind === constants.TRIANGLE_STRIP) {\n      for (i = 0; i + 1 < numVerts; i++) {\n        v = vertices[i];\n        this.drawingContext.beginPath();\n        this.drawingContext.moveTo(vertices[i + 1][0], vertices[i + 1][1]);\n        this.drawingContext.lineTo(v[0], v[1]);\n        if (this._doStroke) {\n          this._pInst.stroke(vertices[i + 1][6]);\n        }\n        if (this._doFill) {\n          this._pInst.fill(vertices[i + 1][5]);\n        }\n        if (i + 2 < numVerts) {\n          this.drawingContext.lineTo(vertices[i + 2][0], vertices[i + 2][1]);\n          if (this._doStroke) {\n            this._pInst.stroke(vertices[i + 2][6]);\n          }\n          if (this._doFill) {\n            this._pInst.fill(vertices[i + 2][5]);\n          }\n        }\n        this._doFillStrokeClose();\n      }\n    } else if (shapeKind === constants.TRIANGLE_FAN) {\n      if (numVerts > 2) {\n        this.drawingContext.beginPath();\n        this.drawingContext.moveTo(vertices[0][0], vertices[0][1]);\n        this.drawingContext.lineTo(vertices[1][0], vertices[1][1]);\n        this.drawingContext.lineTo(vertices[2][0], vertices[2][1]);\n        if (this._doFill) {\n          this._pInst.fill(vertices[2][5]);\n        }\n        if (this._doStroke) {\n          this._pInst.stroke(vertices[2][6]);\n        }\n        this._doFillStrokeClose();\n        for (i = 3; i < numVerts; i++) {\n          v = vertices[i];\n          this.drawingContext.beginPath();\n          this.drawingContext.moveTo(vertices[0][0], vertices[0][1]);\n          this.drawingContext.lineTo(vertices[i - 1][0], vertices[i - 1][1]);\n          this.drawingContext.lineTo(v[0], v[1]);\n          if (this._doFill) {\n            this._pInst.fill(v[5]);\n          }\n          if (this._doStroke) {\n            this._pInst.stroke(v[6]);\n          }\n          this._doFillStrokeClose();\n        }\n      }\n    } else if (shapeKind === constants.QUADS) {\n      for (i = 0; i + 3 < numVerts; i += 4) {\n        v = vertices[i];\n        this.drawingContext.beginPath();\n        this.drawingContext.moveTo(v[0], v[1]);\n        for (j = 1; j < 4; j++) {\n          this.drawingContext.lineTo(vertices[i + j][0], vertices[i + j][1]);\n        }\n        this.drawingContext.lineTo(v[0], v[1]);\n        if (this._doFill) {\n          this._pInst.fill(vertices[i + 3][5]);\n        }\n        if (this._doStroke) {\n          this._pInst.stroke(vertices[i + 3][6]);\n        }\n        this._doFillStrokeClose();\n      }\n    } else if (shapeKind === constants.QUAD_STRIP) {\n      if (numVerts > 3) {\n        for (i = 0; i + 1 < numVerts; i += 2) {\n          v = vertices[i];\n          this.drawingContext.beginPath();\n          if (i + 3 < numVerts) {\n            this.drawingContext.moveTo(vertices[i + 2][0], vertices[i+2][1]);\n            this.drawingContext.lineTo(v[0], v[1]);\n            this.drawingContext.lineTo(vertices[i + 1][0], vertices[i+1][1]);\n            this.drawingContext.lineTo(vertices[i + 3][0], vertices[i+3][1]);\n            if (this._doFill) {\n              this._pInst.fill(vertices[i + 3][5]);\n            }\n            if (this._doStroke) {\n              this._pInst.stroke(vertices[i + 3][6]);\n            }\n          } else {\n            this.drawingContext.moveTo(v[0], v[1]);\n            this.drawingContext.lineTo(vertices[i + 1][0], vertices[i+1][1]);\n          }\n          this._doFillStrokeClose();\n        }\n      }\n    } else {\n      this.drawingContext.beginPath();\n      this.drawingContext.moveTo(vertices[0][0], vertices[0][1]);\n      for (i = 1; i < numVerts; i++) {\n        v = vertices[i];\n        if (v.isVert) {\n          if (v.moveTo) {\n            this.drawingContext.moveTo(v[0], v[1]);\n          } else {\n            this.drawingContext.lineTo(v[0], v[1]);\n          }\n        }\n      }\n      this._doFillStrokeClose();\n    }\n  }\n  isCurve = false;\n  isBezier = false;\n  isQuadratic = false;\n  isContour = false;\n  if (closeShape) {\n    vertices.pop();\n  }\n  return this;\n};\n//////////////////////////////////////////////\n// SHAPE | Attributes\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.noSmooth = function() {\n  if ('imageSmoothingEnabled' in this.drawingContext) {\n    this.drawingContext.imageSmoothingEnabled = false;\n  }\n  else if ('mozImageSmoothingEnabled' in this.drawingContext) {\n    this.drawingContext.mozImageSmoothingEnabled = false;\n  }\n  else if ('webkitImageSmoothingEnabled' in this.drawingContext) {\n    this.drawingContext.webkitImageSmoothingEnabled = false;\n  }\n  else if ('msImageSmoothingEnabled' in this.drawingContext) {\n    this.drawingContext.msImageSmoothingEnabled = false;\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.smooth = function() {\n  if ('imageSmoothingEnabled' in this.drawingContext) {\n    this.drawingContext.imageSmoothingEnabled = true;\n  }\n  else if ('mozImageSmoothingEnabled' in this.drawingContext) {\n    this.drawingContext.mozImageSmoothingEnabled = true;\n  }\n  else if ('webkitImageSmoothingEnabled' in this.drawingContext) {\n    this.drawingContext.webkitImageSmoothingEnabled = true;\n  }\n  else if ('msImageSmoothingEnabled' in this.drawingContext) {\n    this.drawingContext.msImageSmoothingEnabled = true;\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.strokeCap = function(cap) {\n  if (cap === constants.ROUND ||\n    cap === constants.SQUARE ||\n    cap === constants.PROJECT) {\n    this.drawingContext.lineCap = cap;\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.strokeJoin = function(join) {\n  if (join === constants.ROUND ||\n    join === constants.BEVEL ||\n    join === constants.MITER) {\n    this.drawingContext.lineJoin = join;\n  }\n  return this;\n};\n\np5.Renderer2D.prototype.strokeWeight = function(w) {\n  if (typeof w === 'undefined' || w === 0) {\n    // hack because lineWidth 0 doesn't work\n    this.drawingContext.lineWidth = 0.0001;\n  } else {\n    this.drawingContext.lineWidth = w;\n  }\n  return this;\n};\n\np5.Renderer2D.prototype._getFill = function(){\n  return this.drawingContext.fillStyle;\n};\n\np5.Renderer2D.prototype._getStroke = function(){\n  return this.drawingContext.strokeStyle;\n};\n\n//////////////////////////////////////////////\n// SHAPE | Curves\n//////////////////////////////////////////////\np5.Renderer2D.prototype.bezier = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n  this._pInst.beginShape();\n  this._pInst.vertex(x1, y1);\n  this._pInst.bezierVertex(x2, y2, x3, y3, x4, y4);\n  this._pInst.endShape();\n  return this;\n};\n\np5.Renderer2D.prototype.curve = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n  this._pInst.beginShape();\n  this._pInst.curveVertex(x1, y1);\n  this._pInst.curveVertex(x2, y2);\n  this._pInst.curveVertex(x3, y3);\n  this._pInst.curveVertex(x4, y4);\n  this._pInst.endShape();\n  return this;\n};\n\n//////////////////////////////////////////////\n// SHAPE | Vertex\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype._doFillStrokeClose = function () {\n  if (this._doFill) {\n    this.drawingContext.fill();\n  }\n  if (this._doStroke) {\n    this.drawingContext.stroke();\n  }\n  this.drawingContext.closePath();\n};\n\n//////////////////////////////////////////////\n// TRANSFORM\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.applyMatrix =\nfunction(n00, n01, n02, n10, n11, n12) {\n  this.drawingContext.transform(n00, n01, n02, n10, n11, n12);\n};\n\np5.Renderer2D.prototype.resetMatrix = function() {\n  this.drawingContext.setTransform(1, 0, 0, 1, 0, 0);\n  this.drawingContext.scale(this._pInst._pixelDensity,\n                            this._pInst._pixelDensity);\n  return this;\n};\n\np5.Renderer2D.prototype.rotate = function(r) {\n  this.drawingContext.rotate(r);\n};\n\np5.Renderer2D.prototype.scale = function(x,y) {\n  this.drawingContext.scale(x, y);\n  return this;\n};\n\np5.Renderer2D.prototype.shearX = function(angle) {\n  if (this._pInst._angleMode === constants.DEGREES) {\n    // undoing here, because it gets redone in tan()\n    angle = this._pInst.degrees(angle);\n  }\n  this.drawingContext.transform(1, 0, this._pInst.tan(angle), 1, 0, 0);\n  return this;\n};\n\np5.Renderer2D.prototype.shearY = function(angle) {\n  if (this._pInst._angleMode === constants.DEGREES) {\n    // undoing here, because it gets redone in tan()\n    angle = this._pInst.degrees(angle);\n  }\n  this.drawingContext.transform(1, this._pInst.tan(angle), 0, 1, 0, 0);\n  return this;\n};\n\np5.Renderer2D.prototype.translate = function(x, y) {\n  this.drawingContext.translate(x, y);\n  return this;\n};\n\n//////////////////////////////////////////////\n// TYPOGRAPHY\n//\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.text = function (str, x, y, maxWidth, maxHeight) {\n\n  var p = this._pInst, cars, n, ii, jj, line, testLine,\n    testWidth, words, totalHeight, baselineHacked,\n    finalMaxHeight = Number.MAX_VALUE;\n\n  // baselineHacked: (HACK)\n  // A temporary fix to conform to Processing's implementation\n  // of BASELINE vertical alignment in a bounding box\n\n  if (!(this._doFill || this._doStroke)) {\n    return;\n  }\n\n  if (typeof str !== 'string') {\n    str = str.toString();\n  }\n\n  str = str.replace(/(\\t)/g, '  ');\n  cars = str.split('\\n');\n\n  if (typeof maxWidth !== 'undefined') {\n\n    totalHeight = 0;\n    for (ii = 0; ii < cars.length; ii++) {\n      line = '';\n      words = cars[ii].split(' ');\n      for (n = 0; n < words.length; n++) {\n        testLine = line + words[n] + ' ';\n        testWidth = this.textWidth(testLine);\n        if (testWidth > maxWidth) {\n          line = words[n] + ' ';\n          totalHeight += p.textLeading();\n        } else {\n          line = testLine;\n        }\n      }\n    }\n\n    if (this._rectMode === constants.CENTER) {\n\n      x -= maxWidth / 2;\n      y -= maxHeight / 2;\n    }\n\n    switch (this.drawingContext.textAlign) {\n\n      case constants.CENTER:\n        x += maxWidth / 2;\n        break;\n      case constants.RIGHT:\n        x += maxWidth;\n        break;\n    }\n\n    if (typeof maxHeight !== 'undefined') {\n\n      switch (this.drawingContext.textBaseline) {\n        case constants.BOTTOM:\n          y += (maxHeight - totalHeight);\n          break;\n        case constants._CTX_MIDDLE: // CENTER?\n          y += (maxHeight - totalHeight) / 2;\n          break;\n        case constants.BASELINE:\n          baselineHacked = true;\n          this.drawingContext.textBaseline = constants.TOP;\n          break;\n      }\n\n      // remember the max-allowed y-position for any line (fix to #928)\n      finalMaxHeight = (y + maxHeight) - p.textAscent();\n    }\n\n    for (ii = 0; ii < cars.length; ii++) {\n\n      line = '';\n      words = cars[ii].split(' ');\n      for (n = 0; n < words.length; n++) {\n        testLine = line + words[n] + ' ';\n        testWidth = this.textWidth(testLine);\n        if (testWidth > maxWidth && line.length > 0) {\n          this._renderText(p, line, x, y, finalMaxHeight);\n          line = words[n] + ' ';\n          y += p.textLeading();\n        } else {\n          line = testLine;\n        }\n      }\n\n      this._renderText(p, line, x, y, finalMaxHeight);\n      y += p.textLeading();\n    }\n  }\n  else {\n    // Offset to account for vertically centering multiple lines of text - no\n    // need to adjust anything for vertical align top or baseline\n    var offset = 0,\n      vAlign = p.textAlign().vertical;\n    if (vAlign === constants.CENTER) {\n      offset = ((cars.length - 1) * p.textLeading()) / 2;\n    } else if (vAlign === constants.BOTTOM) {\n      offset = (cars.length - 1) * p.textLeading();\n    }\n\n    for (jj = 0; jj < cars.length; jj++) {\n\n      this._renderText(p, cars[jj], x, y-offset, finalMaxHeight);\n      y += p.textLeading();\n    }\n  }\n\n  if (baselineHacked) {\n    this.drawingContext.textBaseline = constants.BASELINE;\n  }\n\n  return p;\n};\n\np5.Renderer2D.prototype._renderText = function(p, line, x, y, maxY) {\n\n  if (y >= maxY) {\n    return; // don't render lines beyond our maxY position\n  }\n\n  p.push(); // fix to #803\n\n  if (!this._isOpenType()) {  // a system/browser font\n\n    // no stroke unless specified by user\n    if (this._doStroke && this._strokeSet) {\n\n      this.drawingContext.strokeText(line, x, y);\n    }\n\n    if (this._doFill) {\n\n      // if fill hasn't been set by user, use default text fill\n      this.drawingContext.fillStyle =  this._fillSet ?\n        this.drawingContext.fillStyle : constants._DEFAULT_TEXT_FILL;\n\n      this.drawingContext.fillText(line, x, y);\n    }\n  }\n  else { // an opentype font, let it handle the rendering\n\n    this._textFont._renderPath(line, x, y, { renderer: this });\n  }\n\n  p.pop();\n\n  return p;\n};\n\np5.Renderer2D.prototype.textWidth = function(s) {\n\n  if (this._isOpenType()) {\n\n    return this._textFont._textWidth(s, this._textSize);\n  }\n\n  return this.drawingContext.measureText(s).width;\n};\n\np5.Renderer2D.prototype.textAlign = function(h, v) {\n\n  if (arguments.length) {\n\n    if (h === constants.LEFT ||\n      h === constants.RIGHT ||\n      h === constants.CENTER) {\n\n      this.drawingContext.textAlign = h;\n    }\n\n    if (v === constants.TOP ||\n      v === constants.BOTTOM ||\n      v === constants.CENTER ||\n      v === constants.BASELINE) {\n\n      if (v === constants.CENTER) {\n        this.drawingContext.textBaseline = constants._CTX_MIDDLE;\n      } else {\n        this.drawingContext.textBaseline = v;\n      }\n    }\n\n    return this._pInst;\n\n  } else {\n\n    var valign = this.drawingContext.textBaseline;\n\n    if (valign === constants._CTX_MIDDLE) {\n\n      valign = constants.CENTER;\n    }\n\n    return {\n\n      horizontal: this.drawingContext.textAlign,\n      vertical: valign\n    };\n  }\n};\n\np5.Renderer2D.prototype._applyTextProperties = function() {\n\n  var font, p = this._pInst;\n\n  this._setProperty('_textAscent', null);\n  this._setProperty('_textDescent', null);\n\n  font = this._textFont;\n\n  if (this._isOpenType()) {\n\n    font = this._textFont.font.familyName;\n    this._setProperty('_textStyle', this._textFont.font.styleName);\n  }\n\n  this.drawingContext.font = this._textStyle + ' ' +\n  this._textSize + 'px ' + font;\n\n  return p;\n};\n\n\n//////////////////////////////////////////////\n// STRUCTURE\n//////////////////////////////////////////////\n\np5.Renderer2D.prototype.push = function() {\n  this.drawingContext.save();\n};\n\np5.Renderer2D.prototype.pop = function() {\n  this.drawingContext.restore();\n};\n\nmodule.exports = p5.Renderer2D;\n\n},{\"../image/filters\":54,\"./canvas\":35,\"./constants\":36,\"./core\":37,\"./p5.Renderer\":43}],45:[function(_dereq_,module,exports){\n/**\n * @module Rendering\n * @submodule Rendering\n * @for p5\n */\n\nvar p5 = _dereq_('./core');\nvar constants = _dereq_('./constants');\n_dereq_('./p5.Graphics');\n_dereq_('./p5.Renderer2D');\n_dereq_('../webgl/p5.RendererGL');\nvar defaultId = 'defaultCanvas0'; // this gets set again in createCanvas\n\n/**\n * Creates a canvas element in the document, and sets the dimensions of it\n * in pixels. This method should be called only once at the start of setup.\n * Calling createCanvas more than once in a sketch will result in very\n * unpredicable behavior. If you want more than one drawing canvas\n * you could use createGraphics (hidden by default but it can be shown).\n * <br><br>\n * The system variables width and height are set by the parameters passed\n * to this function. If createCanvas() is not used, the window will be\n * given a default size of 100x100 pixels.\n * <br><br>\n * For more ways to position the canvas, see the\n * <a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>\n * positioning the canvas</a> wiki page.\n *\n * @method createCanvas\n * @param  {Number} w width of the canvas\n * @param  {Number} h height of the canvas\n * @param  {Constant} [renderer] P2D or WEBGL\n * @return {Object} canvas generated\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 50);\n *   background(153);\n *   line(0, 0, width, height);\n * }\n * </code>\n * </div>\n *\n * @alt\n * Black line extending from top-left of canvas to bottom right.\n *\n */\n\np5.prototype.createCanvas = function(w, h, renderer) {\n  //optional: renderer, otherwise defaults to p2d\n  var r = renderer || constants.P2D;\n  var isDefault, c;\n\n  //4th arg (isDefault) used when called onLoad,\n  //otherwise hidden to the public api\n  if(arguments[3]){\n    isDefault =\n    (typeof arguments[3] === 'boolean') ? arguments[3] : false;\n  }\n\n  if(r === constants.WEBGL){\n    c = document.getElementById(defaultId);\n    if(c){ //if defaultCanvas already exists\n      c.parentNode.removeChild(c); //replace the existing defaultCanvas\n    }\n    c = document.createElement('canvas');\n    c.id = defaultId;\n  }\n  else {\n    if (isDefault) {\n      c = document.createElement('canvas');\n      var i = 0;\n      while (document.getElementById('defaultCanvas'+i)) {\n        i++;\n      }\n      defaultId = 'defaultCanvas'+i;\n      c.id = defaultId;\n    } else { // resize the default canvas if new one is created\n      c = this.canvas;\n    }\n  }\n\n  // set to invisible if still in setup (to prevent flashing with manipulate)\n  if (!this._setupDone) {\n    c.dataset.hidden = true; // tag to show later\n    c.style.visibility='hidden';\n  }\n\n  if (this._userNode) { // user input node case\n    this._userNode.appendChild(c);\n  } else {\n    document.body.appendChild(c);\n  }\n\n\n\n  // Init our graphics renderer\n  //webgl mode\n  if (r === constants.WEBGL) {\n    this._setProperty('_renderer', new p5.RendererGL(c, this, true));\n    this._isdefaultGraphics = true;\n  }\n  //P2D mode\n  else {\n    if (!this._isdefaultGraphics) {\n      this._setProperty('_renderer', new p5.Renderer2D(c, this, true));\n      this._isdefaultGraphics = true;\n    }\n  }\n  this._renderer.resize(w, h);\n  this._renderer._applyDefaults();\n  if (isDefault) { // only push once\n    this._elements.push(this._renderer);\n  }\n  return this._renderer;\n};\n\n/**\n * Resizes the canvas to given width and height. The canvas will be cleared\n * and draw will be called immediately, allowing the sketch to re-render itself\n * in the resized canvas.\n * @method resizeCanvas\n * @example\n * <div class=\"norender\"><code>\n * function setup() {\n *   createCanvas(windowWidth, windowHeight);\n * }\n *\n * function draw() {\n *  background(0, 100, 200);\n * }\n *\n * function windowResized() {\n *   resizeCanvas(windowWidth, windowHeight);\n * }\n * </code></div>\n *\n * @alt\n * No image displayed.\n *\n */\np5.prototype.resizeCanvas = function (w, h, noRedraw) {\n  if (this._renderer) {\n\n    // save canvas properties\n    var props = {};\n    for (var key in this.drawingContext) {\n      var val = this.drawingContext[key];\n      if (typeof val !== 'object' && typeof val !== 'function') {\n        props[key] = val;\n      }\n    }\n    this._renderer.resize(w, h);\n    // reset canvas properties\n    for (var savedKey in props) {\n      this.drawingContext[savedKey] = props[savedKey];\n    }\n    if (!noRedraw) {\n      this.redraw();\n    }\n  }\n};\n\n\n/**\n * Removes the default canvas for a p5 sketch that doesn't\n * require a canvas\n * @method noCanvas\n * @example\n * <div>\n * <code>\n * function setup() {\n *   noCanvas();\n * }\n * </code>\n * </div>\n *\n * @alt\n * no image displayed\n *\n */\np5.prototype.noCanvas = function() {\n  if (this.canvas) {\n    this.canvas.parentNode.removeChild(this.canvas);\n  }\n};\n\n/**\n * Creates and returns a new p5.Renderer object. Use this class if you need\n * to draw into an off-screen graphics buffer. The two parameters define the\n * width and height in pixels.\n *\n * @method createGraphics\n * @param  {Number} w width of the offscreen graphics buffer\n * @param  {Number} h height of the offscreen graphics buffer\n * @param  {Constant} [renderer] P2D or WEBGL\n * undefined defaults to p2d\n * @return {Object} offscreen graphics buffer\n * @example\n * <div>\n * <code>\n * var pg;\n * function setup() {\n *   createCanvas(100, 100);\n *   pg = createGraphics(100, 100);\n * }\n * function draw() {\n *   background(200);\n *   pg.background(100);\n *   pg.noStroke();\n *   pg.ellipse(pg.width/2, pg.height/2, 50, 50);\n *   image(pg, 50, 50);\n *   image(pg, 0, 0, 50, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 4 grey squares alternating light and dark grey. White quarter circle mid-left.\n *\n */\np5.prototype.createGraphics = function(w, h, renderer){\n  return new p5.Graphics(w, h, renderer, this);\n};\n\n/**\n * Blends the pixels in the display window according to the defined mode.\n * There is a choice of the following modes to blend the source pixels (A)\n * with the ones of pixels already in the display window (B):\n * <ul>\n * <li><code>BLEND</code> - linear interpolation of colours: C =\n * A*factor + B. This is the default blending mode.</li>\n * <li><code>ADD</code> - sum of A and B</li>\n * <li><code>DARKEST</code> - only the darkest colour succeeds: C =\n * min(A*factor, B).</li>\n * <li><code>LIGHTEST</code> - only the lightest colour succeeds: C =\n * max(A*factor, B).</li>\n * <li><code>DIFFERENCE</code> - subtract colors from underlying image.</li>\n * <li><code>EXCLUSION</code> - similar to <code>DIFFERENCE</code>, but less\n * extreme.</li>\n * <li><code>MULTIPLY</code> - multiply the colors, result will always be\n * darker.</li>\n * <li><code>SCREEN</code> - opposite multiply, uses inverse values of the\n * colors.</li>\n * <li><code>REPLACE</code> - the pixels entirely replace the others and\n * don't utilize alpha (transparency) values.</li>\n * <li><code>OVERLAY</code> - mix of <code>MULTIPLY</code> and <code>SCREEN\n * </code>. Multiplies dark values, and screens light values.</li>\n * <li><code>HARD_LIGHT</code> - <code>SCREEN</code> when greater than 50%\n * gray, <code>MULTIPLY</code> when lower.</li>\n * <li><code>SOFT_LIGHT</code> - mix of <code>DARKEST</code> and\n * <code>LIGHTEST</code>. Works like <code>OVERLAY</code>, but not as harsh.\n * </li>\n * <li><code>DODGE</code> - lightens light tones and increases contrast,\n * ignores darks.</li>\n * <li><code>BURN</code> - darker areas are applied, increasing contrast,\n * ignores lights.</li>\n * </ul>\n *\n * @method blendMode\n * @param  {Constant} mode blend mode to set for canvas\n * @example\n * <div>\n * <code>\n * blendMode(LIGHTEST);\n * strokeWeight(30);\n * stroke(80, 150, 255);\n * line(25, 25, 75, 75);\n * stroke(255, 50, 50);\n * line(75, 25, 25, 75);\n * </code>\n * </div>\n * <div>\n * <code>\n * blendMode(MULTIPLY);\n * strokeWeight(30);\n * stroke(80, 150, 255);\n * line(25, 25, 75, 75);\n * stroke(255, 50, 50);\n * line(75, 25, 25, 75);\n * </code>\n * </div>\n * @alt\n * translucent image thick red & blue diagonal rounded lines intersecting center\n * Thick red & blue diagonal rounded lines intersecting center. dark at overlap\n *\n */\np5.prototype.blendMode = function(mode) {\n  if (mode === constants.BLEND || mode === constants.DARKEST ||\n    mode === constants.LIGHTEST || mode === constants.DIFFERENCE ||\n    mode === constants.MULTIPLY || mode === constants.EXCLUSION ||\n    mode === constants.SCREEN || mode === constants.REPLACE ||\n    mode === constants.OVERLAY || mode === constants.HARD_LIGHT ||\n    mode === constants.SOFT_LIGHT || mode === constants.DODGE ||\n    mode === constants.BURN || mode === constants.ADD ||\n    mode === constants.NORMAL) {\n    this._renderer.blendMode(mode);\n  } else {\n    throw new Error('Mode '+mode+' not recognized.');\n  }\n};\n\nmodule.exports = p5;\n\n},{\"../webgl/p5.RendererGL\":86,\"./constants\":36,\"./core\":37,\"./p5.Graphics\":42,\"./p5.Renderer2D\":44}],46:[function(_dereq_,module,exports){\n\n// requestAnim shim layer by Paul Irish\nwindow.requestAnimationFrame = (function(){\n  return window.requestAnimationFrame      ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame    ||\n        window.oRequestAnimationFrame      ||\n        window.msRequestAnimationFrame     ||\n        function(callback, element){\n          // should '60' here be framerate?\n          window.setTimeout(callback, 1000 / 60);\n        };\n})();\n\n// use window.performance() to get max fast and accurate time in milliseconds\nwindow.performance = window.performance || {};\nwindow.performance.now = (function(){\n  var load_date = Date.now();\n  return window.performance.now        ||\n        window.performance.mozNow      ||\n        window.performance.msNow       ||\n        window.performance.oNow        ||\n        window.performance.webkitNow   ||\n        function () {\n          return Date.now() - load_date;\n        };\n})();\n\n/*\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/\n// requestanimationframe-for-smart-er-animating\n// requestAnimationFrame polyfill by Erik Möller\n// fixes from Paul Irish and Tino Zijdel\n(function() {\n  var lastTime = 0;\n  var vendors = ['ms', 'moz', 'webkit', 'o'];\n  for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    window.requestAnimationFrame =\n      window[vendors[x]+'RequestAnimationFrame'];\n    window.cancelAnimationFrame =\n      window[vendors[x]+'CancelAnimationFrame'] ||\n      window[vendors[x]+'CancelRequestAnimationFrame'];\n  }\n\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = function(callback, element) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = window.setTimeout(function()\n        { callback(currTime + timeToCall); }, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n  }\n\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = function(id) {\n      clearTimeout(id);\n    };\n  }\n}());\n*/\n\n/**\n * shim for Uint8ClampedArray.slice\n * (allows arrayCopy to work with pixels[])\n * with thanks to http://halfpapstudios.com/blog/tag/html5-canvas/\n * Enumerable set to false to protect for...in from\n * Uint8ClampedArray.prototype pollution.\n */\n(function () {\n  'use strict';\n  if (typeof Uint8ClampedArray !== 'undefined' &&\n      !Uint8ClampedArray.prototype.slice) {\n    Object.defineProperty(Uint8ClampedArray.prototype, 'slice', {\n      value: Array.prototype.slice,\n      writable: true, configurable: true, enumerable: false\n    });\n  }\n}());\n\n},{}],47:[function(_dereq_,module,exports){\n/**\n * @module Structure\n * @submodule Structure\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('./core');\n\np5.prototype.exit = function() {\n  throw 'exit() not implemented, see remove()';\n};\n/**\n * Stops p5.js from continuously executing the code within draw().\n * If loop() is called, the code in draw() begins to run continuously again.\n * If using noLoop() in setup(), it should be the last line inside the block.\n * <br><br>\n * When noLoop() is used, it's not possible to manipulate or access the\n * screen inside event handling functions such as mousePressed() or\n * keyPressed(). Instead, use those functions to call redraw() or loop(),\n * which will run draw(), which can update the screen properly. This means\n * that when noLoop() has been called, no drawing can happen, and functions\n * like saveFrame() or loadPixels() may not be used.\n * <br><br>\n * Note that if the sketch is resized, redraw() will be called to update\n * the sketch, even after noLoop() has been specified. Otherwise, the sketch\n * would enter an odd state until loop() was called.\n *\n * @method noLoop\n * @example\n * <div><code>\n * function setup() {\n *   createCanvas(100, 100);\n *   background(200);\n *   noLoop();\n * }\n\n * function draw() {\n *   line(10, 10, 90, 90);\n * }\n * </code></div>\n *\n * <div><code>\n * var x = 0;\n * function setup() {\n *   createCanvas(100, 100);\n * }\n *\n * function draw() {\n *   background(204);\n *   x = x + 0.1;\n *   if (x > width) {\n *     x = 0;\n *   }\n *   line(x, 0, x, height);\n * }\n *\n * function mousePressed() {\n *   noLoop();\n * }\n *\n * function mouseReleased() {\n *   loop();\n * }\n * </code></div>\n *\n * @alt\n * 113 pixel long line extending from top-left to bottom right of canvas.\n * horizontal line moves slowly from left. Loops but stops on mouse press.\n *\n */\np5.prototype.noLoop = function() {\n  this._loop = false;\n};\n/**\n * By default, p5.js loops through draw() continuously, executing the code\n * within it. However, the draw() loop may be stopped by calling noLoop().\n * In that case, the draw() loop can be resumed with loop().\n *\n * @method loop\n * @example\n * <div><code>\n * var x = 0;\n * function setup() {\n *   createCanvas(100, 100);\n *   noLoop();\n * }\n *\n * function draw() {\n *   background(204);\n *   x = x + 0.1;\n *   if (x > width) {\n *     x = 0;\n *   }\n *   line(x, 0, x, height);\n * }\n *\n * function mousePressed() {\n *   loop();\n * }\n *\n * function mouseReleased() {\n *   noLoop();\n * }\n * </code></div>\n *\n * @alt\n * horizontal line moves slowly from left. Loops but stops on mouse press.\n *\n */\n\np5.prototype.loop = function() {\n  this._loop = true;\n  this._draw();\n};\n\n/**\n * The push() function saves the current drawing style settings and\n * transformations, while pop() restores these settings. Note that these\n * functions are always used together. They allow you to change the style\n * and transformation settings and later return to what you had. When a new\n * state is started with push(), it builds on the current style and transform\n * information. The push() and pop() functions can be embedded to provide\n * more control. (See the second example for a demonstration.)\n * <br><br>\n * push() stores information related to the current transformation state\n * and style settings controlled by the following functions: fill(),\n * stroke(), tint(), strokeWeight(), strokeCap(), strokeJoin(),\n * imageMode(), rectMode(), ellipseMode(), colorMode(), textAlign(),\n * textFont(), textMode(), textSize(), textLeading().\n *\n * @method push\n * @example\n * <div>\n * <code>\n * ellipse(0, 50, 33, 33);  // Left circle\n *\n * push();  // Start a new drawing state\n * strokeWeight(10);\n * fill(204, 153, 0);\n * translate(50, 0);\n * ellipse(0, 50, 33, 33);  // Middle circle\n * pop();  // Restore original state\n *\n * ellipse(100, 50, 33, 33);  // Right circle\n * </code>\n * </div>\n * <div>\n * <code>\n * ellipse(0, 50, 33, 33);  // Left circle\n *\n * push();  // Start a new drawing state\n * strokeWeight(10);\n * fill(204, 153, 0);\n * ellipse(33, 50, 33, 33);  // Left-middle circle\n *\n * push();  // Start another new drawing state\n * stroke(0, 102, 153);\n * ellipse(66, 50, 33, 33);  // Right-middle circle\n * pop();  // Restore previous state\n *\n * pop();  // Restore original state\n *\n * ellipse(100, 50, 33, 33);  // Right circle\n * </code>\n * </div>\n *\n * @alt\n * Gold ellipse + thick black outline @center 2 white ellipses on left and right.\n * 2 Gold ellipses left black right blue stroke. 2 white ellipses on left+right.\n *\n */\np5.prototype.push = function () {\n  this._renderer.push();\n  this._styles.push({\n    _doStroke: this._renderer._doStroke,\n    _strokeSet: this._renderer._strokeSet,\n    _doFill: this._renderer._doFill,\n    _fillSet: this._renderer._fillSet,\n    _tint: this._renderer._tint,\n    _imageMode: this._renderer._imageMode,\n    _rectMode: this._renderer._rectMode,\n    _ellipseMode: this._renderer._ellipseMode,\n    _colorMode: this._renderer._colorMode,\n    _textFont: this._renderer._textFont,\n    _textLeading: this._renderer._textLeading,\n    _textSize: this._renderer._textSize,\n    _textStyle: this._renderer._textStyle\n  });\n};\n\n/**\n * The push() function saves the current drawing style settings and\n * transformations, while pop() restores these settings. Note that these\n * functions are always used together. They allow you to change the style\n * and transformation settings and later return to what you had. When a new\n * state is started with push(), it builds on the current style and transform\n * information. The push() and pop() functions can be embedded to provide\n * more control. (See the second example for a demonstration.)\n * <br><br>\n * push() stores information related to the current transformation state\n * and style settings controlled by the following functions: fill(),\n * stroke(), tint(), strokeWeight(), strokeCap(), strokeJoin(),\n * imageMode(), rectMode(), ellipseMode(), colorMode(), textAlign(),\n * textFont(), textMode(), textSize(), textLeading().\n *\n * @method pop\n * @example\n * <div>\n * <code>\n * ellipse(0, 50, 33, 33);  // Left circle\n *\n * push();  // Start a new drawing state\n * translate(50, 0);\n * strokeWeight(10);\n * fill(204, 153, 0);\n * ellipse(0, 50, 33, 33);  // Middle circle\n * pop();  // Restore original state\n *\n * ellipse(100, 50, 33, 33);  // Right circle\n * </code>\n * </div>\n * <div>\n * <code>\n * ellipse(0, 50, 33, 33);  // Left circle\n *\n * push();  // Start a new drawing state\n * strokeWeight(10);\n * fill(204, 153, 0);\n * ellipse(33, 50, 33, 33);  // Left-middle circle\n *\n * push();  // Start another new drawing state\n * stroke(0, 102, 153);\n * ellipse(66, 50, 33, 33);  // Right-middle circle\n * pop();  // Restore previous state\n *\n * pop();  // Restore original state\n *\n * ellipse(100, 50, 33, 33);  // Right circle\n * </code>\n * </div>\n *\n * @alt\n * Gold ellipse + thick black outline @center 2 white ellipses on left and right.\n * 2 Gold ellipses left black right blue stroke. 2 white ellipses on left+right.\n *\n */\np5.prototype.pop = function () {\n  this._renderer.pop();\n  var lastS = this._styles.pop();\n  for(var prop in lastS){\n    this._renderer[prop] = lastS[prop];\n  }\n};\n\np5.prototype.pushStyle = function() {\n  throw new Error('pushStyle() not used, see push()');\n};\n\np5.prototype.popStyle = function() {\n  throw new Error('popStyle() not used, see pop()');\n};\n\n/**\n *\n * Executes the code within draw() one time. This functions allows the\n * program to update the display window only when necessary, for example\n * when an event registered by mousePressed() or keyPressed() occurs.\n * <br><br>\n * In structuring a program, it only makes sense to call redraw() within\n * events such as mousePressed(). This is because redraw() does not run\n * draw() immediately (it only sets a flag that indicates an update is\n * needed).\n * <br><br>\n * The redraw() function does not work properly when called inside draw().\n * To enable/disable animations, use loop() and noLoop().\n * <br><br>\n * In addition you can set the number of redraws per method call. Just\n * add an integer as single parameter for the number of redraws.\n *\n * @method redraw\n * @param  {Integer} [n] Redraw for n-times. The default value is 1.\n * @example\n * <div><code>\n * var x = 0;\n *\n * function setup() {\n *   createCanvas(100, 100);\n *   noLoop();\n * }\n *\n * function draw() {\n *   background(204);\n *   line(x, 0, x, height);\n * }\n *\n * function mousePressed() {\n *   x += 1;\n *   redraw();\n * }\n * </code></div>\n *\n * <div class='norender'><code>\n * var x = 0;\n *\n * function setup() {\n *   createCanvas(100, 100);\n *   noLoop();\n * }\n *\n * function draw() {\n *   background(204);\n *   x += 1;\n *   line(x, 0, x, height);\n * }\n *\n * function mousePressed() {\n *   redraw(5);\n * }\n * </code></div>\n *\n * @alt\n * black line on far left of canvas\n * black line on far left of canvas\n *\n */\np5.prototype.redraw = function () {\n  this.resetMatrix();\n  if(this._renderer.isP3D){\n    this._renderer._update();\n  }\n\n  var numberOfRedraws = 1;\n  if (arguments.length === 1) {\n    try {\n      if (parseInt(arguments[0]) > 1) {\n        numberOfRedraws = parseInt(arguments[0]);\n      }\n    } catch (error) {\n      // Do nothing, because the default value didn't be changed.\n    }\n  }\n  var userSetup = this.setup || window.setup;\n  var userDraw = this.draw || window.draw;\n  if (typeof userDraw === 'function') {\n    if (typeof userSetup === 'undefined') {\n      this.scale(this._pixelDensity, this._pixelDensity);\n    }\n    var self = this;\n    var callMethod = function (f) {\n      f.call(self);\n    };\n    for (var idxRedraw = 0; idxRedraw < numberOfRedraws; idxRedraw++) {\n      this._registeredMethods.pre.forEach(callMethod);\n      userDraw();\n      this._registeredMethods.post.forEach(callMethod);\n    }\n  }\n};\n\np5.prototype.size = function() {\n  var s = 'size() is not a valid p5 function, to set the size of the ';\n  s += 'drawing canvas, please use createCanvas() instead';\n  throw s;\n};\n\n\nmodule.exports = p5;\n\n},{\"./core\":37}],48:[function(_dereq_,module,exports){\n/**\n * @module Transform\n * @submodule Transform\n * @for p5\n * @requires core\n * @requires constants\n */\n\n\n'use strict';\n\nvar p5 = _dereq_('./core');\nvar constants = _dereq_('./constants');\n\n/**\n * Multiplies the current matrix by the one specified through the parameters.\n * This is very slow because it will try to calculate the inverse of the\n * transform, so avoid it whenever possible.\n *\n * @method applyMatrix\n * @param  {Number} n00 numbers which define the 3x2 matrix to be multiplied\n * @param  {Number} n01 numbers which define the 3x2 matrix to be multiplied\n * @param  {Number} n02 numbers which define the 3x2 matrix to be multiplied\n * @param  {Number} n10 numbers which define the 3x2 matrix to be multiplied\n * @param  {Number} n11 numbers which define the 3x2 matrix to be multiplied\n * @param  {Number} n12 numbers which define the 3x2 matrix to be multiplied\n * @return {p5}         the p5 object\n * @example\n * <div>\n * <code>\n * // Example in the works.\n * </code>\n * </div>\n *\n * @alt\n * no image diplayed\n *\n */\np5.prototype.applyMatrix = function(n00, n01, n02, n10, n11, n12) {\n  this._renderer.applyMatrix(n00, n01, n02, n10, n11, n12);\n  return this;\n};\n\np5.prototype.popMatrix = function() {\n  throw new Error('popMatrix() not used, see pop()');\n};\n\np5.prototype.printMatrix = function() {\n  throw new Error('printMatrix() not implemented');\n};\n\np5.prototype.pushMatrix = function() {\n  throw new Error('pushMatrix() not used, see push()');\n};\n\n/**\n * Replaces the current matrix with the identity matrix.\n *\n * @method resetMatrix\n * @return {p5} the p5 object\n * @example\n * <div>\n * <code>\n * // Example in the works.\n * </code>\n * </div>\n *\n * @alt\n * no image diplayed\n *\n */\np5.prototype.resetMatrix = function() {\n  this._renderer.resetMatrix();\n  return this;\n};\n\n/**\n * Rotates a shape the amount specified by the angle parameter. This\n * function accounts for angleMode, so angles can be entered in either\n * RADIANS or DEGREES.\n * <br><br>\n * Objects are always rotated around their relative position to the\n * origin and positive numbers rotate objects in a clockwise direction.\n * Transformations apply to everything that happens after and subsequent\n * calls to the function accumulates the effect. For example, calling\n * rotate(HALF_PI) and then rotate(HALF_PI) is the same as rotate(PI).\n * All tranformations are reset when draw() begins again.\n * <br><br>\n * Technically, rotate() multiplies the current transformation matrix\n * by a rotation matrix. This function can be further controlled by\n * the push() and pop().\n *\n * @method rotate\n * @param  {Number} angle the angle of rotation, specified in radians\n *                        or degrees, depending on current angleMode\n * @return {p5}           the p5 object\n * @example\n * <div>\n * <code>\n * translate(width/2, height/2);\n * rotate(PI/3.0);\n * rect(-26, -26, 52, 52);\n * </code>\n * </div>\n *\n * @alt\n * white 52x52 rect with black outline at center rotated counter 45 degrees\n *\n */\n/**\n * @method rotate\n * @param  {Number} rad  angle in radians\n * @param  {p5.Vector | Array} axis axis to rotate around\n * @return {p5.RendererGL}      [description]\n */\np5.prototype.rotate = function() {\n  var args = new Array(arguments.length);\n  var r;\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  if (this._angleMode === constants.DEGREES) {\n    r = this.radians(args[0]);\n  } else if (this._angleMode === constants.RADIANS){\n    r = args[0];\n  }\n  //in webgl mode\n  if(args.length > 1){\n    this._renderer.rotate(r, args[1]);\n  }\n  else {\n    this._renderer.rotate(r);\n  }\n  return this;\n};\n\n/**\n * Rotates around X axis.\n * @method  rotateX\n * @param  {Number} rad angles in radians\n * @return {[type]}     [description]\n */\np5.prototype.rotateX = function(rad) {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  if (this._renderer.isP3D) {\n    this._validateParameters(\n      'rotateX',\n      args,\n      [\n        ['Number']\n      ]\n    );\n    this._renderer.rotateX(rad);\n  } else {\n    throw 'not supported in p2d. Please use webgl mode';\n  }\n  return this;\n};\n\n/**\n * Rotates around Y axis.\n * @method rotateY\n * @param  {Number} rad angles in radians\n * @return {[type]}     [description]\n */\np5.prototype.rotateY = function(rad) {\n  if (this._renderer.isP3D) {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; ++i) {\n      args[i] = arguments[i];\n    }\n    this._validateParameters(\n      'rotateY',\n      args,\n      [\n        ['Number']\n      ]\n    );\n    this._renderer.rotateY(rad);\n  } else {\n    throw 'not supported in p2d. Please use webgl mode';\n  }\n  return this;\n};\n\n/**\n * Rotates around Z axis.  Webgl mode only.\n * @method rotateZ\n * @param  {Number} rad angles in radians\n * @return {[type]}     [description]\n */\np5.prototype.rotateZ = function(rad) {\n  if (this._renderer.isP3D) {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; ++i) {\n      args[i] = arguments[i];\n    }\n    this._validateParameters(\n      'rotateZ',\n      args,\n      [\n        ['Number']\n      ]\n    );\n    this._renderer.rotateZ(rad);\n  } else {\n    throw 'not supported in p2d. Please use webgl mode';\n  }\n  return this;\n};\n\n/**\n * Increases or decreases the size of a shape by expanding and contracting\n * vertices. Objects always scale from their relative origin to the\n * coordinate system. Scale values are specified as decimal percentages.\n * For example, the function call scale(2.0) increases the dimension of a\n * shape by 200%.\n * <br><br>\n * Transformations apply to everything that happens after and subsequent\n * calls to the function multiply the effect. For example, calling scale(2.0)\n * and then scale(1.5) is the same as scale(3.0). If scale() is called\n * within draw(), the transformation is reset when the loop begins again.\n * <br><br>\n * Using this function with the z parameter is only available in WEBGL mode.\n * This function can be further controlled with push() and pop().\n *\n * @method scale\n * @param  {Number | p5.Vector | Array} s\n *                      percent to scale the object, or percentage to\n *                      scale the object in the x-axis if multiple arguments\n *                      are given\n * @param  {Number} [y] percent to scale the object in the y-axis\n * @param  {Number} [z] percent to scale the object in the z-axis (webgl only)\n * @return {p5}         the p5 object\n * @example\n * <div>\n * <code>\n * translate(width/2, height/2);\n * rotate(PI/3.0);\n * rect(-26, -26, 52, 52);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * rect(30, 20, 50, 50);\n * scale(0.5, 1.3);\n * rect(30, 20, 50, 50);\n * </code>\n * </div>\n *\n * @alt\n * white 52x52 rect with black outline at center rotated counter 45 degrees\n * 2 white rects with black outline- 1 50x50 at center. other 25x65 bottom left\n *\n */\np5.prototype.scale = function() {\n  var x,y,z;\n  var args = new Array(arguments.length);\n  for(var i = 0; i < args.length; i++) {\n    args[i] = arguments[i];\n  }\n  if(args[0] instanceof p5.Vector){\n    x = args[0].x;\n    y = args[0].y;\n    z = args[0].z;\n  }\n  else if(args[0] instanceof Array){\n    x = args[0][0];\n    y = args[0][1];\n    z = args[0][2] || 1;\n  }\n  else {\n    if(args.length === 1){\n      x = y = z = args[0];\n    }\n    else {\n      x = args[0];\n      y = args[1];\n      z = args[2] || 1;\n    }\n  }\n\n  if(this._renderer.isP3D){\n    this._renderer.scale.call(this._renderer, x,y,z);\n  }\n  else {\n    this._renderer.scale.call(this._renderer, x,y);\n  }\n  return this;\n};\n\n/**\n * Shears a shape around the x-axis the amount specified by the angle\n * parameter. Angles should be specified in the current angleMode.\n * Objects are always sheared around their relative position to the origin\n * and positive numbers shear objects in a clockwise direction.\n * <br><br>\n * Transformations apply to everything that happens after and subsequent\n * calls to the function accumulates the effect. For example, calling\n * shearX(PI/2) and then shearX(PI/2) is the same as shearX(PI).\n * If shearX() is called within the draw(), the transformation is reset when\n * the loop begins again.\n * <br><br>\n * Technically, shearX() multiplies the current transformation matrix by a\n * rotation matrix. This function can be further controlled by the\n * push() and pop() functions.\n *\n * @method shearX\n * @param  {Number} angle angle of shear specified in radians or degrees,\n *                        depending on current angleMode\n * @return {p5}           the p5 object\n * @example\n * <div>\n * <code>\n * translate(width/4, height/4);\n * shearX(PI/4.0);\n * rect(0, 0, 30, 30);\n * </code>\n * </div>\n *\n * @alt\n  * white irregular quadrilateral with black outline at top middle.\n *\n */\np5.prototype.shearX = function(angle) {\n  if (this._angleMode === constants.DEGREES) {\n    angle = this.radians(angle);\n  }\n  this._renderer.shearX(angle);\n  return this;\n};\n\n/**\n * Shears a shape around the y-axis the amount specified by the angle\n * parameter. Angles should be specified in the current angleMode. Objects\n * are always sheared around their relative position to the origin and\n * positive numbers shear objects in a clockwise direction.\n * <br><br>\n * Transformations apply to everything that happens after and subsequent\n * calls to the function accumulates the effect. For example, calling\n * shearY(PI/2) and then shearY(PI/2) is the same as shearY(PI). If\n * shearY() is called within the draw(), the transformation is reset when\n * the loop begins again.\n * <br><br>\n * Technically, shearY() multiplies the current transformation matrix by a\n * rotation matrix. This function can be further controlled by the\n * push() and pop() functions.\n *\n * @method shearY\n * @param  {Number} angle angle of shear specified in radians or degrees,\n *                        depending on current angleMode\n * @return {p5}           the p5 object\n * @example\n * <div>\n * <code>\n * translate(width/4, height/4);\n * shearY(PI/4.0);\n * rect(0, 0, 30, 30);\n * </code>\n * </div>\n *\n * @alt\n * white irregular quadrilateral with black outline at middle bottom.\n *\n */\np5.prototype.shearY = function(angle) {\n  if (this._angleMode === constants.DEGREES) {\n    angle = this.radians(angle);\n  }\n  this._renderer.shearY(angle);\n  return this;\n};\n\n/**\n * Specifies an amount to displace objects within the display window.\n * The x parameter specifies left/right translation, the y parameter\n * specifies up/down translation.\n * <br><br>\n * Transformations are cumulative and apply to everything that happens after\n * and subsequent calls to the function accumulates the effect. For example,\n * calling translate(50, 0) and then translate(20, 0) is the same as\n * translate(70, 0). If translate() is called within draw(), the\n * transformation is reset when the loop begins again. This function can be\n * further controlled by using push() and pop().\n *\n * @method translate\n * @param  {Number} x left/right translation\n * @param  {Number} y up/down translation\n * @param  {Number} [z] forward/backward translation (webgl only)\n * @return {p5}       the p5 object\n * @example\n * <div>\n * <code>\n * translate(30, 20);\n * rect(0, 0, 55, 55);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * rect(0, 0, 55, 55);  // Draw rect at original 0,0\n * translate(30, 20);\n * rect(0, 0, 55, 55);  // Draw rect at new 0,0\n * translate(14, 14);\n * rect(0, 0, 55, 55);  // Draw rect at new 0,0\n * </code>\n * </div>\n *\n * @alt\n * white 55x55 rect with black outline at center right.\n * 3 white 55x55 rects with black outlines at top-l, center-r and bottom-r.\n *\n */\np5.prototype.translate = function(x, y, z) {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n\n  if (this._renderer.isP3D) {\n    this._validateParameters(\n      'translate',\n      args,\n      [\n        //p3d\n        ['Number', 'Number', 'Number']\n      ]\n    );\n    this._renderer.translate(x, y, z);\n  } else {\n    this._validateParameters(\n      'translate',\n      args,\n      [\n        //p2d\n        ['Number', 'Number']\n      ]\n    );\n    this._renderer.translate(x, y);\n  }\n  return this;\n};\n\nmodule.exports = p5;\n\n},{\"./constants\":36,\"./core\":37}],49:[function(_dereq_,module,exports){\n/**\n * @module Shape\n * @submodule Vertex\n * @for p5\n * @requires core\n * @requires constants\n */\n\n'use strict';\n\nvar p5 = _dereq_('./core');\nvar constants = _dereq_('./constants');\nvar shapeKind = null;\nvar vertices = [];\nvar contourVertices = [];\nvar isBezier = false;\nvar isCurve = false;\nvar isQuadratic = false;\nvar isContour = false;\nvar isFirstContour = true;\n\n/**\n * Use the beginContour() and endContour() functions to create negative\n * shapes within shapes such as the center of the letter 'O'. beginContour()\n * begins recording vertices for the shape and endContour() stops recording.\n * The vertices that define a negative shape must \"wind\" in the opposite\n * direction from the exterior shape. First draw vertices for the exterior\n * clockwise order, then for internal shapes, draw vertices\n * shape in counter-clockwise.\n * <br><br>\n * These functions can only be used within a beginShape()/endShape() pair and\n * transformations such as translate(), rotate(), and scale() do not work\n * within a beginContour()/endContour() pair. It is also not possible to use\n * other shapes, such as ellipse() or rect() within.\n *\n * @method beginContour\n * @return {Object} the p5 object\n * @example\n * <div>\n * <code>\n * translate(50, 50);\n * stroke(255, 0, 0);\n * beginShape();\n * // Exterior part of shape, clockwise winding\n * vertex(-40, -40);\n * vertex(40, -40);\n * vertex(40, 40);\n * vertex(-40, 40);\n * // Interior part of shape, counter-clockwise winding\n * beginContour();\n * vertex(-20, -20);\n * vertex(-20, 20);\n * vertex(20, 20);\n * vertex(20, -20);\n * endContour();\n * endShape(CLOSE);\n * </code>\n * </div>\n *\n * @alt\n * white rect and smaller grey rect with red outlines in center of canvas.\n *\n */\np5.prototype.beginContour = function() {\n  contourVertices = [];\n  isContour = true;\n  return this;\n};\n\n/**\n * Using the beginShape() and endShape() functions allow creating more\n * complex forms. beginShape() begins recording vertices for a shape and\n * endShape() stops recording. The value of the kind parameter tells it which\n * types of shapes to create from the provided vertices. With no mode\n * specified, the shape can be any irregular polygon.\n * <br><br>\n * The parameters available for beginShape() are POINTS, LINES, TRIANGLES,\n * TRIANGLE_FAN, TRIANGLE_STRIP, QUADS, and QUAD_STRIP. After calling the\n * beginShape() function, a series of vertex() commands must follow. To stop\n * drawing the shape, call endShape(). Each shape will be outlined with the\n * current stroke color and filled with the fill color.\n * <br><br>\n * Transformations such as translate(), rotate(), and scale() do not work\n * within beginShape(). It is also not possible to use other shapes, such as\n * ellipse() or rect() within beginShape().\n *\n * @method beginShape\n * @param  {Constant} kind either POINTS, LINES, TRIANGLES, TRIANGLE_FAN\n *                                TRIANGLE_STRIP, QUADS, or QUAD_STRIP\n * @return {Object}               the p5 object\n * @example\n * <div>\n * <code>\n * beginShape();\n * vertex(30, 20);\n * vertex(85, 20);\n * vertex(85, 75);\n * vertex(30, 75);\n * endShape(CLOSE);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * // currently not working\n * beginShape(POINTS);\n * vertex(30, 20);\n * vertex(85, 20);\n * vertex(85, 75);\n * vertex(30, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(LINES);\n * vertex(30, 20);\n * vertex(85, 20);\n * vertex(85, 75);\n * vertex(30, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noFill();\n * beginShape();\n * vertex(30, 20);\n * vertex(85, 20);\n * vertex(85, 75);\n * vertex(30, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noFill();\n * beginShape();\n * vertex(30, 20);\n * vertex(85, 20);\n * vertex(85, 75);\n * vertex(30, 75);\n * endShape(CLOSE);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(TRIANGLES);\n * vertex(30, 75);\n * vertex(40, 20);\n * vertex(50, 75);\n * vertex(60, 20);\n * vertex(70, 75);\n * vertex(80, 20);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(TRIANGLE_STRIP);\n * vertex(30, 75);\n * vertex(40, 20);\n * vertex(50, 75);\n * vertex(60, 20);\n * vertex(70, 75);\n * vertex(80, 20);\n * vertex(90, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(TRIANGLE_FAN);\n * vertex(57.5, 50);\n * vertex(57.5, 15);\n * vertex(92, 50);\n * vertex(57.5, 85);\n * vertex(22, 50);\n * vertex(57.5, 15);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(QUADS);\n * vertex(30, 20);\n * vertex(30, 75);\n * vertex(50, 75);\n * vertex(50, 20);\n * vertex(65, 20);\n * vertex(65, 75);\n * vertex(85, 75);\n * vertex(85, 20);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape(QUAD_STRIP);\n * vertex(30, 20);\n * vertex(30, 75);\n * vertex(50, 20);\n * vertex(50, 75);\n * vertex(65, 20);\n * vertex(65, 75);\n * vertex(85, 20);\n * vertex(85, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape();\n * vertex(20, 20);\n * vertex(40, 20);\n * vertex(40, 40);\n * vertex(60, 40);\n * vertex(60, 60);\n * vertex(20, 60);\n * endShape(CLOSE);\n * </code>\n * </div>\n  * @alt\n * white square-shape with black outline in middle-right of canvas.\n * 4 black points in a square shape in middle-right of canvas.\n * 2 horizontal black lines. In the top-right and bottom-right of canvas.\n * 3 line shape with horizontal on top, vertical in middle and horizontal bottom.\n * square line shape in middle-right of canvas.\n * 2 white triangle shapes mid-right canvas. left one pointing up and right down.\n * 5 horizontal interlocking and alternating white triangles in mid-right canvas.\n * 4 interlocking white triangles in 45 degree rotated square-shape.\n * 2 white rectangle shapes in mid-right canvas. Both 20x55.\n * 3 side-by-side white rectangles center rect is smaller in mid-right canvas.\n * Thick white l-shape with black outline mid-top-left of canvas.\n *\n */\np5.prototype.beginShape = function(kind) {\n  if (kind === constants.POINTS ||\n    kind === constants.LINES ||\n    kind === constants.TRIANGLES ||\n    kind === constants.TRIANGLE_FAN ||\n    kind === constants.TRIANGLE_STRIP ||\n    kind === constants.QUADS ||\n    kind === constants.QUAD_STRIP) {\n    shapeKind = kind;\n  } else {\n    shapeKind = null;\n  }\n  if(this._renderer.isP3D){\n    this._renderer.beginShape(kind);\n  } else {\n    vertices = [];\n    contourVertices = [];\n  }\n  return this;\n};\n\n/**\n * Specifies vertex coordinates for Bezier curves. Each call to\n * bezierVertex() defines the position of two control points and\n * one anchor point of a Bezier curve, adding a new segment to a\n * line or shape.\n * <br><br>\n * The first time bezierVertex() is used within a\n * beginShape() call, it must be prefaced with a call to vertex()\n * to set the first anchor point. This function must be used between\n * beginShape() and endShape() and only when there is no MODE\n * parameter specified to beginShape().\n *\n * @method bezierVertex\n * @param  {Number} x2 x-coordinate for the first control point\n * @param  {Number} y2 y-coordinate for the first control point\n * @param  {Number} x3 x-coordinate for the second control point\n * @param  {Number} y3 y-coordinate for the second control point\n * @param  {Number} x4 x-coordinate for the anchor point\n * @param  {Number} y4 y-coordinate for the anchor point\n * @return {Object}    the p5 object\n * @example\n * <div>\n * <code>\n * noFill();\n * beginShape();\n * vertex(30, 20);\n * bezierVertex(80, 0, 80, 75, 30, 75);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * beginShape();\n * vertex(30, 20);\n * bezierVertex(80, 0, 80, 75, 30, 75);\n * bezierVertex(50, 80, 60, 25, 30, 20);\n * endShape();\n * </code>\n * </div>\n *\n * @alt\n * crescent-shaped line in middle of canvas. Points facing left.\n * white crescent shape in middle of canvas. Points facing left.\n *\n */\np5.prototype.bezierVertex = function(x2, y2, x3, y3, x4, y4) {\n  if (vertices.length === 0) {\n    throw 'vertex() must be used once before calling bezierVertex()';\n  } else {\n    isBezier = true;\n    var vert = [];\n    for (var i = 0; i < arguments.length; i++) {\n      vert[i] = arguments[i];\n    }\n    vert.isVert = false;\n    if (isContour) {\n      contourVertices.push(vert);\n    } else {\n      vertices.push(vert);\n    }\n  }\n  return this;\n};\n\n/**\n * Specifies vertex coordinates for curves. This function may only\n * be used between beginShape() and endShape() and only when there\n * is no MODE parameter specified to beginShape().\n * <br><br>\n * The first and last points in a series of curveVertex() lines will be used to\n * guide the beginning and end of a the curve. A minimum of four\n * points is required to draw a tiny curve between the second and\n * third points. Adding a fifth point with curveVertex() will draw\n * the curve between the second, third, and fourth points. The\n * curveVertex() function is an implementation of Catmull-Rom\n * splines.\n *\n * @method curveVertex\n * @param {Number} x x-coordinate of the vertex\n * @param {Number} y y-coordinate of the vertex\n * @return {Object} the p5 object\n * @example\n * <div>\n * <code>\n * noFill();\n * beginShape();\n * curveVertex(84,  91);\n * curveVertex(84,  91);\n * curveVertex(68,  19);\n * curveVertex(21,  17);\n * curveVertex(32, 100);\n * curveVertex(32, 100);\n * endShape();\n * </code>\n * </div>\n *\n * @alt\n * Upside-down u-shape line, mid canvas. left point extends beyond canvas view.\n *\n */\np5.prototype.curveVertex = function(x,y) {\n  isCurve = true;\n  this.vertex(x, y);\n  return this;\n};\n\n/**\n * Use the beginContour() and endContour() functions to create negative\n * shapes within shapes such as the center of the letter 'O'. beginContour()\n * begins recording vertices for the shape and endContour() stops recording.\n * The vertices that define a negative shape must \"wind\" in the opposite\n * direction from the exterior shape. First draw vertices for the exterior\n * clockwise order, then for internal shapes, draw vertices\n * shape in counter-clockwise.\n * <br><br>\n * These functions can only be used within a beginShape()/endShape() pair and\n * transformations such as translate(), rotate(), and scale() do not work\n * within a beginContour()/endContour() pair. It is also not possible to use\n * other shapes, such as ellipse() or rect() within.\n *\n * @method endContour\n * @return {Object} the p5 object\n * @example\n * <div>\n * <code>\n * translate(50, 50);\n * stroke(255, 0, 0);\n * beginShape();\n * // Exterior part of shape, clockwise winding\n * vertex(-40, -40);\n * vertex(40, -40);\n * vertex(40, 40);\n * vertex(-40, 40);\n * // Interior part of shape, counter-clockwise winding\n * beginContour();\n * vertex(-20, -20);\n * vertex(-20, 20);\n * vertex(20, 20);\n * vertex(20, -20);\n * endContour();\n * endShape(CLOSE);\n * </code>\n * </div>\n *\n * @alt\n * white rect and smaller grey rect with red outlines in center of canvas.\n *\n */\np5.prototype.endContour = function() {\n  var vert = contourVertices[0].slice(); // copy all data\n  vert.isVert = contourVertices[0].isVert;\n  vert.moveTo = false;\n  contourVertices.push(vert);\n\n  // prevent stray lines with multiple contours\n  if (isFirstContour) {\n    vertices.push(vertices[0]);\n    isFirstContour = false;\n  }\n\n  for (var i = 0; i < contourVertices.length; i++) {\n    vertices.push(contourVertices[i]);\n  }\n  return this;\n};\n\n/**\n * The endShape() function is the companion to beginShape() and may only be\n * called after beginShape(). When endshape() is called, all of image data\n * defined since the previous call to beginShape() is written into the image\n * buffer. The constant CLOSE as the value for the MODE parameter to close\n * the shape (to connect the beginning and the end).\n *\n * @method endShape\n * @param  {Constant} mode use CLOSE to close the shape\n * @return {Object}               the p5 object\n * @example\n * <div>\n * <code>\n * noFill();\n *\n * beginShape();\n * vertex(20, 20);\n * vertex(45, 20);\n * vertex(45, 80);\n * endShape(CLOSE);\n *\n * beginShape();\n * vertex(50, 20);\n * vertex(75, 20);\n * vertex(75, 80);\n * endShape();\n * </code>\n * </div>\n *\n * @alt\n * Triangle line shape with smallest interior angle on bottom and upside-down L.\n *\n */\np5.prototype.endShape = function(mode) {\n  if(this._renderer.isP3D){\n    this._renderer.endShape(mode, isCurve, isBezier,\n      isQuadratic, isContour, shapeKind);\n  }else{\n    if (vertices.length === 0) { return this; }\n    if (!this._renderer._doStroke && !this._renderer._doFill) { return this; }\n\n    var closeShape = mode === constants.CLOSE;\n\n    // if the shape is closed, the first element is also the last element\n    if (closeShape && !isContour) {\n      vertices.push(vertices[0]);\n    }\n\n    this._renderer.endShape(mode, vertices, isCurve, isBezier,\n      isQuadratic, isContour, shapeKind);\n\n    // Reset some settings\n    isCurve = false;\n    isBezier = false;\n    isQuadratic = false;\n    isContour = false;\n    isFirstContour = true;\n\n    // If the shape is closed, the first element was added as last element.\n    // We must remove it again to prevent the list of vertices from growing\n    // over successive calls to endShape(CLOSE)\n    if (closeShape) {\n      vertices.pop();\n    }\n  }\n  return this;\n};\n\n/**\n * Specifies vertex coordinates for quadratic Bezier curves. Each call to\n * quadraticVertex() defines the position of one control points and one\n * anchor point of a Bezier curve, adding a new segment to a line or shape.\n * The first time quadraticVertex() is used within a beginShape() call, it\n * must be prefaced with a call to vertex() to set the first anchor point.\n * This function must be used between beginShape() and endShape() and only\n * when there is no MODE parameter specified to beginShape().\n *\n * @method quadraticVertex\n * @param  {Number} cx x-coordinate for the control point\n * @param  {Number} cy y-coordinate for the control point\n * @param  {Number} x3 x-coordinate for the anchor point\n * @param  {Number} y3 y-coordinate for the anchor point\n * @return {Object}    the p5 object\n * @example\n * <div>\n * <code>\n * noFill();\n * strokeWeight(4);\n * beginShape();\n * vertex(20, 20);\n * quadraticVertex(80, 20, 50, 50);\n * endShape();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * noFill();\n * strokeWeight(4);\n * beginShape();\n * vertex(20, 20);\n * quadraticVertex(80, 20, 50, 50);\n * quadraticVertex(20, 80, 80, 80);\n * vertex(80, 60);\n * endShape();\n * </code>\n * </div>\n *\n * @alt\n * arched-shaped black line with 4 pixel thick stroke weight.\n * backwards s-shaped black line with 4 pixel thick stroke weight.\n *\n */\np5.prototype.quadraticVertex = function(cx, cy, x3, y3) {\n  //if we're drawing a contour, put the points into an\n  // array for inside drawing\n  if(this._contourInited) {\n    var pt = {};\n    pt.x = cx;\n    pt.y = cy;\n    pt.x3 = x3;\n    pt.y3 = y3;\n    pt.type = constants.QUADRATIC;\n    this._contourVertices.push(pt);\n\n    return this;\n  }\n  if (vertices.length > 0) {\n    isQuadratic = true;\n    var vert = [];\n    for (var i = 0; i < arguments.length; i++) {\n      vert[i] = arguments[i];\n    }\n    vert.isVert = false;\n    if (isContour) {\n      contourVertices.push(vert);\n    } else {\n      vertices.push(vert);\n    }\n  } else {\n    throw 'vertex() must be used once before calling quadraticVertex()';\n  }\n  return this;\n};\n\n/**\n * All shapes are constructed by connecting a series of vertices. vertex()\n * is used to specify the vertex coordinates for points, lines, triangles,\n * quads, and polygons. It is used exclusively within the beginShape() and\n * endShape() functions.\n *\n * @method vertex\n * @param  {Number} x x-coordinate of the vertex\n * @param  {Number} y y-coordinate of the vertex\n * @return {Object}   the p5 object\n * @example\n * <div>\n * <code>\n * beginShape(POINTS);\n * vertex(30, 20);\n * vertex(85, 20);\n * vertex(85, 75);\n * vertex(30, 75);\n * endShape();\n * </code>\n * </div>\n *\n * @alt\n * 4 black points in a square shape in middle-right of canvas.\n *\n */\np5.prototype.vertex = function(x, y, moveTo) {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  if(this._renderer.isP3D){\n    this._validateParameters(\n      'vertex',\n      args,\n      [\n        ['Number', 'Number', 'Number']\n      ]\n    );\n    this._renderer.vertex\n    (arguments[0], arguments[1], arguments[2]);\n  }else{\n    this._validateParameters(\n      'vertex',\n      args,\n      [\n        ['Number', 'Number'],\n        ['Number', 'Number', 'Number']\n      ]\n    );\n    var vert = [];\n    vert.isVert = true;\n    vert[0] = x;\n    vert[1] = y;\n    vert[2] = 0;\n    vert[3] = 0;\n    vert[4] = 0;\n    vert[5] = this._renderer._getFill();\n    vert[6] = this._renderer._getStroke();\n\n    if (moveTo) {\n      vert.moveTo = moveTo;\n    }\n    if (isContour) {\n      if (contourVertices.length === 0) {\n        vert.moveTo = true;\n      }\n      contourVertices.push(vert);\n    } else {\n      vertices.push(vert);\n    }\n  }\n  return this;\n};\n\nmodule.exports = p5;\n},{\"./constants\":36,\"./core\":37}],50:[function(_dereq_,module,exports){\n/**\n * @module Events\n * @submodule Acceleration\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/**\n * The system variable deviceOrientation always contains the orientation of\n * the device. The value of this variable will either be set 'landscape'\n * or 'portrait'. If no data is available it will be set to 'undefined'.\n *\n * @property deviceOrientation\n */\np5.prototype.deviceOrientation = undefined;\n\n/**\n * The system variable accelerationX always contains the acceleration of the\n * device along the x axis. Value is represented as meters per second squared.\n *\n * @property accelerationX\n */\np5.prototype.accelerationX = 0;\n\n/**\n * The system variable accelerationY always contains the acceleration of the\n * device along the y axis. Value is represented as meters per second squared.\n *\n * @property accelerationY\n */\np5.prototype.accelerationY = 0;\n\n/**\n * The system variable accelerationZ always contains the acceleration of the\n * device along the z axis. Value is represented as meters per second squared.\n *\n * @property accelerationZ\n */\np5.prototype.accelerationZ = 0;\n\n/**\n * The system variable pAccelerationX always contains the acceleration of the\n * device along the x axis in the frame previous to the current frame. Value\n * is represented as meters per second squared.\n *\n * @property pAccelerationX\n */\np5.prototype.pAccelerationX = 0;\n\n/**\n * The system variable pAccelerationY always contains the acceleration of the\n * device along the y axis in the frame previous to the current frame. Value\n * is represented as meters per second squared.\n *\n * @property pAccelerationY\n */\np5.prototype.pAccelerationY = 0;\n\n/**\n * The system variable pAccelerationZ always contains the acceleration of the\n * device along the z axis in the frame previous to the current frame. Value\n * is represented as meters per second squared.\n *\n * @property pAccelerationZ\n */\np5.prototype.pAccelerationZ = 0;\n\n/**\n * _updatePAccelerations updates the pAcceleration values\n *\n * @private\n */\np5.prototype._updatePAccelerations = function(){\n  this._setProperty('pAccelerationX', this.accelerationX);\n  this._setProperty('pAccelerationY', this.accelerationY);\n  this._setProperty('pAccelerationZ', this.accelerationZ);\n};\n\n/**\n * The system variable rotationX always contains the rotation of the\n * device along the x axis. Value is represented as 0 to +/-180 degrees.\n * <br><br>\n * Note: The order the rotations are called is important, ie. if used\n * together, it must be called in the order Z-X-Y or there might be\n * unexpected behaviour.\n *\n * @example\n * <div>\n * <code>\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *   background(200);\n *   //rotateZ(radians(rotationZ));\n *   rotateX(radians(rotationX));\n *   //rotateY(radians(rotationY));\n *   box(200, 200, 200);\n * }\n * </code>\n * </div>\n *\n * @property rotationX\n *\n * @alt\n * red horizontal line right, green vertical line bottom. black background.\n *\n */\np5.prototype.rotationX = 0;\n\n/**\n * The system variable rotationY always contains the rotation of the\n * device along the y axis. Value is represented as 0 to +/-90 degrees.\n * <br><br>\n * Note: The order the rotations are called is important, ie. if used\n * together, it must be called in the order Z-X-Y or there might be\n * unexpected behaviour.\n *\n * @example\n * <div>\n * <code>\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *   background(200);\n *   //rotateZ(radians(rotationZ));\n *   //rotateX(radians(rotationX));\n *   rotateY(radians(rotationY));\n *   box(200, 200, 200);\n * }\n * </code>\n * </div>\n *\n * @property rotationY\n *\n * @alt\n * red horizontal line right, green vertical line bottom. black background.\n */\np5.prototype.rotationY = 0;\n\n/**\n * The system variable rotationZ always contains the rotation of the\n * device along the z axis. Value is represented as 0 to 359 degrees.\n * <br><br>\n * Unlike rotationX and rotationY, this variable is available for devices\n * with a built-in compass only.\n * <br><br>\n * Note: The order the rotations are called is important, ie. if used\n * together, it must be called in the order Z-X-Y or there might be\n * unexpected behaviour.\n *\n * @example\n * <div>\n * <code>\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *   background(200);\n *   rotateZ(radians(rotationZ));\n *   //rotateX(radians(rotationX));\n *   //rotateY(radians(rotationY));\n *   box(200, 200, 200);\n * }\n * </code>\n * </div>\n *\n * @property rotationZ\n *\n * @alt\n * red horizontal line right, green vertical line bottom. black background.\n */\np5.prototype.rotationZ = 0;\n\n/**\n * The system variable pRotationX always contains the rotation of the\n * device along the x axis in the frame previous to the current frame. Value\n * is represented as 0 to +/-180 degrees.\n * <br><br>\n * pRotationX can also be used with rotationX to determine the rotate\n * direction of the device along the X-axis.\n * @example\n * <div class='norender'>\n * <code>\n * // A simple if statement looking at whether\n * // rotationX - pRotationX < 0 is true or not will be\n * // sufficient for determining the rotate direction\n * // in most cases.\n *\n * // Some extra logic is needed to account for cases where\n * // the angles wrap around.\n * var rotateDirection = 'clockwise';\n *\n * // Simple range conversion to make things simpler.\n * // This is not absolutely neccessary but the logic\n * // will be different in that case.\n *\n * var rX = rotationX + 180;\n * var pRX = pRotationX + 180;\n *\n * if ((rX - pRX > 0 && rX - pRX < 270)|| rX - pRX < -270){\n *   rotateDirection = 'clockwise';\n * } else if (rX - pRX < 0 || rX - pRX > 270){\n *   rotateDirection = 'counter-clockwise';\n * }\n * </code>\n * </div>\n *\n * @alt\n * no image to display.\n *\n *\n * @property pRotationX\n */\np5.prototype.pRotationX = 0;\n\n/**\n * The system variable pRotationY always contains the rotation of the\n * device along the y axis in the frame previous to the current frame. Value\n * is represented as 0 to +/-90 degrees.\n * <br><br>\n * pRotationY can also be used with rotationY to determine the rotate\n * direction of the device along the Y-axis.\n * @example\n * <div class='norender'>\n * <code>\n * // A simple if statement looking at whether\n * // rotationY - pRotationY < 0 is true or not will be\n * // sufficient for determining the rotate direction\n * // in most cases.\n *\n * // Some extra logic is needed to account for cases where\n * // the angles wrap around.\n * var rotateDirection = 'clockwise';\n *\n * // Simple range conversion to make things simpler.\n * // This is not absolutely neccessary but the logic\n * // will be different in that case.\n *\n * var rY = rotationY + 180;\n * var pRY = pRotationY + 180;\n *\n * if ((rY - pRY > 0 && rY - pRY < 270)|| rY - pRY < -270){\n *   rotateDirection = 'clockwise';\n * } else if (rY - pRY < 0 || rY - pRY > 270){\n *   rotateDirection = 'counter-clockwise';\n * }\n * </code>\n * </div>\n *\n * @alt\n * no image to display.\n *\n *\n * @property pRotationY\n */\np5.prototype.pRotationY = 0;\n\n/**\n * The system variable pRotationZ always contains the rotation of the\n * device along the z axis in the frame previous to the current frame. Value\n * is represented as 0 to 359 degrees.\n * <br><br>\n * pRotationZ can also be used with rotationZ to determine the rotate\n * direction of the device along the Z-axis.\n * @example\n * <div class='norender'>\n * <code>\n * // A simple if statement looking at whether\n * // rotationZ - pRotationZ < 0 is true or not will be\n * // sufficient for determining the rotate direction\n * // in most cases.\n *\n * // Some extra logic is needed to account for cases where\n * // the angles wrap around.\n * var rotateDirection = 'clockwise';\n *\n * if ((rotationZ - pRotationZ > 0 &&\n *   rotationZ - pRotationZ < 270)||\n *   rotationZ - pRotationZ < -270){\n *\n *   rotateDirection = 'clockwise';\n *\n * } else if (rotationZ - pRotationZ < 0 ||\n *   rotationZ - pRotationZ > 270){\n *\n *   rotateDirection = 'counter-clockwise';\n *\n * }\n * </code>\n * </div>\n *\n * @alt\n * no image to display.\n *\n *\n * @property pRotationZ\n */\np5.prototype.pRotationZ = 0;\n\nvar startAngleX = 0;\nvar startAngleY = 0;\nvar startAngleZ = 0;\n\nvar rotateDirectionX = 'clockwise';\nvar rotateDirectionY = 'clockwise';\nvar rotateDirectionZ = 'clockwise';\n\nvar pRotateDirectionX;\nvar pRotateDirectionY;\nvar pRotateDirectionZ;\n\np5.prototype._updatePRotations = function(){\n  this._setProperty('pRotationX', this.rotationX);\n  this._setProperty('pRotationY', this.rotationY);\n  this._setProperty('pRotationZ', this.rotationZ);\n};\n\np5.prototype.turnAxis = undefined;\n\nvar move_threshold = 0.5;\nvar shake_threshold = 30;\n\n/**\n * The setMoveThreshold() function is used to set the movement threshold for\n * the deviceMoved() function. The default threshold is set to 0.5.\n *\n * @method setMoveThreshold\n * @param {number} value The threshold value\n */\np5.prototype.setMoveThreshold = function(val){\n  if(typeof val === 'number'){\n    move_threshold = val;\n  }\n};\n\n/**\n * The setShakeThreshold() function is used to set the movement threshold for\n * the deviceShaken() function. The default threshold is set to 30.\n *\n * @method setShakeThreshold\n * @param {number} value The threshold value\n */\np5.prototype.setShakeThreshold = function(val){\n  if(typeof val === 'number'){\n    shake_threshold = val;\n  }\n};\n\n/**\n * The deviceMoved() function is called when the device is moved by more than\n * the threshold value along X, Y or Z axis. The default threshold is set to\n * 0.5.\n * @method deviceMoved\n * @example\n * <div>\n * <code>\n * // Run this example on a mobile device\n * // Move the device around\n * // to change the value.\n *\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function deviceMoved() {\n *   value = value + 5;\n *   if (value > 255) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect in center of canvas. turns white on mobile when device moves\n *\n */\n\n/**\n * The deviceTurned() function is called when the device rotates by\n * more than 90 degrees continuously.\n * <br><br>\n * The axis that triggers the deviceTurned() method is stored in the turnAxis\n * variable. The deviceTurned() method can be locked to trigger on any axis:\n * X, Y or Z by comparing the turnAxis variable to 'X', 'Y' or 'Z'.\n *\n * @method deviceTurned\n * @example\n * <div>\n * <code>\n * // Run this example on a mobile device\n * // Rotate the device by 90 degrees\n * // to change the value.\n *\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function deviceTurned() {\n *   if (value == 0){\n *     value = 255\n *   } else if (value == 255) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * // Run this example on a mobile device\n * // Rotate the device by 90 degrees in the\n * // X-axis to change the value.\n *\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function deviceTurned() {\n *   if (turnAxis == 'X'){\n *     if (value == 0){\n *       value = 255\n *     } else if (value == 255) {\n *       value = 0;\n *     }\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect in center of canvas. turns white on mobile when device turns\n * 50x50 black rect in center of canvas. turns white on mobile when x-axis turns\n *\n */\n\n/**\n * The deviceShaken() function is called when the device total acceleration\n * changes of accelerationX and accelerationY values is more than\n * the threshold value. The default threshold is set to 30.\n * @method deviceShaken\n * @example\n * <div>\n * <code>\n * // Run this example on a mobile device\n * // Shake the device to change the value.\n *\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function deviceShaken() {\n *   value = value + 5;\n *   if (value > 255) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect in center of canvas. turns white on mobile when device shakes\n *\n */\n\np5.prototype._ondeviceorientation = function (e) {\n  this._updatePRotations();\n  this._setProperty('rotationX', e.beta);\n  this._setProperty('rotationY', e.gamma);\n  this._setProperty('rotationZ', e.alpha);\n  this._handleMotion();\n};\np5.prototype._ondevicemotion = function (e) {\n  this._updatePAccelerations();\n  this._setProperty('accelerationX', e.acceleration.x * 2);\n  this._setProperty('accelerationY', e.acceleration.y * 2);\n  this._setProperty('accelerationZ', e.acceleration.z * 2);\n  this._handleMotion();\n};\np5.prototype._handleMotion = function() {\n  if (window.orientation === 90 || window.orientation === -90) {\n    this._setProperty('deviceOrientation', 'landscape');\n  } else if (window.orientation === 0) {\n    this._setProperty('deviceOrientation', 'portrait');\n  } else if (window.orientation === undefined) {\n    this._setProperty('deviceOrientation', 'undefined');\n  }\n  var deviceMoved = this.deviceMoved || window.deviceMoved;\n  if (typeof deviceMoved === 'function') {\n    if (Math.abs(this.accelerationX - this.pAccelerationX) > move_threshold ||\n      Math.abs(this.accelerationY - this.pAccelerationY) > move_threshold ||\n      Math.abs(this.accelerationZ - this.pAccelerationZ) > move_threshold) {\n      deviceMoved();\n    }\n  }\n  var deviceTurned = this.deviceTurned || window.deviceTurned;\n  if (typeof deviceTurned === 'function') {\n    // The angles given by rotationX etc is from range -180 to 180.\n    // The following will convert them to 0 to 360 for ease of calculation\n    // of cases when the angles wrapped around.\n    // _startAngleX will be converted back at the end and updated.\n    var wRX = this.rotationX + 180;\n    var wPRX = this.pRotationX + 180;\n    var wSAX = startAngleX + 180;\n    if ((wRX - wPRX > 0 && wRX - wPRX < 270)|| wRX - wPRX < -270){\n      rotateDirectionX = 'clockwise';\n    } else if (wRX - wPRX < 0 || wRX - wPRX > 270){\n      rotateDirectionX = 'counter-clockwise';\n    }\n    if (rotateDirectionX !== pRotateDirectionX){\n      wSAX = wRX;\n    }\n    if (Math.abs(wRX - wSAX) > 90 && Math.abs(wRX - wSAX) < 270){\n      wSAX = wRX;\n      this._setProperty('turnAxis', 'X');\n      deviceTurned();\n    }\n    pRotateDirectionX = rotateDirectionX;\n    startAngleX = wSAX - 180;\n\n    // Y-axis is identical to X-axis except for changing some names.\n    var wRY = this.rotationY + 180;\n    var wPRY = this.pRotationY + 180;\n    var wSAY = startAngleY + 180;\n    if ((wRY - wPRY > 0 && wRY - wPRY < 270)|| wRY - wPRY < -270){\n      rotateDirectionY = 'clockwise';\n    } else if (wRY - wPRY < 0 || wRY - this.pRotationY > 270){\n      rotateDirectionY = 'counter-clockwise';\n    }\n    if (rotateDirectionY !== pRotateDirectionY){\n      wSAY = wRY;\n    }\n    if (Math.abs(wRY - wSAY) > 90 && Math.abs(wRY - wSAY) < 270){\n      wSAY = wRY;\n      this._setProperty('turnAxis', 'Y');\n      deviceTurned();\n    }\n    pRotateDirectionY = rotateDirectionY;\n    startAngleY = wSAY - 180;\n\n    // Z-axis is already in the range 0 to 360\n    // so no conversion is needed.\n    if ((this.rotationZ - this.pRotationZ > 0 &&\n      this.rotationZ - this.pRotationZ < 270)||\n      this.rotationZ - this.pRotationZ < -270){\n      rotateDirectionZ = 'clockwise';\n    } else if (this.rotationZ - this.pRotationZ < 0 ||\n      this.rotationZ - this.pRotationZ > 270){\n      rotateDirectionZ = 'counter-clockwise';\n    }\n    if (rotateDirectionZ !== pRotateDirectionZ){\n      startAngleZ = this.rotationZ;\n    }\n    if (Math.abs(this.rotationZ - startAngleZ) > 90 &&\n      Math.abs(this.rotationZ - startAngleZ) < 270){\n      startAngleZ = this.rotationZ;\n      this._setProperty('turnAxis', 'Z');\n      deviceTurned();\n    }\n    pRotateDirectionZ = rotateDirectionZ;\n    this._setProperty('turnAxis', undefined);\n  }\n  var deviceShaken = this.deviceShaken || window.deviceShaken;\n  if (typeof deviceShaken === 'function') {\n    var accelerationChangeX;\n    var accelerationChangeY;\n    // Add accelerationChangeZ if acceleration change on Z is needed\n    if (this.pAccelerationX !== null) {\n      accelerationChangeX = Math.abs(this.accelerationX - this.pAccelerationX);\n      accelerationChangeY = Math.abs(this.accelerationY - this.pAccelerationY);\n    }\n    if (accelerationChangeX + accelerationChangeY > shake_threshold) {\n      deviceShaken();\n    }\n  }\n};\n\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],51:[function(_dereq_,module,exports){\n/**\n * @module Events\n * @submodule Keyboard\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/**\n * Holds the key codes of currently pressed keys.\n * @private\n */\nvar downKeys = {};\n\n/**\n * The boolean system variable keyIsPressed is true if any key is pressed\n * and false if no keys are pressed.\n *\n * @property keyIsPressed\n * @example\n * <div>\n * <code>\n * var value = 0;\n * function draw() {\n *   if (keyIsPressed === true) {\n *     fill(0);\n *   } else {\n *     fill(255);\n *   }\n *   rect(25, 25, 50, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 white rect that turns black on keypress.\n *\n */\np5.prototype.isKeyPressed = false;\np5.prototype.keyIsPressed = false; // khan\n\n/**\n * The system variable key always contains the value of the most recent\n * key on the keyboard that was typed. To get the proper capitalization, it\n * is best to use it within keyTyped(). For non-ASCII keys, use the keyCode\n * variable.\n *\n * @property key\n * @example\n * <div><code>\n * // Click any key to display it!\n * // (Not Guaranteed to be Case Sensitive)\n * function setup() {\n *   fill(245, 123, 158);\n *   textSize(50);\n * }\n *\n * function draw() {\n *   background(200);\n *   text(key, 33,65); // Display last key pressed.\n * }\n * </div></code>\n *\n * @alt\n * canvas displays any key value that is pressed in pink font.\n *\n */\np5.prototype.key = '';\n\n/**\n * The variable keyCode is used to detect special keys such as BACKSPACE,\n * DELETE, ENTER, RETURN, TAB, ESCAPE, SHIFT, CONTROL, OPTION, ALT, UP_ARROW,\n * DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW.\n *\n * @property keyCode\n * @example\n * <div><code>\n * var fillVal = 126;\n * function draw() {\n *   fill(fillVal);\n *   rect(25, 25, 50, 50);\n * }\n *\n * function keyPressed() {\n *   if (keyCode == UP_ARROW) {\n *     fillVal = 255;\n *   } else if (keyCode == DOWN_ARROW) {\n *     fillVal = 0;\n *   }\n *   return false; // prevent default\n * }\n * </code></div>\n *\n * @alt\n * Grey rect center. turns white when up arrow pressed and black when down\n *\n */\np5.prototype.keyCode = 0;\n\n/**\n * The keyPressed() function is called once every time a key is pressed. The\n * keyCode for the key that was pressed is stored in the keyCode variable.\n * <br><br>\n * For non-ASCII keys, use the keyCode variable. You can check if the keyCode\n * equals BACKSPACE, DELETE, ENTER, RETURN, TAB, ESCAPE, SHIFT, CONTROL,\n * OPTION, ALT, UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW.\n * <br><br>\n * For ASCII keys that was pressed is stored in the key variable. However, it\n * does not distinguish between uppercase and lowercase. For this reason, it\n * is recommended to use keyTyped() to read the key variable, in which the\n * case of the variable will be distinguished.\n * <br><br>\n * Because of how operating systems handle key repeats, holding down a key\n * may cause multiple calls to keyTyped() (and keyReleased() as well). The\n * rate of repeat is set by the operating system and how each computer is\n * configured.<br><br>\n * Browsers may have different default\n * behaviors attached to various key events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n * @method keyPressed\n * @example\n * <div>\n * <code>\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function keyPressed() {\n *   if (value === 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function keyPressed() {\n *   if (keyCode === LEFT_ARROW) {\n *     value = 255;\n *   } else if (keyCode === RIGHT_ARROW) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n * <div class=\"norender\">\n * <code>\n * function keyPressed(){\n *   // Do something\n *   return false; // prevent any default behaviour\n * }\n * </code>\n *\n * @alt\n * black rect center. turns white when key pressed and black when released\n * black rect center. turns white when left arrow pressed and black when right.\n *\n * </div>\n */\np5.prototype._onkeydown = function (e) {\n  if (downKeys[e.which]) { // prevent multiple firings\n    return;\n  }\n  this._setProperty('isKeyPressed', true);\n  this._setProperty('keyIsPressed', true);\n  this._setProperty('keyCode', e.which);\n  downKeys[e.which] = true;\n  var key = String.fromCharCode(e.which);\n  if (!key) {\n    key = e.which;\n  }\n  this._setProperty('key', key);\n  var keyPressed = this.keyPressed || window.keyPressed;\n  if (typeof keyPressed === 'function' && !e.charCode) {\n    var executeDefault = keyPressed(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n/**\n * The keyReleased() function is called once every time a key is released.\n * See key and keyCode for more information.<br><br>\n * Browsers may have different default\n * behaviors attached to various key events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n * @method keyReleased\n * @example\n * <div>\n * <code>\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function keyReleased() {\n *   if (value === 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n *   return false; // prevent any default behavior\n * }\n * </code>\n * </div>\n *\n * @alt\n * black rect center. turns white when key pressed and black when pressed again\n *\n */\np5.prototype._onkeyup = function (e) {\n  var keyReleased = this.keyReleased || window.keyReleased;\n  this._setProperty('isKeyPressed', false);\n  this._setProperty('keyIsPressed', false);\n  this._setProperty('_lastKeyCodeTyped', null);\n  downKeys[e.which] = false;\n  //delete this._downKeys[e.which];\n  var key = String.fromCharCode(e.which);\n  if (!key) {\n    key = e.which;\n  }\n  this._setProperty('key', key);\n  this._setProperty('keyCode', e.which);\n  if (typeof keyReleased === 'function') {\n    var executeDefault = keyReleased(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * The keyTyped() function is called once every time a key is pressed, but\n * action keys such as Ctrl, Shift, and Alt are ignored. The most recent\n * key pressed will be stored in the key variable.\n * <br><br>\n * Because of how operating systems handle key repeats, holding down a key\n * will cause multiple calls to keyTyped() (and keyReleased() as well). The\n * rate of repeat is set by the operating system and how each computer is\n * configured.<br><br>\n * Browsers may have different default behaviors attached to various key\n * events. To prevent any default behavior for this event, add \"return false\"\n * to the end of the method.\n *\n * @method keyTyped\n * @example\n * <div>\n * <code>\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function keyTyped() {\n *   if (key === 'a') {\n *     value = 255;\n *   } else if (key === 'b') {\n *     value = 0;\n *   }\n *   // uncomment to prevent any default behavior\n *   // return false;\n * }\n * </code>\n * </div>\n *\n * @alt\n * black rect center. turns white when 'a' key typed and black when 'b' pressed\n *\n */\np5.prototype._onkeypress = function (e) {\n  if (e.which === this._lastKeyCodeTyped) { // prevent multiple firings\n    return;\n  }\n  this._setProperty('keyCode', e.which);\n  this._setProperty('_lastKeyCodeTyped', e.which); // track last keyCode\n  this._setProperty('key', String.fromCharCode(e.which));\n  var keyTyped = this.keyTyped || window.keyTyped;\n  if (typeof keyTyped === 'function') {\n    var executeDefault = keyTyped(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n/**\n * The onblur function is called when the user is no longer focused\n * on the p5 element. Because the keyup events will not fire if the user is\n * not focused on the element we must assume all keys currently down have\n * been released.\n */\np5.prototype._onblur = function (e) {\n  downKeys = {};\n};\n\n/**\n * The keyIsDown() function checks if the key is currently down, i.e. pressed.\n * It can be used if you have an object that moves, and you want several keys\n * to be able to affect its behaviour simultaneously, such as moving a\n * sprite diagonally. You can put in any number representing the keyCode of\n * the key, or use any of the variable keyCode names listed\n * <a href=\"http://p5js.org/reference/#p5/keyCode\">here</a>.\n *\n * @method keyIsDown\n * @param {Number}          code The key to check for.\n * @return {Boolean}        whether key is down or not\n * @example\n * <div><code>\n * var x = 100;\n * var y = 100;\n *\n * function setup() {\n *   createCanvas(512, 512);\n * }\n *\n * function draw() {\n *   if (keyIsDown(LEFT_ARROW))\n *     x-=5;\n *\n *   if (keyIsDown(RIGHT_ARROW))\n *     x+=5;\n *\n *   if (keyIsDown(UP_ARROW))\n *     y-=5;\n *\n *   if (keyIsDown(DOWN_ARROW))\n *     y+=5;\n *\n *   clear();\n *   fill(255, 0, 0);\n *   ellipse(x, y, 50, 50);\n * }\n * </code></div>\n *\n * @alt\n * 50x50 red ellipse moves left, right, up and down with arrow presses.\n *\n */\np5.prototype.keyIsDown = function(code) {\n  return downKeys[code];\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],52:[function(_dereq_,module,exports){\n/**\n * @module Events\n * @submodule Mouse\n * @for p5\n * @requires core\n * @requires constants\n */\n\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar constants = _dereq_('../core/constants');\n\n/*\n * This is a flag which is false until the first time\n * we receive a mouse event. The pmouseX and pmouseY\n * values will match the mouseX and mouseY values until\n * this interaction takes place.\n */\np5.prototype._hasMouseInteracted = false;\n\n/**\n * The system variable mouseX always contains the current horizontal\n * position of the mouse, relative to (0, 0) of the canvas.\n *\n * @property mouseX\n *\n * @example\n * <div>\n * <code>\n * // Move the mouse across the canvas\n * function draw() {\n *   background(244, 248, 252);\n *   line(mouseX, 0, mouseX, 100);\n * }\n * </code>\n * </div>\n *\n * @alt\n * horizontal black line moves left and right with mouse x-position\n *\n */\np5.prototype.mouseX = 0;\n\n/**\n * The system variable mouseY always contains the current vertical position\n * of the mouse, relative to (0, 0) of the canvas.\n *\n * @property mouseY\n *\n * @example\n * <div>\n * <code>\n * // Move the mouse across the canvas\n * function draw() {\n *   background(244, 248, 252);\n *   line(0, mouseY, 100, mouseY);\n *}\n * </code>\n * </div>\n *\n * @alt\n * vertical black line moves up and down with mouse y-position\n *\n */\np5.prototype.mouseY = 0;\n\n/**\n * The system variable pmouseX always contains the horizontal position of\n * the mouse in the frame previous to the current frame, relative to (0, 0)\n * of the canvas.\n *\n * @property pmouseX\n *\n * @example\n * <div>\n * <code>\n * // Move the mouse across the canvas to leave a trail\n * function setup() {\n *   //slow down the frameRate to make it more visible\n *   frameRate(10);\n * }\n *\n * function draw() {\n *   background(244, 248, 252);\n *   line(mouseX, mouseY, pmouseX, pmouseY);\n *   print(pmouseX + \" -> \" + mouseX);\n * }\n *\n * </code>\n * </div>\n *\n * @alt\n * line trail is created from cursor movements. faster movement make longer line.\n *\n */\np5.prototype.pmouseX = 0;\n\n/**\n * The system variable pmouseY always contains the vertical position of the\n * mouse in the frame previous to the current frame, relative to (0, 0) of\n * the canvas.\n *\n * @property pmouseY\n *\n * @example\n * <div>\n * <code>\n * function draw() {\n *   background(237, 34, 93);\n *   fill(0);\n *   //draw a square only if the mouse is not moving\n *   if(mouseY == pmouseY && mouseX == pmouseX)\n *     rect(20,20,60,60);\n *\n *   print(pmouseY + \" -> \" + mouseY);\n * }\n *\n * </code>\n * </div>\n *\n * @alt\n * 60x60 black rect center, fuschia background. rect flickers on mouse movement\n *\n */\np5.prototype.pmouseY = 0;\n\n/**\n * The system variable winMouseX always contains the current horizontal\n * position of the mouse, relative to (0, 0) of the window.\n *\n * @property winMouseX\n *\n * @example\n * <div>\n * <code>\n * var myCanvas;\n *\n * function setup() {\n *   //use a variable to store a pointer to the canvas\n *   myCanvas = createCanvas(100, 100);\n * }\n *\n * function draw() {\n *   background(237, 34, 93);\n *   fill(0);\n *\n *   //move the canvas to the horizontal mouse position\n *   //relative to the window\n *   myCanvas.position(winMouseX+1, windowHeight/2);\n *\n *  //the y of the square is relative to the canvas\n *  rect(20,mouseY,60,60);\n * }\n *\n * </code>\n * </div>\n *\n * @alt\n * 60x60 black rect y moves with mouse y and fuschia canvas moves with mouse x\n *\n */\np5.prototype.winMouseX = 0;\n\n/**\n * The system variable winMouseY always contains the current vertical\n * position of the mouse, relative to (0, 0) of the window.\n *\n * @property winMouseY\n *\n * @example\n * <div>\n * <code>\n *var myCanvas;\n *\n * function setup() {\n *   //use a variable to store a pointer to the canvas\n *   myCanvas = createCanvas(100, 100);\n * }\n *\n * function draw() {\n *   background(237, 34, 93);\n *   fill(0);\n *\n *   //move the canvas to the vertical mouse position\n *   //relative to the window\n *   myCanvas.position(windowWidth/2, winMouseY+1);\n *\n *  //the x of the square is relative to the canvas\n *  rect(mouseX,20,60,60);\n * }\n *\n * </code>\n * </div>\n *\n * @alt\n * 60x60 black rect x moves with mouse x and fuschia canvas y moves with mouse y\n *\n */\np5.prototype.winMouseY = 0;\n\n/**\n * The system variable pwinMouseX always contains the horizontal position\n * of the mouse in the frame previous to the current frame, relative to\n * (0, 0) of the window.\n *\n * @property pwinMouseX\n *\n * @example\n * <div>\n * <code>\n *\n * var myCanvas;\n *\n * function setup() {\n *   //use a variable to store a pointer to the canvas\n *   myCanvas = createCanvas(100, 100);\n *   noStroke();\n *   fill(237, 34, 93);\n *   }\n *\n * function draw() {\n *   clear();\n *   //the difference between previous and\n *   //current x position is the horizontal mouse speed\n *   var speed = abs(winMouseX-pwinMouseX);\n *   //change the size of the circle\n *   //according to the horizontal speed\n *   ellipse(50, 50, 10+speed*5, 10+speed*5);\n *   //move the canvas to the mouse position\n *   myCanvas.position( winMouseX+1, winMouseY+1);\n * }\n *\n * </code>\n * </div>\n *\n * @alt\n * fuschia ellipse moves with mouse x and y. Grows and shrinks with mouse speed\n *\n */\np5.prototype.pwinMouseX = 0;\n\n/**\n * The system variable pwinMouseY always contains the vertical position of\n * the mouse in the frame previous to the current frame, relative to (0, 0)\n * of the window.\n *\n * @property pwinMouseY\n *\n *\n * @example\n * <div>\n * <code>\n *\n * var myCanvas;\n *\n * function setup() {\n *   //use a variable to store a pointer to the canvas\n *   myCanvas = createCanvas(100, 100);\n *   noStroke();\n *   fill(237, 34, 93);\n *   }\n *\n * function draw() {\n *   clear();\n *   //the difference between previous and\n *   //current y position is the vertical mouse speed\n *   var speed = abs(winMouseY-pwinMouseY);\n *   //change the size of the circle\n *   //according to the vertical speed\n *   ellipse(50, 50, 10+speed*5, 10+speed*5);\n *   //move the canvas to the mouse position\n *   myCanvas.position( winMouseX+1, winMouseY+1);\n * }\n *\n * </code>\n * </div>\n *\n * @alt\n * fuschia ellipse moves with mouse x and y. Grows and shrinks with mouse speed\n *\n */\np5.prototype.pwinMouseY = 0;\n\n/**\n * Processing automatically tracks if the mouse button is pressed and which\n * button is pressed. The value of the system variable mouseButton is either\n * LEFT, RIGHT, or CENTER depending on which button was pressed last.\n * Warning: different browsers may track mouseButton differently.\n *\n * @property mouseButton\n *\n * @example\n\t* <div>\n\t* <code>\n\t* function draw() {\n\t*   background(237, 34, 93);\n\t*   fill(0);\n\t*\n\t*   if (mouseIsPressed) {\n\t*     if (mouseButton == LEFT)\n\t*       ellipse(50, 50, 50, 50);\n\t*     if (mouseButton == RIGHT)\n\t*       rect(25, 25, 50, 50);\n\t*     if (mouseButton == CENTER)\n\t*       triangle(23, 75, 50, 20, 78, 75);\n\t*   }\n\t*\n\t*   print(mouseButton);\n\t* }\n\t* </code>\n * </div>\n *\n * @alt\n * 50x50 black ellipse appears on center of fuschia canvas on mouse click/press.\n *\n */\np5.prototype.mouseButton = 0;\n\n/**\n * The boolean system variable mouseIsPressed is true if the mouse is pressed\n * and false if not.\n *\n * @property mouseIsPressed\n *\n * @example\n\t* <div>\n\t* <code>\n\t* function draw() {\n\t*   background(237, 34, 93);\n\t*   fill(0);\n\t*\n\t*   if (mouseIsPressed)\n\t*     ellipse(50, 50, 50, 50);\n\t*   else\n\t*     rect(25, 25, 50, 50);\n\t*\n\t*   print(mouseIsPressed);\n\t* }\n\t* </code>\n\t* </div>\n  *\n * @alt\n * black 50x50 rect becomes ellipse with mouse click/press. fuschia background.\n *\n */\np5.prototype.mouseIsPressed = false;\np5.prototype.isMousePressed = false; // both are supported\n\np5.prototype._updateNextMouseCoords = function(e) {\n  var x = this.mouseX;\n  var y = this.mouseY;\n  var winX = this.winMouseX;\n  var winY = this.winMouseY;\n  if(e.type === 'touchstart' ||\n     e.type === 'touchmove' ||\n     e.type === 'touchend' || e.touches) {\n    x = this.touchX;\n    y = this.touchY;\n    winX = this.winTouchX;\n    winY = this.winTouchY;\n  } else if(this._curElement !== null) {\n    var mousePos = getMousePos(this._curElement.elt, e);\n    x = mousePos.x;\n    y = mousePos.y;\n    winX = mousePos.winX;\n    winY = mousePos.winY;\n  }\n  this._setProperty('mouseX', x);\n  this._setProperty('mouseY', y);\n  this._setProperty('winMouseX', winX);\n  this._setProperty('winMouseY', winY);\n  if (!this._hasMouseInteracted) {\n    // For first draw, make previous and next equal\n    this._updateMouseCoords();\n    this._setProperty('_hasMouseInteracted', true);\n  }\n};\n\np5.prototype._updateMouseCoords = function() {\n  this._setProperty('pmouseX', this.mouseX);\n  this._setProperty('pmouseY', this.mouseY);\n  this._setProperty('pwinMouseX', this.winMouseX);\n  this._setProperty('pwinMouseY', this.winMouseY);\n};\n\nfunction getMousePos(canvas, evt) {\n  var rect = canvas.getBoundingClientRect();\n  return {\n    x: evt.clientX - rect.left,\n    y: evt.clientY - rect.top,\n    winX: evt.clientX,\n    winY: evt.clientY\n  };\n}\n\np5.prototype._setMouseButton = function(e) {\n  if (e.button === 1) {\n    this._setProperty('mouseButton', constants.CENTER);\n  } else if (e.button === 2) {\n    this._setProperty('mouseButton', constants.RIGHT);\n  } else {\n    this._setProperty('mouseButton', constants.LEFT);\n  }\n};\n\n/**\n * The mouseMoved() function is called every time the mouse moves and a mouse\n * button is not pressed.<br><br>\n * Browsers may have different default\n * behaviors attached to various mouse events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n * @method mouseMoved\n * @example\n * <div>\n * <code>\n * // Move the mouse across the page\n * // to change its value\n *\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function mouseMoved() {\n *   value = value + 5;\n *   if (value > 255) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function mouseMoved() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect becomes lighter with mouse movements until white then resets\n * no image displayed\n *\n */\n\n/**\n * The mouseDragged() function is called once every time the mouse moves and\n * a mouse button is pressed. If no mouseDragged() function is defined, the\n * touchMoved() function will be called instead if it is defined.<br><br>\n * Browsers may have different default\n * behaviors attached to various mouse events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n * @method mouseDragged\n * @example\n * <div>\n * <code>\n * // Drag the mouse across the page\n * // to change its value\n *\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function mouseDragged() {\n *   value = value + 5;\n *   if (value > 255) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function mouseDragged() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect turns lighter with mouse click and drag until white, resets\n * no image displayed\n *\n */\np5.prototype._onmousemove = function(e){\n  var context = this._isGlobal ? window : this;\n  var executeDefault;\n  this._updateNextMouseCoords(e);\n  this._updateNextTouchCoords(e);\n  if (!this.isMousePressed) {\n    if (typeof context.mouseMoved === 'function') {\n      executeDefault = context.mouseMoved(e);\n      if(executeDefault === false) {\n        e.preventDefault();\n      }\n    }\n  }\n  else {\n    if (typeof context.mouseDragged === 'function') {\n      executeDefault = context.mouseDragged(e);\n      if(executeDefault === false) {\n        e.preventDefault();\n      }\n    } else if (typeof context.touchMoved === 'function') {\n      executeDefault = context.touchMoved(e);\n      if(executeDefault === false) {\n        e.preventDefault();\n      }\n    }\n  }\n};\n\n/**\n * The mousePressed() function is called once after every time a mouse button\n * is pressed. The mouseButton variable (see the related reference entry)\n * can be used to determine which button has been pressed. If no\n * mousePressed() function is defined, the touchStarted() function will be\n * called instead if it is defined.<br><br>\n * Browsers may have different default\n * behaviors attached to various mouse events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n * @method mousePressed\n * @example\n * <div>\n * <code>\n * // Click within the image to change\n * // the value of the rectangle\n *\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function mousePressed() {\n *   if (value == 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function mousePressed() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect turns white with mouse click/press.\n * no image displayed\n *\n */\np5.prototype._onmousedown = function(e) {\n  var context = this._isGlobal ? window : this;\n  var executeDefault;\n  this._setProperty('isMousePressed', true);\n  this._setProperty('mouseIsPressed', true);\n  this._setMouseButton(e);\n  this._updateNextMouseCoords(e);\n  this._updateNextTouchCoords(e);\n  if (typeof context.mousePressed === 'function') {\n    executeDefault = context.mousePressed(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  } else if (typeof context.touchStarted === 'function') {\n    executeDefault = context.touchStarted(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * The mouseReleased() function is called every time a mouse button is\n * released. If no mouseReleased() function is defined, the touchEnded()\n * function will be called instead if it is defined.<br><br>\n * Browsers may have different default\n * behaviors attached to various mouse events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n *\n * @method mouseReleased\n * @example\n * <div>\n * <code>\n * // Click within the image to change\n * // the value of the rectangle\n * // after the mouse has been clicked\n *\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function mouseReleased() {\n *   if (value == 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function mouseReleased() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect turns white with mouse click/press.\n * no image displayed\n *\n */\np5.prototype._onmouseup = function(e) {\n  var context = this._isGlobal ? window : this;\n  var executeDefault;\n  this._setProperty('isMousePressed', false);\n  this._setProperty('mouseIsPressed', false);\n  if (typeof context.mouseReleased === 'function') {\n    executeDefault = context.mouseReleased(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  } else if (typeof context.touchEnded === 'function') {\n    executeDefault = context.touchEnded(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\np5.prototype._ondragend = p5.prototype._onmouseup;\np5.prototype._ondragover = p5.prototype._onmousemove;\n\n/**\n * The mouseClicked() function is called once after a mouse button has been\n * pressed and then released.<br><br>\n * Browsers may have different default\n * behaviors attached to various mouse events. To prevent any default\n * behavior for this event, add \"return false\" to the end of the method.\n *\n * @method mouseClicked\n * @example\n * <div>\n * <code>\n * // Click within the image to change\n * // the value of the rectangle\n * // after the mouse has been clicked\n *\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function mouseClicked() {\n *   if (value == 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function mouseClicked() {\n *   ellipse(mouseX, mouseY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect turns white with mouse click/press.\n * no image displayed\n *\n */\np5.prototype._onclick = function(e) {\n  var context = this._isGlobal ? window : this;\n  if (typeof context.mouseClicked === 'function') {\n    var executeDefault = context.mouseClicked(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * The function mouseWheel() is executed every time a vertical mouse wheel\n * event is detected either triggered by an actual mouse wheel or by a\n * touchpad.<br><br>\n * The event.delta property returns the amount the mouse wheel\n * have scrolled. The values can be positive or negative depending on the\n * scroll direction (on OS X with \"natural\" scrolling enabled, the signs\n * are inverted).<br><br>\n * Browsers may have different default behaviors attached to various\n * mouse events. To prevent any default behavior for this event, add\n * \"return false\" to the end of the method.<br><br>\n * Due to the current support of the \"wheel\" event on Safari, the function\n * may only work as expected if \"return false\" is included while using Safari.\n *\n * @method mouseWheel\n *\n * @example\n * <div>\n * <code>\n * var pos = 25;\n *\n * function draw() {\n *   background(237, 34, 93);\n *   fill(0);\n *   rect(25, pos, 50, 50);\n * }\n *\n * function mouseWheel(event) {\n *   print(event.delta);\n *   //move the square according to the vertical scroll amount\n *   pos += event.delta;\n *   //uncomment to block page scrolling\n *   //return false;\n * }\n * </code>\n * </div>\n *\n * @alt\n * black 50x50 rect moves up and down with vertical scroll. fuschia background\n *\n */\np5.prototype._onwheel = function(e) {\n  var context = this._isGlobal ? window : this;\n  if (typeof context.mouseWheel === 'function') {\n    e.delta = e.deltaY;\n    var executeDefault = context.mouseWheel(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\nmodule.exports = p5;\n\n},{\"../core/constants\":36,\"../core/core\":37}],53:[function(_dereq_,module,exports){\n/**\n * @module Events\n * @submodule Touch\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/*\n * This is a flag which is false until the first time\n * we receive a touch event. The ptouchX and ptouchY\n * values will match the touchX and touchY values until\n * this interaction takes place.\n */\np5.prototype._hasTouchInteracted = false;\n\n/**\n * The system variable touchX always contains the horizontal position of\n * one finger, relative to (0, 0) of the canvas. This is best used for\n * single touch interactions. For multi-touch interactions, use the\n * touches[] array.\n *\n * @property touchX\n * @method touchX\n * @example\n * <div>\n * <code>\n * // Touch and move  the finger in horizontally  across the canvas\n * function setup() {\n *   createCanvas(100, 100);\n * }\n *\n * function draw() {\n *   background(51);\n *   stroke(255, 204, 0);\n *   strokeWeight(4);\n *   rect(touchX, 50, 10, 10);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 10x10 white rect with thick gold outline moves left and right with touch x.\n *\n */\np5.prototype.touchX = 0;\n\n/**\n * The system variable touchY always contains the vertical position of\n * one finger, relative to (0, 0) of the canvas. This is best used for\n * single touch interactions. For multi-touch interactions, use the\n * touches[] array.\n *\n * @property touchY\n * @method touchY\n * @example\n * <div>\n * <code>\n * // Touch and move the finger vertically across the canvas\n * function setup() {\n *   createCanvas(100, 100);\n * }\n *\n * function draw() {\n *   background(51);\n *   stroke(255, 204, 0);\n *   strokeWeight(4);\n *   rect(50, touchY, 10, 10);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 10x10 white rect with thick gold outline moves up and down with touch y.\n *\n */\np5.prototype.touchY = 0;\n\n/**\n * The system variable ptouchX always contains the horizontal position of\n * one finger, relative to (0, 0) of the canvas, in the frame previous to the\n * current frame.\n *\n * @property ptouchX\n */\np5.prototype.ptouchX = 0;\n\n/**\n * The system variable ptouchY always contains the vertical position of\n * one finger, relative to (0, 0) of the canvas, in the frame previous to the\n * current frame.\n *\n * @property ptouchY\n */\np5.prototype.ptouchY = 0;\n\n/**\n * The system variable winTouchX always contains the horizontal position of\n * one finger, relative to (0, 0) of the window.\n *\n * @property winTouchX\n */\np5.prototype.winTouchX = 0;\n\n/**\n * The system variable winTouchY always contains the vertical position of\n * one finger, relative to (0, 0) of the window.\n *\n * @property winTouchY\n */\np5.prototype.winTouchY = 0;\n\n/**\n * The system variable pwinTouchX always contains the horizontal position of\n * one finger, relative to (0, 0) of the window, in the frame previous to the\n * current frame.\n *\n * @property pwinTouchX\n */\np5.prototype.pwinTouchX = 0;\n\n/**\n * The system variable pwinTouchY always contains the vertical position of\n * one finger, relative to (0, 0) of the window, in the frame previous to the\n * current frame.\n *\n * @property pwinTouchY\n */\np5.prototype.pwinTouchY = 0;\n\n/**\n * The system variable touches[] contains an array of the positions of all\n * current touch points, relative to (0, 0) of the canvas, and IDs identifying a\n * unique touch as it moves. Each element in the array is an object with x, y,\n * and id properties.\n *\n * @property touches[]\n */\np5.prototype.touches = [];\n\n/**\n * The boolean system variable touchIsDown is true if the screen is\n * touched and false if not.\n *\n * @property touchIsDown\n */\np5.prototype.touchIsDown = false;\n\np5.prototype._updateNextTouchCoords = function(e) {\n  var x = this.touchX;\n  var y = this.touchY;\n  var winX = this.winTouchX;\n  var winY = this.winTouchY;\n  if(e.type === 'mousedown' ||\n     e.type === 'mousemove' ||\n     e.type === 'mouseup' || !e.touches) {\n    x = this.mouseX;\n    y = this.mouseY;\n    winX = this.winMouseX;\n    winY = this.winMouseY;\n  } else {\n    if(this._curElement !== null) {\n      var touchInfo = getTouchInfo(this._curElement.elt, e, 0);\n      x = touchInfo.x;\n      y = touchInfo.y;\n      winX = touchInfo.winX;\n      winY = touchInfo.winY;\n\n      var touches = [];\n      for(var i = 0; i < e.touches.length; i++){\n        touches[i] = getTouchInfo(this._curElement.elt, e, i);\n      }\n      this._setProperty('touches', touches);\n    }\n  }\n  this._setProperty('touchX', x);\n  this._setProperty('touchY', y);\n  this._setProperty('winTouchX', winX);\n  this._setProperty('winTouchY', winY);\n  if (!this._hasTouchInteracted) {\n    // For first draw, make previous and next equal\n    this._updateTouchCoords();\n    this._setProperty('_hasTouchInteracted', true);\n  }\n};\n\np5.prototype._updateTouchCoords = function() {\n  this._setProperty('ptouchX', this.touchX);\n  this._setProperty('ptouchY', this.touchY);\n  this._setProperty('pwinTouchX', this.winTouchX);\n  this._setProperty('pwinTouchY', this.winTouchY);\n};\n\nfunction getTouchInfo(canvas, e, i) {\n  i = i || 0;\n  var rect = canvas.getBoundingClientRect();\n  var touch = e.touches[i] || e.changedTouches[i];\n  return {\n    x: touch.clientX - rect.left,\n    y: touch.clientY - rect.top,\n    winX: touch.clientX,\n    winY: touch.clientY,\n    id: touch.identifier\n  };\n}\n\n/**\n * The touchStarted() function is called once after every time a touch is\n * registered. If no touchStarted() function is defined, the mousePressed()\n * function will be called instead if it is defined.<br><br>\n * Browsers may have different default behaviors attached to various touch\n * events. To prevent any default behavior for this event, add \"return false\"\n * to the end of the method.\n *\n * @method touchStarted\n * @example\n * <div>\n * <code>\n * // Touch within the image to change\n * // the value of the rectangle\n *\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function touchStarted() {\n *   if (value == 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function touchStarted() {\n *   ellipse(touchX, touchY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect turns white with touch event.\n * no image displayed\n */\np5.prototype._ontouchstart = function(e) {\n  var context = this._isGlobal ? window : this;\n  var executeDefault;\n  this._updateNextTouchCoords(e);\n  this._updateNextMouseCoords(e);\n  this._setProperty('touchIsDown', true);\n  if(typeof context.touchStarted === 'function') {\n    executeDefault = context.touchStarted(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  } else if (typeof context.mousePressed === 'function') {\n    executeDefault = context.mousePressed(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n    //this._setMouseButton(e);\n  }\n};\n\n/**\n * The touchMoved() function is called every time a touch move is registered.\n * If no touchMoved() function is defined, the mouseDragged() function will\n * be called instead if it is defined.<br><br>\n * Browsers may have different default behaviors attached to various touch\n * events. To prevent any default behavior for this event, add \"return false\"\n * to the end of the method.\n *\n * @method touchMoved\n * @example\n * <div>\n * <code>\n * // Move your finger across the page\n * // to change its value\n *\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function touchMoved() {\n *   value = value + 5;\n *   if (value > 255) {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function touchMoved() {\n *   ellipse(touchX, touchY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect turns lighter with touch until white. resets\n * no image displayed\n *\n */\np5.prototype._ontouchmove = function(e) {\n  var context = this._isGlobal ? window : this;\n  var executeDefault;\n  this._updateNextTouchCoords(e);\n  this._updateNextMouseCoords(e);\n  if (typeof context.touchMoved === 'function') {\n    executeDefault = context.touchMoved(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  } else if (typeof context.mouseDragged === 'function') {\n    executeDefault = context.mouseDragged(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * The touchEnded() function is called every time a touch ends. If no\n * touchEnded() function is defined, the mouseReleased() function will be\n * called instead if it is defined.<br><br>\n * Browsers may have different default behaviors attached to various touch\n * events. To prevent any default behavior for this event, add \"return false\"\n * to the end of the method.\n *\n * @method touchEnded\n * @example\n * <div>\n * <code>\n * // Release touch within the image to\n * // change the value of the rectangle\n *\n * var value = 0;\n * function draw() {\n *   fill(value);\n *   rect(25, 25, 50, 50);\n * }\n * function touchEnded() {\n *   if (value == 0) {\n *     value = 255;\n *   } else {\n *     value = 0;\n *   }\n * }\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * function touchEnded() {\n *   ellipse(touchX, touchY, 5, 5);\n *   // prevent default\n *   return false;\n * }\n * </code>\n * </div>\n *\n * @alt\n * 50x50 black rect turns white with touch.\n * no image displayed\n *\n */\np5.prototype._ontouchend = function(e) {\n  this._updateNextTouchCoords(e);\n  this._updateNextMouseCoords(e);\n  if (this.touches.length === 0) {\n    this._setProperty('touchIsDown', false);\n  }\n  var context = this._isGlobal ? window : this;\n  var executeDefault;\n  if (typeof context.touchEnded === 'function') {\n    executeDefault = context.touchEnded(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  } else if (typeof context.mouseReleased === 'function') {\n    executeDefault = context.mouseReleased(e);\n    if(executeDefault === false) {\n      e.preventDefault();\n    }\n  }\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],54:[function(_dereq_,module,exports){\n/*global ImageData:false */\n\n/**\n * This module defines the filters for use with image buffers.\n *\n * This module is basically a collection of functions stored in an object\n * as opposed to modules. The functions are destructive, modifying\n * the passed in canvas rather than creating a copy.\n *\n * Generally speaking users of this module will use the Filters.apply method\n * on a canvas to create an effect.\n *\n * A number of functions are borrowed/adapted from\n * http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n * or the java processing implementation.\n */\n\n'use strict';\n\nvar Filters = {};\n\n\n/*\n * Helper functions\n */\n\n\n/**\n * Returns the pixel buffer for a canvas\n *\n * @private\n *\n * @param  {Canvas|ImageData} canvas the canvas to get pixels from\n * @return {Uint8ClampedArray}       a one-dimensional array containing\n *                                   the data in thc RGBA order, with integer\n *                                   values between 0 and 255\n */\nFilters._toPixels = function (canvas) {\n  if (canvas instanceof ImageData) {\n    return canvas.data;\n  } else {\n    return canvas.getContext('2d').getImageData(\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    ).data;\n  }\n};\n\n/**\n * Returns a 32 bit number containing ARGB data at ith pixel in the\n * 1D array containing pixels data.\n *\n * @private\n *\n * @param  {Uint8ClampedArray} data array returned by _toPixels()\n * @param  {Integer}           i    index of a 1D Image Array\n * @return {Integer}                32 bit integer value representing\n *                                  ARGB value.\n */\nFilters._getARGB = function (data, i) {\n  var offset = i * 4;\n  return (data[offset+3] << 24) & 0xff000000 |\n    (data[offset] << 16) & 0x00ff0000 |\n    (data[offset+1] << 8) & 0x0000ff00 |\n    data[offset+2] & 0x000000ff;\n};\n\n/**\n * Modifies pixels RGBA values to values contained in the data object.\n *\n * @private\n *\n * @param {Uint8ClampedArray} pixels array returned by _toPixels()\n * @param {Int32Array}        data   source 1D array where each value\n *                                   represents ARGB values\n */\nFilters._setPixels = function (pixels, data) {\n  var offset = 0;\n  for( var i = 0, al = pixels.length; i < al; i++) {\n    offset = i*4;\n    pixels[offset + 0] = (data[i] & 0x00ff0000)>>>16;\n    pixels[offset + 1] = (data[i] & 0x0000ff00)>>>8;\n    pixels[offset + 2] = (data[i] & 0x000000ff);\n    pixels[offset + 3] = (data[i] & 0xff000000)>>>24;\n  }\n};\n\n/**\n * Returns the ImageData object for a canvas\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData\n *\n * @private\n *\n * @param  {Canvas|ImageData} canvas canvas to get image data from\n * @return {ImageData}               Holder of pixel data (and width and\n *                                   height) for a canvas\n */\nFilters._toImageData = function (canvas) {\n  if (canvas instanceof ImageData) {\n    return canvas;\n  } else {\n    return canvas.getContext('2d').getImageData(\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n  }\n};\n\n/**\n * Returns a blank ImageData object.\n *\n * @private\n *\n * @param  {Integer} width\n * @param  {Integer} height\n * @return {ImageData}\n */\nFilters._createImageData = function (width, height) {\n  Filters._tmpCanvas = document.createElement('canvas');\n  Filters._tmpCtx = Filters._tmpCanvas.getContext('2d');\n  return this._tmpCtx.createImageData(width, height);\n};\n\n\n/**\n * Applys a filter function to a canvas.\n *\n * The difference between this and the actual filter functions defined below\n * is that the filter functions generally modify the pixel buffer but do\n * not actually put that data back to the canvas (where it would actually\n * update what is visible). By contrast this method does make the changes\n * actually visible in the canvas.\n *\n * The apply method is the method that callers of this module would generally\n * use. It has been separated from the actual filters to support an advanced\n * use case of creating a filter chain that executes without actually updating\n * the canvas in between everystep.\n *\n * @param  {[type]} func   [description]\n * @param  {[type]} canvas [description]\n * @param  {[type]} level  [description]\n * @return {[type]}        [description]\n */\nFilters.apply = function (canvas, func, filterParam) {\n  var ctx = canvas.getContext('2d');\n  var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n  //Filters can either return a new ImageData object, or just modify\n  //the one they received.\n  var newImageData = func(imageData, filterParam);\n  if (newImageData instanceof ImageData) {\n    ctx.putImageData(newImageData, 0, 0, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.putImageData(imageData, 0, 0, 0, 0, canvas.width, canvas.height);\n  }\n};\n\n\n/*\n * Filters\n */\n\n\n/**\n * Converts the image to black and white pixels depending if they are above or\n * below the threshold defined by the level parameter. The parameter must be\n * between 0.0 (black) and 1.0 (white). If no level is specified, 0.5 is used.\n *\n * Borrowed from http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n *\n * @param  {Canvas} canvas\n * @param  {Float} level\n */\nFilters.threshold = function (canvas, level) {\n  var pixels = Filters._toPixels(canvas);\n\n  if (level === undefined) {\n    level = 0.5;\n  }\n  var thresh = Math.floor(level * 255);\n\n  for (var i = 0; i < pixels.length; i += 4) {\n    var r = pixels[i];\n    var g = pixels[i + 1];\n    var b = pixels[i + 2];\n    var gray = (0.2126 * r + 0.7152 * g + 0.0722 * b);\n    var val;\n    if (gray >= thresh) {\n      val = 255;\n    } else {\n      val = 0;\n    }\n    pixels[i] = pixels[i + 1] = pixels[i + 2] = val;\n  }\n\n};\n\n\n/**\n * Converts any colors in the image to grayscale equivalents.\n * No parameter is used.\n *\n * Borrowed from http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n *\n * @param {Canvas} canvas\n */\nFilters.gray = function (canvas) {\n  var pixels = Filters._toPixels(canvas);\n\n  for (var i = 0; i < pixels.length; i += 4) {\n    var r = pixels[i];\n    var g = pixels[i + 1];\n    var b = pixels[i + 2];\n\n    // CIE luminance for RGB\n    var gray = (0.2126 * r + 0.7152 * g + 0.0722 * b);\n    pixels[i] = pixels[i + 1] = pixels[i + 2] = gray;\n  }\n};\n\n/**\n * Sets the alpha channel to entirely opaque. No parameter is used.\n *\n * @param {Canvas} canvas\n */\nFilters.opaque = function (canvas) {\n  var pixels = Filters._toPixels(canvas);\n\n  for (var i = 0; i < pixels.length; i += 4) {\n    pixels[i + 3] = 255;\n  }\n\n  return pixels;\n};\n\n/**\n * Sets each pixel to its inverse value. No parameter is used.\n * @param {Invert}\n */\nFilters.invert = function (canvas) {\n  var pixels = Filters._toPixels(canvas);\n\n  for (var i = 0; i < pixels.length; i += 4) {\n    pixels[i] = 255 - pixels[i];\n    pixels[i + 1] = 255 - pixels[i + 1];\n    pixels[i + 2] = 255 - pixels[i + 2];\n  }\n\n};\n\n\n/**\n * Limits each channel of the image to the number of colors specified as\n * the parameter. The parameter can be set to values between 2 and 255, but\n * results are most noticeable in the lower ranges.\n *\n * Adapted from java based processing implementation\n *\n * @param  {Canvas} canvas\n * @param  {Integer} level\n */\nFilters.posterize = function (canvas, level) {\n  var pixels = Filters._toPixels(canvas);\n\n  if ((level < 2) || (level > 255)) {\n    throw new Error(\n      'Level must be greater than 2 and less than 255 for posterize'\n    );\n  }\n\n  var levels1 = level - 1;\n  for (var i = 0; i < pixels.length; i+=4) {\n    var rlevel = pixels[i];\n    var glevel = pixels[i + 1];\n    var blevel = pixels[i + 2];\n\n    pixels[i] = (((rlevel * level) >> 8) * 255) / levels1;\n    pixels[i + 1] = (((glevel * level) >> 8) * 255) / levels1;\n    pixels[i + 2] = (((blevel * level) >> 8) * 255) / levels1;\n  }\n};\n\n/**\n * reduces the bright areas in an image\n * @param  {Canvas} canvas\n *\n */\nFilters.dilate = function (canvas) {\n  var pixels = Filters._toPixels(canvas);\n  var currIdx = 0;\n  var maxIdx = pixels.length ? pixels.length/4 : 0;\n  var out = new Int32Array(maxIdx);\n  var currRowIdx, maxRowIdx, colOrig, colOut, currLum;\n  var idxRight, idxLeft, idxUp, idxDown,\n      colRight, colLeft, colUp, colDown,\n      lumRight, lumLeft, lumUp, lumDown;\n\n  while(currIdx < maxIdx) {\n    currRowIdx = currIdx;\n    maxRowIdx = currIdx + canvas.width;\n    while (currIdx < maxRowIdx) {\n      colOrig = colOut = Filters._getARGB(pixels, currIdx);\n      idxLeft = currIdx - 1;\n      idxRight = currIdx + 1;\n      idxUp = currIdx - canvas.width;\n      idxDown = currIdx + canvas.width;\n\n      if (idxLeft < currRowIdx) {\n        idxLeft = currIdx;\n      }\n      if (idxRight >= maxRowIdx) {\n        idxRight = currIdx;\n      }\n      if (idxUp < 0){\n        idxUp = 0;\n      }\n      if (idxDown >= maxIdx) {\n        idxDown = currIdx;\n      }\n      colUp = Filters._getARGB(pixels, idxUp);\n      colLeft = Filters._getARGB(pixels, idxLeft);\n      colDown = Filters._getARGB(pixels, idxDown);\n      colRight = Filters._getARGB(pixels, idxRight);\n\n      //compute luminance\n      currLum = 77*(colOrig>>16&0xff) +\n        151*(colOrig>>8&0xff) +\n        28*(colOrig&0xff);\n      lumLeft = 77*(colLeft>>16&0xff) +\n        151*(colLeft>>8&0xff) +\n        28*(colLeft&0xff);\n      lumRight = 77*(colRight>>16&0xff) +\n        151*(colRight>>8&0xff) +\n        28*(colRight&0xff);\n      lumUp = 77*(colUp>>16&0xff) +\n        151*(colUp>>8&0xff) +\n        28*(colUp&0xff);\n      lumDown = 77*(colDown>>16&0xff) +\n        151*(colDown>>8&0xff) +\n        28*(colDown&0xff);\n\n      if (lumLeft > currLum) {\n        colOut = colLeft;\n        currLum = lumLeft;\n      }\n      if (lumRight > currLum) {\n        colOut = colRight;\n        currLum = lumRight;\n      }\n      if (lumUp > currLum) {\n        colOut = colUp;\n        currLum = lumUp;\n      }\n      if (lumDown > currLum) {\n        colOut = colDown;\n        currLum = lumDown;\n      }\n      out[currIdx++]=colOut;\n    }\n  }\n  Filters._setPixels(pixels, out);\n};\n\n/**\n * increases the bright areas in an image\n * @param  {Canvas} canvas\n *\n */\nFilters.erode = function(canvas) {\n  var pixels = Filters._toPixels(canvas);\n  var currIdx = 0;\n  var maxIdx = pixels.length ? pixels.length/4 : 0;\n  var out = new Int32Array(maxIdx);\n  var currRowIdx, maxRowIdx, colOrig, colOut, currLum;\n  var idxRight, idxLeft, idxUp, idxDown,\n      colRight, colLeft, colUp, colDown,\n      lumRight, lumLeft, lumUp, lumDown;\n\n  while(currIdx < maxIdx) {\n    currRowIdx = currIdx;\n    maxRowIdx = currIdx + canvas.width;\n    while (currIdx < maxRowIdx) {\n      colOrig = colOut = Filters._getARGB(pixels, currIdx);\n      idxLeft = currIdx - 1;\n      idxRight = currIdx + 1;\n      idxUp = currIdx - canvas.width;\n      idxDown = currIdx + canvas.width;\n\n      if (idxLeft < currRowIdx) {\n        idxLeft = currIdx;\n      }\n      if (idxRight >= maxRowIdx) {\n        idxRight = currIdx;\n      }\n      if (idxUp < 0) {\n        idxUp = 0;\n      }\n      if (idxDown >= maxIdx) {\n        idxDown = currIdx;\n      }\n      colUp = Filters._getARGB(pixels, idxUp);\n      colLeft = Filters._getARGB(pixels, idxLeft);\n      colDown = Filters._getARGB(pixels, idxDown);\n      colRight = Filters._getARGB(pixels, idxRight);\n\n      //compute luminance\n      currLum = 77*(colOrig>>16&0xff) +\n        151*(colOrig>>8&0xff) +\n        28*(colOrig&0xff);\n      lumLeft = 77*(colLeft>>16&0xff) +\n        151*(colLeft>>8&0xff) +\n        28*(colLeft&0xff);\n      lumRight = 77*(colRight>>16&0xff) +\n        151*(colRight>>8&0xff) +\n        28*(colRight&0xff);\n      lumUp = 77*(colUp>>16&0xff) +\n        151*(colUp>>8&0xff) +\n        28*(colUp&0xff);\n      lumDown = 77*(colDown>>16&0xff) +\n        151*(colDown>>8&0xff) +\n        28*(colDown&0xff);\n\n      if (lumLeft < currLum) {\n        colOut = colLeft;\n        currLum = lumLeft;\n      }\n      if (lumRight < currLum) {\n        colOut = colRight;\n        currLum = lumRight;\n      }\n      if (lumUp < currLum) {\n        colOut = colUp;\n        currLum = lumUp;\n      }\n      if (lumDown < currLum) {\n        colOut = colDown;\n        currLum = lumDown;\n      }\n\n      out[currIdx++]=colOut;\n    }\n  }\n  Filters._setPixels(pixels, out);\n};\n\n// BLUR\n\n// internal kernel stuff for the gaussian blur filter\nvar blurRadius;\nvar blurKernelSize;\nvar blurKernel;\nvar blurMult;\n\n/*\n * Port of https://github.com/processing/processing/blob/\n * master/core/src/processing/core/PImage.java#L1250\n *\n * Optimized code for building the blur kernel.\n * further optimized blur code (approx. 15% for radius=20)\n * bigger speed gains for larger radii (~30%)\n * added support for various image types (ALPHA, RGB, ARGB)\n * [toxi 050728]\n */\nfunction buildBlurKernel(r) {\n  var radius = (r * 3.5)|0;\n  radius = (radius < 1) ? 1 : ((radius < 248) ? radius : 248);\n\n  if (blurRadius !== radius) {\n    blurRadius = radius;\n    blurKernelSize = 1 + blurRadius<<1;\n    blurKernel = new Int32Array(blurKernelSize);\n    blurMult = new Array(blurKernelSize);\n    for(var l = 0; l < blurKernelSize; l++){\n      blurMult[l] = new Int32Array(256);\n    }\n\n    var bk,bki;\n    var bm,bmi;\n\n    for (var i = 1, radiusi = radius - 1; i < radius; i++) {\n      blurKernel[radius+i] = blurKernel[radiusi] = bki = radiusi * radiusi;\n      bm = blurMult[radius+i];\n      bmi = blurMult[radiusi--];\n      for (var j = 0; j < 256; j++){\n        bm[j] = bmi[j] = bki * j;\n      }\n    }\n    bk = blurKernel[radius] = radius * radius;\n    bm = blurMult[radius];\n\n    for (var k = 0; k < 256; k++){\n      bm[k] = bk * k;\n    }\n  }\n\n}\n\n// Port of https://github.com/processing/processing/blob/\n// master/core/src/processing/core/PImage.java#L1433\nfunction blurARGB(canvas, radius) {\n  var pixels = Filters._toPixels(canvas);\n  var width = canvas.width;\n  var height = canvas.height;\n  var numPackedPixels = width * height;\n  var argb = new Int32Array(numPackedPixels);\n  for (var j = 0; j < numPackedPixels; j++) {\n    argb[j] = Filters._getARGB(pixels, j);\n  }\n  var sum, cr, cg, cb, ca;\n  var read, ri, ym, ymi, bk0;\n  var a2 = new Int32Array(numPackedPixels);\n  var r2 = new Int32Array(numPackedPixels);\n  var g2 = new Int32Array(numPackedPixels);\n  var b2 = new Int32Array(numPackedPixels);\n  var yi = 0;\n  buildBlurKernel(radius);\n  var x, y, i;\n  var bm;\n  for (y = 0; y < height; y++) {\n    for (x = 0; x < width; x++) {\n      cb = cg = cr = ca = sum = 0;\n      read = x - blurRadius;\n      if (read < 0) {\n        bk0 = -read;\n        read = 0;\n      } else {\n        if (read >= width) {\n          break;\n        }\n        bk0 = 0;\n      }\n      for (i = bk0; i < blurKernelSize; i++) {\n        if (read >= width) {\n          break;\n        }\n        var c = argb[read + yi];\n        bm = blurMult[i];\n        ca += bm[(c & -16777216) >>> 24];\n        cr += bm[(c & 16711680) >> 16];\n        cg += bm[(c & 65280) >> 8];\n        cb += bm[c & 255];\n        sum += blurKernel[i];\n        read++;\n      }\n      ri = yi + x;\n      a2[ri] = ca / sum;\n      r2[ri] = cr / sum;\n      g2[ri] = cg / sum;\n      b2[ri] = cb / sum;\n    }\n    yi += width;\n  }\n  yi = 0;\n  ym = -blurRadius;\n  ymi = ym * width;\n  for (y = 0; y < height; y++) {\n    for (x = 0; x < width; x++) {\n      cb = cg = cr = ca = sum = 0;\n      if (ym < 0) {\n        bk0 = ri = -ym;\n        read = x;\n      } else {\n        if (ym >= height) {\n          break;\n        }\n        bk0 = 0;\n        ri = ym;\n        read = x + ymi;\n      }\n      for (i = bk0; i < blurKernelSize; i++) {\n        if (ri >= height) {\n          break;\n        }\n        bm = blurMult[i];\n        ca += bm[a2[read]];\n        cr += bm[r2[read]];\n        cg += bm[g2[read]];\n        cb += bm[b2[read]];\n        sum += blurKernel[i];\n        ri++;\n        read += width;\n      }\n      argb[x + yi] = (ca/sum)<<24 | (cr/sum)<<16 | (cg/sum)<<8 | (cb/sum);\n    }\n    yi += width;\n    ymi += width;\n    ym++;\n  }\n  Filters._setPixels(pixels, argb);\n}\n\nFilters.blur = function(canvas, radius){\n  blurARGB(canvas, radius);\n};\n\n\nmodule.exports = Filters;\n\n},{}],55:[function(_dereq_,module,exports){\n/**\n * @module Image\n * @submodule Image\n * @for p5\n * @requires core\n */\n\n/**\n * This module defines the p5 methods for the p5.Image class\n * for drawing images to the main display canvas.\n */\n'use strict';\n\n\nvar p5 = _dereq_('../core/core');\n\n/* global frames:true */// This is not global, but JSHint is not aware that\n// this module is implicitly enclosed with Browserify: this overrides the\n// redefined-global error and permits using the name \"frames\" for the array\n// of saved animation frames.\nvar frames = [];\n\n\n/**\n * Creates a new p5.Image (the datatype for storing images). This provides a\n * fresh buffer of pixels to play with. Set the size of the buffer with the\n * width and height parameters.\n * <br><br>\n * .pixels gives access to an array containing the values for all the pixels\n * in the display window.\n * These values are numbers. This array is the size (including an appropriate\n * factor for the pixelDensity) of the display window x4,\n * representing the R, G, B, A values in order for each pixel, moving from\n * left to right across each row, then down each column. See .pixels for\n * more info. It may also be simpler to use set() or get().\n * <br><br>\n * Before accessing the pixels of an image, the data must loaded with the\n * loadPixels() function. After the array data has been modified, the\n * updatePixels() function must be run to update the changes.\n *\n * @method createImage\n * @param  {Integer} width  width in pixels\n * @param  {Integer} height height in pixels\n * @return {p5.Image}       the p5.Image object\n * @example\n * <div>\n * <code>\n * img = createImage(66, 66);\n * img.loadPixels();\n * for (i = 0; i < img.width; i++) {\n *   for (j = 0; j < img.height; j++) {\n *     img.set(i, j, color(0, 90, 102));\n *   }\n * }\n * img.updatePixels();\n * image(img, 17, 17);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * img = createImage(66, 66);\n * img.loadPixels();\n * for (i = 0; i < img.width; i++) {\n *   for (j = 0; j < img.height; j++) {\n *     img.set(i, j, color(0, 90, 102, i % img.width * 2));\n *   }\n * }\n * img.updatePixels();\n * image(img, 17, 17);\n * image(img, 34, 34);\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var pink = color(255, 102, 204);\n * img = createImage(66, 66);\n * img.loadPixels();\n * var d = pixelDensity;\n * var halfImage = 4 * (width * d) * (height/2 * d);\n * for (var i = 0; i < halfImage; i+=4) {\n *   img.pixels[i] = red(pink);\n *   img.pixels[i+1] = green(pink);\n *   img.pixels[i+2] = blue(pink);\n *   img.pixels[i+3] = alpha(pink);\n * }\n * img.updatePixels();\n * image(img, 17, 17);\n * </code>\n * </div>\n *\n * @alt\n * 66x66 dark turquoise rect in center of canvas.\n * 2 gradated dark turquoise rects fade left. 1 center 1 bottom right of canvas\n * no image displayed\n *\n */\np5.prototype.createImage = function(width, height) {\n  return new p5.Image(width, height);\n};\n\n/**\n *  Save the current canvas as an image. In Safari, this will open the\n *  image in the window and the user must provide their own\n *  filename on save-as. Other browsers will either save the\n *  file immediately, or prompt the user with a dialogue window.\n *\n *  @method saveCanvas\n *  @param  {[selectedCanvas]} canvas a variable representing a\n *                             specific html5 canvas (optional)\n *  @param  {[String]} filename\n *  @param  {[String]} extension 'jpg' or 'png'\n *  @example\n *  <div class='norender'><code>\n *  function setup() {\n *    var c = createCanvas(100, 100);\n *    background(255, 0, 0);\n *    saveCanvas(c, 'myCanvas', 'jpg');\n *  }\n *  </code></div>\n *  <div class='norender'><code>\n *  // note that this example has the same result as above\n *  // if no canvas is specified, defaults to main canvas\n *  function setup() {\n *    createCanvas(100, 100);\n *    background(255, 0, 0);\n *    saveCanvas('myCanvas', 'jpg');\n *  }\n *  </code></div>\n *  <div class='norender'><code>\n *  // all of the following are valid\n *  saveCanvas(c, 'myCanvas', 'jpg');\n *  saveCanvas(c, 'myCanvas');\n *  saveCanvas(c);\n *  saveCanvas('myCanvas', 'png');\n *  saveCanvas('myCanvas');\n *  saveCanvas();\n *  </code></div>\n *\n * @alt\n * no image displayed\n * no image displayed\n * no image displayed\n *\n */\np5.prototype.saveCanvas = function() {\n\n  var cnv, filename, extension;\n  if (arguments.length === 3) {\n    cnv = arguments[0];\n    filename = arguments[1];\n    extension = arguments[2];\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'object') {\n      cnv = arguments[0];\n      filename = arguments[1];\n    } else {\n      filename = arguments[0];\n      extension = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'object') {\n      cnv = arguments[0];\n    } else {\n      filename = arguments[0];\n    }\n  }\n\n  if (cnv instanceof p5.Element) {\n    cnv = cnv.elt;\n  }\n  if (!(cnv instanceof HTMLCanvasElement)) {\n    cnv = null;\n  }\n\n  if (!extension) {\n    extension = p5.prototype._checkFileExtension(filename, extension)[1];\n    if (extension === '') {\n      extension = 'png';\n    }\n  }\n\n  if (!cnv) {\n    if (this._curElement && this._curElement.elt) {\n      cnv = this._curElement.elt;\n    }\n  }\n\n  if ( p5.prototype._isSafari() ) {\n    var aText = 'Hello, Safari user!\\n';\n    aText += 'Now capturing a screenshot...\\n';\n    aText += 'To save this image,\\n';\n    aText += 'go to File --> Save As.\\n';\n    alert(aText);\n    window.location.href = cnv.toDataURL();\n  } else {\n    var mimeType;\n    if (typeof(extension) === 'undefined') {\n      extension = 'png';\n      mimeType = 'image/png';\n    }\n    else {\n      switch(extension){\n        case 'png':\n          mimeType = 'image/png';\n          break;\n        case 'jpeg':\n          mimeType = 'image/jpeg';\n          break;\n        case 'jpg':\n          mimeType = 'image/jpeg';\n          break;\n        default:\n          mimeType = 'image/png';\n          break;\n      }\n    }\n    var downloadMime = 'image/octet-stream';\n    var imageData = cnv.toDataURL(mimeType);\n    imageData = imageData.replace(mimeType, downloadMime);\n\n    p5.prototype.downloadFile(imageData, filename, extension);\n  }\n};\n\n/**\n *  Capture a sequence of frames that can be used to create a movie.\n *  Accepts a callback. For example, you may wish to send the frames\n *  to a server where they can be stored or converted into a movie.\n *  If no callback is provided, the browser will pop up save dialogues in an\n *  attempt to download all of the images that have just been created. With the\n *  callback provided the image data isn't saved by default but instead passed\n *  as an argument to the callback function as an array of objects, with the\n *  size of array equal to the total number of frames.\n *\n *  @method saveFrames\n *  @param  {String}   filename\n *  @param  {String}   extension 'jpg' or 'png'\n *  @param  {Number}   duration  Duration in seconds to save the frames for.\n *  @param  {Number}   framerate  Framerate to save the frames in.\n *  @param  {Function} [callback] A callback function that will be executed\n                                  to handle the image data. This function\n                                  should accept an array as argument. The\n                                  array will contain the specified number of\n                                  frames of objects. Each object has three\n                                  properties: imageData - an\n                                  image/octet-stream, filename and extension.\n *  @example\n *  <div><code>\n *  function draw() {\n *    background(mouseX);\n *  }\n *\n *  function mousePressed() {\n *    saveFrames(\"out\", \"png\", 1, 25, function(data){\n *      print(data);\n *    });\n *  }\n *  </code></div>\n *\n * @alt\n * canvas background goes from light to dark with mouse x.\n *\n */\np5.prototype.saveFrames = function(fName, ext, _duration, _fps, callback) {\n  var duration = _duration || 3;\n  duration = p5.prototype.constrain(duration, 0, 15);\n  duration = duration * 1000;\n  var fps = _fps || 15;\n  fps = p5.prototype.constrain(fps, 0, 22);\n  var count = 0;\n\n  var makeFrame = p5.prototype._makeFrame;\n  var cnv = this._curElement.elt;\n  var frameFactory = setInterval(function(){\n    makeFrame(fName + count, ext, cnv);\n    count++;\n  },1000/fps);\n\n  setTimeout(function(){\n    clearInterval(frameFactory);\n    if (callback) {\n      callback(frames);\n    }\n    else {\n      for (var i = 0; i < frames.length; i++) {\n        var f = frames[i];\n        p5.prototype.downloadFile(f.imageData, f.filename, f.ext);\n      }\n    }\n    frames = []; // clear frames\n  }, duration + 0.01);\n};\n\np5.prototype._makeFrame = function(filename, extension, _cnv) {\n  var cnv;\n  if (this) {\n    cnv = this._curElement.elt;\n  } else {\n    cnv = _cnv;\n  }\n  var mimeType;\n  if (!extension) {\n    extension = 'png';\n    mimeType = 'image/png';\n  }\n  else {\n    switch(extension.toLowerCase()){\n      case 'png':\n        mimeType = 'image/png';\n        break;\n      case 'jpeg':\n        mimeType = 'image/jpeg';\n        break;\n      case 'jpg':\n        mimeType = 'image/jpeg';\n        break;\n      default:\n        mimeType = 'image/png';\n        break;\n    }\n  }\n  var downloadMime = 'image/octet-stream';\n  var imageData = cnv.toDataURL(mimeType);\n  imageData = imageData.replace(mimeType, downloadMime);\n\n  var thisFrame = {};\n  thisFrame.imageData = imageData;\n  thisFrame.filename = filename;\n  thisFrame.ext = extension;\n  frames.push(thisFrame);\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],56:[function(_dereq_,module,exports){\n/**\n * @module Image\n * @submodule Loading & Displaying\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar Filters = _dereq_('./filters');\nvar canvas = _dereq_('../core/canvas');\nvar constants = _dereq_('../core/constants');\n\n_dereq_('../core/error_helpers');\n\n/**\n * Loads an image from a path and creates a p5.Image from it.\n * <br><br>\n * The image may not be immediately available for rendering\n * If you want to ensure that the image is ready before doing\n * anything with it, place the loadImage() call in preload().\n * You may also supply a callback function to handle the image when it's ready.\n * <br><br>\n * The path to the image should be relative to the HTML file\n * that links in your sketch. Loading an from a URL or other\n * remote location may be blocked due to your browser's built-in\n * security.\n *\n * @method loadImage\n * @param  {String} path Path of the image to be loaded\n * @param  {Function(p5.Image)} [successCallback] Function to be called once\n *                                the image is loaded. Will be passed the\n *                                p5.Image.\n * @param  {Function(Event)}    [failureCallback] called with event error if\n *                                the image fails to load.\n * @return {p5.Image}             the p5.Image object\n * @example\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/laDefense.jpg\");\n * }\n * function setup() {\n *   image(img, 0, 0);\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * function setup() {\n *   // here we use a callback to display the image after loading\n *   loadImage(\"assets/laDefense.jpg\", function(img) {\n *     image(img, 0, 0);\n *   });\n * }\n * </code>\n * </div>\n *\n * @alt\n * image of the underside of a white umbrella and grided ceililng above\n * image of the underside of a white umbrella and grided ceililng above\n *\n */\np5.prototype.loadImage = function(path, successCallback, failureCallback) {\n  var img = new Image();\n  var pImg = new p5.Image(1, 1, this);\n  var decrementPreload = p5._getDecrementPreload.apply(this, arguments);\n\n  img.onload = function() {\n    pImg.width = pImg.canvas.width = img.width;\n    pImg.height = pImg.canvas.height = img.height;\n\n    // Draw the image into the backing canvas of the p5.Image\n    pImg.drawingContext.drawImage(img, 0, 0);\n\n    if (typeof successCallback === 'function') {\n      successCallback(pImg);\n    }\n    if (decrementPreload && (successCallback !== decrementPreload)) {\n      decrementPreload();\n    }\n  };\n  img.onerror = function(e) {\n    p5._friendlyFileLoadError(0,img.src);\n    // don't get failure callback mixed up with decrementPreload\n    if ((typeof failureCallback === 'function') &&\n      (failureCallback !== decrementPreload)) {\n      failureCallback(e);\n    }\n  };\n\n  //set crossOrigin in case image is served which CORS headers\n  //this will let us draw to canvas without tainting it.\n  //see https://developer.mozilla.org/en-US/docs/HTML/CORS_Enabled_Image\n  // When using data-uris the file will be loaded locally\n  // so we don't need to worry about crossOrigin with base64 file types\n  if(path.indexOf('data:image/') !== 0) {\n    img.crossOrigin = 'Anonymous';\n  }\n\n  //start loading the image\n  img.src = path;\n\n  return pImg;\n};\n\n/**\n * Validates clipping params. Per drawImage spec sWidth and sHight cannot be\n * negative or greater than image intrinsic width and height\n * @private\n * @param {Number} sVal\n * @param {Number} iVal\n * @returns {Number}\n * @private\n */\nfunction _sAssign(sVal, iVal) {\n  if (sVal > 0 && sVal < iVal) {\n    return sVal;\n  }\n  else {\n    return iVal;\n  }\n}\n\n/**\n * Draw an image to the main canvas of the p5js sketch\n *\n * @method image\n * @param  {p5.Image} img    the image to display\n * @param  {Number}   [sx=0]   The X coordinate of the top left corner of the\n *                             sub-rectangle of the source image to draw into\n *                             the destination canvas.\n * @param  {Number}   [sy=0]   The Y coordinate of the top left corner of the\n *                             sub-rectangle of the source image to draw into\n *                             the destination canvas.\n * @param {Number} [sWidth=img.width] The width of the sub-rectangle of the\n *                                    source image to draw into the destination\n *                                    canvas.\n * @param {Number} [sHeight=img.height] The height of the sub-rectangle of the\n *                                      source image to draw into the\n *                                      destination context.\n * @param  {Number}   [dx=0]    The X coordinate in the destination canvas at\n *                              which to place the top-left corner of the\n *                              source image.\n * @param  {Number}   [dy=0]    The Y coordinate in the destination canvas at\n *                              which to place the top-left corner of the\n *                              source image.\n * @param  {Number}   [dWidth]  The width to draw the image in the destination\n *                              canvas. This allows scaling of the drawn image.\n * @param  {Number}   [dHeight] The height to draw the image in the destination\n *                              canvas. This allows scaling of the drawn image.\n * @example\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/laDefense.jpg\");\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   image(img, 0, 0, 100, 100);\n *   image(img, 0, 0, 100, 100, 0, 0, 100, 100);\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * function setup() {\n *   // here we use a callback to display the image after loading\n *   loadImage(\"assets/laDefense.jpg\", function(img) {\n *     image(img, 0, 0);\n *   });\n * }\n * </code>\n * </div>\n *\n * @alt\n * image of the underside of a white umbrella and grided ceiling above\n * image of the underside of a white umbrella and grided ceiling above\n *\n */\np5.prototype.image =\n  function(img, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) {\n  // Temporarily disabling until options for p5.Graphics are added.\n  // var args = new Array(arguments.length);\n  // for (var i = 0; i < args.length; ++i) {\n  //   args[i] = arguments[i];\n  // }\n  // this._validateParameters(\n  //   'image',\n  //   args,\n  //   [\n  //     ['p5.Image', 'Number', 'Number'],\n  //     ['p5.Image', 'Number', 'Number', 'Number', 'Number']\n  //   ]\n  // );\n\n  // set defaults per spec: https://goo.gl/3ykfOq\n  if (arguments.length <= 5) {\n    dx = sx || 0;\n    dy = sy || 0;\n    sx = 0;\n    sy = 0;\n    if (img.elt && img.elt.videoWidth && !img.canvas) { // video no canvas\n      var actualW = img.elt.videoWidth;\n      var actualH = img.elt.videoHeight;\n      dWidth = sWidth || img.elt.width;\n      dHeight = sHeight || img.elt.width*actualH/actualW;\n      sWidth = actualW;\n      sHeight = actualH;\n    } else {\n      dWidth = sWidth || img.width;\n      dHeight = sHeight || img.height;\n      sWidth = img.width;\n      sHeight = img.height;\n    }\n  } else if (arguments.length === 9) {\n    sx = sx || 0;\n    sy = sy || 0;\n    sWidth = _sAssign(sWidth, img.width);\n    sHeight = _sAssign(sHeight, img.height);\n\n    dx = dx || 0;\n    dy = dy || 0;\n    dWidth = dWidth || img.width;\n    dHeight = dHeight || img.height;\n  } else {\n    throw 'Wrong number of arguments to image()';\n  }\n\n  var vals = canvas.modeAdjust(dx, dy, dWidth, dHeight,\n    this._renderer._imageMode);\n\n  // tint the image if there is a tint\n  this._renderer.image(img, sx, sy, sWidth, sHeight, vals.x, vals.y, vals.w,\n    vals.h);\n};\n\n/**\n * Sets the fill value for displaying images. Images can be tinted to\n * specified colors or made transparent by including an alpha value.\n * <br><br>\n * To apply transparency to an image without affecting its color, use\n * white as the tint color and specify an alpha value. For instance,\n * tint(255, 128) will make an image 50% transparent (assuming the default\n * alpha range of 0-255, which can be changed with colorMode()).\n * <br><br>\n * The value for the gray parameter must be less than or equal to the current\n * maximum value as specified by colorMode(). The default maximum value is\n * 255.\n *\n * @method tint\n * @param {Number|Array} v1   gray value, red or hue value (depending on the\n *                            current color mode), or color Array\n * @param {Number|Array} [v2] green or saturation value (depending on the\n *                            current color mode)\n * @param {Number|Array} [v3] blue or brightness value (depending on the\n *                            current color mode)\n * @param {Number|Array} [a]  opacity of the background\n * @example\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/laDefense.jpg\");\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   tint(0, 153, 204);  // Tint blue\n *   image(img, 50, 0);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/laDefense.jpg\");\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   tint(0, 153, 204, 126);  // Tint blue and set transparency\n *   image(img, 50, 0);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/laDefense.jpg\");\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   tint(255, 126);  // Apply transparency without changing color\n *   image(img, 50, 0);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 2 side by side images of umbrella and ceiling, one image with blue tint\n * Images of umbrella and ceiling, one half of image with blue tint\n * 2 side by side images of umbrella and ceiling, one image translucent\n *\n */\np5.prototype.tint = function () {\n  var c = this.color.apply(this, arguments);\n  this._renderer._tint = c.levels;\n};\n\n/**\n * Removes the current fill value for displaying images and reverts to\n * displaying images with their original hues.\n *\n * @method noTint\n * @example\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/bricks.jpg\");\n * }\n * function setup() {\n *   tint(0, 153, 204);  // Tint blue\n *   image(img, 0, 0);\n *   noTint();  // Disable tint\n *   image(img, 50, 0);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 2 side by side images of bricks, left image with blue tint\n *\n */\np5.prototype.noTint = function() {\n  this._renderer._tint = null;\n};\n\n/**\n * Apply the current tint color to the input image, return the resulting\n * canvas.\n *\n * @param {p5.Image} The image to be tinted\n * @return {canvas} The resulting tinted canvas\n *\n */\np5.prototype._getTintedImageCanvas = function(img) {\n  if (!img.canvas) {\n    return img;\n  }\n  var pixels = Filters._toPixels(img.canvas);\n  var tmpCanvas = document.createElement('canvas');\n  tmpCanvas.width = img.canvas.width;\n  tmpCanvas.height = img.canvas.height;\n  var tmpCtx = tmpCanvas.getContext('2d');\n  var id = tmpCtx.createImageData(img.canvas.width, img.canvas.height);\n  var newPixels = id.data;\n\n  for(var i = 0; i < pixels.length; i += 4) {\n    var r = pixels[i];\n    var g = pixels[i+1];\n    var b = pixels[i+2];\n    var a = pixels[i+3];\n\n    newPixels[i] = r*this._renderer._tint[0]/255;\n    newPixels[i+1] = g*this._renderer._tint[1]/255;\n    newPixels[i+2] = b*this._renderer._tint[2]/255;\n    newPixels[i+3] = a*this._renderer._tint[3]/255;\n  }\n\n  tmpCtx.putImageData(id, 0, 0);\n  return tmpCanvas;\n};\n\n/**\n * Set image mode. Modifies the location from which images are drawn by\n * changing the way in which parameters given to image() are interpreted.\n * The default mode is imageMode(CORNER), which interprets the second and\n * third parameters of image() as the upper-left corner of the image. If\n * two additional parameters are specified, they are used to set the image's\n * width and height.\n * <br><br>\n * imageMode(CORNERS) interprets the second and third parameters of image()\n * as the location of one corner, and the fourth and fifth parameters as the\n * opposite corner.\n * <br><br>\n * imageMode(CENTER) interprets the second and third parameters of image()\n * as the image's center point. If two additional parameters are specified,\n * they are used to set the image's width and height.\n *\n * @method imageMode\n * @param {Constant} mode either CORNER, CORNERS, or CENTER\n * @example\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/bricks.jpg\");\n * }\n * function setup() {\n *   imageMode(CORNER);\n *   image(img, 10, 10, 50, 50);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/bricks.jpg\");\n * }\n * function setup() {\n *   imageMode(CORNERS);\n *   image(img, 10, 10, 90, 40);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/bricks.jpg\");\n * }\n * function setup() {\n *   imageMode(CENTER);\n *   image(img, 50, 50, 80, 80);\n * }\n * </code>\n * </div>\n *\n * @alt\n * small square image of bricks\n * horizontal rectangle image of bricks\n * large square image of bricks\n *\n */\np5.prototype.imageMode = function(m) {\n  if (m === constants.CORNER ||\n    m === constants.CORNERS ||\n    m === constants.CENTER) {\n    this._renderer._imageMode = m;\n  }\n};\n\n\nmodule.exports = p5;\n\n},{\"../core/canvas\":35,\"../core/constants\":36,\"../core/core\":37,\"../core/error_helpers\":40,\"./filters\":54}],57:[function(_dereq_,module,exports){\n/**\n * @module Image\n * @submodule Image\n * @requires core\n * @requires constants\n * @requires filters\n */\n\n/**\n * This module defines the p5.Image class and P5 methods for\n * drawing images to the main display canvas.\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar Filters = _dereq_('./filters');\n\n/*\n * Class methods\n */\n\n/**\n * Creates a new p5.Image. A p5.Image is a canvas backed representation of an\n * image.\n * <br><br>\n * p5 can display .gif, .jpg and .png images. Images may be displayed\n * in 2D and 3D space. Before an image is used, it must be loaded with the\n * loadImage() function. The p5.Image class contains fields for the width and\n * height of the image, as well as an array called pixels[] that contains the\n * values for every pixel in the image.\n * <br><br>\n * The methods described below allow easy access to the image's pixels and\n * alpha channel and simplify the process of compositing.\n * <br><br>\n * Before using the pixels[] array, be sure to use the loadPixels() method on\n * the image to make sure that the pixel data is properly loaded.\n *\n * @class p5.Image\n * @constructor\n * @param {Number} width\n * @param {Number} height\n * @param {Object} pInst An instance of a p5 sketch.\n */\np5.Image = function(width, height){\n  /**\n   * Image width.\n   * @property width\n   * @example\n   * <div><code>\n   * var img;\n   * function preload() {\n   *   img = loadImage(\"assets/rockies.jpg\");\n   * }\n   *\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   image(img, 0, 0);\n   *   for (var i=0; i < img.width; i++) {\n   *     var c = img.get(i, img.height/2);\n   *     stroke(c);\n   *     line(i, height/2, i, height);\n   *   }\n   * }\n   * </code></div>\n   *\n   * @alt\n   * rocky mountains in top and horizontal lines in corresponding colors in bottom.\n   *\n   */\n  this.width = width;\n  /**\n   * Image height.\n   * @property height\n   * @example\n   * <div><code>\n   * var img;\n   * function preload() {\n   *   img = loadImage(\"assets/rockies.jpg\");\n   * }\n   *\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   image(img, 0, 0);\n   *   for (var i=0; i < img.height; i++) {\n   *     var c = img.get(img.width/2, i);\n   *     stroke(c);\n   *     line(0, i, width/2, i);\n   *   }\n   * }\n   * </code></div>\n   *\n   * @alt\n   * rocky mountains on right and vertical lines in corresponding colors on left.\n   *\n   */\n  this.height = height;\n  this.canvas = document.createElement('canvas');\n  this.canvas.width = this.width;\n  this.canvas.height = this.height;\n  this.drawingContext = this.canvas.getContext('2d');\n  this._pixelDensity = 1;\n  //used for webgl texturing only\n  this.isTexture = false;\n  /**\n   * Array containing the values for all the pixels in the display window.\n   * These values are numbers. This array is the size (include an appropriate\n   * factor for pixelDensity) of the display window x4,\n   * representing the R, G, B, A values in order for each pixel, moving from\n   * left to right across each row, then down each column. Retina and other\n   * high denisty displays may have more pixels[] (by a factor of\n   * pixelDensity^2).\n   * For example, if the image is 100x100 pixels, there will be 40,000. With\n   * pixelDensity = 2, there will be 160,000. The first four values\n   * (indices 0-3) in the array will be the R, G, B, A values of the pixel at\n   * (0, 0). The second four values (indices 4-7) will contain the R, G, B, A\n   * values of the pixel at (1, 0). More generally, to set values for a pixel\n   * at (x, y):\n   * <code><pre>var d = pixelDensity;\n   * for (var i = 0; i < d; i++) {\n   *   for (var j = 0; j < d; j++) {\n   *     // loop over\n   *     idx = 4*((y * d + j) * width * d + (x * d + i));\n   *     pixels[idx] = r;\n   *     pixels[idx+1] = g;\n   *     pixels[idx+2] = b;\n   *     pixels[idx+3] = a;\n   *   }\n   * }\n   * </pre></code>\n   * <br><br>\n   * Before accessing this array, the data must loaded with the loadPixels()\n   * function. After the array data has been modified, the updatePixels()\n   * function must be run to update the changes.\n   * @property pixels[]\n   * @example\n   * <div>\n   * <code>\n   * img = createImage(66, 66);\n   * img.loadPixels();\n   * for (i = 0; i < img.width; i++) {\n   *   for (j = 0; j < img.height; j++) {\n   *     img.set(i, j, color(0, 90, 102));\n   *   }\n   * }\n   * img.updatePixels();\n   * image(img, 17, 17);\n   * </code>\n   * </div>\n   * <div>\n   * <code>\n   * var pink = color(255, 102, 204);\n   * img = createImage(66, 66);\n   * img.loadPixels();\n   * for (var i = 0; i < 4*(width*height/2); i+=4) {\n   *   img.pixels[i] = red(pink);\n   *   img.pixels[i+1] = green(pink);\n   *   img.pixels[i+2] = blue(pink);\n   *   img.pixels[i+3] = alpha(pink);\n   * }\n   * img.updatePixels();\n   * image(img, 17, 17);\n   * </code>\n   * </div>\n   *\n   * @alt\n   * 66x66 turquoise rect in center of canvas\n   * 66x66 pink rect in center of canvas\n   *\n   */\n  this.pixels = [];\n};\n\n/**\n * Helper fxn for sharing pixel methods\n *\n */\np5.Image.prototype._setProperty = function (prop, value) {\n  this[prop] = value;\n};\n\n/**\n * Loads the pixels data for this image into the [pixels] attribute.\n *\n * @method loadPixels\n * @example\n * <div><code>\n * var myImage;\n * var halfImage;\n *\n * function preload() {\n *   myImage = loadImage(\"assets/rockies.jpg\");\n * }\n *\n * function setup() {\n *   myImage.loadPixels();\n *   halfImage = 4 * width * height/2;\n *   for(var i = 0; i < halfImage; i++){\n *     myImage.pixels[i+halfImage] = myImage.pixels[i];\n *   }\n *   myImage.updatePixels();\n * }\n *\n * function draw() {\n *   image(myImage, 0, 0);\n * }\n * </code></div>\n *\n   * @alt\n   * 2 images of rocky mountains vertically stacked\n   *\n */\np5.Image.prototype.loadPixels = function(){\n  p5.Renderer2D.prototype.loadPixels.call(this);\n};\n\n/**\n * Updates the backing canvas for this image with the contents of\n * the [pixels] array.\n *\n * @method updatePixels\n * @param {Integer|undefined} x x-offset of the target update area for the\n *                              underlying canvas\n * @param {Integer|undefined} y y-offset of the target update area for the\n *                              underlying canvas\n * @param {Integer|undefined} w height of the target update area for the\n *                              underlying canvas\n * @param {Integer|undefined} h height of the target update area for the\n *                              underlying canvas\n * @example\n * <div><code>\n * var myImage;\n * var halfImage;\n *\n * function preload() {\n *   myImage = loadImage(\"assets/rockies.jpg\");\n * }\n *\n * function setup() {\n *   myImage.loadPixels();\n *   halfImage = 4 * width * height/2;\n *   for(var i = 0; i < halfImage; i++){\n *     myImage.pixels[i+halfImage] = myImage.pixels[i];\n *   }\n *   myImage.updatePixels();\n * }\n *\n * function draw() {\n *   image(myImage, 0, 0);\n * }\n * </code></div>\n *\n * @alt\n * 2 images of rocky mountains vertically stacked\n *\n */\np5.Image.prototype.updatePixels = function(x, y, w, h){\n  p5.Renderer2D.prototype.updatePixels.call(this, x, y, w, h);\n};\n\n/**\n * Get a region of pixels from an image.\n *\n * If no params are passed, those whole image is returned,\n * if x and y are the only params passed a single pixel is extracted\n * if all params are passed a rectangle region is extracted and a p5.Image\n * is returned.\n *\n * Returns undefined if the region is outside the bounds of the image\n *\n * @method get\n * @param  {Number}               [x] x-coordinate of the pixel\n * @param  {Number}               [y] y-coordinate of the pixel\n * @param  {Number}               [w] width\n * @param  {Number}               [h] height\n * @return {Array/Color | p5.Image}     color of pixel at x,y in array format\n *                                    [R, G, B, A] or p5.Image\n * @example\n * <div><code>\n * var myImage;\n * var c;\n *\n * function preload() {\n *   myImage = loadImage(\"assets/rockies.jpg\");\n * }\n *\n * function setup() {\n *   background(myImage);\n *   noStroke();\n *   c = myImage.get(60, 90);\n *   fill(c);\n *   rect(25, 25, 50, 50);\n * }\n *\n * //get() returns color here\n * </code></div>\n *\n * @alt\n * image of rocky mountains with 50x50 green rect in front\n *\n */\np5.Image.prototype.get = function(x, y, w, h){\n  return p5.Renderer2D.prototype.get.call(this, x, y, w, h);\n};\n\n/**\n * Set the color of a single pixel or write an image into\n * this p5.Image.\n *\n * Note that for a large number of pixels this will\n * be slower than directly manipulating the pixels array\n * and then calling updatePixels().\n *\n * @method set\n * @param {Number}              x x-coordinate of the pixel\n * @param {Number}              y y-coordinate of the pixel\n * @param {Number|Array|Object}   a grayscale value | pixel array |\n *                                a p5.Color | image to copy\n * @example\n * <div>\n * <code>\n * img = createImage(66, 66);\n * img.loadPixels();\n * for (i = 0; i < img.width; i++) {\n *   for (j = 0; j < img.height; j++) {\n *     img.set(i, j, color(0, 90, 102, i % img.width * 2));\n *   }\n * }\n * img.updatePixels();\n * image(img, 17, 17);\n * image(img, 34, 34);\n * </code>\n * </div>\n *\n * @alt\n * 2 gradated dark turquoise rects fade left. 1 center 1 bottom right of canvas\n *\n */\np5.Image.prototype.set = function(x, y, imgOrCol){\n  p5.Renderer2D.prototype.set.call(this, x, y, imgOrCol);\n};\n\n/**\n * Resize the image to a new width and height. To make the image scale\n * proportionally, use 0 as the value for the wide or high parameter.\n * For instance, to make the width of an image 150 pixels, and change\n * the height using the same proportion, use resize(150, 0).\n *\n * @method resize\n * @param {Number} width the resized image width\n * @param {Number} height the resized image height\n * @example\n * <div><code>\n * var img;\n *\n * function setup() {\n *   img = loadImage(\"assets/rockies.jpg\");\n * }\n\n * function draw() {\n *   image(img, 0, 0);\n * }\n *\n * function mousePressed() {\n *   img.resize(50, 100);\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains. zoomed in\n *\n */\np5.Image.prototype.resize = function(width, height){\n\n  // Copy contents to a temporary canvas, resize the original\n  // and then copy back.\n  //\n  // There is a faster approach that involves just one copy and swapping the\n  // this.canvas reference. We could switch to that approach if (as i think\n  // is the case) there an expectation that the user would not hold a\n  // reference to the backing canvas of a p5.Image. But since we do not\n  // enforce that at the moment, I am leaving in the slower, but safer\n  // implementation.\n\n  // auto-resize\n  if (width === 0 && height === 0) {\n    width = this.canvas.width;\n    height = this.canvas.height;\n  } else if (width === 0) {\n    width = this.canvas.width * height / this.canvas.height;\n  } else if (height === 0) {\n    height = this.canvas.height * width / this.canvas.width;\n  }\n\n  width = Math.floor(width);\n  height = Math.floor(height);\n\n  var tempCanvas = document.createElement('canvas');\n  tempCanvas.width = width;\n  tempCanvas.height = height;\n  tempCanvas.getContext('2d').drawImage(this.canvas,\n    0, 0, this.canvas.width, this.canvas.height,\n    0, 0, tempCanvas.width, tempCanvas.height\n  );\n\n\n  // Resize the original canvas, which will clear its contents\n  this.canvas.width = this.width = width;\n  this.canvas.height = this.height = height;\n\n  //Copy the image back\n\n  this.drawingContext.drawImage(tempCanvas,\n    0, 0, width, height,\n    0, 0, width, height\n  );\n\n  if(this.pixels.length > 0){\n    this.loadPixels();\n  }\n};\n\n/**\n * Copies a region of pixels from one image to another. If no\n * srcImage is specified this is used as the source. If the source\n * and destination regions aren't the same size, it will\n * automatically resize source pixels to fit the specified\n * target region.\n *\n * @method copy\n * @param  {p5.Image|undefined} srcImage source image\n * @param  {Integer} sx X coordinate of the source's upper left corner\n * @param  {Integer} sy Y coordinate of the source's upper left corner\n * @param  {Integer} sw source image width\n * @param  {Integer} sh source image height\n * @param  {Integer} dx X coordinate of the destination's upper left corner\n * @param  {Integer} dy Y coordinate of the destination's upper left corner\n * @param  {Integer} dw destination image width\n * @param  {Integer} dh destination image height\n * @example\n * <div><code>\n * var photo;\n * var bricks;\n * var x;\n * var y;\n *\n * function preload() {\n *   photo = loadImage(\"assets/rockies.jpg\");\n *   bricks = loadImage(\"assets/bricks.jpg\");\n * }\n *\n * function setup() {\n *   x = bricks.width/2;\n *   y = bricks.height/2;\n *   photo.copy(bricks, 0, 0, x, y, 0, 0, x, y);\n *   image(photo, 0, 0);\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains and smaller image on top of bricks at top left\n *\n */\np5.Image.prototype.copy = function () {\n  p5.prototype.copy.apply(this, arguments);\n};\n\n/**\n * Masks part of an image from displaying by loading another\n * image and using it's blue channel as an alpha channel for\n * this image.\n *\n * @method mask\n * @param {p5.Image} srcImage source image\n * @example\n * <div><code>\n * var photo, maskImage;\n * function preload() {\n *   photo = loadImage(\"assets/rockies.jpg\");\n *   maskImage = loadImage(\"assets/mask2.png\");\n * }\n *\n * function setup() {\n *   createCanvas(100, 100);\n *   photo.mask(maskImage);\n *   image(photo, 0, 0);\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains with white at right\n *\n *\n * http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/\n *\n */\n// TODO: - Accept an array of alpha values.\n//       - Use other channels of an image. p5 uses the\n//       blue channel (which feels kind of arbitrary). Note: at the\n//       moment this method does not match native processings original\n//       functionality exactly.\np5.Image.prototype.mask = function(p5Image) {\n  if(p5Image === undefined){\n    p5Image = this;\n  }\n  var currBlend = this.drawingContext.globalCompositeOperation;\n\n  var scaleFactor = 1;\n  if (p5Image instanceof p5.Renderer) {\n    scaleFactor = p5Image._pInst._pixelDensity;\n  }\n\n  var copyArgs = [\n    p5Image,\n    0,\n    0,\n    scaleFactor*p5Image.width,\n    scaleFactor*p5Image.height,\n    0,\n    0,\n    this.width,\n    this.height\n  ];\n\n  this.drawingContext.globalCompositeOperation = 'destination-in';\n  p5.Image.prototype.copy.apply(this, copyArgs);\n  this.drawingContext.globalCompositeOperation = currBlend;\n};\n\n/**\n * Applies an image filter to a p5.Image\n *\n * @method filter\n * @param {String} operation one of threshold, gray, invert, posterize and\n *                           opaque see Filters.js for docs on each available\n *                           filter\n * @param {Number|undefined} value\n * @example\n * <div><code>\n * var photo1;\n * var photo2;\n *\n * function preload() {\n *   photo1 = loadImage(\"assets/rockies.jpg\");\n *   photo2 = loadImage(\"assets/rockies.jpg\");\n * }\n *\n * function setup() {\n *   photo2.filter(\"gray\");\n *   image(photo1, 0, 0);\n *   image(photo2, width/2, 0);\n * }\n * </code></div>\n *\n * @alt\n * 2 images of rocky mountains left one in color, right in black and white\n *\n */\np5.Image.prototype.filter = function(operation, value) {\n  Filters.apply(this.canvas, Filters[operation.toLowerCase()], value);\n};\n\n/**\n * Copies a region of pixels from one image to another, using a specified\n * blend mode to do the operation.\n *\n * @method blend\n * @param  {p5.Image|undefined} srcImage source image\n * @param  {Integer} sx X coordinate of the source's upper left corner\n * @param  {Integer} sy Y coordinate of the source's upper left corner\n * @param  {Integer} sw source image width\n * @param  {Integer} sh source image height\n * @param  {Integer} dx X coordinate of the destination's upper left corner\n * @param  {Integer} dy Y coordinate of the destination's upper left corner\n * @param  {Integer} dw destination image width\n * @param  {Integer} dh destination image height\n * @param  {Integer} blendMode the blend mode\n *\n * Available blend modes are: normal | multiply | screen | overlay |\n *            darken | lighten | color-dodge | color-burn | hard-light |\n *            soft-light | difference | exclusion | hue | saturation |\n *            color | luminosity\n *\n *\n * http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/\n * @example\n * <div><code>\n * var mountains;\n * var bricks;\n *\n * function preload() {\n *   mountains = loadImage(\"assets/rockies.jpg\");\n *   bricks = loadImage(\"assets/bricks_third.jpg\");\n * }\n *\n * function setup() {\n *   mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, ADD);\n *   image(mountains, 0, 0);\n *   image(bricks, 0, 0);\n * }\n * </code></div>\n * <div><code>\n * var mountains;\n * var bricks;\n *\n * function preload() {\n *   mountains = loadImage(\"assets/rockies.jpg\");\n *   bricks = loadImage(\"assets/bricks_third.jpg\");\n * }\n *\n * function setup() {\n *   mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, DARKEST);\n *   image(mountains, 0, 0);\n *   image(bricks, 0, 0);\n * }\n * </code></div>\n * <div><code>\n * var mountains;\n * var bricks;\n *\n * function preload() {\n *   mountains = loadImage(\"assets/rockies.jpg\");\n *   bricks = loadImage(\"assets/bricks_third.jpg\");\n * }\n *\n * function setup() {\n *   mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, LIGHTEST);\n *   image(mountains, 0, 0);\n *   image(bricks, 0, 0);\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains. Brick images on left and right. Right overexposed\n * image of rockies. Brickwall images on left and right. Right mortar transparent\n * image of rockies. Brickwall images on left and right. Right translucent\n *\n */\np5.Image.prototype.blend = function() {\n  p5.prototype.blend.apply(this, arguments);\n};\n\n/**\n * Saves the image to a file and force the browser to download it.\n * Accepts two strings for filename and file extension\n * Supports png (default) and jpg.\n *\n * @method save\n * @param {String} filename give your file a name\n * @param  {String} extension 'png' or 'jpg'\n * @example\n * <div><code>\n * var photo;\n *\n * function preload() {\n *   photo = loadImage(\"assets/rockies.jpg\");\n * }\n *\n * function draw() {\n *   image(photo, 0, 0);\n * }\n *\n * function keyTyped() {\n *   if (key == 's') {\n *     photo.save(\"photo\", \"png\");\n *   }\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains.\n *\n */\np5.Image.prototype.save = function(filename, extension) {\n  var mimeType;\n  if (!extension) {\n    extension = 'png';\n    mimeType = 'image/png';\n  }\n  else {\n    // en.wikipedia.org/wiki/Comparison_of_web_browsers#Image_format_support\n    switch(extension.toLowerCase()){\n      case 'png':\n        mimeType = 'image/png';\n        break;\n      case 'jpeg':\n        mimeType = 'image/jpeg';\n        break;\n      case 'jpg':\n        mimeType = 'image/jpeg';\n        break;\n      default:\n        mimeType = 'image/png';\n        break;\n    }\n  }\n  var downloadMime = 'image/octet-stream';\n  var imageData = this.canvas.toDataURL(mimeType);\n  imageData = imageData.replace(mimeType, downloadMime);\n\n  //Make the browser download the file\n  p5.prototype.downloadFile(imageData, filename, extension);\n};\n\nmodule.exports = p5.Image;\n},{\"../core/core\":37,\"./filters\":54}],58:[function(_dereq_,module,exports){\n/**\n * @module Image\n * @submodule Pixels\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar Filters = _dereq_('./filters');\n_dereq_('../color/p5.Color');\n\n/**\n * <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference\n * /Global_Objects/Uint8ClampedArray' target='_blank'>Uint8ClampedArray</a>\n * containing the values for all the pixels in the display window.\n * These values are numbers. This array is the size (include an appropriate\n * factor for pixelDensity) of the display window x4,\n * representing the R, G, B, A values in order for each pixel, moving from\n * left to right across each row, then down each column. Retina and other\n * high denisty displays will have more pixels[] (by a factor of\n * pixelDensity^2).\n * For example, if the image is 100x100 pixels, there will be 40,000. On a\n * retina display, there will be 160,000.\n * <br><br>\n * The first four values (indices 0-3) in the array will be the R, G, B, A\n * values of the pixel at (0, 0). The second four values (indices 4-7) will\n * contain the R, G, B, A values of the pixel at (1, 0). More generally, to\n * set values for a pixel at (x, y):\n * <code><pre>\n * var d = pixelDensity;\n * for (var i = 0; i < d; i++) {\n *   for (var j = 0; j < d; j++) {\n *     // loop over\n *     idx = 4 * ((y * d + j) * width * d + (x * d + i));\n *     pixels[idx] = r;\n *     pixels[idx+1] = g;\n *     pixels[idx+2] = b;\n *     pixels[idx+3] = a;\n *   }\n * }\n * </pre></code>\n *\n * <p>While the above method is complex, it is flexible enough to work with\n * any pixelDensity. Note that set() will automatically take care of\n * setting all the appropriate values in pixels[] for a given (x, y) at\n * any pixelDensity, but the performance may not be as fast when lots of\n * modifications are made to the pixel array.\n * <br><br>\n * Before accessing this array, the data must loaded with the loadPixels()\n * function. After the array data has been modified, the updatePixels()\n * function must be run to update the changes.\n * <br><br>\n * Note that this is not a standard javascript array.  This means that\n * standard javascript functions such as <code>slice()</code> or\n * <code>arrayCopy()</code> do not\n * work.</p>\n *\n * @property pixels[]\n * @example\n * <div>\n * <code>\n * var pink = color(255, 102, 204);\n * loadPixels();\n * var d = pixelDensity();\n * var halfImage = 4 * (width * d) * (height/2 * d);\n * for (var i = 0; i < halfImage; i+=4) {\n *   pixels[i] = red(pink);\n *   pixels[i+1] = green(pink);\n *   pixels[i+2] = blue(pink);\n *   pixels[i+3] = alpha(pink);\n * }\n * updatePixels();\n * </code>\n * </div>\n *\n * @alt\n * top half of canvas pink, bottom grey\n *\n */\np5.prototype.pixels = [];\n\n/**\n * Copies a region of pixels from one image to another, using a specified\n * blend mode to do the operation.<br><br>\n * Available blend modes are: BLEND | DARKEST | LIGHTEST | DIFFERENCE |\n * MULTIPLY| EXCLUSION | SCREEN | REPLACE | OVERLAY | HARD_LIGHT |\n * SOFT_LIGHT | DODGE | BURN | ADD | NORMAL\n *\n *\n * @method blend\n * @param  {p5.Image|undefined} srcImage source image\n * @param  {Integer} sx X coordinate of the source's upper left corner\n * @param  {Integer} sy Y coordinate of the source's upper left corner\n * @param  {Integer} sw source image width\n * @param  {Integer} sh source image height\n * @param  {Integer} dx X coordinate of the destination's upper left corner\n * @param  {Integer} dy Y coordinate of the destination's upper left corner\n * @param  {Integer} dw destination image width\n * @param  {Integer} dh destination image height\n * @param  {Integer} blendMode the blend mode\n *\n * @example\n * <div><code>\n * var img0;\n * var img1;\n *\n * function preload() {\n *   img0 = loadImage(\"assets/rockies.jpg\");\n *   img1 = loadImage(\"assets/bricks_third.jpg\");\n * }\n *\n * function setup() {\n *   background(img0);\n *   image(img1, 0, 0);\n *   blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, LIGHTEST);\n * }\n * </code></div>\n * <div><code>\n * var img0;\n * var img1;\n *\n * function preload() {\n *   img0 = loadImage(\"assets/rockies.jpg\");\n *   img1 = loadImage(\"assets/bricks_third.jpg\");\n * }\n *\n * function setup() {\n *   background(img0);\n *   image(img1, 0, 0);\n *   blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, DARKEST);\n * }\n * </code></div>\n * <div><code>\n * var img0;\n * var img1;\n *\n * function preload() {\n *   img0 = loadImage(\"assets/rockies.jpg\");\n *   img1 = loadImage(\"assets/bricks_third.jpg\");\n * }\n *\n * function setup() {\n *   background(img0);\n *   image(img1, 0, 0);\n *   blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, ADD);\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains. Brick images on left and right. Right overexposed\n * image of rockies. Brickwall images on left and right. Right mortar transparent\n * image of rockies. Brickwall images on left and right. Right translucent\n *\n *\n */\np5.prototype.blend = function() {\n  if (this._renderer) {\n    this._renderer.blend.apply(this._renderer, arguments);\n  } else {\n    p5.Renderer2D.prototype.blend.apply(this, arguments);\n  }\n};\n\n/**\n * Copies a region of the canvas to another region of the canvas\n * and copies a region of pixels from an image used as the srcImg parameter\n * into the canvas srcImage is specified this is used as the source. If\n * the source and destination regions aren't the same size, it will\n * automatically resize source pixels to fit the specified\n * target region.\n *\n * @method copy\n * @param  {p5.Image|undefined} srcImage source image\n * @param  {Integer} sx X coordinate of the source's upper left corner\n * @param  {Integer} sy Y coordinate of the source's upper left corner\n * @param  {Integer} sw source image width\n * @param  {Integer} sh source image height\n * @param  {Integer} dx X coordinate of the destination's upper left corner\n * @param  {Integer} dy Y coordinate of the destination's upper left corner\n * @param  {Integer} dw destination image width\n * @param  {Integer} dh destination image height\n *\n * @example\n * <div><code>\n * var img;\n *\n * function preload() {\n *   img = loadImage(\"assets/rockies.jpg\");\n * }\n *\n * function setup() {\n *   background(img);\n *   copy(img, 7, 22, 10, 10, 35, 25, 50, 50);\n *   stroke(255);\n *   noFill();\n *   // Rectangle shows area being copied\n *   rect(7, 22, 10, 10);\n * }\n * </code></div>\n *\n * @alt\n * image of rocky mountains. Brick images on left and right. Right overexposed\n * image of rockies. Brickwall images on left and right. Right mortar transparent\n * image of rockies. Brickwall images on left and right. Right translucent\n *\n */\np5.prototype.copy = function () {\n  p5.Renderer2D._copyHelper.apply(this, arguments);\n};\n\n/**\n * Applies a filter to the canvas.\n * <br><br>\n *\n * The presets options are:\n * <br><br>\n *\n * THRESHOLD\n * Converts the image to black and white pixels depending if they are above or\n * below the threshold defined by the level parameter. The parameter must be\n * between 0.0 (black) and 1.0 (white). If no level is specified, 0.5 is used.\n * <br><br>\n *\n * GRAY\n * Converts any colors in the image to grayscale equivalents. No parameter\n * is used.\n * <br><br>\n *\n * OPAQUE\n * Sets the alpha channel to entirely opaque. No parameter is used.\n * <br><br>\n *\n * INVERT\n * Sets each pixel to its inverse value. No parameter is used.\n * <br><br>\n *\n * POSTERIZE\n * Limits each channel of the image to the number of colors specified as the\n * parameter. The parameter can be set to values between 2 and 255, but\n * results are most noticeable in the lower ranges.\n * <br><br>\n *\n * BLUR\n * Executes a Guassian blur with the level parameter specifying the extent\n * of the blurring. If no parameter is used, the blur is equivalent to\n * Guassian blur of radius 1. Larger values increase the blur.\n * <br><br>\n *\n * ERODE\n * Reduces the light areas. No parameter is used.\n * <br><br>\n *\n * DILATE\n * Increases the light areas. No parameter is used.\n *\n * @method filter\n * @param  {Constant} filterType\n * @param  {Number} filterParam an optional parameter unique\n *  to each filter, see above\n *\n *\n * @example\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/bricks.jpg\");\n * }\n * function setup() {\n *  image(img, 0, 0);\n *  filter(THRESHOLD);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/bricks.jpg\");\n * }\n * function setup() {\n *  image(img, 0, 0);\n *  filter(GRAY);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/bricks.jpg\");\n * }\n * function setup() {\n *  image(img, 0, 0);\n *  filter(OPAQUE);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/bricks.jpg\");\n * }\n * function setup() {\n *  image(img, 0, 0);\n *  filter(INVERT);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/bricks.jpg\");\n * }\n * function setup() {\n *  image(img, 0, 0);\n *  filter(POSTERIZE,3);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/bricks.jpg\");\n * }\n * function setup() {\n *  image(img, 0, 0);\n *  filter(DILATE);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/bricks.jpg\");\n * }\n * function setup() {\n *  image(img, 0, 0);\n *  filter(BLUR,3);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/bricks.jpg\");\n * }\n * function setup() {\n *  image(img, 0, 0);\n *  filter(ERODE);\n * }\n * </code>\n * </div>\n *\n * @alt\n * black and white image of a brick wall.\n * greyscale image of a brickwall\n * image of a brickwall\n * jade colored image of a brickwall\n * red and pink image of a brickwall\n * image of a brickwall\n * blurry image of a brickwall\n * image of a brickwall\n * image of a brickwall with less detail\n *\n */\np5.prototype.filter = function(operation, value) {\n  Filters.apply(this.canvas, Filters[operation.toLowerCase()], value);\n};\n\n/**\n * Returns an array of [R,G,B,A] values for any pixel or grabs a section of\n * an image. If no parameters are specified, the entire image is returned.\n * Use the x and y parameters to get the value of one pixel. Get a section of\n * the display window by specifying additional w and h parameters. When\n * getting an image, the x and y parameters define the coordinates for the\n * upper-left corner of the image, regardless of the current imageMode().\n * <br><br>\n * If the pixel requested is outside of the image window, [0,0,0,255] is\n * returned. To get the numbers scaled according to the current color ranges\n * and taking into account colorMode, use getColor instead of get.\n * <br><br>\n * Getting the color of a single pixel with get(x, y) is easy, but not as fast\n * as grabbing the data directly from pixels[]. The equivalent statement to\n * get(x, y) using pixels[] with pixel density d is\n * <code>\n * var off = (y * width + x) * d * 4;\n * [pixels[off],\n * pixels[off+1],\n * pixels[off+2],\n * pixels[off+3]]</code>\n * <br><br>\n * See the reference for pixels[] for more information.\n *\n * @method get\n * @param  {Number}         [x] x-coordinate of the pixel\n * @param  {Number}         [y] y-coordinate of the pixel\n * @param  {Number}         [w] width\n * @param  {Number}         [h] height\n * @return {Array|p5.Image}     values of pixel at x,y in array format\n *                              [R, G, B, A] or p5.Image\n * @example\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/rockies.jpg\");\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   var c = get();\n *   image(c, width/2, 0);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/rockies.jpg\");\n * }\n * function setup() {\n *   image(img, 0, 0);\n *   var c = get(50, 90);\n *   fill(c);\n *   noStroke();\n *   rect(25, 25, 50, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 2 images of the rocky mountains, side-by-side\n * Image of the rocky mountains with 50x50 green rect in center of canvas\n *\n */\np5.prototype.get = function(x, y, w, h){\n  return this._renderer.get(x, y, w, h);\n};\n\n/**\n * Loads the pixel data for the display window into the pixels[] array. This\n * function must always be called before reading from or writing to pixels[].\n *\n * @method loadPixels\n * @example\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/rockies.jpg\");\n * }\n *\n * function setup() {\n *   image(img, 0, 0);\n *   var d = pixelDensity();\n *   var halfImage = 4 * (img.width * d) *\n       (img.height/2 * d);\n *   loadPixels();\n *   for (var i = 0; i < halfImage; i++) {\n *     pixels[i+halfImage] = pixels[i];\n *   }\n *   updatePixels();\n * }\n * </code>\n * </div>\n *\n * @alt\n * two images of the rocky mountains. one on top, one on bottom of canvas.\n *\n */\np5.prototype.loadPixels = function() {\n  this._renderer.loadPixels();\n};\n\n/**\n * <p>Changes the color of any pixel, or writes an image directly to the\n * display window.</p>\n * <p>The x and y parameters specify the pixel to change and the c parameter\n * specifies the color value. This can be a p5.Color object, or [R, G, B, A]\n * pixel array. It can also be a single grayscale value.\n * When setting an image, the x and y parameters define the coordinates for\n * the upper-left corner of the image, regardless of the current imageMode().\n * </p>\n * <p>\n * After using set(), you must call updatePixels() for your changes to\n * appear.  This should be called once all pixels have been set.\n * </p>\n * <p>Setting the color of a single pixel with set(x, y) is easy, but not as\n * fast as putting the data directly into pixels[]. Setting the pixels[]\n * values directly may be complicated when working with a retina display,\n * but will perform better when lots of pixels need to be set directly on\n * every loop.</p>\n * <p>See the reference for pixels[] for more information.</p>\n *\n * @method set\n * @param {Number}              x x-coordinate of the pixel\n * @param {Number}              y y-coordinate of the pixel\n * @param {Number|Array|Object} c insert a grayscale value | a pixel array |\n *                                a p5.Color object | a p5.Image to copy\n * @example\n * <div>\n * <code>\n * var black = color(0);\n * set(30, 20, black);\n * set(85, 20, black);\n * set(85, 75, black);\n * set(30, 75, black);\n * updatePixels();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * for (var i = 30; i < width-15; i++) {\n *   for (var j = 20; j < height-25; j++) {\n *     var c = color(204-j, 153-i, 0);\n *     set(i, j, c);\n *   }\n * }\n * updatePixels();\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/rockies.jpg\");\n * }\n *\n * function setup() {\n *   set(0, 0, img);\n *   updatePixels();\n *   line(0, 0, width, height);\n *   line(0, height, width, 0);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 4 black points in the shape of a square middle-right of canvas.\n * square with orangey-brown gradient lightening at bottom right.\n * image of the rocky mountains. with lines like an 'x' through the center.\n */\np5.prototype.set = function (x, y, imgOrCol) {\n  this._renderer.set(x, y, imgOrCol);\n};\n/**\n * Updates the display window with the data in the pixels[] array.\n * Use in conjunction with loadPixels(). If you're only reading pixels from\n * the array, there's no need to call updatePixels() — updating is only\n * necessary to apply changes. updatePixels() should be called anytime the\n * pixels array is manipulated or set() is called.\n *\n * @method updatePixels\n * @param  {Number} [x]    x-coordinate of the upper-left corner of region\n *                         to update\n * @param  {Number} [y]    y-coordinate of the upper-left corner of region\n *                         to update\n * @param  {Number} [w]    width of region to update\n * @param  {Number} [w]    height of region to update\n * @example\n * <div>\n * <code>\n * var img;\n * function preload() {\n *   img = loadImage(\"assets/rockies.jpg\");\n * }\n *\n * function setup() {\n *   image(img, 0, 0);\n *   var halfImage = 4 * (img.width * pixelDensity()) *\n *     (img.height * pixelDensity()/2);\n *   loadPixels();\n *   for (var i = 0; i < halfImage; i++) {\n *     pixels[i+halfImage] = pixels[i];\n *   }\n *   updatePixels();\n * }\n * </code>\n * </div>\n * @alt\n * two images of the rocky mountains. one on top, one on bottom of canvas.\n */\np5.prototype.updatePixels = function (x, y, w, h) {\n  // graceful fail - if loadPixels() or set() has not been called, pixel\n  // array will be empty, ignore call to updatePixels()\n  if (this.pixels.length === 0) {\n    return;\n  }\n  this._renderer.updatePixels(x, y, w, h);\n};\n\nmodule.exports = p5;\n\n},{\"../color/p5.Color\":31,\"../core/core\":37,\"./filters\":54}],59:[function(_dereq_,module,exports){\n/**\n * @module IO\n * @submodule Input\n * @for p5\n * @requires core\n * @requires reqwest\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar reqwest = _dereq_('reqwest');\nvar opentype = _dereq_('opentype.js');\n_dereq_('../core/error_helpers');\n\n/**\n * Checks if we are in preload and returns the last arg which will be the\n * _decrementPreload function if called from a loadX() function.  Should\n * only be used in loadX() functions.\n * @private\n */\np5._getDecrementPreload = function () {\n  var decrementPreload = arguments[arguments.length - 1];\n\n  // when in preload decrementPreload will always be the last arg as it is set\n  // with args.push() before invocation in _wrapPreload\n  if ((window.preload || (this && this.preload)) &&\n    typeof decrementPreload === 'function') {\n    return decrementPreload;\n  } else {\n    return null;\n  }\n};\n\n/**\n * Loads an opentype font file (.otf, .ttf) from a file or a URL,\n * and returns a PFont Object. This method is asynchronous,\n * meaning it may not finish before the next line in your sketch\n * is executed.\n * <br><br>\n * The path to the font should be relative to the HTML file\n * that links in your sketch. Loading an from a URL or other\n * remote location may be blocked due to your browser's built-in\n * security.\n *\n * @method loadFont\n * @param  {String}        path       name of the file or url to load\n * @param  {Function}      [callback] function to be executed after\n *                                    loadFont()\n *                                    completes\n * @return {Object}                   p5.Font object\n * @example\n *\n * <p>Calling loadFont() inside preload() guarantees that the load\n * operation will have completed before setup() and draw() are called.</p>\n *\n * <div><code>\n * var myFont;\n * function preload() {\n *   myFont = loadFont('assets/AvenirNextLTPro-Demi.otf');\n * }\n *\n * function setup() {\n *   fill('#ED225D');\n *   textFont(myFont);\n *   textSize(36);\n *   text('p5*js', 10, 50);\n * }\n * </code></div>\n *\n * Outside of preload(), you may supply a callback function to handle the\n * object:\n *\n * <div><code>\n * function setup() {\n *   loadFont('assets/AvenirNextLTPro-Demi.otf', drawText);\n * }\n *\n * function drawText(font) {\n *   fill('#ED225D');\n *   textFont(font, 36);\n *   text('p5*js', 10, 50);\n * }\n *\n * </code></div>\n *\n * <p>You can also use the string name of the font to style other HTML\n * elements.</p>\n *\n * <div><code>\n * var myFont;\n *\n * function preload() {\n *   myFont = loadFont('assets/Avenir.otf');\n * }\n *\n * function setup() {\n *   var myDiv = createDiv('hello there');\n *   myDiv.style('font-family', 'Avenir');\n * }\n * </code></div>\n *\n * @alt\n * p5*js in p5's theme dark pink\n * p5*js in p5's theme dark pink\n *\n */\np5.prototype.loadFont = function (path, onSuccess, onError) {\n\n  var p5Font = new p5.Font(this);\n  var decrementPreload = p5._getDecrementPreload.apply(this, arguments);\n\n  opentype.load(path, function (err, font) {\n\n    if (err) {\n\n      if ((typeof onError !== 'undefined') && (onError !== decrementPreload)) {\n        return onError(err);\n      }\n      p5._friendlyFileLoadError(4, path);\n      console.error(err, path);\n      return;\n    }\n\n    p5Font.font = font;\n\n    if (typeof onSuccess !== 'undefined') {\n      onSuccess(p5Font);\n    }\n\n    if (decrementPreload && (onSuccess !== decrementPreload)) {\n      decrementPreload();\n    }\n\n    // check that we have an acceptable font type\n    var validFontTypes = [ 'ttf', 'otf', 'woff', 'woff2' ],\n      fileNoPath = path.split('\\\\').pop().split('/').pop(),\n      lastDotIdx = fileNoPath.lastIndexOf('.'), fontFamily, newStyle,\n      fileExt = lastDotIdx < 1 ? null : fileNoPath.substr(lastDotIdx + 1);\n\n    // if so, add it to the DOM (name-only) for use with p5.dom\n    if (validFontTypes.indexOf(fileExt) > -1) {\n\n      fontFamily = fileNoPath.substr(0, lastDotIdx);\n      newStyle = document.createElement('style');\n      newStyle.appendChild(document.createTextNode('\\n@font-face {' +\n        '\\nfont-family: ' + fontFamily + ';\\nsrc: url(' + path + ');\\n}\\n'));\n      document.head.appendChild(newStyle);\n    }\n\n  });\n\n  return p5Font;\n};\n\n//BufferedReader\np5.prototype.createInput = function () {\n  // TODO\n  throw 'not yet implemented';\n};\n\np5.prototype.createReader = function () {\n  // TODO\n  throw 'not yet implemented';\n};\n\np5.prototype.loadBytes = function () {\n  // TODO\n  throw 'not yet implemented';\n};\n\n/**\n * Loads a JSON file from a file or a URL, and returns an Object or Array.\n * This method is asynchronous, meaning it may not finish before the next\n * line in your sketch is executed.\n *\n * @method loadJSON\n * @param  {String}        path       name of the file or url to load\n * @param  {Function}      [callback] function to be executed after\n *                                    loadJSON() completes, data is passed\n *                                    in as first argument\n * @param  {Function}      [errorCallback] function to be executed if\n *                                    there is an error, response is passed\n *                                    in as first argument\n * @param  {String}        [datatype] \"json\" or \"jsonp\"\n * @return {Object|Array}             JSON data\n * @example\n *\n * <p>Calling loadJSON() inside preload() guarantees to complete the\n * operation before setup() and draw() are called.</p>\n *\n * <div><code>\n * var weather;\n * function preload() {\n *   var url = 'http://api.openweathermap.org/data/2.5/weather?q=London,UK'+\n *    '&APPID=7bbbb47522848e8b9c26ba35c226c734';\n *   weather = loadJSON(url);\n * }\n *\n * function setup() {\n *   noLoop();\n * }\n *\n * function draw() {\n *   background(200);\n *   // get the humidity value out of the loaded JSON\n *   var humidity = weather.main.humidity;\n *   fill(0, humidity); // use the humidity value to set the alpha\n *   ellipse(width/2, height/2, 50, 50);\n * }\n * </code></div>\n *\n *\n * <p>Outside of preload(), you may supply a callback function to handle the\n * object:</p>\n * <div><code>\n * function setup() {\n *   noLoop();\n *   var url = 'http://api.openweathermap.org/data/2.5/weather?q=NewYork'+\n *    '&APPID=7bbbb47522848e8b9c26ba35c226c734';\n *   loadJSON(url, drawWeather);\n * }\n *\n * function draw() {\n *   background(200);\n * }\n *\n * function drawWeather(weather) {\n *   // get the humidity value out of the loaded JSON\n *   var humidity = weather.main.humidity;\n *   fill(0, humidity); // use the humidity value to set the alpha\n *   ellipse(width/2, height/2, 50, 50);\n * }\n * </code></div>\n *\n * @alt\n * 50x50 ellipse that changes from black to white depending on the current humidity\n * 50x50 ellipse that changes from black to white depending on the current humidity\n *\n */\np5.prototype.loadJSON = function () {\n  var path = arguments[0];\n  var callback = arguments[1];\n  var errorCallback;\n  var decrementPreload = p5._getDecrementPreload.apply(this, arguments);\n\n  var ret = {}; // object needed for preload\n  // assume jsonp for URLs\n  var t = 'json'; //= path.indexOf('http') === -1 ? 'json' : 'jsonp';\n\n  // check for explicit data type argument\n  for (var i = 2; i < arguments.length; i++) {\n    var arg = arguments[i];\n    if (typeof arg === 'string') {\n      if (arg === 'jsonp' || arg === 'json') {\n        t = arg;\n      }\n    } else if (typeof arg === 'function') {\n      errorCallback = arg;\n    }\n  }\n\n  reqwest({\n    url: path,\n    type: t,\n    crossOrigin: true,\n    error: function (resp) {\n      // pass to error callback if defined\n      if (errorCallback) {\n        errorCallback(resp);\n      } else { // otherwise log error msg\n        console.log(resp.statusText);\n      }\n    },\n    success: function (resp) {\n      for (var k in resp) {\n        ret[k] = resp[k];\n      }\n      if (typeof callback !== 'undefined') {\n        callback(resp);\n      }\n      if (decrementPreload && (callback !== decrementPreload)) {\n        decrementPreload();\n      }\n    }\n  });\n\n  return ret;\n};\n\n/**\n * Reads the contents of a file and creates a String array of its individual\n * lines. If the name of the file is used as the parameter, as in the above\n * example, the file must be located in the sketch directory/folder.\n * <br><br>\n * Alternatively, the file maybe be loaded from anywhere on the local\n * computer using an absolute path (something that starts with / on Unix and\n * Linux, or a drive letter on Windows), or the filename parameter can be a\n * URL for a file found on a network.\n * <br><br>\n * This method is asynchronous, meaning it may not finish before the next\n * line in your sketch is executed.\n *\n * @method loadStrings\n * @param  {String}   filename   name of the file or url to load\n * @param  {Function} [callback] function to be executed after loadStrings()\n *                               completes, Array is passed in as first\n *                               argument\n * @param  {Function} [errorCallback] function to be executed if\n *                               there is an error, response is passed\n *                               in as first argument\n * @return {Array}               Array of Strings\n * @example\n *\n * <p>Calling loadStrings() inside preload() guarantees to complete the\n * operation before setup() and draw() are called.</p>\n *\n * <div><code>\n * var result;\n * function preload() {\n *   result = loadStrings('assets/test.txt');\n * }\n\n * function setup() {\n *   background(200);\n *   var ind = floor(random(result.length));\n *   text(result[ind], 10, 10, 80, 80);\n * }\n * </code></div>\n *\n * <p>Outside of preload(), you may supply a callback function to handle the\n * object:</p>\n *\n * <div><code>\n * function setup() {\n *   loadStrings('assets/test.txt', pickString);\n * }\n *\n * function pickString(result) {\n *   background(200);\n *   var ind = floor(random(result.length));\n *   text(result[ind], 10, 10, 80, 80);\n * }\n * </code></div>\n *\n * @alt\n * randomly generated text from a file, for example \"i smell like butter\"\n * randomly generated text from a file, for example \"i have three feet\"\n *\n */\np5.prototype.loadStrings = function (path, callback, errorCallback) {\n  var ret = [];\n  var req = new XMLHttpRequest();\n  var decrementPreload = p5._getDecrementPreload.apply(this, arguments);\n\n  req.addEventListener('error', function (resp) {\n    if (errorCallback) {\n      errorCallback(resp);\n    } else {\n      console.log(resp.responseText);\n    }\n  });\n\n  req.open('GET', path, true);\n  req.onreadystatechange = function () {\n    if (req.readyState === 4) {\n      if (req.status === 200) {\n        var arr = req.responseText.match(/[^\\r\\n]+/g);\n        for (var k in arr) {\n          ret[k] = arr[k];\n        }\n        if (typeof callback !== 'undefined') {\n          callback(ret);\n        }\n        if (decrementPreload && (callback !== decrementPreload)) {\n          decrementPreload();\n        }\n      } else {\n        if (errorCallback) {\n          errorCallback(req);\n        } else {\n          console.log(req.statusText);\n        }\n        //p5._friendlyFileLoadError(3, path);\n      }\n    }\n  };\n  req.send(null);\n  return ret;\n};\n\n/**\n * <p>Reads the contents of a file or URL and creates a p5.Table object with\n * its values. If a file is specified, it must be located in the sketch's\n * \"data\" folder. The filename parameter can also be a URL to a file found\n * online. By default, the file is assumed to be comma-separated (in CSV\n * format). Table only looks for a header row if the 'header' option is\n * included.</p>\n *\n * <p>Possible options include:\n * <ul>\n * <li>csv - parse the table as comma-separated values</li>\n * <li>tsv - parse the table as tab-separated values</li>\n * <li>header - this table has a header (title) row</li>\n * </ul>\n * </p>\n *\n * <p>When passing in multiple options, pass them in as separate parameters,\n * seperated by commas. For example:\n * <br><br>\n * <code>\n *   loadTable(\"my_csv_file.csv\", \"csv\", \"header\")\n * </code>\n * </p>\n *\n * <p> All files loaded and saved use UTF-8 encoding.</p>\n *\n * <p>This method is asynchronous, meaning it may not finish before the next\n * line in your sketch is executed. Calling loadTable() inside preload()\n * guarantees to complete the operation before setup() and draw() are called.\n * <p>Outside of preload(), you may supply a callback function to handle the\n * object:</p>\n * </p>\n *\n * @method loadTable\n * @param  {String}         filename   name of the file or URL to load\n * @param  {String|Strings} [options]  \"header\" \"csv\" \"tsv\"\n * @param  {Function}       [callback] function to be executed after\n *                                     loadTable() completes. On success, the\n *                                     Table object is passed in as the\n *                                     first argument; otherwise, false\n *                                     is passed in.\n * @return {Object}                    Table object containing data\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * // Given the following CSV file called \"mammals.csv\"\n * // located in the project's \"assets\" folder:\n * //\n * // id,species,name\n * // 0,Capra hircus,Goat\n * // 1,Panthera pardus,Leopard\n * // 2,Equus zebra,Zebra\n *\n * var table;\n *\n * function preload() {\n *   //my table is comma separated value \"csv\"\n *   //and has a header specifying the columns labels\n *   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n *   //the file can be remote\n *   //table = loadTable(\"http://p5js.org/reference/assets/mammals.csv\",\n *   //                  \"csv\", \"header\");\n * }\n *\n * function setup() {\n *   //count the columns\n *   print(table.getRowCount() + \" total rows in table\");\n *   print(table.getColumnCount() + \" total columns in table\");\n *\n *   print(table.getColumn(\"name\"));\n *   //[\"Goat\", \"Leopard\", \"Zebra\"]\n *\n *   //cycle through the table\n *   for (var r = 0; r < table.getRowCount(); r++)\n *     for (var c = 0; c < table.getColumnCount(); c++) {\n *       print(table.getString(r, c));\n *     }\n * }\n * </code>\n * </div>\n *\n * @alt\n * randomly generated text from a file, for example \"i smell like butter\"\n * randomly generated text from a file, for example \"i have three feet\"\n *\n */\np5.prototype.loadTable = function (path) {\n  var callback = null;\n  var options = [];\n  var header = false;\n  var sep = ',';\n  var separatorSet = false;\n  var decrementPreload = p5._getDecrementPreload.apply(this, arguments);\n\n  for (var i = 1; i < arguments.length; i++) {\n    if ((typeof (arguments[i]) === 'function') &&\n      (arguments[i] !== decrementPreload)) {\n      callback = arguments[i];\n    } else if (typeof (arguments[i]) === 'string') {\n      options.push(arguments[i]);\n      if (arguments[i] === 'header') {\n        header = true;\n      }\n      if (arguments[i] === 'csv') {\n        if (separatorSet) {\n          throw new Error('Cannot set multiple separator types.');\n        } else {\n          sep = ',';\n          separatorSet = true;\n        }\n      } else if (arguments[i] === 'tsv') {\n        if (separatorSet) {\n          throw new Error('Cannot set multiple separator types.');\n        } else {\n          sep = '\\t';\n          separatorSet = true;\n        }\n      }\n    }\n  }\n\n  var t = new p5.Table();\n  reqwest({\n      url: path,\n      crossOrigin: true,\n      type: 'csv'\n    })\n    .then(function (resp) {\n      resp = resp.responseText;\n\n      var state = {};\n\n      // define constants\n      var PRE_TOKEN = 0,\n        MID_TOKEN = 1,\n        POST_TOKEN = 2,\n        POST_RECORD = 4;\n\n      var QUOTE = '\\\"',\n        CR = '\\r',\n        LF = '\\n';\n\n      var records = [];\n      var offset = 0;\n      var currentRecord = null;\n      var currentChar;\n\n      var recordBegin = function () {\n        state.escaped = false;\n        currentRecord = [];\n        tokenBegin();\n      };\n\n      var recordEnd = function () {\n        state.currentState = POST_RECORD;\n        records.push(currentRecord);\n        currentRecord = null;\n      };\n\n      var tokenBegin = function () {\n        state.currentState = PRE_TOKEN;\n        state.token = '';\n      };\n\n      var tokenEnd = function () {\n        currentRecord.push(state.token);\n        tokenBegin();\n      };\n\n      while (true) {\n        currentChar = resp[offset++];\n\n        // EOF\n        if (currentChar == null) {\n          if (state.escaped) {\n            throw new Error('Unclosed quote in file.');\n          }\n          if (currentRecord) {\n            tokenEnd();\n            recordEnd();\n            break;\n          }\n        }\n        if (currentRecord === null) {\n          recordBegin();\n        }\n\n        // Handle opening quote\n        if (state.currentState === PRE_TOKEN) {\n          if (currentChar === QUOTE) {\n            state.escaped = true;\n            state.currentState = MID_TOKEN;\n            continue;\n          }\n          state.currentState = MID_TOKEN;\n        }\n\n        // mid-token and escaped, look for sequences and end quote\n        if (state.currentState === MID_TOKEN && state.escaped) {\n          if (currentChar === QUOTE) {\n            if (resp[offset] === QUOTE) {\n              state.token += QUOTE;\n              offset++;\n            } else {\n              state.escaped = false;\n              state.currentState = POST_TOKEN;\n            }\n          } else {\n            state.token += currentChar;\n          }\n          continue;\n        }\n\n        // fall-through: mid-token or post-token, not escaped\n        if (currentChar === CR) {\n          if (resp[offset] === LF) {\n            offset++;\n          }\n          tokenEnd();\n          recordEnd();\n        } else if (currentChar === LF) {\n          tokenEnd();\n          recordEnd();\n        } else if (currentChar === sep) {\n          tokenEnd();\n        } else if (state.currentState === MID_TOKEN) {\n          state.token += currentChar;\n        }\n      }\n\n      // set up column names\n      if (header) {\n        t.columns = records.shift();\n      } else {\n        for (i = 0; i < records[0].length; i++) {\n          t.columns[i] = 'null';\n        }\n      }\n      var row;\n      for (i = 0; i < records.length; i++) {\n        //Handles row of 'undefined' at end of some CSVs\n        if (i === records.length - 1 && records[i].length === 1) {\n          if (records[i][0] === 'undefined') {\n            break;\n          }\n        }\n        row = new p5.TableRow();\n        row.arr = records[i];\n        row.obj = makeObject(records[i], t.columns);\n        t.addRow(row);\n      }\n      if (callback !== null) {\n        callback(t);\n      }\n      if (decrementPreload && (callback !== decrementPreload)) {\n        decrementPreload();\n      }\n    })\n    .fail(function (err, msg) {\n      p5._friendlyFileLoadError(2, path);\n      // don't get error callback mixed up with decrementPreload\n      if ((typeof callback === 'function') &&\n        (callback !== decrementPreload)) {\n        callback(false);\n      }\n    });\n\n  return t;\n};\n\n// helper function to turn a row into a JSON object\nfunction makeObject(row, headers) {\n  var ret = {};\n  headers = headers || [];\n  if (typeof (headers) === 'undefined') {\n    for (var j = 0; j < row.length; j++) {\n      headers[j.toString()] = j;\n    }\n  }\n  for (var i = 0; i < headers.length; i++) {\n    var key = headers[i];\n    var val = row[i];\n    ret[key] = val;\n  }\n  return ret;\n}\n\n/*global parseXML */\np5.prototype.parseXML = function (two) {\n  var one = new p5.XML();\n  var i;\n  if (two.children.length) {\n    for ( i = 0; i < two.children.length; i++ ) {\n      var node = parseXML(two.children[i]);\n      one.addChild(node);\n    }\n    one.setName(two.nodeName);\n    one._setCont(two.textContent);\n    one._setAttributes(two);\n    for (var j = 0; j < one.children.length; j++) {\n      one.children[j].parent = one;\n    }\n    return one;\n  }\n  else {\n    one.setName(two.nodeName);\n    one._setCont(two.textContent);\n    one._setAttributes(two);\n    return one;\n  }\n};\n\n/**\n * Reads the contents of a file and creates an XML object with its values.\n * If the name of the file is used as the parameter, as in the above example,\n * the file must be located in the sketch directory/folder.\n *\n * Alternatively, the file maybe be loaded from anywhere on the local\n * computer using an absolute path (something that starts with / on Unix and\n * Linux, or a drive letter on Windows), or the filename parameter can be a\n * URL for a file found on a network.\n *\n * This method is asynchronous, meaning it may not finish before the next\n * line in your sketch is executed. Calling loadXML() inside preload()\n * guarantees to complete the operation before setup() and draw() are called.\n *\n * <p>Outside of preload(), you may supply a callback function to handle the\n * object:</p>\n *\n * @method loadXML\n * @param  {String}   filename   name of the file or URL to load\n * @param  {Function} [callback] function to be executed after loadXML()\n *                               completes, XML object is passed in as\n *                               first argument\n * @param  {Function} [errorCallback] function to be executed if\n *                               there is an error, response is passed\n *                               in as first argument\n * @return {Object}              XML object containing data\n */\np5.prototype.loadXML = function (path, callback, errorCallback) {\n  var ret = {};\n  var decrementPreload = p5._getDecrementPreload.apply(this, arguments);\n  reqwest({\n      url: path,\n      type: 'xml',\n      crossOrigin: true,\n      error: function (resp) {\n        // pass to error callback if defined\n        if (errorCallback) {\n          errorCallback(resp);\n        } else { // otherwise log error msg\n          console.log(resp.statusText);\n        }\n        //p5._friendlyFileLoadError(1,path);\n      }\n    })\n    .then(function (resp) {\n      var xml = parseXML(resp.documentElement);\n      for(var key in xml) {\n        ret[key] = xml[key];\n      }\n      if (typeof callback !== 'undefined') {\n        callback(ret);\n      }\n      if (decrementPreload && (callback !== decrementPreload)) {\n        decrementPreload();\n      }\n    });\n  return ret;\n};\n\n// name clash with window.open\n// p5.prototype.open = function() {\n//   // TODO\n\n// };\n\np5.prototype.selectFolder = function () {\n  // TODO\n  throw 'not yet implemented';\n\n};\n\np5.prototype.selectInput = function () {\n  // TODO\n  throw 'not yet implemented';\n\n};\n\n/**\n * Method for executing an HTTP GET request. If data type is not specified,\n * p5 will try to guess based on the URL, defaulting to text.\n *\n * @method httpGet\n * @param  {String}        path       name of the file or url to load\n * @param  {Object}        [data]     param data passed sent with request\n * @param  {String}        [datatype] \"json\", \"jsonp\", \"xml\", or \"text\"\n * @param  {Function}      [callback] function to be executed after\n *                                    httpGet() completes, data is passed in\n *                                    as first argument\n * @param  {Function}      [errorCallback] function to be executed if\n *                                    there is an error, response is passed\n *                                    in as first argument\n */\np5.prototype.httpGet = function () {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  args.push('GET');\n  p5.prototype.httpDo.apply(this, args);\n};\n\n/**\n * Method for executing an HTTP POST request. If data type is not specified,\n * p5 will try to guess based on the URL, defaulting to text.\n *\n * @method httpPost\n * @param  {String}        path       name of the file or url to load\n * @param  {Object}        [data]     param data passed sent with request\n * @param  {String}        [datatype] \"json\", \"jsonp\", \"xml\", or \"text\"\n * @param  {Function}      [callback] function to be executed after\n *                                    httpGet() completes, data is passed in\n *                                    as first argument\n * @param  {Function}      [errorCallback] function to be executed if\n *                                    there is an error, response is passed\n *                                    in as first argument\n */\np5.prototype.httpPost = function () {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  args.push('POST');\n  p5.prototype.httpDo.apply(this, args);\n};\n\n/**\n * Method for executing an HTTP request. If data type is not specified,\n * p5 will try to guess based on the URL, defaulting to text.<br><br>\n * You may also pass a single object specifying all parameters for the\n * request following the examples inside the reqwest() calls here:\n * <a href='https://github.com/ded/reqwest#api'>\n * https://github.com/ded/reqwest#api</a>\n *\n * @method httpDo\n * @param  {String}        path       name of the file or url to load\n * @param  {String}        [method]   either \"GET\", \"POST\", or \"PUT\",\n *                                    defaults to \"GET\"\n * @param  {Object}        [data]     param data passed sent with request\n * @param  {String}        [datatype] \"json\", \"jsonp\", \"xml\", or \"text\"\n * @param  {Function}      [callback] function to be executed after\n *                                    httpGet() completes, data is passed in\n *                                    as first argument\n * @param  {Function}      [errorCallback] function to be executed if\n *                                    there is an error, response is passed\n *                                    in as first argument\n */\np5.prototype.httpDo = function () {\n  if (typeof arguments[0] === 'object') {\n    reqwest(arguments[0]);\n  } else {\n    var method = 'GET';\n    var path = arguments[0];\n    var data = {};\n    var type = '';\n    var callback;\n    var errorCallback;\n\n    for (var i = 1; i < arguments.length; i++) {\n      var a = arguments[i];\n      if (typeof a === 'string') {\n        if (a === 'GET' || a === 'POST' || a === 'PUT') {\n          method = a;\n        } else {\n          type = a;\n        }\n      } else if (typeof a === 'object') {\n        data = a;\n      } else if (typeof a === 'function') {\n        if (!callback) {\n          callback = a;\n        } else {\n          errorCallback = a;\n        }\n      }\n    }\n\n    // do some sort of smart type checking\n    if (type === '') {\n      if (path.indexOf('json') !== -1) {\n        type = 'json';\n      } else if (path.indexOf('xml') !== -1) {\n        type = 'xml';\n      } else {\n        type = 'text';\n      }\n    }\n\n    reqwest({\n      url: path,\n      method: method,\n      data: data,\n      type: type,\n      crossOrigin: true,\n      success: function (resp) {\n        if (typeof callback !== 'undefined') {\n          if (type === 'text') {\n            callback(resp.response);\n          } else {\n            callback(resp);\n          }\n        }\n      },\n      error: function (resp) {\n        if (errorCallback) {\n          errorCallback(resp);\n        } else {\n          console.log(resp.statusText);\n        }\n      }\n    });\n  }\n};\n\n/**\n * @module IO\n * @submodule Output\n * @for p5\n */\n\nwindow.URL = window.URL || window.webkitURL;\n\n// private array of p5.PrintWriter objects\np5.prototype._pWriters = [];\n\np5.prototype.beginRaw = function () {\n  // TODO\n  throw 'not yet implemented';\n\n};\n\np5.prototype.beginRecord = function () {\n  // TODO\n  throw 'not yet implemented';\n\n};\n\np5.prototype.createOutput = function () {\n  // TODO\n\n  throw 'not yet implemented';\n};\n\np5.prototype.createWriter = function (name, extension) {\n  var newPW;\n  // check that it doesn't already exist\n  for (var i in p5.prototype._pWriters) {\n    if (p5.prototype._pWriters[i].name === name) {\n      // if a p5.PrintWriter w/ this name already exists...\n      // return p5.prototype._pWriters[i]; // return it w/ contents intact.\n      // or, could return a new, empty one with a unique name:\n      newPW = new p5.PrintWriter(name + window.millis(), extension);\n      p5.prototype._pWriters.push(newPW);\n      return newPW;\n    }\n  }\n  newPW = new p5.PrintWriter(name, extension);\n  p5.prototype._pWriters.push(newPW);\n  return newPW;\n};\n\np5.prototype.endRaw = function () {\n  // TODO\n\n  throw 'not yet implemented';\n};\n\np5.prototype.endRecord = function () {\n  // TODO\n  throw 'not yet implemented';\n\n};\n\np5.PrintWriter = function (filename, extension) {\n  var self = this;\n  this.name = filename;\n  this.content = '';\n  this.print = function (data) {\n    this.content += data;\n  };\n  this.print = function (data) {\n    this.content += data + '\\n';\n  };\n  this.flush = function () {\n    this.content = '';\n  };\n  this.close = function () {\n    // convert String to Array for the writeFile Blob\n    var arr = [];\n    arr.push(this.content);\n    p5.prototype.writeFile(arr, filename, extension);\n    // remove from _pWriters array and delete self\n    for (var i in p5.prototype._pWriters) {\n      if (p5.prototype._pWriters[i].name === this.name) {\n        // remove from _pWriters array\n        p5.prototype._pWriters.splice(i, 1);\n      }\n    }\n    self.flush();\n    self = {};\n  };\n};\n\np5.prototype.saveBytes = function () {\n  // TODO\n  throw 'not yet implemented';\n\n};\n\n// object, filename, options --> saveJSON, saveStrings, saveTable\n// filename, [extension] [canvas] --> saveImage\n\n/**\n *  <p>Save an image, text, json, csv, wav, or html. Prompts download to\n *  the client's computer. <b>Note that it is not recommended to call save()\n *  within draw if it's looping, as the save() function will open a new save\n *  dialog every frame.</b></p>\n *  <p>The default behavior is to save the canvas as an image. You can\n *  optionally specify a filename.\n *  For example:</p>\n *  <pre class='language-javascript'><code>\n *  save();\n *  save('myCanvas.jpg'); // save a specific canvas with a filename\n *  </code></pre>\n *\n *  <p>Alternately, the first parameter can be a pointer to a canvas\n *  p5.Element, an Array of Strings,\n *  an Array of JSON, a JSON object, a p5.Table, a p5.Image, or a\n *  p5.SoundFile (requires p5.sound). The second parameter is a filename\n *  (including extension). The third parameter is for options specific\n *  to this type of object. This method will save a file that fits the\n *  given paramaters. For example:</p>\n *\n *  <pre class='language-javascript'><code>\n *\n *  save('myCanvas.jpg');           // Saves canvas as an image\n *\n *  var cnv = createCanvas(100, 100);\n *  save(cnv, 'myCanvas.jpg');      // Saves canvas as an image\n *\n *  var gb = createGraphics(100, 100);\n *  save(gb, 'myGraphics.jpg');      // Saves p5.Renderer object as an image\n *\n *  save(myTable, 'myTable.html');  // Saves table as html file\n *  save(myTable, 'myTable.csv',);  // Comma Separated Values\n *  save(myTable, 'myTable.tsv');   // Tab Separated Values\n *\n *  save(myJSON, 'my.json');        // Saves pretty JSON\n *  save(myJSON, 'my.json', true);  // Optimizes JSON filesize\n *\n *  save(img, 'my.png');            // Saves pImage as a png image\n *\n *  save(arrayOfStrings, 'my.txt'); // Saves strings to a text file with line\n *                                  // breaks after each item in the array\n *  </code></pre>\n *\n *  @method save\n *  @param  {[Object|String]} objectOrFilename  If filename is provided, will\n *                                             save canvas as an image with\n *                                             either png or jpg extension\n *                                             depending on the filename.\n *                                             If object is provided, will\n *                                             save depending on the object\n *                                             and filename (see examples\n *                                             above).\n *  @param  {[String]} filename If an object is provided as the first\n *                               parameter, then the second parameter\n *                               indicates the filename,\n *                               and should include an appropriate\n *                               file extension (see examples above).\n *  @param  {[Boolean/String]} options  Additional options depend on\n *                            filetype. For example, when saving JSON,\n *                            <code>true</code> indicates that the\n *                            output will be optimized for filesize,\n *                            rather than readability.\n */\np5.prototype.save = function (object, _filename, _options) {\n  // parse the arguments and figure out which things we are saving\n  var args = arguments;\n  // =================================================\n  // OPTION 1: saveCanvas...\n\n  // if no arguments are provided, save canvas\n  var cnv = this._curElement.elt;\n  if (args.length === 0) {\n    p5.prototype.saveCanvas(cnv);\n    return;\n  }\n  // otherwise, parse the arguments\n\n  // if first param is a p5Graphics, then saveCanvas\n  else if (args[0] instanceof p5.Renderer ||\n    args[0] instanceof p5.Graphics) {\n    p5.prototype.saveCanvas(args[0].elt, args[1], args[2]);\n    return;\n  }\n\n  // if 1st param is String and only one arg, assume it is canvas filename\n  else if (args.length === 1 && typeof (args[0]) === 'string') {\n    p5.prototype.saveCanvas(cnv, args[0]);\n  }\n\n  // =================================================\n  // OPTION 2: extension clarifies saveStrings vs. saveJSON\n  else {\n    var extension = _checkFileExtension(args[1], args[2])[1];\n    switch (extension) {\n      case 'json':\n        p5.prototype.saveJSON(args[0], args[1], args[2]);\n        return;\n      case 'txt':\n        p5.prototype.saveStrings(args[0], args[1], args[2]);\n        return;\n        // =================================================\n        // OPTION 3: decide based on object...\n      default:\n        if (args[0] instanceof Array) {\n          p5.prototype.saveStrings(args[0], args[1], args[2]);\n        } else if (args[0] instanceof p5.Table) {\n          p5.prototype.saveTable(args[0], args[1], args[2], args[3]);\n        } else if (args[0] instanceof p5.Image) {\n          p5.prototype.saveCanvas(args[0].canvas, args[1]);\n        } else if (args[0] instanceof p5.SoundFile) {\n          p5.prototype.saveSound(args[0], args[1], args[2], args[3]);\n        }\n    }\n  }\n};\n\n/**\n *  Writes the contents of an Array or a JSON object to a .json file.\n *  The file saving process and location of the saved file will\n *  vary between web browsers.\n *\n *  @method saveJSON\n *  @param  {Array|Object} json\n *  @param  {String} filename\n *  @param  {Boolean} [optimize]   If true, removes line breaks\n *                                 and spaces from the output\n *                                 file to optimize filesize\n *                                 (but not readability).\n *  @example\n *  <div><code>\n *  var json;\n *\n *  function setup() {\n *\n *    json = {}; // new JSON Object\n *\n *    json.id = 0;\n *    json.species = 'Panthera leo';\n *    json.name = 'Lion';\n *\n *  // To save, un-comment the line below, then click 'run'\n *  // saveJSON(json, 'lion.json');\n *  }\n *\n *  // Saves the following to a file called \"lion.json\":\n *  // {\n *  //   \"id\": 0,\n *  //   \"species\": \"Panthera leo\",\n *  //   \"name\": \"Lion\"\n *  // }\n *  </div></code>\n *\n * @alt\n * no image displayed\n *\n */\np5.prototype.saveJSON = function (json, filename, opt) {\n  var stringify;\n  if (opt) {\n    stringify = JSON.stringify(json);\n  } else {\n    stringify = JSON.stringify(json, undefined, 2);\n  }\n  console.log(stringify);\n  this.saveStrings(stringify.split('\\n'), filename, 'json');\n};\n\np5.prototype.saveJSONObject = p5.prototype.saveJSON;\np5.prototype.saveJSONArray = p5.prototype.saveJSON;\n\np5.prototype.saveStream = function () {\n  // TODO\n  throw 'not yet implemented';\n\n};\n\n/**\n *  Writes an array of Strings to a text file, one line per String.\n *  The file saving process and location of the saved file will\n *  vary between web browsers.\n *\n *  @method saveStrings\n *  @param  {Array} list      string array to be written\n *  @param  {String} filename filename for output\n *  @example\n *  <div><code>\n *  var words = 'apple bear cat dog';\n *\n *  // .split() outputs an Array\n *  var list = split(words, ' ');\n *\n *  // To save the file, un-comment next line and click 'run'\n *  // saveStrings(list, 'nouns.txt');\n *\n *  // Saves the following to a file called 'nouns.txt':\n *  //\n *  // apple\n *  // bear\n *  // cat\n *  // dog\n *  </code></div>\n *\n * @alt\n * no image displayed\n *\n */\np5.prototype.saveStrings = function (list, filename, extension) {\n  var ext = extension || 'txt';\n  var pWriter = this.createWriter(filename, ext);\n  for (var i = 0; i < list.length; i++) {\n    if (i < list.length - 1) {\n      pWriter.print(list[i]);\n    } else {\n      pWriter.print(list[i]);\n    }\n  }\n  pWriter.close();\n  pWriter.flush();\n};\n\np5.prototype.saveXML = function () {\n  // TODO\n  throw 'not yet implemented';\n\n};\n\np5.prototype.selectOutput = function () {\n  // TODO\n  throw 'not yet implemented';\n\n};\n\n// =======\n// HELPERS\n// =======\n\nfunction escapeHelper(content) {\n  return content\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n}\n\n/**\n *  Writes the contents of a Table object to a file. Defaults to a\n *  text file with comma-separated-values ('csv') but can also\n *  use tab separation ('tsv'), or generate an HTML table ('html').\n *  The file saving process and location of the saved file will\n *  vary between web browsers.\n *\n *  @method saveTable\n *  @param  {p5.Table} Table  the Table object to save to a file\n *  @param  {String} filename the filename to which the Table should be saved\n *  @param  {String} [options]  can be one of \"tsv\", \"csv\", or \"html\"\n *  @example\n *  <div><code>\n *  var table;\n *\n *  function setup() {\n *    table = new p5.Table();\n *\n *    table.addColumn('id');\n *    table.addColumn('species');\n *    table.addColumn('name');\n *\n *    var newRow = table.addRow();\n *    newRow.setNum('id', table.getRowCount() - 1);\n *    newRow.setString('species', 'Panthera leo');\n *    newRow.setString('name', 'Lion');\n *\n *    // To save, un-comment next line then click 'run'\n *    // saveTable(table, 'new.csv');\n *    }\n *\n *    // Saves the following to a file called 'new.csv':\n *    // id,species,name\n *    // 0,Panthera leo,Lion\n *  </code></div>\n *\n * @alt\n * no image displayed\n *\n */\np5.prototype.saveTable = function (table, filename, options) {\n  var pWriter = this.createWriter(filename, options);\n\n  var header = table.columns;\n\n  var sep = ','; // default to CSV\n  if (options === 'tsv') {\n    sep = '\\t';\n  }\n  if (options !== 'html') {\n    // make header if it has values\n    if (header[0] !== '0') {\n      for (var h = 0; h < header.length; h++) {\n        if (h < header.length - 1) {\n          pWriter.print(header[h] + sep);\n        } else {\n          pWriter.print(header[h]);\n        }\n      }\n    }\n\n    // make rows\n    for (var i = 0; i < table.rows.length; i++) {\n      var j;\n      for (j = 0; j < table.rows[i].arr.length; j++) {\n        if (j < table.rows[i].arr.length - 1) {\n          pWriter.print(table.rows[i].arr[j] + sep);\n        } else if (i < table.rows.length - 1) {\n          pWriter.print(table.rows[i].arr[j]);\n        } else {\n          pWriter.print(table.rows[i].arr[j]); // no line break\n        }\n      }\n    }\n  }\n\n  // otherwise, make HTML\n  else {\n    pWriter.print('<html>');\n    pWriter.print('<head>');\n    var str = '  <meta http-equiv=\\\"content-type\\\" content';\n    str += '=\\\"text/html;charset=utf-8\\\" />';\n    pWriter.print(str);\n    pWriter.print('</head>');\n\n    pWriter.print('<body>');\n    pWriter.print('  <table>');\n\n    // make header if it has values\n    if (header[0] !== '0') {\n      pWriter.print('    <tr>');\n      for (var k = 0; k < header.length; k++) {\n        var e = escapeHelper(header[k]);\n        pWriter.print('      <td>' + e);\n        pWriter.print('      </td>');\n      }\n      pWriter.print('    </tr>');\n    }\n\n    // make rows\n    for (var row = 0; row < table.rows.length; row++) {\n      pWriter.print('    <tr>');\n      for (var col = 0; col < table.columns.length; col++) {\n        var entry = table.rows[row].getString(col);\n        var htmlEntry = escapeHelper(entry);\n        pWriter.print('      <td>' + htmlEntry);\n        pWriter.print('      </td>');\n      }\n      pWriter.print('    </tr>');\n    }\n    pWriter.print('  </table>');\n    pWriter.print('</body>');\n    pWriter.print('</html>');\n  }\n  // close and flush the pWriter\n  pWriter.close();\n  pWriter.flush();\n}; // end saveTable()\n\n/**\n *  Generate a blob of file data as a url to prepare for download.\n *  Accepts an array of data, a filename, and an extension (optional).\n *  This is a private function because it does not do any formatting,\n *  but it is used by saveStrings, saveJSON, saveTable etc.\n *\n *  @param  {Array} dataToDownload\n *  @param  {String} filename\n *  @param  {[String]} extension\n *  @private\n */\np5.prototype.writeFile = function (dataToDownload, filename, extension) {\n  var type = 'application\\/octet-stream';\n  if (p5.prototype._isSafari()) {\n    type = 'text\\/plain';\n  }\n  var blob = new Blob(dataToDownload, {\n    'type': type\n  });\n  var href = window.URL.createObjectURL(blob);\n  p5.prototype.downloadFile(href, filename, extension);\n};\n\n/**\n *  Forces download. Accepts a url to filedata/blob, a filename,\n *  and an extension (optional).\n *  This is a private function because it does not do any formatting,\n *  but it is used by saveStrings, saveJSON, saveTable etc.\n *\n *  @param  {String} href      i.e. an href generated by createObjectURL\n *  @param  {[String]} filename\n *  @param  {[String]} extension\n */\np5.prototype.downloadFile = function (href, fName, extension) {\n  var fx = _checkFileExtension(fName, extension);\n  var filename = fx[0];\n  var ext = fx[1];\n\n  var a = document.createElement('a');\n  a.href = href;\n  a.download = filename;\n\n  // Firefox requires the link to be added to the DOM before click()\n  a.onclick = destroyClickedElement;\n  a.style.display = 'none';\n  document.body.appendChild(a);\n\n  // Safari will open this file in the same page as a confusing Blob.\n  if (p5.prototype._isSafari()) {\n    var aText = 'Hello, Safari user! To download this file...\\n';\n    aText += '1. Go to File --> Save As.\\n';\n    aText += '2. Choose \"Page Source\" as the Format.\\n';\n    aText += '3. Name it with this extension: .\\\"' + ext + '\\\"';\n    alert(aText);\n  }\n  a.click();\n  href = null;\n};\n\n/**\n *  Returns a file extension, or another string\n *  if the provided parameter has no extension.\n *\n *  @param   {String} filename\n *  @return  {Array} [fileName, fileExtension]\n *\n *  @private\n */\nfunction _checkFileExtension(filename, extension) {\n  if (!extension || extension === true || extension === 'true') {\n    extension = '';\n  }\n  if (!filename) {\n    filename = 'untitled';\n  }\n  var ext = '';\n  // make sure the file will have a name, see if filename needs extension\n  if (filename && filename.indexOf('.') > -1) {\n    ext = filename.split('.').pop();\n  }\n  // append extension if it doesn't exist\n  if (extension) {\n    if (ext !== extension) {\n      ext = extension;\n      filename = filename + '.' + ext;\n    }\n  }\n  return [filename, ext];\n}\np5.prototype._checkFileExtension = _checkFileExtension;\n\n/**\n *  Returns true if the browser is Safari, false if not.\n *  Safari makes trouble for downloading files.\n *\n *  @return  {Boolean} [description]\n *  @private\n */\np5.prototype._isSafari = function () {\n  var x = Object.prototype.toString.call(window.HTMLElement);\n  return x.indexOf('Constructor') > 0;\n};\n\n/**\n *  Helper function, a callback for download that deletes\n *  an invisible anchor element from the DOM once the file\n *  has been automatically downloaded.\n *\n *  @private\n */\nfunction destroyClickedElement(event) {\n  document.body.removeChild(event.target);\n}\n\nmodule.exports = p5;\n\n},{\"../core/core\":37,\"../core/error_helpers\":40,\"opentype.js\":8,\"reqwest\":27}],60:[function(_dereq_,module,exports){\n/**\n * @module IO\n * @submodule Table\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n\n/**\n *  Table Options\n *  <p>Generic class for handling tabular data, typically from a\n *  CSV, TSV, or other sort of spreadsheet file.</p>\n *  <p>CSV files are\n *  <a href=\"http://en.wikipedia.org/wiki/Comma-separated_values\">\n *  comma separated values</a>, often with the data in quotes. TSV\n *  files use tabs as separators, and usually don't bother with the\n *  quotes.</p>\n *  <p>File names should end with .csv if they're comma separated.</p>\n *  <p>A rough \"spec\" for CSV can be found\n *  <a href=\"http://tools.ietf.org/html/rfc4180\">here</a>.</p>\n *  <p>To load files, use the loadTable method.</p>\n *  <p>To save tables to your computer, use the save method\n *   or the saveTable method.</p>\n *\n *  Possible options include:\n *  <ul>\n *  <li>csv - parse the table as comma-separated values\n *  <li>tsv - parse the table as tab-separated values\n *  <li>header - this table has a header (title) row\n *  </ul>\n */\n\n/**\n *  Table objects store data with multiple rows and columns, much\n *  like in a traditional spreadsheet. Tables can be generated from\n *  scratch, dynamically, or using data from an existing file.\n *\n *  @class p5.Table\n *  @constructor\n *  @param  {Array}     [rows] An array of p5.TableRow objects\n *  @return {p5.Table}         p5.Table generated\n */\np5.Table = function (rows) {\n  /**\n   *  @property columns\n   *  @type {Array}\n   */\n  this.columns = [];\n\n  /**\n   *  @property rows\n   *  @type {Array}\n   */\n  this.rows = [];\n};\n\n/**\n *  Use addRow() to add a new row of data to a p5.Table object. By default,\n *  an empty row is created. Typically, you would store a reference to\n *  the new row in a TableRow object (see newRow in the example above),\n *  and then set individual values using set().\n *\n *  If a p5.TableRow object is included as a parameter, then that row is\n *  duplicated and added to the table.\n *\n *  @method  addRow\n *  @param   {p5.TableRow} [row] row to be added to the table\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   //add a row\n\t*   var newRow = table.addRow();\n\t*   newRow.setString(\"id\", table.getRowCount() - 1);\n\t*   newRow.setString(\"species\", \"Canis Lupus\");\n\t*   newRow.setString(\"name\", \"Wolf\");\n\t*\n\t*   //print the results\n\t*   for (var r = 0; r < table.getRowCount(); r++)\n\t*     for (var c = 0; c < table.getColumnCount(); c++)\n\t*       print(table.getString(r, c));\n\t* }\n\t* </code>\n\t* </div>\n\t*\n * @alt\n * no image displayed\n *\n */\np5.Table.prototype.addRow = function(row) {\n  // make sure it is a valid TableRow\n  var r = row || new p5.TableRow();\n\n  if (typeof(r.arr) === 'undefined' || typeof(r.obj) === 'undefined') {\n    //r = new p5.prototype.TableRow(r);\n    throw 'invalid TableRow: ' + r;\n  }\n  r.table = this;\n  this.rows.push(r);\n  return r;\n};\n\n/**\n * Removes a row from the table object.\n *\n * @method  removeRow\n * @param   {Number} id ID number of the row to remove\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   //remove the first row\n\t*   var r = table.removeRow(0);\n\t*\n\t*   //print the results\n\t*   for (var r = 0; r < table.getRowCount(); r++)\n\t*     for (var c = 0; c < table.getColumnCount(); c++)\n\t*       print(table.getString(r, c));\n\t* }\n\t* </code>\n\t* </div>\n\t*\n    * @alt\n \t* no image displayed\n \t*\n */\np5.Table.prototype.removeRow = function(id) {\n  this.rows[id].table = null; // remove reference to table\n  var chunk = this.rows.splice(id+1, this.rows.length);\n  this.rows.pop();\n  this.rows = this.rows.concat(chunk);\n};\n\n\n/**\n * Returns a reference to the specified p5.TableRow. The reference\n * can then be used to get and set values of the selected row.\n *\n * @method  getRow\n * @param  {Number}   rowID ID number of the row to get\n * @return {TableRow} p5.TableRow object\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   var row = table.getRow(1);\n\t*   //print it column by column\n\t*   //note: a row is an object, not an array\n\t*   for (var c = 0; c < table.getColumnCount(); c++)\n\t*     print(row.getString(c));\n\t* }\n\t* </code>\n\t* </div>\n\t*\n \t*@alt\n \t* no image displayed\n \t*\n */\np5.Table.prototype.getRow = function(r) {\n  return this.rows[r];\n};\n\n/**\n *  Gets all rows from the table. Returns an array of p5.TableRows.\n *\n *  @method  getRows\n *  @return {Array}   Array of p5.TableRows\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   var rows = table.getRows();\n\t*\n\t*   //warning: rows is an array of objects\n\t*   for (var r = 0; r < rows.length; r++)\n\t*     rows[r].set(\"name\", \"Unicorn\");\n\t*\n\t*   //print the results\n\t*   for (var r = 0; r < table.getRowCount(); r++)\n\t*     for (var c = 0; c < table.getColumnCount(); c++)\n\t*       print(table.getString(r, c));\n\t* }\n\t* </code>\n\t* </div>\n\t*\n    * @alt\n    * no image displayed\n    *\n */\np5.Table.prototype.getRows = function() {\n  return this.rows;\n};\n\n/**\n *  Finds the first row in the Table that contains the value\n *  provided, and returns a reference to that row. Even if\n *  multiple rows are possible matches, only the first matching\n *  row is returned. The column to search may be specified by\n *  either its ID or title.\n *\n *  @method  findRow\n *  @param  {String} value  The value to match\n *  @param  {Number|String} column ID number or title of the\n *                                 column to search\n *  @return {TableRow}\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   //find the animal named zebra\n\t*   var row = table.findRow(\"Zebra\", \"name\");\n\t*   //find the corresponding species\n\t*   print(row.getString(\"species\"));\n\t* }\n\t* </code>\n\t* </div>\n\t*\n * @alt\n * no image displayed\n *\n */\np5.Table.prototype.findRow = function(value, column) {\n  // try the Object\n  if (typeof(column) === 'string') {\n    for (var i = 0; i < this.rows.length; i++){\n      if (this.rows[i].obj[column] === value) {\n        return this.rows[i];\n      }\n    }\n  }\n  // try the Array\n  else {\n    for (var j = 0; j < this.rows.length; j++){\n      if (this.rows[j].arr[column] === value) {\n        return this.rows[j];\n      }\n    }\n  }\n  // otherwise...\n  return null;\n};\n\n/**\n *  Finds the rows in the Table that contain the value\n *  provided, and returns references to those rows. Returns an\n *  Array, so for must be used to iterate through all the rows,\n *  as shown in the example above. The column to search may be\n *  specified by either its ID or title.\n *\n *  @method  findRows\n *  @param  {String} value  The value to match\n *  @param  {Number|String} column ID number or title of the\n *                                 column to search\n *  @return {Array}        An Array of TableRow objects\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   //add another goat\n\t*   var newRow = table.addRow();\n\t*   newRow.setString(\"id\", table.getRowCount() - 1);\n\t*   newRow.setString(\"species\", \"Scape Goat\");\n\t*   newRow.setString(\"name\", \"Goat\");\n\t*\n\t*   //find the rows containing animals named Goat\n\t*   var rows = table.findRows(\"Goat\", \"name\");\n\t*   print(rows.length + \" Goats found\");\n\t* }\n\t* </code>\n\t* </div>\n\t*\n \t*@alt\n \t* no image displayed\n \t*\n */\np5.Table.prototype.findRows = function(value, column) {\n  var ret = [];\n  if (typeof(column) === 'string') {\n    for (var i = 0; i < this.rows.length; i++){\n      if (this.rows[i].obj[column] === value) {\n        ret.push( this.rows[i] );\n      }\n    }\n  }\n  // try the Array\n  else {\n    for (var j = 0; j < this.rows.length; j++){\n      if (this.rows[j].arr[column] === value) {\n        ret.push( this.rows[j] );\n      }\n    }\n  }\n  return ret;\n};\n\n/**\n *  Finds the first row in the Table that matches the regular\n *  expression provided, and returns a reference to that row.\n *  Even if multiple rows are possible matches, only the first\n *  matching row is returned. The column to search may be\n *  specified by either its ID or title.\n *\n *  @method  matchRow\n *  @param  {String} regexp The regular expression to match\n *  @param  {String|Number} column The column ID (number) or\n *                                   title (string)\n *  @return {TableRow}        TableRow object\n */\np5.Table.prototype.matchRow = function(regexp, column) {\n  if (typeof(column) === 'number') {\n    for (var j = 0; j < this.rows.length; j++) {\n      if ( this.rows[j].arr[column].match(regexp) ) {\n        return this.rows[j];\n      }\n    }\n  }\n\n  else {\n    for (var i = 0; i < this.rows.length; i++) {\n      if ( this.rows[i].obj[column].match(regexp) ) {\n        return this.rows[i];\n      }\n    }\n  }\n  return null;\n};\n\n/**\n *  Finds the rows in the Table that match the regular expression provided,\n *  and returns references to those rows. Returns an array, so for must be\n *  used to iterate through all the rows, as shown in the example. The\n *  column to search may be specified by either its ID or title.\n *\n *  @method  matchRows\n *  @param  {String} regexp The regular expression to match\n *  @param  {String|Number} [column] The column ID (number) or\n *                                   title (string)\n *  @return {Array}        An Array of TableRow objects\n *  @example\n *  var table;\n *\n *  function setup() {\n *\n *    table = new p5.Table();\n *\n *    table.addColumn('name');\n *    table.addColumn('type');\n *\n *    var newRow = table.addRow();\n *    newRow.setString('name', 'Lion');\n *    newRow.setString('type', 'Mammal');\n *\n *    newRow = table.addRow();\n *    newRow.setString('name', 'Snake');\n *    newRow.setString('type', 'Reptile');\n *\n *    newRow = table.addRow();\n *    newRow.setString('name', 'Mosquito');\n *    newRow.setString('type', 'Insect');\n *\n *    newRow = table.addRow();\n *    newRow.setString('name', 'Lizard');\n *    newRow.setString('type', 'Reptile');\n *\n *    var rows = table.matchRows('R.*', 'type');\n *    for (var i = 0; i < rows.length; i++) {\n *      print(rows[i].getString('name') + ': ' + rows[i].getString('type'));\n *    }\n *  }\n *  // Sketch prints:\n *  // Snake: Reptile\n *  // Lizard: Reptile\n */\np5.Table.prototype.matchRows = function(regexp, column) {\n  var ret = [];\n  if (typeof(column) === 'number') {\n    for (var j = 0; j < this.rows.length; j++) {\n      if ( this.rows[j].arr[column].match(regexp) ) {\n        ret.push( this.rows[j] );\n      }\n    }\n  }\n\n  else {\n    for (var i = 0; i < this.rows.length; i++) {\n      if ( this.rows[i].obj[column].match(regexp) ) {\n        ret.push( this.rows[i] );\n      }\n    }\n  }\n  return ret;\n};\n\n\n/**\n *  Retrieves all values in the specified column, and returns them\n *  as an array. The column may be specified by either its ID or title.\n *\n *  @method  getColumn\n *  @param  {String|Number} column String or Number of the column to return\n *  @return {Array}       Array of column values\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   //getColumn returns an array that can be printed directly\n\t*   print(table.getColumn(\"species\"));\n\t*   //outputs [\"Capra hircus\", \"Panthera pardus\", \"Equus zebra\"]\n\t* }\n\t* </code>\n\t* </div>\n\t*\n \t*@alt\n \t* no image displayed\n \t*\n */\np5.Table.prototype.getColumn = function(value) {\n  var ret = [];\n  if (typeof(value) === 'string'){\n    for (var i = 0; i < this.rows.length; i++){\n      ret.push (this.rows[i].obj[value]);\n    }\n  } else {\n    for (var j = 0; j < this.rows.length; j++){\n      ret.push (this.rows[j].arr[value]);\n    }\n  }\n  return ret;\n};\n\n/**\n *  Removes all rows from a Table. While all rows are removed,\n *  columns and column titles are maintained.\n *\n *  @method  clearRows\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   table.clearRows();\n\t*   print(table.getRowCount() + \" total rows in table\");\n\t*   print(table.getColumnCount() + \" total columns in table\");\n\t* }\n\t* </code>\n\t* </div>\n\t*\n \t*@alt\n \t* no image displayed\n \t*\n */\np5.Table.prototype.clearRows = function() {\n  delete this.rows;\n  this.rows = [];\n};\n\n/**\n *  Use addColumn() to add a new column to a Table object.\n *  Typically, you will want to specify a title, so the column\n *  may be easily referenced later by name. (If no title is\n *  specified, the new column's title will be null.)\n *\n *  @method  addColumn\n *  @param {String} [title] title of the given column\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   table.addColumn(\"carnivore\");\n\t*   table.set(0, \"carnivore\", \"no\");\n\t*   table.set(1, \"carnivore\", \"yes\");\n\t*   table.set(2, \"carnivore\", \"no\");\n\t*\n\t*   //print the results\n\t*   for (var r = 0; r < table.getRowCount(); r++)\n\t*     for (var c = 0; c < table.getColumnCount(); c++)\n\t*       print(table.getString(r, c));\n\t* }\n\t* </code>\n\t* </div>\n\t*\n \t*@alt\n \t* no image displayed\n \t*\n */\np5.Table.prototype.addColumn = function(title) {\n  var t = title || null;\n  this.columns.push(t);\n};\n\n/**\n *  Returns the total number of columns in a Table.\n *\n *  @return {Number} Number of columns in this table\n */\np5.Table.prototype.getColumnCount = function() {\n  return this.columns.length;\n};\n\n/**\n *  Returns the total number of rows in a Table.\n *\n *  @method  getRowCount\n *  @return {Number} Number of rows in this table\n\n */\np5.Table.prototype.getRowCount = function() {\n  return this.rows.length;\n};\n\n/**\n *  <p>Removes any of the specified characters (or \"tokens\").</p>\n *\n *  <p>If no column is specified, then the values in all columns and\n *  rows are processed. A specific column may be referenced by\n *  either its ID or title.</p>\n *\n *  @method  removeTokens\n *  @param  {String} chars  String listing characters to be removed\n *  @param  {String|Number} [column] Column ID (number)\n *                                   or name (string)\n */\np5.Table.prototype.removeTokens = function(chars, column) {\n  var escape= function(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  };\n  var charArray = [];\n  for (var i = 0; i < chars.length; i++) {\n    charArray.push( escape( chars.charAt(i) ) );\n  }\n  var regex = new RegExp(charArray.join('|'), 'g');\n\n  if (typeof(column) === 'undefined'){\n    for (var c = 0; c < this.columns.length; c++) {\n      for (var d = 0; d < this.rows.length; d++) {\n        var s = this.rows[d].arr[c];\n        s = s.replace(regex, '');\n        this.rows[d].arr[c] = s;\n        this.rows[d].obj[this.columns[c]] = s;\n      }\n    }\n  }\n  else if (typeof(column) === 'string'){\n    for (var j = 0; j < this.rows.length; j++) {\n      var val = this.rows[j].obj[column];\n      val = val.replace(regex, '');\n      this.rows[j].obj[column] = val;\n      var pos = this.columns.indexOf(column);\n      this.rows[j].arr[pos] = val;\n    }\n  }\n  else {\n    for (var k = 0; k < this.rows.length; k++) {\n      var str = this.rows[k].arr[column];\n      str = str.replace(regex, '');\n      this.rows[k].arr[column] = str;\n      this.rows[k].obj[this.columns[column]] = str;\n    }\n  }\n};\n\n/**\n *  Trims leading and trailing whitespace, such as spaces and tabs,\n *  from String table values. If no column is specified, then the\n *  values in all columns and rows are trimmed. A specific column\n *  may be referenced by either its ID or title.\n *\n *  @method  trim\n *  @param  {String|Number} column Column ID (number)\n *                                   or name (string)\n */\np5.Table.prototype.trim = function(column) {\n  var regex = new RegExp( (' '), 'g');\n\n  if (typeof(column) === 'undefined'){\n    for (var c = 0; c < this.columns.length; c++) {\n      for (var d = 0; d < this.rows.length; d++) {\n        var s = this.rows[d].arr[c];\n        s = s.replace(regex, '');\n        this.rows[d].arr[c] = s;\n        this.rows[d].obj[this.columns[c]] = s;\n      }\n    }\n  }\n  else if (typeof(column) === 'string'){\n    for (var j = 0; j < this.rows.length; j++) {\n      var val = this.rows[j].obj[column];\n      val = val.replace(regex, '');\n      this.rows[j].obj[column] = val;\n      var pos = this.columns.indexOf(column);\n      this.rows[j].arr[pos] = val;\n    }\n  }\n  else {\n    for (var k = 0; k < this.rows.length; k++) {\n      var str = this.rows[k].arr[column];\n      str = str.replace(regex, '');\n      this.rows[k].arr[column] = str;\n      this.rows[k].obj[this.columns[column]] = str;\n    }\n  }\n};\n\n/**\n *  Use removeColumn() to remove an existing column from a Table\n *  object. The column to be removed may be identified by either\n *  its title (a String) or its index value (an int).\n *  removeColumn(0) would remove the first column, removeColumn(1)\n *  would remove the second column, and so on.\n *\n *  @method  removeColumn\n *  @param  {String|Number} column columnName (string) or ID (number)\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   table.removeColumn(\"id\");\n\t*   print(table.getColumnCount());\n\t* }\n\t* </code>\n\t* </div>\n\t*\n \t*@alt\n \t* no image displayed\n \t*\n */\np5.Table.prototype.removeColumn = function(c) {\n  var cString;\n  var cNumber;\n  if (typeof(c) === 'string') {\n    // find the position of c in the columns\n    cString = c;\n    cNumber = this.columns.indexOf(c);\n    console.log('string');\n  }\n  else{\n    cNumber = c;\n    cString = this.columns[c];\n  }\n\n  var chunk = this.columns.splice(cNumber+1, this.columns.length);\n  this.columns.pop();\n  this.columns = this.columns.concat(chunk);\n\n  for (var i = 0; i < this.rows.length; i++){\n    var tempR = this.rows[i].arr;\n    var chip = tempR.splice(cNumber+1, tempR.length);\n    tempR.pop();\n    this.rows[i].arr = tempR.concat(chip);\n    delete this.rows[i].obj[cString];\n  }\n\n};\n\n\n/**\n * Stores a value in the Table's specified row and column.\n * The row is specified by its ID, while the column may be specified\n * by either its ID or title.\n *\n * @method  set\n * @param {String|Number} column column ID (Number)\n *                               or title (String)\n * @param {String|Number} value  value to assign\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   table.set(0, \"species\", \"Canis Lupus\");\n\t*   table.set(0, \"name\", \"Wolf\");\n\t*\n\t*   //print the results\n\t*   for (var r = 0; r < table.getRowCount(); r++)\n\t*     for (var c = 0; c < table.getColumnCount(); c++)\n\t*       print(table.getString(r, c));\n\t* }\n\t* </code>\n\t* </div>\n\t*\n \t*@alt\n \t* no image displayed\n \t*\n */\np5.Table.prototype.set = function(row, column, value) {\n  this.rows[row].set(column, value);\n};\n\n/**\n * Stores a Float value in the Table's specified row and column.\n * The row is specified by its ID, while the column may be specified\n * by either its ID or title.\n *\n * @method setNum\n * @param {Number} row row ID\n * @param {String|Number} column column ID (Number)\n *                               or title (String)\n * @param {Number} value  value to assign\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   table.setNum(1, \"id\", 1);\n\t*\n\t*   print(table.getColumn(0));\n\t*   //[\"0\", 1, \"2\"]\n\t* }\n\t* </code>\n\t* </div>\n\t*\n \t*@alt\n \t* no image displayed\n */\np5.Table.prototype.setNum = function(row, column, value){\n  this.rows[row].setNum(column, value);\n};\n\n\n/**\n * Stores a String value in the Table's specified row and column.\n * The row is specified by its ID, while the column may be specified\n * by either its ID or title.\n *\n * @method  setString\n * @param {Number} row row ID\n * @param {String|Number} column column ID (Number)\n *                               or title (String)\n * @param {String} value  value to assign\n */\np5.Table.prototype.setString = function(row, column, value){\n  this.rows[row].setString(column, value);\n};\n\n/**\n * Retrieves a value from the Table's specified row and column.\n * The row is specified by its ID, while the column may be specified by\n * either its ID or title.\n *\n * @method  get\n * @param {Number} row row ID\n * @param  {String|Number} column columnName (string) or\n *                                   ID (number)\n * @return {String|Number}\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   print(table.get(0, 1));\n\t*   //Capra hircus\n\t*   print(table.get(0, \"species\"));\n\t*   //Capra hircus\n\t* }\n\t* </code>\n\t* </div>\n\t*\n \t*@alt\n \t* no image displayed\n \t*\n */\np5.Table.prototype.get = function(row, column) {\n  return this.rows[row].get(column);\n};\n\n/**\n * Retrieves a Float value from the Table's specified row and column.\n * The row is specified by its ID, while the column may be specified by\n * either its ID or title.\n *\n * @method  getNum\n * @param {Number} row row ID\n * @param  {String|Number} column columnName (string) or\n *                                   ID (number)\n * @return {Number}\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   print(table.getNum(1, 0) + 100);\n\t*   //id 1 + 100 = 101\n\t* }\n\t* </code>\n\t* </div>\n\t*\n \t*@alt\n \t* no image displayed\n \t*\n */\np5.Table.prototype.getNum = function(row, column) {\n  return this.rows[row].getNum(column);\n};\n\n/**\n * Retrieves a String value from the Table's specified row and column.\n * The row is specified by its ID, while the column may be specified by\n * either its ID or title.\n *\n * @method  getString\n * @param {Number} row row ID\n * @param  {String|Number} column columnName (string) or\n *                                   ID (number)\n * @return {String}\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   var tableArray = table.getArray();\n\t*\n\t*   //output each row as array\n\t*   for (var i = 0; i < tableArray.length; i++)\n\t*     print(tableArray[i]);\n\t* }\n\t* </code>\n\t* </div>\n\t*\n \t*@alt\n \t* no image displayed\n \t*\n */\np5.Table.prototype.getString = function(row, column) {\n  return this.rows[row].getString(column);\n};\n\n/**\n * Retrieves all table data and returns as an object. If a column name is\n * passed in, each row object will be stored with that attribute as its\n * title.\n *\n * @method  getObject\n * @param {String} headerColumn Name of the column which should be used to\n *                              title each row object (optional)\n * @return {Object}\n *\n * @example\n\t* <div class=\"norender\">\n\t* <code>\n\t* // Given the CSV file \"mammals.csv\"\n\t* // in the project's \"assets\" folder:\n\t* //\n\t* // id,species,name\n\t* // 0,Capra hircus,Goat\n\t* // 1,Panthera pardus,Leopard\n\t* // 2,Equus zebra,Zebra\n\t*\n\t* var table;\n\t*\n\t* function preload() {\n\t*   //my table is comma separated value \"csv\"\n\t*   //and has a header specifying the columns labels\n\t*   table = loadTable(\"assets/mammals.csv\", \"csv\", \"header\");\n\t* }\n\t*\n\t* function setup() {\n\t*   var tableObject = table.getObject();\n\t*\n\t*   print(tableObject);\n\t*   //outputs an object\n\t* }\n\t* </code>\n\t* </div>\n\t*\n \t*@alt\n \t* no image displayed\n \t*\n */\np5.Table.prototype.getObject = function (headerColumn) {\n  var tableObject = {};\n  var obj, cPos, index;\n\n  for(var i = 0; i < this.rows.length; i++) {\n    obj = this.rows[i].obj;\n\n    if (typeof(headerColumn) === 'string'){\n      cPos = this.columns.indexOf(headerColumn); // index of columnID\n      if (cPos >= 0) {\n        index = obj[headerColumn];\n        tableObject[index] = obj;\n      } else {\n        throw 'This table has no column named \"' + headerColumn +'\"';\n      }\n    } else {\n      tableObject[i] = this.rows[i].obj;\n    }\n  }\n  return tableObject;\n};\n\n/**\n * Retrieves all table data and returns it as a multidimensional array.\n *\n * @method  getArray\n * @return {Array}\n */\np5.Table.prototype.getArray = function () {\n  var tableArray = [];\n  for(var i = 0; i < this.rows.length; i++) {\n    tableArray.push(this.rows[i].arr);\n  }\n  return tableArray;\n};\n\nmodule.exports = p5.Table;\n\n},{\"../core/core\":37}],61:[function(_dereq_,module,exports){\n/**\n * @module IO\n * @submodule Table\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/**\n *  A TableRow object represents a single row of data values,\n *  stored in columns, from a table.\n *\n *  A Table Row contains both an ordered array, and an unordered\n *  JSON object.\n *\n *  @class p5.TableRow\n *  @constructor\n *  @param {String} [str]       optional: populate the row with a\n *                              string of values, separated by the\n *                              separator\n *  @param {String} [separator] comma separated values (csv) by default\n */\np5.TableRow = function (str, separator) {\n  var arr = [];\n  var obj = {};\n  if (str){\n    separator = separator || ',';\n    arr = str.split(separator);\n  }\n  for (var i = 0; i < arr.length; i++){\n    var key = i;\n    var val = arr[i];\n    obj[key] = val;\n  }\n  this.arr = arr;\n  this.obj = obj;\n  this.table = null;\n};\n\n/**\n *  Stores a value in the TableRow's specified column.\n *  The column may be specified by either its ID or title.\n *\n *  @method  set\n *  @param {String|Number} column Column ID (Number)\n *                                or Title (String)\n *  @param {String|Number} value  The value to be stored\n */\np5.TableRow.prototype.set = function(column, value) {\n  // if typeof column is string, use .obj\n  if (typeof(column) === 'string'){\n    var cPos = this.table.columns.indexOf(column); // index of columnID\n    if (cPos >= 0) {\n      this.obj[column] = value;\n      this.arr[cPos] = value;\n    }\n    else {\n      throw 'This table has no column named \"' + column +'\"';\n    }\n  }\n\n  // if typeof column is number, use .arr\n  else {\n    if (column < this.table.columns.length) {\n      this.arr[column] = value;\n      var cTitle = this.table.columns[column];\n      this.obj[cTitle] = value;\n    }\n    else {\n      throw 'Column #' + column + ' is out of the range of this table';\n    }\n  }\n};\n\n\n/**\n *  Stores a Float value in the TableRow's specified column.\n *  The column may be specified by either its ID or title.\n *\n *  @method  setNum\n *  @param {String|Number} column Column ID (Number)\n *                                or Title (String)\n *  @param {Number} value  The value to be stored\n *                                as a Float\n */\np5.TableRow.prototype.setNum = function(column, value){\n  var floatVal = parseFloat(value, 10);\n  this.set(column, floatVal);\n};\n\n\n/**\n *  Stores a String value in the TableRow's specified column.\n *  The column may be specified by either its ID or title.\n *\n *  @method  setString\n *  @param {String|Number} column Column ID (Number)\n *                                or Title (String)\n *  @param {String} value  The value to be stored\n *                                as a String\n */\np5.TableRow.prototype.setString = function(column, value){\n  var stringVal = value.toString();\n  this.set(column, stringVal);\n};\n\n/**\n *  Retrieves a value from the TableRow's specified column.\n *  The column may be specified by either its ID or title.\n *\n *  @method  get\n *  @param  {String|Number} column columnName (string) or\n *                                   ID (number)\n *  @return {String|Number}\n */\np5.TableRow.prototype.get = function(column) {\n  if (typeof(column) === 'string'){\n    return this.obj[column];\n  } else {\n    return this.arr[column];\n  }\n};\n\n/**\n *  Retrieves a Float value from the TableRow's specified\n *  column. The column may be specified by either its ID or\n *  title.\n *\n *  @method  getNum\n *  @param  {String|Number} column columnName (string) or\n *                                   ID (number)\n *  @return {Number}  Float Floating point number\n */\np5.TableRow.prototype.getNum = function(column) {\n  var ret;\n  if (typeof(column) === 'string'){\n    ret = parseFloat(this.obj[column], 10);\n  } else {\n    ret = parseFloat(this.arr[column], 10);\n  }\n\n  if (ret.toString() === 'NaN') {\n    throw 'Error: ' + this.obj[column]+ ' is NaN (Not a Number)';\n  }\n  return ret;\n};\n\n/**\n *  Retrieves an String value from the TableRow's specified\n *  column. The column may be specified by either its ID or\n *  title.\n *\n *  @method  getString\n *  @param  {String|Number} column columnName (string) or\n *                                   ID (number)\n *  @return {String}  String\n */\np5.TableRow.prototype.getString = function(column) {\n  if (typeof(column) === 'string'){\n    return this.obj[column].toString();\n  } else {\n    return this.arr[column].toString();\n  }\n};\n\nmodule.exports = p5.TableRow;\n\n},{\"../core/core\":37}],62:[function(_dereq_,module,exports){\n/**\n * @module IO\n * @submodule XML\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/**\n * XML is a representation of an XML object, able to parse XML code. Use\n * loadXML() to load external XML files and create XML objects.\n *\n * @class p5.XML\n * @constructor\n * @return {p5.XML}    p5.XML object generated\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var children = xml.getChildren(\"animal\");\n *\n *   for (var i = 0; i < children.length; i++) {\n *     var id = children[i].getNumber(\"id\");\n *     var coloring = children[i].getString(\"species\");\n *     var name = children[i].getContent();\n *     print(id + \", \" + coloring + \", \" + name);\n *   }\n * }\n *\n * // Sketch prints:\n * // 0, Capra hircus, Goat\n * // 1, Panthera pardus, Leopard\n * // 2, Equus zebra, Zebra\n * </code></div>\n  *\n  * @alt\n  * no image displayed\n  *\n */\np5.XML = function () {\n  this.name = null; //done\n  this.attributes = {}; //done\n  this.children = [];\n  this.parent = null;\n  this.content = null; //done\n};\n\n\n/**\n * Gets a copy of the element's parent. Returns the parent as another\n * p5.XML object.\n *\n * @method getParent\n * @return {Object}   element parent\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var children = xml.getChildren(\"animal\");\n *   var parent = children[1].getParent();\n *   print(parent.getName());\n * }\n *\n * // Sketch prints:\n * // mammals\n * </code></div>\n */\np5.XML.prototype.getParent = function() {\n  return this.parent;\n};\n\n/**\n *  Gets the element's full name, which is returned as a String.\n *\n * @method getName\n * @return {String} the name of the node\n * @example&lt;animal\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   print(xml.getName());\n * }\n *\n * // Sketch prints:\n * // mammals\n * </code></div>\n */\np5.XML.prototype.getName = function() {\n  return this.name;\n};\n\n/**\n * Sets the element's name, which is specified as a String.\n *\n * @method setName\n * @param {String} the new name of the node\n * @example&lt;animal\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   print(xml.getName());\n *   xml.setName(\"fish\");\n *   print(xml.getName());\n * }\n *\n * // Sketch prints:\n * // mammals\n * // fish\n * </code></div>\n */\np5.XML.prototype.setName = function(name) {\n  this.name = name;\n};\n\n/**\n * Checks whether or not the element has any children, and returns the result\n * as a boolean.\n *\n * @method hasChildren\n * @return {boolean}\n * @example&lt;animal\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   print(xml.hasChildren());\n * }\n *\n * // Sketch prints:\n * // true\n * </code></div>\n */\np5.XML.prototype.hasChildren = function() {\n  return this.children.length > 0;\n};\n\n/**\n * Get the names of all of the element's children, and returns the names as an\n * array of Strings. This is the same as looping through and calling getName()\n * on each child element individually.\n *\n * @method listChildren\n * @return {Array} names of the children of the element\n * @example&lt;animal\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   print(xml.listChildren());\n * }\n *\n * // Sketch prints:\n * // [\"animal\", \"animal\", \"animal\"]\n * </code></div>\n */\np5.XML.prototype.listChildren = function() {\n  return this.children.map(function(c) { return c.name; });\n};\n\n/**\n * Returns all of the element's children as an array of p5.XML objects. When\n * the name parameter is specified, then it will return all children that match\n * that name.\n *\n * @method getChildren\n * @param {String} [name] element name\n * @return {Array} children of the element\n * @example&lt;animal\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var animals = xml.getChildren(\"animal\");\n *\n *   for (var i = 0; i < animals.length; i++) {\n *     print(animals[i].getContent());\n *   }\n * }\n *\n * // Sketch prints:\n * // \"Goat\"\n * // \"Leopard\"\n * // \"Zebra\"\n * </code></div>\n */\np5.XML.prototype.getChildren = function(param) {\n  if (param) {\n    return this.children.filter(function(c) { return c.name === param; });\n  }\n  else {\n    return this.children;\n  }\n};\n\n/**\n * Returns the first of the element's children that matches the name parameter\n * or the child of the given index.It returns undefined if no matching\n * child is found.\n *\n * @method getChild\n * @param {String|Number} name element name or index\n * @return {p5.XML}\n * @example&lt;animal\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var firstChild = xml.getChild(\"animal\");\n *   print(firstChild.getContent());\n * }\n *\n * // Sketch prints:\n * // \"Goat\"\n * </code></div>\n * <div class='norender'><code>\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var secondChild = xml.getChild(1);\n *   print(secondChild.getContent());\n * }\n *\n * // Sketch prints:\n * // \"Leopard\"\n * </code></div>\n */\np5.XML.prototype.getChild = function(param) {\n  if(typeof param === 'string') {\n    return this.children.find(function(c) {\n      return c.name === param;\n    });\n  }\n  else {\n    return this.children[param];\n  }\n};\n\n/**\n * Appends a new child to the element. The child can be specified with\n * either a String, which will be used as the new tag's name, or as a\n * reference to an existing p5.XML object.\n * A reference to the newly created child is returned as an p5.XML object.\n *\n * @method addChild\n * @param {Object} a p5.XML Object which will be the child to be added\n */\np5.XML.prototype.addChild = function(node) {\n  if (node instanceof p5.XML) {\n    this.children.push(node);\n  } else {\n    // PEND\n  }\n};\n\n/**\n * Removes the element specified by name or index.\n *\n * @method removeChild\n * @param {String|Number} name element name or index\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   xml.removeChild(\"animal\");\n *   var children = xml.getChildren();\n *   for (var i=0; i<children.length; i++) {\n *     print(children[i].getContent());\n *   }\n * }\n *\n * // Sketch prints:\n * // \"Leopard\"\n * // \"Zebra\"\n * </code></div>\n * <div class='norender'><code>\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   xml.removeChild(1);\n *   var children = xml.getChildren();\n *   for (var i=0; i<children.length; i++) {\n *     print(children[i].getContent());\n *   }\n * }\n *\n * // Sketch prints:\n * // \"Goat\"\n * // \"Zebra\"\n * </code></div>\n */\np5.XML.prototype.removeChild = function(param) {\n  var ind = -1;\n  if(typeof param === 'string') {\n    for (var i=0; i<this.children.length; i++) {\n      if (this.children[i].name === param) {\n        ind = i;\n        break;\n      }\n    }\n  } else {\n    ind = param;\n  }\n  if (ind !== -1) {\n    this.children.splice(ind, 1);\n  }\n};\n\n\n/**\n * Counts the specified element's number of attributes, returned as an Number.\n *\n * @method getAttributeCount\n * @return {Number}\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var firstChild = xml.getChild(\"animal\");\n *   print(firstChild.getAttributeCount());\n * }\n *\n * // Sketch prints:\n * // 2\n * </code></div>\n */\np5.XML.prototype.getAttributeCount = function() {\n  return Object.keys(this.attributes).length;\n};\n\n/**\n * Gets all of the specified element's attributes, and returns them as an\n * array of Strings.\n *\n * @method listAttributes\n * @return {Array} an array of strings containing the names of attributes\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var firstChild = xml.getChild(\"animal\");\n *   print(firstChild.listAttributes());\n * }\n *\n * // Sketch prints:\n * // [\"id\", \"species\"]\n * </code></div>\n */\np5.XML.prototype.listAttributes = function() {\n  return Object.keys(this.attributes);\n};\n\n/**\n *  Checks whether or not an element has the specified attribute.\n *\n * @method hasAttribute\n * @param {String} the attribute to be checked\n * @return {boolean} true if attribute found else false\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var firstChild = xml.getChild(\"animal\");\n *   print(firstChild.hasAttribute(\"species\"));\n *   print(firstChild.hasAttribute(\"color\"));\n * }\n *\n * // Sketch prints:\n * // true\n * // false\n * </code></div>\n */\np5.XML.prototype.hasAttribute = function(name) {\n  return this.attributes[name] ? true : false;\n};\n\n/**\n * Returns an attribute value of the element as an Number. If the defaultValue\n * parameter is specified and the attribute doesn't exist, then defaultValue\n * is returned. If no defaultValue is specified and the attribute doesn't\n * exist, the value 0 is returned.\n *\n * @method getNumber\n * @param {String} name            the non-null full name of the attribute\n * @param {Number} [defaultValue]  the default value of the attribute\n * @return {Number}\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var firstChild = xml.getChild(\"animal\");\n *   print(firstChild.getNumber(\"id\"));\n * }\n *\n * // Sketch prints:\n * // 0\n * </code></div>\n */\np5.XML.prototype.getNumber = function(name, defaultValue) {\n  return Number(this.attributes[name]) || defaultValue || 0;\n};\n\n/**\n * Returns an attribute value of the element as an String. If the defaultValue\n * parameter is specified and the attribute doesn't exist, then defaultValue\n * is returned. If no defaultValue is specified and the attribute doesn't\n * exist, null is returned.\n *\n * @method getString\n * @param {String} name            the non-null full name of the attribute\n * @param {Number} [defaultValue]  the default value of the attribute\n * @return {Number}\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var firstChild = xml.getChild(\"animal\");\n *   print(firstChild.getString(\"species\"));\n * }\n *\n * // Sketch prints:\n * // \"Capra hircus\"\n * </code></div>\n */\np5.XML.prototype.getString = function(name, defaultValue) {\n  return String(this.attributes[name]) || defaultValue || null;\n};\n\n/**\n * Sets the content of an element's attribute. The first parameter specifies\n * the attribute name, while the second specifies the new content.\n *\n * @method setAttribute\n * @param {String} name            the full name of the attribute\n * @param {Number} value           the value of the attribute\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var firstChild = xml.getChild(\"animal\");\n *   print(firstChild.getString(\"species\"));\n *   firstChild.setAttribute(\"species\", \"Jamides zebra\");\n *   print(firstChild.getString(\"species\"));\n * }\n *\n * // Sketch prints:\n * // \"Capra hircus\"\n * // \"Jamides zebra\"\n * </code></div>\n */\np5.XML.prototype.setAttribute = function(name, value) {\n  if (this.attributes[name]) {\n    this.attributes[name] = value;\n  }\n};\n\n/**\n * Returns the content of an element. If there is no such content,\n * defaultValue is returned if specified, otherwise null is returned.\n *\n * @method getContent\n * @param {String} [defaultValue] value returned if no content is found\n * @return {String}\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var firstChild = xml.getChild(\"animal\");\n *   print(firstChild.getContent());\n * }\n *\n * // Sketch prints:\n * // \"Goat\"\n * </code></div>\n */\np5.XML.prototype.getContent = function(defaultValue) {\n  return this.content || defaultValue || null;\n};\n\n/**\n * Sets the element's content.\n *\n * @method setContent\n * @param {String} text the new content\n * @example\n * <div class='norender'><code>\n * // The following short XML file called \"mammals.xml\" is parsed\n * // in the code below.\n * //\n * // <?xml version=\"1.0\"?>\n * // &lt;mammals&gt;\n * //   &lt;animal id=\"0\" species=\"Capra hircus\">Goat&lt;/animal&gt;\n * //   &lt;animal id=\"1\" species=\"Panthera pardus\">Leopard&lt;/animal&gt;\n * //   &lt;animal id=\"2\" species=\"Equus zebra\">Zebra&lt;/animal&gt;\n * // &lt;/mammals&gt;\n *\n * var xml;\n *\n * function preload() {\n *   xml = loadXML(\"assets/mammals.xml\");\n * }\n *\n * function setup() {\n *   var firstChild = xml.getChild(\"animal\");\n *   print(firstChild.getContent());\n *   firstChild.setContent(\"Mountain Goat\");\n *   print(firstChild.getContent());\n * }\n *\n * // Sketch prints:\n * // \"Goat\"\n * // \"Mountain Goat\"\n * </code></div>\n */\np5.XML.prototype.setContent = function( content ) {\n  if(!this.children.length) {\n    this.content = content;\n  }\n};\n\n/* HELPERS */\n/**\n * This method is called while the parsing of XML (when loadXML() is\n * called). The difference between this method and the setContent()\n * method defined later is that this one is used to set the content\n * when the node in question has more nodes under it and so on and\n * not directly text content. While in the other one is used when\n * the node in question directly has text inside it.\n *\n */\np5.XML.prototype._setCont = function(content) {\n  var str;\n  str = content;\n  str = str.replace(/\\s\\s+/g, ',');\n  //str = str.split(',');\n  this.content = str;\n};\n\n/**\n * This method is called while the parsing of XML (when loadXML() is\n * called). The XML node is passed and its attributes are stored in the\n * p5.XML's attribute Object.\n *\n */\np5.XML.prototype._setAttributes = function(node) {\n  var  i, att = {};\n  for( i = 0; i < node.attributes.length; i++) {\n    att[node.attributes[i].nodeName] = node.attributes[i].nodeValue;\n  }\n  this.attributes = att;\n};\n\nmodule.exports = p5.XML;\n},{\"../core/core\":37}],63:[function(_dereq_,module,exports){\n/**\n * @module Math\n * @submodule Calculation\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/**\n * Calculates the absolute value (magnitude) of a number. Maps to Math.abs().\n * The absolute value of a number is always positive.\n *\n * @method abs\n * @param  {Number} n number to compute\n * @return {Number}   absolute value of given number\n * @example\n * <div class = \"norender\"><code>\n * function setup() {\n *   var x = -3;\n *   var y = abs(x);\n *\n *   print(x); // -3\n *   print(y); // 3\n * }\n * </code></div>\n *\n * @alt\n * no image displayed\n *\n */\np5.prototype.abs = Math.abs;\n\n/**\n * Calculates the closest int value that is greater than or equal to the\n * value of the parameter. Maps to Math.ceil(). For example, ceil(9.03)\n * returns the value 10.\n *\n * @method ceil\n * @param  {Number} n number to round up\n * @return {Number}   rounded up number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   // map, mouseX between 0 and 5.\n *   var ax = map(mouseX, 0, 100, 0, 5);\n *   var ay = 66;\n *\n *   //Get the ceiling of the mapped number.\n *   var bx = ceil(map(mouseX, 0, 100, 0,5));\n *   var by = 33;\n *\n *   // Multiply the mapped numbers by 20 to more easily\n *   // see the changes.\n *   stroke(0);\n *   fill(0);\n *   line(0, ay, ax * 20, ay);\n *   line(0, by, bx * 20, by);\n *\n *   // Reformat the float returned by map and draw it.\n *   noStroke();\n *   text(nfc(ax, 2,2), ax, ay - 5);\n *   text(nfc(bx,1,1), bx, by - 5);\n * }\n * </code></div>\n  *\n * @alt\n * 2 horizontal lines & number sets. increase with mouse x. bottom to 2 decimals\n *\n */\np5.prototype.ceil = Math.ceil;\n\n/**\n * Constrains a value between a minimum and maximum value.\n *\n * @method constrain\n * @param  {Number} n    number to constrain\n * @param  {Number} low  minimum limit\n * @param  {Number} high maximum limit\n * @return {Number}      constrained number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *\n *   var leftWall = 25;\n *   var rightWall = 75;\n *\n *   // xm is just the mouseX, while\n *   // xc is the mouseX, but constrained\n *   // between the leftWall and rightWall!\n *   var xm = mouseX;\n *   var xc = constrain(mouseX, leftWall, rightWall);\n *\n *   // Draw the walls.\n *   stroke(150);\n *   line(leftWall, 0, leftWall, height);\n *   line(rightWall, 0, rightWall, height);\n *\n *   // Draw xm and xc as circles.\n *   noStroke();\n *   fill(150);\n *   ellipse(xm, 33, 9,9); // Not Constrained\n *   fill(0);\n *   ellipse(xc, 66, 9,9); // Constrained\n * }\n * </code></div>\n *\n * @alt\n * 2 vertical lines. 2 ellipses move with mouse X 1 does not move passed lines\n *\n */\np5.prototype.constrain = function(n, low, high) {\n  return Math.max(Math.min(n, high), low);\n};\n\n/**\n * Calculates the distance between two points.\n *\n * @method dist\n * @param  {Number} x1 x-coordinate of the first point\n * @param  {Number} y1 y-coordinate of the first point\n * @param  {Number} [z1] z-coordinate of the first point\n * @param  {Number} x2 x-coordinate of the second point\n * @param  {Number} y2 y-coordinate of the second point\n * @param  {Number} [z2] z-coordinate of the second point\n * @return {Number}    distance between the two points\n * @example\n * <div><code>\n * // Move your mouse inside the canvas to see the\n * // change in distance between two points!\n * function draw() {\n *   background(200);\n *   fill(0);\n *\n *   var x1 = 10;\n *   var y1 = 90;\n *   var x2 = mouseX;\n *   var y2 = mouseY;\n *\n *   line(x1, y1, x2, y2);\n *   ellipse(x1, y1, 7, 7);\n *   ellipse(x2, y2, 7, 7);\n *\n *   // d is the length of the line\n *   // the distance from point 1 to point 2.\n *   var d = int(dist(x1, y1, x2, y2));\n *\n *   // Let's write d along the line we are drawing!\n *   push();\n *   translate( (x1+x2)/2, (y1+y2)/2 );\n *   rotate( atan2(y2-y1,x2-x1) );\n *   text(nfc(d,1,1), 0, -5);\n *   pop();\n *   // Fancy!\n * }\n * </code></div>\n *\n * @alt\n * 2 ellipses joined by line. 1 ellipse moves with mouse X&Y. Distance displayed.\n *\n */\np5.prototype.dist = function(x1, y1, z1, x2, y2, z2) {\n  if (arguments.length === 4) {\n    // In the case of 2d: z1 means x2 and x2 means y2\n    return Math.sqrt( (z1-x1)*(z1-x1) + (x2-y1)*(x2-y1) );\n  } else if (arguments.length === 6) {\n    return Math.sqrt( (x2-x1)*(x2-x1) + (y2-y1)*(y2-y1) + (z2-z1)*(z2-z1) );\n  }\n};\n\n/**\n * Returns Euler's number e (2.71828...) raised to the power of the n\n * parameter. Maps to Math.exp().\n *\n * @method exp\n * @param  {Number} n exponent to raise\n * @return {Number}   e^n\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *\n *   // Compute the exp() function with a value between 0 and 2\n *   var xValue = map(mouseX, 0, width, 0, 2);\n *   var yValue = exp(xValue);\n *\n *   var y = map(yValue, 0, 8, height, 0);\n *\n *   var legend = \"exp (\" + nfc(xValue, 3) +\")\\n= \" + nf(yValue, 1, 4);\n *   stroke(150);\n *   line(mouseX, y, mouseX, height);\n *   fill(0);\n *   text(legend, 5, 15);\n *   noStroke();\n *   ellipse (mouseX,y, 7, 7);\n *\n *   // Draw the exp(x) curve,\n *   // over the domain of x from 0 to 2\n *   noFill();\n *   stroke(0);\n *   beginShape();\n *   for (var x = 0; x < width; x++) {\n *     xValue = map(x, 0, width, 0, 2);\n *     yValue = exp(xValue);\n *     y = map(yValue, 0, 8, height, 0);\n *     vertex(x, y);\n *   }\n *\n *   endShape();\n *   line(0, 0, 0, height);\n *   line(0, height-1, width, height-1);\n * }\n * </code></div>\n *\n * @alt\n * ellipse moves along a curve with mouse x. e^n displayed.\n *\n */\np5.prototype.exp = Math.exp;\n\n/**\n * Calculates the closest int value that is less than or equal to the\n * value of the parameter. Maps to Math.floor().\n *\n * @method floor\n * @param  {Number} n number to round down\n * @return {Number}   rounded down number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   //map, mouseX between 0 and 5.\n *   var ax = map(mouseX, 0, 100, 0, 5);\n *   var ay = 66;\n *\n *   //Get the floor of the mapped number.\n *   var bx = floor(map(mouseX, 0, 100, 0,5));\n *   var by = 33;\n *\n *   // Multiply the mapped numbers by 20 to more easily\n *   // see the changes.\n *   stroke(0);\n *   fill(0);\n *   line(0, ay, ax * 20, ay);\n *   line(0, by, bx * 20, by);\n *\n *   // Reformat the float returned by map and draw it.\n *   noStroke();\n *   text(nfc(ax, 2,2), ax, ay - 5);\n *   text(nfc(bx,1,1), bx, by - 5);\n * }\n * </code></div>\n *\n * @alt\n * 2 horizontal lines & number sets. increase with mouse x. bottom to 2 decimals\n *\n */\np5.prototype.floor = Math.floor;\n\n/**\n * Calculates a number between two numbers at a specific increment. The amt\n * parameter is the amount to interpolate between the two values where 0.0\n * equal to the first point, 0.1 is very near the first point, 0.5 is\n * half-way in between, etc. The lerp function is convenient for creating\n * motion along a straight path and for drawing dotted lines.\n *\n * @method lerp\n * @param  {Number} start first value\n * @param  {Number} stop  second value\n * @param  {Number} amt   number between 0.0 and 1.0\n * @return {Number}       lerped value\n * @example\n * <div><code>\n * function setup() {\n *   background(200);\n *   var a = 20;\n *   var b = 80;\n *   var c = lerp(a,b, .2);\n *   var d = lerp(a,b, .5);\n *   var e = lerp(a,b, .8);\n *\n *   var y = 50\n *\n *   strokeWeight(5);\n *   stroke(0); // Draw the original points in black\n *   point(a, y);\n *   point(b, y);\n *\n *   stroke(100); // Draw the lerp points in gray\n *   point(c, y);\n *   point(d, y);\n *   point(e, y);\n * }\n * </code></div>\n *\n * @alt\n * 5 points horizontally staggered mid-canvas. mid 3 are grey, outer black\n *\n */\np5.prototype.lerp = function(start, stop, amt) {\n  return amt*(stop-start)+start;\n};\n\n/**\n * Calculates the natural logarithm (the base-e logarithm) of a number. This\n * function expects the n parameter to be a value greater than 0.0. Maps to\n * Math.log().\n *\n * @method log\n * @param  {Number} n number greater than 0\n * @return {Number}   natural logarithm of n\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   var maxX = 2.8;\n *   var maxY = 1.5;\n *\n *   // Compute the natural log of a value between 0 and maxX\n *   var xValue = map(mouseX, 0, width, 0, maxX);\n *   if (xValue > 0) { // Cannot take the log of a negative number.\n *     var yValue = log(xValue);\n *     var y = map(yValue, -maxY, maxY, height, 0);\n *\n *     // Display the calculation occurring.\n *     var legend = \"log(\" + nf(xValue, 1, 2) + \")\\n= \" + nf(yValue, 1, 3);\n *     stroke(150);\n *     line(mouseX, y, mouseX, height);\n *     fill(0);\n *     text (legend, 5, 15);\n *     noStroke();\n *     ellipse (mouseX, y, 7, 7);\n *   }\n *\n *   // Draw the log(x) curve,\n *   // over the domain of x from 0 to maxX\n *   noFill();\n *   stroke(0);\n *   beginShape();\n *   for(var x=0; x < width; x++) {\n *     xValue = map(x, 0, width, 0, maxX);\n *     yValue = log(xValue);\n *     y = map(yValue, -maxY, maxY, height, 0);\n *     vertex(x, y);\n *   }\n *   endShape();\n *   line(0,0,0,height);\n *   line(0,height/2,width, height/2);\n * }\n * </code></div>\n *\n * @alt\n * ellipse moves along a curve with mouse x. natural logarithm of n displayed.\n *\n */\np5.prototype.log = Math.log;\n\n/**\n * Calculates the magnitude (or length) of a vector. A vector is a direction\n * in space commonly used in computer graphics and linear algebra. Because it\n * has no \"start\" position, the magnitude of a vector can be thought of as\n * the distance from the coordinate 0,0 to its x,y value. Therefore, mag() is\n * a shortcut for writing dist(0, 0, x, y).\n *\n * @method mag\n * @param  {Number} a first value\n * @param  {Number} b second value\n * @return {Number}   magnitude of vector from (0,0) to (a,b)\n * @example\n * <div><code>\n * function setup() {\n *   var x1 = 20;\n *   var x2 = 80;\n *   var y1 = 30;\n *   var y2 = 70;\n *\n *   line(0, 0, x1, y1);\n *   print(mag(x1, y1));  // Prints \"36.05551\"\n *   line(0, 0, x2, y1);\n *   print(mag(x2, y1));  // Prints \"85.44004\"\n *   line(0, 0, x1, y2);\n *   print(mag(x1, y2));  // Prints \"72.8011\"\n *   line(0, 0, x2, y2);\n *   print(mag(x2, y2));  // Prints \"106.30146\"\n * }\n * </code></div>\n *\n * @alt\n * 4 lines of different length radiate from top left of canvas.\n *\n */\np5.prototype.mag = function(x, y) {\n  return Math.sqrt(x*x+y*y);\n};\n\n/**\n * Re-maps a number from one range to another.\n * <br><br>\n * In the first example above, the number 25 is converted from a value in the\n * range of 0 to 100 into a value that ranges from the left edge of the\n * window (0) to the right edge (width).\n *\n * @method map\n * @param  {Number} value  the incoming value to be converted\n * @param  {Number} start1 lower bound of the value's current range\n * @param  {Number} stop1  upper bound of the value's current range\n * @param  {Number} start2 lower bound of the value's target range\n * @param  {Number} stop2  upper bound of the value's target range\n * @return {Number}        remapped number\n * @example\n *   <div><code>\n *     var value = 25;\n *     var m = map(value, 0, 100, 0, width);\n *     ellipse(m, 50, 10, 10);\n *   </code></div>\n *\n *   <div><code>\n *     function setup() {\n *       noStroke();\n *     }\n *\n *     function draw() {\n *       background(204);\n *       var x1 = map(mouseX, 0, width, 25, 75);\n *       ellipse(x1, 25, 25, 25);\n *       var x2 = map(mouseX, 0, width, 0, 100);\n *       ellipse(x2, 75, 25, 25);\n *     }\n *   </code></div>\n *\n * @alt\n * 10 by 10 white ellipse with in mid left canvas\n * 2 25 by 25 white ellipses move with mouse x. Bottom has more range from X\n *\n */\np5.prototype.map = function(n, start1, stop1, start2, stop2) {\n  return ((n-start1)/(stop1-start1))*(stop2-start2)+start2;\n};\n\n/**\n * Determines the largest value in a sequence of numbers, and then returns\n * that value. max() accepts any number of Number parameters, or an Array\n * of any length.\n *\n * @method max\n * @param  {Number|Array} n0 Numbers to compare\n * @return {Number}          maximum Number\n * @example\n * <div><code>\n * function setup() {\n *   // Change the elements in the array and run the sketch\n *   // to show how max() works!\n *   numArray = new Array(2,1,5,4,8,9);\n *   fill(0);\n *   noStroke();\n *   text(\"Array Elements\", 0, 10);\n *   // Draw all numbers in the array\n *   var spacing = 15;\n *   var elemsY = 25;\n *   for(var i = 0; i < numArray.length; i++) {\n *     text(numArray[i], i * spacing, elemsY);\n *   }\n *   maxX = 33;\n *   maxY = 80;\n *   // Draw the Maximum value in the array.\n *   textSize(32);\n *   text(max(numArray), maxX, maxY);\n * }\n * </code></div>\n *\n * @alt\n * Small text at top reads: Array Elements 2 1 5 4 8 9. Large text at center: 9\n *\n */\np5.prototype.max = function() {\n  if (arguments[0] instanceof Array) {\n    return Math.max.apply(null,arguments[0]);\n  } else {\n    return Math.max.apply(null,arguments);\n  }\n};\n\n/**\n * Determines the smallest value in a sequence of numbers, and then returns\n * that value. min() accepts any number of Number parameters, or an Array\n * of any length.\n *\n * @method min\n * @param  {Number|Array} n0 Numbers to compare\n * @return {Number}          minimum Number\n * @example\n * <div><code>\n * function setup() {\n *   // Change the elements in the array and run the sketch\n *   // to show how min() works!\n *   numArray = new Array(2,1,5,4,8,9);\n *   fill(0);\n *   noStroke();\n *   text(\"Array Elements\", 0, 10);\n *   // Draw all numbers in the array\n *   var spacing = 15;\n *   var elemsY = 25;\n *   for(var i = 0; i < numArray.length; i++) {\n *     text(numArray[i], i * spacing, elemsY);\n *   }\n *   maxX = 33;\n *   maxY = 80;\n *   // Draw the Minimum value in the array.\n *   textSize(32);\n *   text(min(numArray), maxX, maxY);\n * }\n * </code></div>\n *\n * @alt\n * Small text at top reads: Array Elements 2 1 5 4 8 9. Large text at center: 1\n *\n */\np5.prototype.min = function() {\n  if (arguments[0] instanceof Array) {\n    return Math.min.apply(null,arguments[0]);\n  } else {\n    return Math.min.apply(null,arguments);\n  }\n};\n\n/**\n * Normalizes a number from another range into a value between 0 and 1.\n * Identical to map(value, low, high, 0, 1).\n * Numbers outside of the range are not clamped to 0 and 1, because\n * out-of-range values are often intentional and useful. (See the second\n * example above.)\n *\n * @method norm\n * @param  {Number} value incoming value to be normalized\n * @param  {Number} start lower bound of the value's current range\n * @param  {Number} stop  upper bound of the value's current range\n * @return {Number}       normalized number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   currentNum = mouseX;\n *   lowerBound = 0;\n *   upperBound = width; //100;\n *   normalized = norm(currentNum, lowerBound, upperBound);\n *   lineY = 70\n *   line(0, lineY, width, lineY);\n *   //Draw an ellipse mapped to the non-normalized value.\n *   noStroke();\n *   fill(50)\n *   var s = 7; // ellipse size\n *   ellipse(currentNum, lineY, s, s);\n *\n *   // Draw the guide\n *   guideY = lineY + 15;\n *   text(\"0\", 0, guideY);\n *   textAlign(RIGHT);\n *   text(\"100\", width, guideY);\n *\n *   // Draw the normalized value\n *   textAlign(LEFT);\n *   fill(0);\n *   textSize(32);\n *   normalY = 40;\n *   normalX = 20;\n *   text(normalized, normalX, normalY);\n * }\n * </code></div>\n *\n * @alt\n * ellipse moves with mouse. 0 shown left & 100 right and updating values center\n *\n */\np5.prototype.norm = function(n, start, stop) {\n  return this.map(n, start, stop, 0, 1);\n};\n\n/**\n * Facilitates exponential expressions. The pow() function is an efficient\n * way of multiplying numbers by themselves (or their reciprocals) in large\n * quantities. For example, pow(3, 5) is equivalent to the expression\n * 3*3*3*3*3 and pow(3, -5) is equivalent to 1 / 3*3*3*3*3. Maps to\n * Math.pow().\n *\n * @method pow\n * @param  {Number} n base of the exponential expression\n * @param  {Number} e power by which to raise the base\n * @return {Number}   n^e\n * @example\n * <div><code>\n * function setup() {\n *   //Exponentially increase the size of an ellipse.\n *   eSize = 3; // Original Size\n *   eLoc = 10; // Original Location\n *\n *   ellipse(eLoc, eLoc, eSize, eSize);\n *\n *   ellipse(eLoc*2, eLoc*2, pow(eSize, 2), pow(eSize, 2));\n *\n *   ellipse(eLoc*4, eLoc*4, pow(eSize, 3), pow(eSize, 3));\n *\n *   ellipse(eLoc*8, eLoc*8, pow(eSize, 4), pow(eSize, 4));\n * }\n * </code></div>\n *\n * @alt\n * small to large ellipses radiating from top left of canvas\n *\n */\np5.prototype.pow = Math.pow;\n\n/**\n * Calculates the integer closest to the n parameter. For example,\n * round(133.8) returns the value 134. Maps to Math.round().\n *\n * @method round\n * @param  {Number} n number to round\n * @return {Number}   rounded number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   //map, mouseX between 0 and 5.\n *   var ax = map(mouseX, 0, 100, 0, 5);\n *   var ay = 66;\n *\n *   // Round the mapped number.\n *   var bx = round(map(mouseX, 0, 100, 0,5));\n *   var by = 33;\n *\n *   // Multiply the mapped numbers by 20 to more easily\n *   // see the changes.\n *   stroke(0);\n *   fill(0);\n *   line(0, ay, ax * 20, ay);\n *   line(0, by, bx * 20, by);\n *\n *   // Reformat the float returned by map and draw it.\n *   noStroke();\n *   text(nfc(ax, 2,2), ax, ay - 5);\n *   text(nfc(bx,1,1), bx, by - 5);\n * }\n * </code></div>\n *\n * @alt\n * horizontal center line squared values displayed on top and regular on bottom.\n *\n */\np5.prototype.round = Math.round;\n\n/**\n * Squares a number (multiplies a number by itself). The result is always a\n * positive number, as multiplying two negative numbers always yields a\n * positive result. For example, -1 * -1 = 1.\n *\n * @method sq\n * @param  {Number} n number to square\n * @return {Number}   squared number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   eSize = 7;\n *   x1 = map(mouseX, 0, width, 0, 10);\n *   y1 = 80;\n *   x2 = sq(x1);\n *   y2 = 20;\n *\n *   // Draw the non-squared.\n *   line(0, y1, width, y1);\n *   ellipse(x1, y1, eSize, eSize);\n *\n *   // Draw the squared.\n *   line(0, y2, width, y2);\n *   ellipse(x2, y2, eSize, eSize);\n *\n *   // Draw dividing line.\n *   stroke(100)\n *   line(0, height/2, width, height/2);\n *\n *   // Draw text.\n *   var spacing = 15;\n *   noStroke();\n *   fill(0);\n *   text(\"x = \" + x1, 0, y1 + spacing);\n *   text(\"sq(x) = \" + x2, 0, y2 + spacing);\n * }\n * </code></div>\n *\n * @alt\n * horizontal center line squared values displayed on top and regular on bottom.\n *\n */\np5.prototype.sq = function(n) { return n*n; };\n\n/**\n * Calculates the square root of a number. The square root of a number is\n * always positive, even though there may be a valid negative root. The\n * square root s of number a is such that s*s = a. It is the opposite of\n * squaring. Maps to Math.sqrt().\n *\n * @method sqrt\n * @param  {Number} n non-negative number to square root\n * @return {Number}   square root of number\n * @example\n * <div><code>\n * function draw() {\n *   background(200);\n *   eSize = 7;\n *   x1 = mouseX;\n *   y1 = 80;\n *   x2 = sqrt(x1);\n *   y2 = 20;\n *\n *   // Draw the non-squared.\n *   line(0, y1, width, y1);\n *   ellipse(x1, y1, eSize, eSize);\n *\n *   // Draw the squared.\n *   line(0, y2, width, y2);\n *   ellipse(x2, y2, eSize, eSize);\n *\n *   // Draw dividing line.\n *   stroke(100)\n *   line(0, height/2, width, height/2);\n *\n *   // Draw text.\n *   noStroke();\n *   fill(0);\n *   var spacing = 15;\n *   text(\"x = \" + x1, 0, y1 + spacing);\n *   text(\"sqrt(x) = \" + x2, 0, y2 + spacing);\n * }\n * </code></div>\n *\n * @alt\n * horizontal center line squareroot values displayed on top and regular on bottom.\n *\n */\np5.prototype.sqrt = Math.sqrt;\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],64:[function(_dereq_,module,exports){\n/**\n * @module Math\n * @submodule Math\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n\n/**\n * Creates a new p5.Vector (the datatype for storing vectors). This provides a\n * two or three dimensional vector, specifically a Euclidean (also known as\n * geometric) vector. A vector is an entity that has both magnitude and\n * direction.\n *\n * @method createVector\n * @param {Number} [x] x component of the vector\n * @param {Number} [y] y component of the vector\n * @param {Number} [z] z component of the vector\n */\np5.prototype.createVector = function (x, y, z) {\n  if (this instanceof p5) {\n    return new p5.Vector(this, arguments);\n  } else {\n    return new p5.Vector(x, y, z);\n  }\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],65:[function(_dereq_,module,exports){\n//////////////////////////////////////////////////////////////\n\n// http://mrl.nyu.edu/~perlin/noise/\n// Adapting from PApplet.java\n// which was adapted from toxi\n// which was adapted from the german demo group farbrausch\n// as used in their demo \"art\": http://www.farb-rausch.de/fr010src.zip\n\n// someday we might consider using \"improved noise\"\n// http://mrl.nyu.edu/~perlin/paper445.pdf\n// See: https://github.com/shiffman/The-Nature-of-Code-Examples-p5.js/\n//      blob/master/introduction/Noise1D/noise.js\n\n/**\n * @module Math\n * @submodule Noise\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\nvar PERLIN_YWRAPB = 4;\nvar PERLIN_YWRAP = 1<<PERLIN_YWRAPB;\nvar PERLIN_ZWRAPB = 8;\nvar PERLIN_ZWRAP = 1<<PERLIN_ZWRAPB;\nvar PERLIN_SIZE = 4095;\n\nvar perlin_octaves = 4; // default to medium smooth\nvar perlin_amp_falloff = 0.5; // 50% reduction/octave\n\nvar scaled_cosine = function(i) {\n  return 0.5*(1.0-Math.cos(i*Math.PI));\n};\n\nvar perlin; // will be initialized lazily by noise() or noiseSeed()\n\n\n/**\n * Returns the Perlin noise value at specified coordinates. Perlin noise is\n * a random sequence generator producing a more natural ordered, harmonic\n * succession of numbers compared to the standard <b>random()</b> function.\n * It was invented by Ken Perlin in the 1980s and been used since in\n * graphical applications to produce procedural textures, natural motion,\n * shapes, terrains etc.<br /><br /> The main difference to the\n * <b>random()</b> function is that Perlin noise is defined in an infinite\n * n-dimensional space where each pair of coordinates corresponds to a\n * fixed semi-random value (fixed only for the lifespan of the program; see\n * the noiseSeed() function). p5.js can compute 1D, 2D and 3D noise,\n * depending on the number of coordinates given. The resulting value will\n * always be between 0.0 and 1.0. The noise value can be animated by moving\n * through the noise space as demonstrated in the example above. The 2nd\n * and 3rd dimension can also be interpreted as time.<br /><br />The actual\n * noise is structured similar to an audio signal, in respect to the\n * function's use of frequencies. Similar to the concept of harmonics in\n * physics, perlin noise is computed over several octaves which are added\n * together for the final result. <br /><br />Another way to adjust the\n * character of the resulting sequence is the scale of the input\n * coordinates. As the function works within an infinite space the value of\n * the coordinates doesn't matter as such, only the distance between\n * successive coordinates does (eg. when using <b>noise()</b> within a\n * loop). As a general rule the smaller the difference between coordinates,\n * the smoother the resulting noise sequence will be. Steps of 0.005-0.03\n * work best for most applications, but this will differ depending on use.\n *\n *\n * @method noise\n * @param  {Number} x   x-coordinate in noise space\n * @param  {Number} y   y-coordinate in noise space\n * @param  {Number} z   z-coordinate in noise space\n * @return {Number}     Perlin noise value (between 0 and 1) at specified\n *                      coordinates\n * @example\n * <div>\n * <code>var xoff = 0.0;\n *\n * function draw() {\n *   background(204);\n *   xoff = xoff + .01;\n *   var n = noise(xoff) * width;\n *   line(n, 0, n, height);\n * }\n * </code>\n * </div>\n * <div>\n * <code>var noiseScale=0.02;\n *\n * function draw() {\n *   background(0);\n *   for (var x=0; x < width; x++) {\n *     var noiseVal = noise((mouseX+x)*noiseScale, mouseY*noiseScale);\n *     stroke(noiseVal*255);\n *     line(x, mouseY+noiseVal*80, x, height);\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * vertical line moves left to right with updating noise values.\n * horizontal wave pattern effected by mouse x-position & updating noise values.\n *\n */\n\np5.prototype.noise = function(x,y,z) {\n  y = y || 0;\n  z = z || 0;\n\n  if (perlin == null) {\n    perlin = new Array(PERLIN_SIZE + 1);\n    for (var i = 0; i < PERLIN_SIZE + 1; i++) {\n      perlin[i] = Math.random();\n    }\n  }\n\n  if (x<0) { x=-x; }\n  if (y<0) { y=-y; }\n  if (z<0) { z=-z; }\n\n  var xi=Math.floor(x), yi=Math.floor(y), zi=Math.floor(z);\n  var xf = x - xi;\n  var yf = y - yi;\n  var zf = z - zi;\n  var rxf, ryf;\n\n  var r=0;\n  var ampl=0.5;\n\n  var n1,n2,n3;\n\n  for (var o=0; o<perlin_octaves; o++) {\n    var of=xi+(yi<<PERLIN_YWRAPB)+(zi<<PERLIN_ZWRAPB);\n\n    rxf = scaled_cosine(xf);\n    ryf = scaled_cosine(yf);\n\n    n1  = perlin[of&PERLIN_SIZE];\n    n1 += rxf*(perlin[(of+1)&PERLIN_SIZE]-n1);\n    n2  = perlin[(of+PERLIN_YWRAP)&PERLIN_SIZE];\n    n2 += rxf*(perlin[(of+PERLIN_YWRAP+1)&PERLIN_SIZE]-n2);\n    n1 += ryf*(n2-n1);\n\n    of += PERLIN_ZWRAP;\n    n2  = perlin[of&PERLIN_SIZE];\n    n2 += rxf*(perlin[(of+1)&PERLIN_SIZE]-n2);\n    n3  = perlin[(of+PERLIN_YWRAP)&PERLIN_SIZE];\n    n3 += rxf*(perlin[(of+PERLIN_YWRAP+1)&PERLIN_SIZE]-n3);\n    n2 += ryf*(n3-n2);\n\n    n1 += scaled_cosine(zf)*(n2-n1);\n\n    r += n1*ampl;\n    ampl *= perlin_amp_falloff;\n    xi<<=1;\n    xf*=2;\n    yi<<=1;\n    yf*=2;\n    zi<<=1;\n    zf*=2;\n\n    if (xf>=1.0) { xi++; xf--; }\n    if (yf>=1.0) { yi++; yf--; }\n    if (zf>=1.0) { zi++; zf--; }\n  }\n  return r;\n};\n\n\n/**\n *\n * Adjusts the character and level of detail produced by the Perlin noise\n * function. Similar to harmonics in physics, noise is computed over\n * several octaves. Lower octaves contribute more to the output signal and\n * as such define the overall intensity of the noise, whereas higher octaves\n * create finer grained details in the noise sequence.\n * <br><br>\n * By default, noise is computed over 4 octaves with each octave contributing\n * exactly half than its predecessor, starting at 50% strength for the 1st\n * octave. This falloff amount can be changed by adding an additional function\n * parameter. Eg. a falloff factor of 0.75 means each octave will now have\n * 75% impact (25% less) of the previous lower octave. Any value between\n * 0.0 and 1.0 is valid, however note that values greater than 0.5 might\n * result in greater than 1.0 values returned by <b>noise()</b>.\n * <br><br>\n * By changing these parameters, the signal created by the <b>noise()</b>\n * function can be adapted to fit very specific needs and characteristics.\n *\n * @method noiseDetail\n * @param {Number} lod number of octaves to be used by the noise\n * @param {Number} falloff falloff factor for each octave\n * @example\n * <div>\n * <code>\n *\n * var noiseVal;\n * var noiseScale=0.02;\n *\n * function setup() {\n *   createCanvas(100,100);\n * }\n *\n * function draw() {\n *   background(0);\n *   for (var y = 0; y < height; y++) {\n *     for (var x = 0; x < width/2; x++) {\n *       noiseDetail(2,0.2);\n *       noiseVal = noise((mouseX+x) * noiseScale,\n *                        (mouseY+y) * noiseScale);\n *       stroke(noiseVal*255);\n *       point(x,y);\n *       noiseDetail(8,0.65);\n *       noiseVal = noise((mouseX + x + width/2) * noiseScale,\n *                        (mouseY + y) * noiseScale);\n *       stroke(noiseVal*255);\n *       point(x + width/2, y);\n *     }\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * 2 vertical grey smokey patterns affected my mouse x-position and noise.\n *\n */\np5.prototype.noiseDetail = function(lod, falloff) {\n  if (lod>0)     { perlin_octaves=lod; }\n  if (falloff>0) { perlin_amp_falloff=falloff; }\n};\n\n/**\n * Sets the seed value for <b>noise()</b>. By default, <b>noise()</b>\n * produces different results each time the program is run. Set the\n * <b>value</b> parameter to a constant to return the same pseudo-random\n * numbers each time the software is run.\n *\n * @method noiseSeed\n * @param {Number} seed   the seed value\n * @example\n * <div>\n * <code>var xoff = 0.0;\n *\n * function setup() {\n *   noiseSeed(99);\n *   stroke(0, 10);\n * }\n *\n * function draw() {\n *   xoff = xoff + .01;\n *   var n = noise(xoff) * width;\n *   line(n, 0, n, height);\n * }\n * </code>\n * </div>\n *\n * @alt\n * vertical grey lines drawing in pattern affected by noise.\n *\n */\np5.prototype.noiseSeed = function(seed) {\n  // Linear Congruential Generator\n  // Variant of a Lehman Generator\n  var lcg = (function() {\n    // Set to values from http://en.wikipedia.org/wiki/Numerical_Recipes\n    // m is basically chosen to be large (as it is the max period)\n    // and for its relationships to a and c\n    var m = 4294967296,\n    // a - 1 should be divisible by m's prime factors\n    a = 1664525,\n     // c and m should be co-prime\n    c = 1013904223,\n    seed, z;\n    return {\n      setSeed : function(val) {\n        // pick a random seed if val is undefined or null\n        // the >>> 0 casts the seed to an unsigned 32-bit integer\n        z = seed = (val == null ? Math.random() * m : val) >>> 0;\n      },\n      getSeed : function() {\n        return seed;\n      },\n      rand : function() {\n        // define the recurrence relationship\n        z = (a * z + c) % m;\n        // return a float in [0, 1)\n        // if z = m then z / m = 0 therefore (z % m) / m < 1 always\n        return z / m;\n      }\n    };\n  }());\n\n  lcg.setSeed(seed);\n  perlin = new Array(PERLIN_SIZE + 1);\n  for (var i = 0; i < PERLIN_SIZE + 1; i++) {\n    perlin[i] = lcg.rand();\n  }\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],66:[function(_dereq_,module,exports){\n/**\n * @module Math\n * @submodule Math\n * @requires constants\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar polarGeometry = _dereq_('./polargeometry');\nvar constants = _dereq_('../core/constants');\n\n/**\n * A class to describe a two or three dimensional vector, specifically\n * a Euclidean (also known as geometric) vector. A vector is an entity\n * that has both magnitude and direction. The datatype, however, stores\n * the components of the vector (x, y for 2D, and x, y, z for 3D). The magnitude\n * and direction can be accessed via the methods mag() and heading().\n * <br><br>\n * In many of the p5.js examples, you will see p5.Vector used to describe a\n * position, velocity, or acceleration. For example, if you consider a rectangle\n * moving across the screen, at any given instant it has a position (a vector\n * that points from the origin to its location), a velocity (the rate at which\n * the object's position changes per time unit, expressed as a vector), and\n * acceleration (the rate at which the object's velocity changes per time\n * unit, expressed as a vector).\n * <br><br>\n * Since vectors represent groupings of values, we cannot simply use\n * traditional addition/multiplication/etc. Instead, we'll need to do some\n * \"vector\" math, which is made easy by the methods inside the p5.Vector class.\n *\n * @class p5.Vector\n * @constructor\n * @param {Number} [x] x component of the vector\n * @param {Number} [y] y component of the vector\n * @param {Number} [z] z component of the vector\n * @example\n * <div>\n * <code>\n * var v1 = createVector(40, 50);\n * var v2 = createVector(40, 50);\n *\n * ellipse(v1.x, v1.y, 50, 50);\n * ellipse(v2.x, v2.y, 50, 50);\n * v1.add(v2);\n * ellipse(v1.x, v1.y, 50, 50);\n * </code>\n * </div>\n *\n * @alt\n * 2 white ellipses. One center-left the other bottom right and off canvas\n *\n */\np5.Vector = function() {\n  var x,y,z;\n  // This is how it comes in with createVector()\n  if(arguments[0] instanceof p5) {\n    // save reference to p5 if passed in\n    this.p5 = arguments[0];\n    x  = arguments[1][0] || 0;\n    y  = arguments[1][1] || 0;\n    z  = arguments[1][2] || 0;\n  // This is what we'll get with new p5.Vector()\n  } else {\n    x = arguments[0] || 0;\n    y = arguments[1] || 0;\n    z = arguments[2] || 0;\n  }\n  /**\n   * The x component of the vector\n   * @property x\n   * @type {Number}\n   */\n  this.x = x;\n  /**\n   * The y component of the vector\n   * @property y\n   * @type {Number}\n   */\n  this.y = y;\n  /**\n   * The z component of the vector\n   * @property z\n   * @type {Number}\n   */\n  this.z = z;\n};\n\n/**\n * Returns a string representation of a vector v by calling String(v)\n * or v.toString(). This method is useful for logging vectors in the\n * console.\n * @method  toString\n * @example\n * <div class = \"norender\"><code>\n * function setup() {\n *   var v = createVector(20,30);\n *   print(String(v)); // prints \"p5.Vector Object : [20, 30, 0]\"\n * }\n * </div></code>\n *\n */\np5.Vector.prototype.toString = function p5VectorToString() {\n  return 'p5.Vector Object : ['+ this.x +', '+ this.y +', '+ this.z + ']';\n};\n\n/**\n * Sets the x, y, and z component of the vector using two or three separate\n * variables, the data from a p5.Vector, or the values from a float array.\n * @method set\n *\n * @param {Number|p5.Vector|Array} [x] the x component of the vector or a\n *                                     p5.Vector or an Array\n * @param {Number}                 [y] the y component of the vector\n * @param {Number}                 [z] the z component of the vector\n * @example\n * <div class=\"norender\">\n * <code>\n * function setup() {\n *    var v = createVector(1, 2, 3);\n *    v.set(4,5,6); // Sets vector to [4, 5, 6]\n *\n *    var v1 = createVector(0, 0, 0);\n *    var arr = [1, 2, 3];\n *    v1.set(arr); // Sets vector to [1, 2, 3]\n * }\n * </code>\n * </div>\n */\np5.Vector.prototype.set = function (x, y, z) {\n  if (x instanceof p5.Vector) {\n    this.x = x.x || 0;\n    this.y = x.y || 0;\n    this.z = x.z || 0;\n    return this;\n  }\n  if (x instanceof Array) {\n    this.x = x[0] || 0;\n    this.y = x[1] || 0;\n    this.z = x[2] || 0;\n    return this;\n  }\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  return this;\n};\n\n/**\n * Gets a copy of the vector, returns a p5.Vector object.\n *\n * @method copy\n * @return {p5.Vector} the copy of the p5.Vector object\n * @example\n * <div class=\"norender\">\n * <code>\n * var v1 = createVector(1, 2, 3);\n * var v2 = v1.copy();\n * print(v1.x == v2.x && v1.y == v2.y && v1.z == v2.z);\n * // Prints \"true\"\n * </code>\n * </div>\n */\np5.Vector.prototype.copy = function () {\n  if (this.p5) {\n    return new p5.Vector(this.p5,[this.x, this.y, this.z]);\n  } else {\n    return new p5.Vector(this.x,this.y,this.z);\n  }\n};\n\n/**\n * Adds x, y, and z components to a vector, adds one vector to another, or\n * adds two independent vectors together. The version of the method that adds\n * two vectors together is a static method and returns a p5.Vector, the others\n * acts directly on the vector. See the examples for more context.\n *\n * @method add\n * @chainable\n * @param  {Number|p5.Vector|Array} x   the x component of the vector to be\n *                                      added or a p5.Vector or an Array\n * @param  {Number}                 [y] the y component of the vector to be\n *                                      added\n * @param  {Number}                 [z] the z component of the vector to be\n *                                      added\n * @return {p5.Vector}                  the p5.Vector object.\n * @example\n * <div class=\"norender\">\n * <code>\n * var v = createVector(1, 2, 3);\n * v.add(4,5,6);\n * // v's compnents are set to [5, 7, 9]\n * </code>\n * </div>\n * <div class=\"norender\">\n * <code>\n * // Static method\n * var v1 = createVector(1, 2, 3);\n * var v2 = createVector(2, 3, 4);\n *\n * var v3 = p5.Vector.add(v1, v2);\n * // v3 has components [3, 5, 7]\n * </code>\n * </div>\n */\np5.Vector.prototype.add = function (x, y, z) {\n  if (x instanceof p5.Vector) {\n    this.x += x.x || 0;\n    this.y += x.y || 0;\n    this.z += x.z || 0;\n    return this;\n  }\n  if (x instanceof Array) {\n    this.x += x[0] || 0;\n    this.y += x[1] || 0;\n    this.z += x[2] || 0;\n    return this;\n  }\n  this.x += x || 0;\n  this.y += y || 0;\n  this.z += z || 0;\n  return this;\n};\n\n/**\n * Subtracts x, y, and z components from a vector, subtracts one vector from\n * another, or subtracts two independent vectors. The version of the method\n * that subtracts two vectors is a static method and returns a p5.Vector, the\n * other acts directly on the vector. See the examples for more context.\n *\n * @method sub\n * @chainable\n * @param  {Number|p5.Vector|Array} x   the x component of the vector or a\n *                                      p5.Vector or an Array\n * @param  {Number}                 [y] the y component of the vector\n * @param  {Number}                 [z] the z component of the vector\n * @return {p5.Vector}                  p5.Vector object.\n * @example\n * <div class=\"norender\">\n * <code>\n * var v = createVector(4, 5, 6);\n * v.sub(1, 1, 1);\n * // v's compnents are set to [3, 4, 5]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // Static method\n * var v1 = createVector(2, 3, 4);\n * var v2 = createVector(1, 2, 3);\n *\n * var v3 = p5.Vector.sub(v1, v2);\n * // v3 has compnents [1, 1, 1]\n * </code>\n * </div>\n */\np5.Vector.prototype.sub = function (x, y, z) {\n  if (x instanceof p5.Vector) {\n    this.x -= x.x || 0;\n    this.y -= x.y || 0;\n    this.z -= x.z || 0;\n    return this;\n  }\n  if (x instanceof Array) {\n    this.x -= x[0] || 0;\n    this.y -= x[1] || 0;\n    this.z -= x[2] || 0;\n    return this;\n  }\n  this.x -= x || 0;\n  this.y -= y || 0;\n  this.z -= z || 0;\n  return this;\n};\n\n/**\n * Multiply the vector by a scalar. The static version of this method\n * creates a new p5.Vector while the non static version acts on the vector\n * directly. See the examples for more context.\n *\n * @method mult\n * @chainable\n * @param  {Number}    n the number to multiply with the vector\n * @return {p5.Vector} a reference to the p5.Vector object (allow chaining)\n * @example\n * <div class=\"norender\">\n * <code>\n * var v = createVector(1, 2, 3);\n * v.mult(2);\n * // v's compnents are set to [2, 4, 6]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // Static method\n * var v1 = createVector(1, 2, 3);\n * var v2 = p5.Vector.mult(v1, 2);\n * // v2 has compnents [2, 4, 6]\n * </code>\n * </div>\n */\np5.Vector.prototype.mult = function (n) {\n  this.x *= n || 0;\n  this.y *= n || 0;\n  this.z *= n || 0;\n  return this;\n};\n\n/**\n * Divide the vector by a scalar. The static version of this method creates a\n * new p5.Vector while the non static version acts on the vector directly.\n * See the examples for more context.\n *\n * @method div\n * @chainable\n * @param  {number}    n the number to divide the vector by\n * @return {p5.Vector} a reference to the p5.Vector object (allow chaining)\n * @example\n * <div class=\"norender\">\n * <code>\n * var v = createVector(6, 4, 2);\n * v.div(2); //v's compnents are set to [3, 2, 1]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // Static method\n * var v1  = createVector(6, 4, 2);\n * var v2 = p5.Vector.div(v, 2);\n * // v2 has compnents [3, 2, 1]\n * </code>\n * </div>\n */\np5.Vector.prototype.div = function (n) {\n  this.x /= n;\n  this.y /= n;\n  this.z /= n;\n  return this;\n};\n\n/**\n * Calculates the magnitude (length) of the vector and returns the result as\n * a float (this is simply the equation sqrt(x*x + y*y + z*z).)\n *\n * @method mag\n * @return {Number} magnitude of the vector\n * @example\n * <div class=\"norender\">\n * <code>\n * var v = createVector(20.0, 30.0, 40.0);\n * var m = v.mag();\n * print(m); // Prints \"53.85164807134504\"\n * </code>\n * </div>\n */\np5.Vector.prototype.mag = function () {\n  return Math.sqrt(this.magSq());\n};\n\n/**\n * Calculates the squared magnitude of the vector and returns the result\n * as a float (this is simply the equation <em>(x*x + y*y + z*z)</em>.)\n * Faster if the real length is not required in the\n * case of comparing vectors, etc.\n *\n * @method magSq\n * @return {number} squared magnitude of the vector\n * @example\n * <div class=\"norender\">\n * <code>\n * // Static method\n * var v1 = createVector(6, 4, 2);\n * print(v1.magSq()); // Prints \"56\"\n * </code>\n * </div>\n */\np5.Vector.prototype.magSq = function () {\n  var x = this.x, y = this.y, z = this.z;\n  return (x * x + y * y + z * z);\n};\n\n/**\n * Calculates the dot product of two vectors. The version of the method\n * that computes the dot product of two independent vectors is a static\n * method. See the examples for more context.\n *\n *\n * @method dot\n * @param  {Number|p5.Vector} x   x component of the vector or a p5.Vector\n * @param  {Number}           [y] y component of the vector\n * @param  {Number}           [z] z component of the vector\n * @return {Number}                 the dot product\n *\n * @example\n * <div class=\"norender\">\n * <code>\n * var v1 = createVector(1, 2, 3);\n * var v2 = createVector(2, 3, 4);\n *\n * print(v1.dot(v2)); // Prints \"20\"\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * //Static method\n * var v1 = createVector(1, 2, 3);\n * var v2 = createVector(3, 2, 1);\n * print (p5.Vector.dot(v1, v2)); // Prints \"10\"\n * </code>\n * </div>\n */\np5.Vector.prototype.dot = function (x, y, z) {\n  if (x instanceof p5.Vector) {\n    return this.dot(x.x, x.y, x.z);\n  }\n  return this.x * (x || 0) +\n         this.y * (y || 0) +\n         this.z * (z || 0);\n};\n\n/**\n * Calculates and returns a vector composed of the cross product between\n * two vectors. Both the static and non static methods return a new p5.Vector.\n * See the examples for more context.\n *\n * @method cross\n * @param  {p5.Vector} v p5.Vector to be crossed\n * @return {p5.Vector}   p5.Vector composed of cross product\n * @example\n * <div class=\"norender\">\n * <code>\n * var v1 = createVector(1, 2, 3);\n * var v2 = createVector(1, 2, 3);\n *\n * v1.cross(v2); // v's components are [0, 0, 0]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * // Static method\n * var v1 = createVector(1, 0, 0);\n * var v2 = createVector(0, 1, 0);\n *\n * var crossProduct = p5.Vector.cross(v1, v2);\n * // crossProduct has components [0, 0, 1]\n * </code>\n * </div>\n */\np5.Vector.prototype.cross = function (v) {\n  var x = this.y * v.z - this.z * v.y;\n  var y = this.z * v.x - this.x * v.z;\n  var z = this.x * v.y - this.y * v.x;\n  if (this.p5) {\n    return new p5.Vector(this.p5,[x,y,z]);\n  } else {\n    return new p5.Vector(x,y,z);\n  }\n};\n\n/**\n * Calculates the Euclidean distance between two points (considering a\n * point as a vector object).\n *\n * @method dist\n * @param  {p5.Vector} v the x, y, and z coordinates of a p5.Vector\n * @return {Number}      the distance\n * @example\n * <div class=\"norender\">\n * <code>\n * var v1 = createVector(1, 0, 0);\n * var v2 = createVector(0, 1, 0);\n *\n * var distance = v1.dist(v2); // distance is 1.4142...\n * </code>\n * </div>\n * <div class=\"norender\">\n * <code>\n * // Static method\n * var v1 = createVector(1, 0, 0);\n * var v2 = createVector(0, 1, 0);\n *\n * var distance = p5.Vector.dist(v1,v2);\n * // distance is 1.4142...\n * </code>\n * </div>\n */\np5.Vector.prototype.dist = function (v) {\n  var d = v.copy().sub(this);\n  return d.mag();\n};\n\n/**\n * Normalize the vector to length 1 (make it a unit vector).\n *\n * @method normalize\n * @return {p5.Vector} normalized p5.Vector\n * @example\n * <div class=\"norender\">\n * <code>\n * var v = createVector(10, 20, 2);\n * // v has compnents [10.0, 20.0, 2.0]\n * v.normalize();\n * // v's compnents are set to\n * // [0.4454354, 0.8908708, 0.089087084]\n * </code>\n * </div>\n *\n */\np5.Vector.prototype.normalize = function () {\n  return this.mag() === 0 ? this : this.div(this.mag());\n};\n\n/**\n * Limit the magnitude of this vector to the value used for the <b>max</b>\n * parameter.\n *\n * @method limit\n * @param  {Number}    max the maximum magnitude for the vector\n * @return {p5.Vector}     the modified p5.Vector\n * @example\n * <div class=\"norender\">\n * <code>\n * var v = createVector(10, 20, 2);\n * // v has compnents [10.0, 20.0, 2.0]\n * v.limit(5);\n * // v's compnents are set to\n * // [2.2271771, 4.4543543, 0.4454354]\n * </code>\n * </div>\n */\np5.Vector.prototype.limit = function (max) {\n  var mSq = this.magSq();\n  if(mSq > max*max) {\n    this.div(Math.sqrt(mSq)); //normalize it\n    this.mult(max);\n  }\n  return this;\n};\n\n/**\n * Set the magnitude of this vector to the value used for the <b>len</b>\n * parameter.\n *\n * @method setMag\n * @param  {number}    len the new length for this vector\n * @return {p5.Vector}     the modified p5.Vector\n * @example\n * <div class=\"norender\">\n * <code>\n * var v1 = createVector(10, 20, 2);\n * // v has compnents [10.0, 20.0, 2.0]\n * v1.setMag(10);\n * // v's compnents are set to [6.0, 8.0, 0.0]\n * </code>\n * </div>\n */\np5.Vector.prototype.setMag = function (n) {\n  return this.normalize().mult(n);\n};\n\n/**\n * Calculate the angle of rotation for this vector (only 2D vectors)\n *\n * @method heading\n * @return {Number} the angle of rotation\n * @example\n * <div class = \"norender\"><code>\n * function setup() {\n *   var v1 = createVector(30,50);\n *   print(v1.heading()); // 1.0303768265243125\n *\n *   var v1 = createVector(40,50);\n *   print(v1.heading()); // 0.8960553845713439\n *\n *   var v1 = createVector(30,70);\n *   print(v1.heading()); // 1.1659045405098132\n * }\n * </div></code>\n */\np5.Vector.prototype.heading = function () {\n  var h = Math.atan2(this.y, this.x);\n  if (this.p5) {\n    if (this.p5._angleMode === constants.RADIANS) {\n      return h;\n    } else {\n      return polarGeometry.radiansToDegrees(h);\n    }\n  } else {\n    return h;\n  }\n};\n\n/**\n * Rotate the vector by an angle (only 2D vectors), magnitude remains the\n * same\n *\n * @method rotate\n * @param  {number}    angle the angle of rotation\n * @return {p5.Vector} the modified p5.Vector\n * @example\n * <div class=\"norender\">\n * <code>\n * var v = createVector(10.0, 20.0);\n * // v has compnents [10.0, 20.0, 0.0]\n * v.rotate(HALF_PI);\n * // v's compnents are set to [-20.0, 9.999999, 0.0]\n * </code>\n * </div>\n */\np5.Vector.prototype.rotate = function (a) {\n  if (this.p5) {\n    if (this.p5._angleMode === constants.DEGREES) {\n      a = polarGeometry.degreesToRadians(a);\n    }\n  }\n  var newHeading = this.heading() + a;\n  var mag = this.mag();\n  this.x = Math.cos(newHeading) * mag;\n  this.y = Math.sin(newHeading) * mag;\n  return this;\n};\n\n/**\n * Linear interpolate the vector to another vector\n *\n * @method lerp\n * @param  {p5.Vector} x   the x component or the p5.Vector to lerp to\n * @param  {p5.Vector} [y] y the y component\n * @param  {p5.Vector} [z] z the z component\n * @param  {Number}    amt the amount of interpolation; some value between 0.0\n *                         (old vector) and 1.0 (new vector). 0.1 is very near\n *                         the new vector. 0.5 is halfway in between.\n * @return {p5.Vector}     the modified p5.Vector\n * @example\n * <div class=\"norender\">\n * <code>\n * var v = createVector(1, 1, 0);\n *\n * v.lerp(3, 3, 0, 0.5); // v now has components [2,2,0]\n * </code>\n * </div>\n *\n * <div class=\"norender\">\n * <code>\n * var v1 = createVector(0, 0, 0);\n * var v2 = createVector(100, 100, 0);\n *\n * var v3 = p5.Vector.lerp(v1, v2, 0.5);\n * // v3 has components [50,50,0]\n * </code>\n * </div>\n */\np5.Vector.prototype.lerp = function (x, y, z, amt) {\n  if (x instanceof p5.Vector) {\n    return this.lerp(x.x, x.y, x.z, y);\n  }\n  this.x += (x - this.x) * amt || 0;\n  this.y += (y - this.y) * amt || 0;\n  this.z += (z - this.z) * amt || 0;\n  return this;\n};\n\n/**\n * Return a representation of this vector as a float array. This is only\n * for temporary use. If used in any other fashion, the contents should be\n * copied by using the <b>p5.Vector.copy()</b> method to copy into your own\n * array.\n *\n * @method array\n * @return {Array} an Array with the 3 values\n * @example\n * <div class = \"norender\"><code>\n * function setup() {\n *   var v = createVector(20,30);\n *   print(v.array()); // Prints : Array [20, 30, 0]\n * }\n * </div></code>\n * <div class=\"norender\">\n * <code>\n * var v = createVector(10.0, 20.0, 30.0);\n * var f = v.array();\n * print(f[0]); // Prints \"10.0\"\n * print(f[1]); // Prints \"20.0\"\n * print(f[2]); // Prints \"30.0\"\n * </code>\n * </div>\n */\np5.Vector.prototype.array = function () {\n  return [this.x || 0, this.y || 0, this.z || 0];\n};\n\n/**\n * Equality check against a p5.Vector\n *\n * @method equals\n * @param {Number|p5.Vector|Array} [x] the x component of the vector or a\n *                                     p5.Vector or an Array\n * @param {Number}                 [y] the y component of the vector\n * @param {Number}                 [z] the z component of the vector\n * @return {Boolean} whether the vectors are equals\n * @example\n * <div class = \"norender\"><code>\n * v1 = createVector(5,10,20);\n * v2 = createVector(5,10,20);\n * v3 = createVector(13,10,19);\n *\n * print(v1.equals(v2.x,v2.y,v2.z)); // true\n * print(v1.equals(v3.x,v3.y,v3.z)); // false\n * </div></code>\n * <div class=\"norender\">\n * <code>\n * var v1 = createVector(10.0, 20.0, 30.0);\n * var v2 = createVector(10.0, 20.0, 30.0);\n * var v3 = createVector(0.0, 0.0, 0.0);\n * print (v1.equals(v2)) // true\n * print (v1.equals(v3)) // false\n * </code>\n * </div>\n */\np5.Vector.prototype.equals = function (x, y, z) {\n  var a, b, c;\n  if (x instanceof p5.Vector) {\n    a = x.x || 0;\n    b = x.y || 0;\n    c = x.z || 0;\n  } else if (x instanceof Array) {\n    a = x[0] || 0;\n    b = x[1] || 0;\n    c = x[2] || 0;\n  } else {\n    a = x || 0;\n    b = y || 0;\n    c = z || 0;\n  }\n  return this.x === a && this.y === b && this.z === c;\n};\n\n\n// Static Methods\n\n\n/**\n * Make a new 2D unit vector from an angle\n *\n * @method fromAngle\n * @static\n * @param {Number}     angle the desired angle\n * @return {p5.Vector}       the new p5.Vector object\n * @example\n * <div>\n * <code>\n * function draw() {\n *   background (200);\n *\n *   // Create a variable, proportional to the mouseX,\n *   // varying from 0-360, to represent an angle in degrees.\n *   angleMode(DEGREES);\n *   var myDegrees = map(mouseX, 0,width, 0,360);\n *\n *   // Display that variable in an onscreen text.\n *   // (Note the nfc() function to truncate additional decimal places,\n *   // and the \"\\xB0\" character for the degree symbol.)\n *   var readout = \"angle = \" + nfc(myDegrees,1,1) + \"\\xB0\"\n *   noStroke();\n *   fill (0);\n *   text (readout, 5, 15);\n *\n *   // Create a p5.Vector using the fromAngle function,\n *   // and extract its x and y components.\n *   var v = p5.Vector.fromAngle(radians(myDegrees));\n *   var vx = v.x;\n *   var vy = v.y;\n *\n *   push();\n *   translate (width/2, height/2);\n *   noFill();\n *   stroke (150);\n *   line (0,0, 30,0);\n *   stroke (0);\n *   line (0,0, 30*vx, 30*vy);\n *   pop()\n * }\n * </code>\n * </div>\n */\np5.Vector.fromAngle = function(angle) {\n  if (this.p5) {\n    if (this.p5._angleMode === constants.DEGREES) {\n      angle = polarGeometry.degreesToRadians(angle);\n    }\n  }\n  if (this.p5) {\n    return new p5.Vector(this.p5,[Math.cos(angle),Math.sin(angle),0]);\n  } else {\n    return new p5.Vector(Math.cos(angle),Math.sin(angle),0);\n  }\n};\n\n/**\n * Make a new 2D unit vector from a random angle\n *\n * @method random2D\n * @static\n * @return {p5.Vector} the new p5.Vector object\n * @example\n * <div class=\"norender\">\n * <code>\n * var v = p5.Vector.random2D();\n * // May make v's attributes something like:\n * // [0.61554617, -0.51195765, 0.0] or\n * // [-0.4695841, -0.14366731, 0.0] or\n * // [0.6091097, -0.22805278, 0.0]\n * </code>\n * </div>\n */\np5.Vector.random2D = function () {\n  var angle;\n  // A lot of nonsense to determine if we know about a\n  // p5 sketch and whether we should make a random angle in degrees or radians\n  if (this.p5) {\n    if (this.p5._angleMode === constants.DEGREES) {\n      angle = this.p5.random(360);\n    } else {\n      angle = this.p5.random(constants.TWO_PI);\n    }\n  } else {\n    angle = Math.random()*Math.PI*2;\n  }\n  return this.fromAngle(angle);\n};\n\n/**\n * Make a new random 3D unit vector.\n *\n * @method random3D\n * @static\n * @return {p5.Vector} the new p5.Vector object\n * @example\n * <div class=\"norender\">\n * <code>\n * var v = p5.Vector.random3D();\n * // May make v's attributes something like:\n * // [0.61554617, -0.51195765, 0.599168] or\n * // [-0.4695841, -0.14366731, -0.8711202] or\n * // [0.6091097, -0.22805278, -0.7595902]\n * </code>\n * </div>\n */\np5.Vector.random3D = function () {\n  var angle,vz;\n  // If we know about p5\n  if (this.p5) {\n    angle = this.p5.random(0,constants.TWO_PI);\n    vz = this.p5.random(-1,1);\n  } else {\n    angle = Math.random()*Math.PI*2;\n    vz = Math.random()*2-1;\n  }\n  var vx = Math.sqrt(1-vz*vz)*Math.cos(angle);\n  var vy = Math.sqrt(1-vz*vz)*Math.sin(angle);\n  if (this.p5) {\n    return new p5.Vector(this.p5,[vx,vy,vz]);\n  } else {\n    return new p5.Vector(vx,vy,vz);\n  }\n};\n\n\n/**\n * Adds two vectors together and returns a new one.\n *\n * @static\n * @param  {p5.Vector} v1 a p5.Vector to add\n * @param  {p5.Vector} v2 a p5.Vector to add\n * @param  {p5.Vector} target if undefined a new vector will be created\n * @return {p5.Vector} the resulting p5.Vector\n *\n */\n\np5.Vector.add = function (v1, v2, target) {\n  if (!target) {\n    target = v1.copy();\n  } else {\n    target.set(v1);\n  }\n  target.add(v2);\n  return target;\n};\n\n/**\n * Subtracts one p5.Vector from another and returns a new one.  The second\n * vector (v2) is subtracted from the first (v1), resulting in v1-v2.\n *\n * @static\n * @param  {p5.Vector} v1 a p5.Vector to subtract from\n * @param  {p5.Vector} v2 a p5.Vector to subtract\n * @param  {p5.Vector} target if undefined a new vector will be created\n * @return {p5.Vector} the resulting p5.Vector\n */\n\np5.Vector.sub = function (v1, v2, target) {\n  if (!target) {\n    target = v1.copy();\n  } else {\n    target.set(v1);\n  }\n  target.sub(v2);\n  return target;\n};\n\n\n/**\n * Multiplies a vector by a scalar and returns a new vector.\n *\n * @static\n * @param  {p5.Vector} v the p5.Vector to multiply\n * @param  {Number}  n the scalar\n * @param  {p5.Vector} target if undefined a new vector will be created\n * @return {p5.Vector}  the resulting new p5.Vector\n */\np5.Vector.mult = function (v, n, target) {\n  if (!target) {\n    target = v.copy();\n  } else {\n    target.set(v);\n  }\n  target.mult(n);\n  return target;\n};\n\n/**\n * Divides a vector by a scalar and returns a new vector.\n *\n * @static\n * @param  {p5.Vector} v the p5.Vector to divide\n * @param  {Number}  n the scalar\n * @param  {p5.Vector} target if undefined a new vector will be created\n * @return {p5.Vector} the resulting new p5.Vector\n */\np5.Vector.div = function (v, n, target) {\n  if (!target) {\n    target = v.copy();\n  } else {\n    target.set(v);\n  }\n  target.div(n);\n  return target;\n};\n\n\n/**\n * Calculates the dot product of two vectors.\n *\n * @static\n * @param  {p5.Vector} v1 the first p5.Vector\n * @param  {p5.Vector} v2 the second p5.Vector\n * @return {Number}     the dot product\n */\np5.Vector.dot = function (v1, v2) {\n  return v1.dot(v2);\n};\n\n/**\n * Calculates the cross product of two vectors.\n *\n * @static\n * @param  {p5.Vector} v1 the first p5.Vector\n * @param  {p5.Vector} v2 the second p5.Vector\n * @return {Number}     the cross product\n */\np5.Vector.cross = function (v1, v2) {\n  return v1.cross(v2);\n};\n\n/**\n * Calculates the Euclidean distance between two points (considering a\n * point as a vector object).\n *\n * @static\n * @param  {p5.Vector} v1 the first p5.Vector\n * @param  {p5.Vector} v2 the second p5.Vector\n * @return {Number}     the distance\n */\np5.Vector.dist = function (v1,v2) {\n  return v1.dist(v2);\n};\n\n/**\n * Linear interpolate a vector to another vector and return the result as a\n * new vector.\n *\n * @static\n * @param {p5.Vector} v1 a starting p5.Vector\n * @param {p5.Vector} v2 the p5.Vector to lerp to\n * @param {Number}       the amount of interpolation; some value between 0.0\n *                       (old vector) and 1.0 (new vector). 0.1 is very near\n *                       the new vector. 0.5 is halfway in between.\n */\np5.Vector.lerp = function (v1, v2, amt, target) {\n  if (!target) {\n    target = v1.copy();\n  } else {\n    target.set(v1);\n  }\n  target.lerp(v2, amt);\n  return target;\n};\n\n/**\n * Calculates and returns the angle (in radians) between two vectors.\n * @method angleBetween\n * @static\n * @param  {p5.Vector} v1 the x, y, and z components of a p5.Vector\n * @param  {p5.Vector} v2 the x, y, and z components of a p5.Vector\n * @return {Number}       the angle between (in radians)\n * @example\n * <div class=\"norender\">\n * <code>\n * var v1 = createVector(1, 0, 0);\n * var v2 = createVector(0, 1, 0);\n *\n * var angle = p5.Vector.angleBetween(v1, v2);\n * // angle is PI/2\n * </code>\n * </div>\n */\np5.Vector.angleBetween = function (v1, v2) {\n  var angle = Math.acos(v1.dot(v2) / (v1.mag() * v2.mag()));\n  if (this.p5) {\n    if (this.p5._angleMode === constants.DEGREES) {\n      angle = polarGeometry.radiansToDegrees(angle);\n    }\n  }\n  return angle;\n};\n\n/**\n * @static\n */\np5.Vector.mag = function (vecT){\n  var x = vecT.x,\n    y = vecT.y,\n    z = vecT.z;\n  var magSq = x * x + y * y + z * z;\n  return Math.sqrt(magSq);\n};\n\nmodule.exports = p5.Vector;\n\n},{\"../core/constants\":36,\"../core/core\":37,\"./polargeometry\":67}],67:[function(_dereq_,module,exports){\n\nmodule.exports = {\n\n  degreesToRadians: function(x) {\n    return 2 * Math.PI * x / 360;\n  },\n\n  radiansToDegrees: function(x) {\n    return 360 * x / (2 * Math.PI);\n  }\n\n};\n\n},{}],68:[function(_dereq_,module,exports){\n/**\n * @module Math\n * @submodule Random\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\nvar seeded = false;\n\n// Linear Congruential Generator\n// Variant of a Lehman Generator\nvar lcg = (function() {\n  // Set to values from http://en.wikipedia.org/wiki/Numerical_Recipes\n  // m is basically chosen to be large (as it is the max period)\n  // and for its relationships to a and c\n  var m = 4294967296,\n    // a - 1 should be divisible by m's prime factors\n    a = 1664525,\n    // c and m should be co-prime\n    c = 1013904223,\n    seed, z;\n  return {\n    setSeed : function(val) {\n      // pick a random seed if val is undefined or null\n      // the >>> 0 casts the seed to an unsigned 32-bit integer\n      z = seed = (val == null ? Math.random() * m : val) >>> 0;\n    },\n    getSeed : function() {\n      return seed;\n    },\n    rand : function() {\n      // define the recurrence relationship\n      z = (a * z + c) % m;\n      // return a float in [0, 1)\n      // if z = m then z / m = 0 therefore (z % m) / m < 1 always\n      return z / m;\n    }\n  };\n}());\n\n/**\n * Sets the seed value for random().\n *\n * By default, random() produces different results each time the program\n * is run. Set the seed parameter to a constant to return the same\n * pseudo-random numbers each time the software is run.\n *\n * @method randomSeed\n * @param {Number} seed   the seed value\n * @example\n * <div>\n * <code>\n * randomSeed(99);\n * for (var i=0; i < 100; i++) {\n *   var r = random(0, 255);\n *   stroke(r);\n *   line(i, 0, i, 100);\n * }\n * </code>\n * </div>\n *\n * @alt\n * many vertical lines drawn in white, black or grey.\n *\n */\np5.prototype.randomSeed = function(seed) {\n  lcg.setSeed(seed);\n  seeded = true;\n};\n\n/**\n * Return a random floating-point number.\n *\n * Takes either 0, 1 or 2 arguments.\n *\n * If no argument is given, returns a random number from 0\n * up to (but not including) 1.\n *\n * If one argument is given and it is a number, returns a random number from 0\n * up to (but not including) the number.\n *\n * If one argument is given and it is an array, returns a random element from\n * that array.\n *\n * If two arguments are given, returns a random number from the\n * first argument up to (but not including) the second argument.\n *\n * @method random\n * @param  {Number} [min]   the lower bound (inclusive)\n * @param  {Number} [max]   the upper bound (exclusive)\n * @return {Number|mixed} the random number or a random element in choices\n * @example\n * <div>\n * <code>\n * for (var i = 0; i < 100; i++) {\n *   var r = random(50);\n *   stroke(r*5);\n *   line(50, i, 50+r, i);\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * for (var i = 0; i < 100; i++) {\n *   var r = random(-50, 50);\n *   line(50,i,50+r,i);\n * }\n * </code>\n * </div>\n * <div>\n * <code>\n * // Get a random element from an array using the random(Array) syntax\n * var words = [ \"apple\", \"bear\", \"cat\", \"dog\" ];\n * var word = random(words);  // select random word\n * text(word,10,50);  // draw the word\n * </code>\n * </div>\n *\n * @alt\n * 100 horizontal lines from center canvas to right. size+fill change each time\n * 100 horizontal lines from center of canvas. height & side change each render\n * word displayed at random. Either apple, bear, cat, or dog\n *\n */\n/**\n * @method random\n * @param  {Array} choices   the array to choose from\n * @return {mixed} the random element from the array\n * @example\n */\np5.prototype.random = function (min, max) {\n\n  var rand;\n\n  if (seeded) {\n    rand  = lcg.rand();\n  } else {\n    rand = Math.random();\n  }\n  if (typeof min === 'undefined') {\n    return rand;\n  } else\n  if (typeof max === 'undefined') {\n    if (min instanceof Array) {\n      return min[Math.floor(rand * min.length)];\n    } else {\n      return rand * min;\n    }\n  } else {\n    if (min > max) {\n      var tmp = min;\n      min = max;\n      max = tmp;\n    }\n\n    return rand * (max-min) + min;\n  }\n};\n\n\n/**\n *\n * Returns a random number fitting a Gaussian, or\n * normal, distribution. There is theoretically no minimum or maximum\n * value that randomGaussian() might return. Rather, there is\n * just a very low probability that values far from the mean will be\n * returned; and a higher probability that numbers near the mean will\n * be returned.\n * <br><br>\n * Takes either 0, 1 or 2 arguments.<br>\n * If no args, returns a mean of 0 and standard deviation of 1.<br>\n * If one arg, that arg is the mean (standard deviation is 1).<br>\n * If two args, first is mean, second is standard deviation.\n *\n * @method randomGaussian\n * @param  {Number} mean  the mean\n * @param  {Number} sd    the standard deviation\n * @return {Number} the random number\n * @example\n * <div>\n * <code>for (var y = 0; y < 100; y++) {\n *  var x = randomGaussian(50,15);\n *  line(50, y, x, y);\n *}\n * </code>\n * </div>\n * <div>\n * <code>\n *var distribution = new Array(360);\n *\n *function setup() {\n *  createCanvas(100, 100);\n *  for (var i = 0; i < distribution.length; i++) {\n *    distribution[i] = floor(randomGaussian(0,15));\n *  }\n *}\n *\n *function draw() {\n *  background(204);\n *\n *  translate(width/2, width/2);\n *\n *  for (var i = 0; i < distribution.length; i++) {\n *    rotate(TWO_PI/distribution.length);\n *    stroke(0);\n *    var dist = abs(distribution[i]);\n *    line(0, 0, dist, 0);\n *  }\n *}\n * </code>\n * </div>\n * @alt\n * 100 horizontal lines from center of canvas. height & side change each render\n * black lines radiate from center of canvas. size determined each render\n */\nvar y2;\nvar previous = false;\np5.prototype.randomGaussian = function(mean, sd)  {\n  var y1,x1,x2,w;\n  if (previous) {\n    y1 = y2;\n    previous = false;\n  } else {\n    do {\n      x1 = this.random(2) - 1;\n      x2 = this.random(2) - 1;\n      w = x1 * x1 + x2 * x2;\n    } while (w >= 1);\n    w = Math.sqrt((-2 * Math.log(w))/w);\n    y1 = x1 * w;\n    y2 = x2 * w;\n    previous = true;\n  }\n\n  var m = mean || 0;\n  var s = sd || 1;\n  return y1*s + m;\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],69:[function(_dereq_,module,exports){\n/**\n * @module Math\n * @submodule Trigonometry\n * @for p5\n * @requires core\n * @requires polargeometry\n * @requires constants\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar polarGeometry = _dereq_('./polargeometry');\nvar constants = _dereq_('../core/constants');\n\np5.prototype._angleMode = constants.RADIANS;\n\n/**\n * The inverse of cos(), returns the arc cosine of a value. This function\n * expects the values in the range of -1 to 1 and values are returned in\n * the range 0 to PI (3.1415927).\n *\n * @method acos\n * @param  {Number} value the value whose arc cosine is to be returned\n * @return {Number}       the arc cosine of the given value\n *\n * @example\n * <div class= “norender\">\n * <code>\n * var a = PI;\n * var c = cos(a);\n * var ac = acos(c);\n * // Prints: \"3.1415927 : -1.0 : 3.1415927\"\n * print(a + \" : \" + c + \" : \" +  ac);\n * </code>\n * </div>\n *\n * <div class= “norender\">\n * <code>\n * var a = PI + PI/4.0;\n * var c = cos(a);\n * var ac = acos(c);\n * // Prints: \"3.926991 : -0.70710665 : 2.3561943\"\n * print(a + \" : \" + c + \" : \" +  ac);\n * </code>\n * </div>\n */\np5.prototype.acos = function(ratio) {\n  if (this._angleMode === constants.RADIANS) {\n    return Math.acos(ratio);\n  } else {\n    return polarGeometry.radiansToDegrees(Math.acos(ratio));\n  }\n};\n\n/**\n * The inverse of sin(), returns the arc sine of a value. This function\n * expects the values in the range of -1 to 1 and values are returned\n * in the range -PI/2 to PI/2.\n *\n * @method asin\n * @param  {Number} value the value whose arc sine is to be returned\n * @return {Number}       the arc sine of the given value\n *\n * @example\n * <div class= “norender\">\n * <code>\n * var a = PI + PI/3;\n * var s = sin(a);\n * var as = asin(s);\n * // Prints: \"1.0471976 : 0.86602545 : 1.0471976\"\n * print(a + \" : \" + s + \" : \" +  as);\n * </code>\n * </div>\n *\n * <div class= “norender\">\n * <code>\n * var a = PI + PI/3.0;\n * var s = sin(a);\n * var as = asin(s);\n * // Prints: \"4.1887903 : -0.86602545 : -1.0471976\"\n * print(a + \" : \" + s + \" : \" +  as);\n * </code>\n * </div>\n *\n */\np5.prototype.asin = function(ratio) {\n  if (this._angleMode === constants.RADIANS) {\n    return Math.asin(ratio);\n  } else {\n    return polarGeometry.radiansToDegrees(Math.asin(ratio));\n  }\n};\n\n/**\n * The inverse of tan(), returns the arc tangent of a value. This function\n * expects the values in the range of -Infinity to Infinity (exclusive) and\n * values are returned in the range -PI/2 to PI/2.\n *\n * @method atan\n * @param  {Number} value the value whose arc tangent is to be returned\n * @return {Number}       the arc tangent of the given value\n *\n * @example\n * <div class= “norender\">\n * <code>\n * var a = PI + PI/3;\n * var t = tan(a);\n * var at = atan(t);\n * // Prints: \"1.0471976 : 1.7320509 : 1.0471976\"\n * print(a + \" : \" + t + \" : \" +  at);\n * </code>\n * </div>\n *\n * <div class= “norender\">\n * <code>\n * var a = PI + PI/3.0;\n * var t = tan(a);\n * var at = atan(t);\n * // Prints: \"4.1887903 : 1.7320513 : 1.0471977\"\n * print(a + \" : \" + t + \" : \" +  at);\n * </code>\n * </div>\n *\n */\np5.prototype.atan = function(ratio) {\n  if (this._angleMode === constants.RADIANS) {\n    return Math.atan(ratio);\n  } else {\n    return polarGeometry.radiansToDegrees(Math.atan(ratio));\n  }\n};\n\n/**\n * Calculates the angle (in radians) from a specified point to the coordinate\n * origin as measured from the positive x-axis. Values are returned as a\n * float in the range from PI to -PI. The atan2() function is most often used\n * for orienting geometry to the position of the cursor.\n * <br><br>\n * Note: The y-coordinate of the point is the first parameter, and the\n * x-coordinate is the second parameter, due the the structure of calculating\n * the tangent.\n *\n * @method atan2\n * @param  {Number} y y-coordinate of the point\n * @param  {Number} x x-coordinate of the point\n * @return {Number}   the arc tangent of the given point\n *\n * @example\n * <div>\n * <code>\n * function draw() {\n *   background(204);\n *   translate(width/2, height/2);\n *   var a = atan2(mouseY-height/2, mouseX-width/2);\n *   rotate(a);\n *   rect(-30, -5, 60, 10);\n * }\n * </code>\n * </div>\n *\n * @alt\n * 60 by 10 rect at center of canvas rotates with mouse movements\n *\n */\np5.prototype.atan2 = function (y, x) {\n  if (this._angleMode === constants.RADIANS) {\n    return Math.atan2(y, x);\n  } else {\n    return polarGeometry.radiansToDegrees(Math.atan2(y, x));\n  }\n};\n\n/**\n * Calculates the cosine of an angle. This function takes into account the\n * current angleMode. Values are returned in the range -1 to 1.\n *\n * @method cos\n * @param  {Number} angle the angle\n * @return {Number}       the cosine of the angle\n *\n * @example\n * <div>\n * <code>\n * var a = 0.0;\n * var inc = TWO_PI/25.0;\n * for (var i = 0; i < 25; i++) {\n *   line(i*4, 50, i*4, 50+cos(a)*40.0);\n *   a = a + inc;\n * }\n * </code>\n * </div>\n *\n * @alt\n * vertical black lines form wave patterns, extend-down on left and right side\n *\n */\np5.prototype.cos = function(angle) {\n  if (this._angleMode === constants.RADIANS) {\n    return Math.cos(angle);\n  } else {\n    return Math.cos(this.radians(angle));\n  }\n};\n\n/**\n * Calculates the sine of an angle. This function takes into account the\n * current angleMode. Values are returned in the range -1 to 1.\n *\n * @method sin\n * @param  {Number} angle the angle\n * @return {Number}       the sine of the angle\n *\n * @example\n * <div>\n * <code>\n * var a = 0.0;\n * var inc = TWO_PI/25.0;\n * for (var i = 0; i < 25; i++) {\n *   line(i*4, 50, i*4, 50+sin(a)*40.0);\n *   a = a + inc;\n * }\n * </code>\n * </div>\n *\n * @alt\n * vertical black lines extend down and up from center to form wave pattern\n *\n */\np5.prototype.sin = function(angle) {\n  if (this._angleMode === constants.RADIANS) {\n    return Math.sin(angle);\n  } else {\n    return Math.sin(this.radians(angle));\n  }\n};\n\n/**\n * Calculates the tangent of an angle. This function takes into account\n * the current angleMode. Values are returned in the range -1 to 1.\n *\n * @method tan\n * @param  {Number} angle the angle\n * @return {Number}       the tangent of the angle\n *\n * @example\n * <div>\n * <code>\n *   var a = 0.0;\n *   var inc = TWO_PI/50.0;\n *   for (var i = 0; i < 100; i = i+2) {\n *     line(i, 50, i, 50+tan(a)*2.0);\n *     a = a + inc;\n *   }\n * </code>\n *\n *\n * @alt\n * vertical black lines end down and up from center to form spike pattern\n *\n */\np5.prototype.tan = function(angle) {\n  if (this._angleMode === constants.RADIANS) {\n    return Math.tan(angle);\n  } else {\n    return Math.tan(this.radians(angle));\n  }\n};\n\n/**\n * Converts a radian measurement to its corresponding value in degrees.\n * Radians and degrees are two ways of measuring the same thing. There are\n * 360 degrees in a circle and 2*PI radians in a circle. For example,\n * 90° = PI/2 = 1.5707964.\n *\n * @method degrees\n * @param  {Number} radians the radians value to convert to degrees\n * @return {Number}         the converted angle\n *\n *\n * @example\n * <div class= “norender\">\n * <code>\n * var rad = PI/4;\n * var deg = degrees(rad);\n * print(rad + \" radians is \" + deg + \" degrees\");\n * // Prints: 0.7853981633974483 radians is 45 degrees\n * </code>\n * </div>\n *\n */\np5.prototype.degrees = function(angle) {\n  return polarGeometry.radiansToDegrees(angle);\n};\n\n/**\n * Converts a degree measurement to its corresponding value in radians.\n * Radians and degrees are two ways of measuring the same thing. There are\n * 360 degrees in a circle and 2*PI radians in a circle. For example,\n * 90° = PI/2 = 1.5707964.\n *\n * @method radians\n * @param  {Number} degrees the degree value to convert to radians\n * @return {Number}         the converted angle\n *\n * @example\n * <div class= “norender\">\n * <code>\n * var deg = 45.0;\n * var rad = radians(deg);\n * print(deg + \" degrees is \" + rad + \" radians\");\n * // Prints: 45 degrees is 0.7853981633974483 radians\n * </code>\n * </div>\n */\np5.prototype.radians = function(angle) {\n  return polarGeometry.degreesToRadians(angle);\n};\n\n/**\n * Sets the current mode of p5 to given mode. Default mode is RADIANS.\n *\n * @method angleMode\n * @param {Constant} mode either RADIANS or DEGREES\n *\n * @example\n * <div>\n * <code>\n * function draw(){\n *   background(204);\n *   angleMode(DEGREES); // Change the mode to DEGREES\n *   var a = atan2(mouseY-height/2, mouseX-width/2);\n *   translate(width/2, height/2);\n *   push();\n *   rotate(a);\n *   rect(-20, -5, 40, 10); // Larger rectangle is rotating in degrees\n *   pop();\n *   angleMode(RADIANS); // Change the mode to RADIANS\n *   rotate(a); // var a stays the same\n *   rect(-40, -5, 20, 10); // Smaller rectangle is rotating in radians\n * }\n * </code>\n * </div>\n *\n * @alt\n * 40 by 10 rect in center rotates with mouse moves. 20 by 10 rect moves faster.\n *\n *\n */\np5.prototype.angleMode = function(mode) {\n  if (mode === constants.DEGREES || mode === constants.RADIANS) {\n    this._angleMode = mode;\n  }\n};\n\nmodule.exports = p5;\n\n},{\"../core/constants\":36,\"../core/core\":37,\"./polargeometry\":67}],70:[function(_dereq_,module,exports){\n/**\n * @module Typography\n * @submodule Attributes\n * @for p5\n * @requires core\n * @requires constants\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/**\n * Sets the current alignment for drawing text. Accepts two\n * arguments: horizAlign (LEFT, CENTER, or RIGHT) and\n * vertAlign (TOP, BOTTOM, CENTER, or BASELINE).\n *\n * The horizAlign parameter is in reference to the x value\n * of the text() function, while the vertAlign parameter is\n * in reference to the y value.\n *\n * So if you write textAlign(LEFT), you are aligning the left\n * edge of your text to the x value you give in text(). If you\n * write textAlign(RIGHT, TOP), you are aligning the right edge\n * of your text to the x value and the top of edge of the text\n * to the y value.\n *\n * @method textAlign\n * @param {Constant} horizAlign horizontal alignment, either LEFT,\n *                            CENTER, or RIGHT\n * @param {Constant} vertAlign vertical alignment, either TOP,\n *                            BOTTOM, CENTER, or BASELINE\n * @return {Number}\n * @example\n * <div>\n * <code>\n * textSize(16);\n * textAlign(RIGHT);\n * text(\"ABCD\", 50, 30);\n * textAlign(CENTER);\n * text(\"EFGH\", 50, 50);\n * textAlign(LEFT);\n * text(\"IJKL\", 50, 70);\n * </code>\n * </div>\n *\n * @alt\n *Letters ABCD displayed at top right, EFGH at center and IJKL at bottom left.\n *\n */\np5.prototype.textAlign = function(horizAlign, vertAlign) {\n  return this._renderer.textAlign.apply(this._renderer, arguments);\n};\n\n/**\n * Sets/gets the spacing, in pixels, between lines of text. This\n * setting will be used in all subsequent calls to the text() function.\n *\n * @method textLeading\n * @param {Number} leading the size in pixels for spacing between lines\n * @return {Object|Number}\n * @example\n * <div>\n * <code>\n * // Text to display. The \"\\n\" is a \"new line\" character\n * lines = \"L1\\nL2\\nL3\";\n * textSize(12);\n *\n * textLeading(10);  // Set leading to 10\n * text(lines, 10, 25);\n *\n * textLeading(20);  // Set leading to 20\n * text(lines, 40, 25);\n *\n * textLeading(30);  // Set leading to 30\n * text(lines, 70, 25);\n * </code>\n * </div>\n *\n * @alt\n *set L1 L2 & L3 displayed vertically 3 times. spacing increases for each set\n *\n */\np5.prototype.textLeading = function(theLeading) {\n  return this._renderer.textLeading.apply(this._renderer, arguments);\n};\n\n/**\n * Sets/gets the current font size. This size will be used in all subsequent\n * calls to the text() function. Font size is measured in pixels.\n *\n * @method textSize\n * @param {Number} theSize the size of the letters in units of pixels\n * @return {Object|Number}\n * @example\n * <div>\n * <code>\n * textSize(12);\n * text(\"Font Size 12\", 10, 30);\n * textSize(14);\n * text(\"Font Size 14\", 10, 60);\n * textSize(16);\n * text(\"Font Size 16\", 10, 90);\n * </code>\n * </div>\n *\n * @alt\n *Font Size 12 displayed small, Font Size 14 medium & Font Size 16 large\n *\n */\np5.prototype.textSize = function(theSize) {\n  return this._renderer.textSize.apply(this._renderer, arguments);\n};\n\n/**\n * Sets/gets the style of the text for system fonts to NORMAL, ITALIC, or BOLD.\n * Note: this may be is overridden by CSS styling. For non-system fonts\n * (opentype, truetype, etc.) please load styled fonts instead.\n *\n * @method textStyle\n * @param {Number/Constant} theStyle styling for text, either NORMAL,\n *                            ITALIC, or BOLD\n * @return {Object|String}\n * @example\n * <div>\n * <code>\n * strokeWeight(0);\n * textSize(12);\n * textStyle(NORMAL);\n * text(\"Font Style Normal\", 10, 30);\n * textStyle(ITALIC);\n * text(\"Font Style Italic\", 10, 60);\n * textStyle(BOLD);\n * text(\"Font Style Bold\", 10, 90);\n * </code>\n * </div>\n *\n * @alt\n *words Font Style Normal displayed normally, Italic in italic and bold in bold\n *\n */\np5.prototype.textStyle = function(theStyle) {\n  return this._renderer.textStyle.apply(this._renderer, arguments);\n};\n\n/**\n * Calculates and returns the width of any character or text string.\n *\n * @method textWidth\n * @param {String} theText the String of characters to measure\n * @return {Number}\n * @example\n * <div>\n * <code>\n * textSize(28);\n *\n * var aChar = 'P';\n * var cWidth = textWidth(aChar);\n * text(aChar, 0, 40);\n * line(cWidth, 0, cWidth, 50);\n *\n * var aString = \"p5.js\";\n * var sWidth = textWidth(aString);\n * text(aString, 0, 85);\n * line(sWidth, 50, sWidth, 100);\n * </code>\n * </div>\n *\n * @alt\n *Letter P and p5.js are displayed with vertical lines at end. P is wide\n *\n */\np5.prototype.textWidth = function(theText) {\n  if (theText.length === 0) {\n    return 0;\n  }\n  return this._renderer.textWidth.apply(this._renderer, arguments);\n};\n\n/**\n * Returns the ascent of the current font at its current size. The ascent\n * represents the distance, in pixels, of the tallest character above\n * the baseline.\n *\n * @return {Number}\n * @example\n * <div>\n * <code>\n * var base = height * 0.75;\n * var scalar = 0.8; // Different for each font\n *\n * textSize(32);  // Set initial text size\n * var asc = textAscent() * scalar;  // Calc ascent\n * line(0, base - asc, width, base - asc);\n * text(\"dp\", 0, base);  // Draw text on baseline\n *\n * textSize(64);  // Increase text size\n * asc = textAscent() * scalar;  // Recalc ascent\n * line(40, base - asc, width, base - asc);\n * text(\"dp\", 40, base);  // Draw text on baseline\n * </code>\n * </div>\n */\np5.prototype.textAscent = function() {\n  return this._renderer.textAscent();\n};\n\n/**\n * Returns the descent of the current font at its current size. The descent\n * represents the distance, in pixels, of the character with the longest\n * descender below the baseline.\n *\n * @return {Number}\n * @example\n * <div>\n * <code>\n * var base = height * 0.75;\n * var scalar = 0.8; // Different for each font\n *\n * textSize(32);  // Set initial text size\n * var desc = textDescent() * scalar;  // Calc ascent\n * line(0, base+desc, width, base+desc);\n * text(\"dp\", 0, base);  // Draw text on baseline\n *\n * textSize(64);  // Increase text size\n * desc = textDescent() * scalar;  // Recalc ascent\n * line(40, base + desc, width, base + desc);\n * text(\"dp\", 40, base);  // Draw text on baseline\n * </code>\n * </div>\n */\np5.prototype.textDescent = function() {\n  return this._renderer.textDescent();\n};\n\n/**\n * Helper function to measure ascent and descent.\n */\np5.prototype._updateTextMetrics = function() {\n  return this._renderer._updateTextMetrics();\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],71:[function(_dereq_,module,exports){\n/**\n * @module Typography\n * @submodule Loading & Displaying\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar constants = _dereq_('../core/constants');\n\n_dereq_('../core/error_helpers');\n\n\n/**\n * Draws text to the screen. Displays the information specified in the first\n * parameter on the screen in the position specified by the additional\n * parameters. A default font will be used unless a font is set with the\n * textFont() function and a default size will be used unless a font is set\n * with textSize(). Change the color of the text with the fill() function.\n * Change the outline of the text with the stroke() and strokeWeight()\n * functions.\n * <br><br>\n * The text displays in relation to the textAlign() function, which gives the\n * option to draw to the left, right, and center of the coordinates.\n * <br><br>\n * The x2 and y2 parameters define a rectangular area to display within and\n * may only be used with string data. When these parameters are specified,\n * they are interpreted based on the current rectMode() setting. Text that\n * does not fit completely within the rectangle specified will not be drawn\n * to the screen.\n *\n * @method text\n * @param {String} str the alphanumeric symbols to be displayed\n * @param {Number} x   x-coordinate of text\n * @param {Number} y   y-coordinate of text\n * @param {Number} x2  by default, the width of the text box,\n *                     see rectMode() for more info\n * @param {Number} y2  by default, the height of the text box,\n *                     see rectMode() for more info\n * @return {Object} this\n * @example\n * <div>\n * <code>\n * textSize(32);\n * text(\"word\", 10, 30);\n * fill(0, 102, 153);\n * text(\"word\", 10, 60);\n * fill(0, 102, 153, 51);\n * text(\"word\", 10, 90);\n * </code>\n * </div>\n * <div>\n * <code>\n * s = \"The quick brown fox jumped over the lazy dog.\";\n * fill(50);\n * text(s, 10, 10, 70, 80); // Text wraps within text box\n * </code>\n * </div>\n *\n * @alt\n *'word' displayed 3 times going from black, blue to translucent blue\n * The quick brown fox jumped over the lazy dog.\n *\n */\np5.prototype.text = function(str, x, y, maxWidth, maxHeight) {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  this._validateParameters(\n    'text',\n    args,\n    [\n      ['*', 'Number', 'Number'],\n      ['*', 'Number', 'Number', 'Number', 'Number']\n    ]\n  );\n\n  return (!(this._renderer._doFill || this._renderer._doStroke)) ? this :\n    this._renderer.text.apply(this._renderer, arguments);\n};\n\n/**\n * Sets the current font that will be drawn with the text() function.\n *\n * @method textFont\n * @param {Object|String} f a font loaded via loadFont(), or a String\n * representing a <a href=\"https://mzl.la/2dOw8WD\">web safe font</a> (a font\n * that is generally available across all systems).\n * @return {Object} this\n * @example\n * <div>\n * <code>\n * fill(0);\n * textSize(12);\n * textFont(\"Georgia\");\n * text(\"Georgia\", 12, 30);\n * textFont(\"Helvetica\");\n * text(\"Helvetica\", 12, 60);\n * </code>\n * </div>\n * <div>\n * <code>\n * var fontRegular, fontItalic, fontBold;\n * function preload() {\n *    fontRegular = loadFont(\"assets/Regular.otf\");\n *    fontItalic = loadFont(\"assets/Italic.ttf\");\n *    fontBold = loadFont(\"assets/Bold.ttf\");\n * }\n * function setup() {\n *    background(210);\n *    fill(0).strokeWeight(0).textSize(10);\n *    textFont(fontRegular);\n *    text(\"Font Style Normal\", 10, 30);\n *    textFont(fontItalic);\n *    text(\"Font Style Italic\", 10, 50);\n *    textFont(fontBold);\n *    text(\"Font Style Bold\", 10, 70);\n * }\n * </code>\n * </div>\n *\n * @alt\n *words Font Style Normal displayed normally, Italic in italic and bold in bold\n *\n */\np5.prototype.textFont = function(theFont, theSize) {\n\n  if (arguments.length) {\n\n    if (!theFont) {\n\n      throw Error('null font passed to textFont');\n    }\n\n    this._renderer._setProperty('_textFont', theFont);\n\n    if (theSize) {\n\n      this._renderer._setProperty('_textSize', theSize);\n      this._renderer._setProperty('_textLeading',\n        theSize * constants._DEFAULT_LEADMULT);\n    }\n\n    return this._renderer._applyTextProperties();\n  }\n\n  return this;\n};\n\nmodule.exports = p5;\n\n},{\"../core/constants\":36,\"../core/core\":37,\"../core/error_helpers\":40}],72:[function(_dereq_,module,exports){\n/**\n * This module defines the p5.Font class and functions for\n * drawing text to the display canvas.\n * @module Typography\n * @submodule Font\n * @requires core\n * @requires constants\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar constants = _dereq_('../core/constants');\n\n/*\n * TODO:\n *\n * API:\n * -- textBounds()\n * -- getPath()\n * -- getPoints()\n *\n * ===========================================\n * -- PFont functions:\n *    PFont.list()\n *\n * -- kerning\n * -- alignment: justified?\n * -- integrate p5.dom? (later)\n */\n\n/**\n * Base class for font handling\n * @class p5.Font\n * @constructor\n * @param {Object} [pInst] pointer to p5 instance\n */\np5.Font = function(p) {\n\n  this.parent = p;\n\n  this.cache = {};\n\n  /**\n   * Underlying opentype font implementation\n   * @property font\n   */\n  this.font = undefined;\n};\n\np5.Font.prototype.list = function() {\n\n  // TODO\n  throw 'not yet implemented';\n};\n\n/**\n * Returns a tight bounding box for the given text string using this\n * font (currently only supports single lines)\n *\n * @method textBounds\n * @param  {String} line     a line of text\n * @param  {Number} x        x-position\n * @param  {Number} y        y-position\n * @param  {Number} fontSize font size to use (optional)\n * @param  {Object} options opentype options (optional)\n *\n * @return {Object}          a rectangle object with properties: x, y, w, h\n *\n * @example\n * <div>\n * <code>\n * var font;\n * var textString = 'Lorem ipsum dolor sit amet.';\n * function preload() {\n *    font = loadFont('./assets/Regular.otf');\n * };\n * function setup() {\n *    background(210);\n *\n *    var bbox = font.textBounds(textString, 10, 30, 12);\n *    fill(255);\n *    stroke(0);\n *    rect(bbox.x, bbox.y, bbox.w, bbox.h);\n *    fill(0);\n *    noStroke();\n *\n *    textFont(font);\n *    textSize(12);\n *    text(textString, 10, 30);\n * };\n * </code>\n * </div>\n *\n * @alt\n *words Lorem ipsum dol go off canvas and contained by white bounding box\n *\n */\np5.Font.prototype.textBounds = function(str, x, y, fontSize, options) {\n\n  x = x !== undefined ? x : 0;\n  y = y !== undefined ? y : 0;\n  fontSize = fontSize || this.parent._renderer._textSize;\n\n  // Check cache for existing bounds. Take into consideration the text alignment\n  // settings. Default alignment should match opentype's origin: left-aligned &\n  // alphabetic baseline.\n  var p = (options && options.renderer && options.renderer._pInst) ||\n    this.parent,\n    ctx = p._renderer.drawingContext,\n    alignment = ctx.textAlign || constants.LEFT,\n    baseline = ctx.textBaseline || constants.BASELINE;\n  var result = this.cache[cacheKey('textBounds', str, x, y, fontSize, alignment,\n    baseline)];\n\n  if (!result) {\n\n    var xCoords = [], yCoords = [], self = this,\n      scale = this._scale(fontSize), minX, minY, maxX, maxY;\n\n    this.font.forEachGlyph(str, x, y, fontSize, options,\n      function(glyph, gX, gY, gFontSize) {\n\n        xCoords.push(gX);\n        yCoords.push(gY);\n\n        var gm = glyph.getMetrics();\n\n        if (glyph.name !== 'space') {\n\n          xCoords.push(gX + (gm.xMax * scale));\n          yCoords.push(gY + (-gm.yMin * scale));\n          yCoords.push(gY + (-gm.yMax * scale));\n\n        } else { // NOTE: deals with broken metrics for spaces in opentype.js\n\n          xCoords.push(gX + self.font.charToGlyph(' ').advanceWidth *\n            self._scale(fontSize));\n        }\n      });\n\n    // fix to #1409 (not sure why these max() functions were here)\n    /*minX = Math.max(0, Math.min.apply(null, xCoords));\n    minY = Math.max(0, Math.min.apply(null, yCoords));\n    maxX = Math.max(0, Math.max.apply(null, xCoords));\n    maxY = Math.max(0, Math.max.apply(null, yCoords));*/\n    minX = Math.min.apply(null, xCoords);\n    minY = Math.min.apply(null, yCoords);\n    maxX = Math.max.apply(null, xCoords);\n    maxY = Math.max.apply(null, yCoords);\n\n    result = {\n      x: minX,\n      y: minY,\n      h: maxY - minY,\n      w: maxX - minX,\n      advance: minX - x\n    };\n\n    // Bounds are now calculated, so shift the x & y to match alignment settings\n    var textWidth = result.w + result.advance;\n    var pos = this._handleAlignment(p, ctx, str, result.x, result.y, textWidth);\n    result.x = pos.x;\n    result.y = pos.y;\n\n    this.cache[cacheKey('textBounds', str, x, y, fontSize, alignment,\n      baseline)] = result;\n  }\n  //else console.log('cache-hit');\n\n  return result;\n};\n\n\n/**\n * Computes an array of points following the path for specified text\n *\n * @param  {String} txt     a line of text\n * @param  {Number} x        x-position\n * @param  {Number} y        y-position\n * @param  {Number} fontSize font size to use (optional)\n * @param  {Object} options  an (optional) object that can contain:\n *\n * <br>sampleFactor - the ratio of path-length to number of samples\n * (default=.25); higher values yield more points and are therefore\n * more precise\n *\n * <br>simplifyThreshold - if set to a non-zero value, collinear points will be\n * be removed from the polygon; the value represents the threshold angle to use\n * when determining whether two edges are collinear\n *\n * @return {Array}  an array of points, each with x, y, alpha (the path angle)\n */\np5.Font.prototype.textToPoints = function(txt, x, y, fontSize, options) {\n\n  var xoff = 0, result = [], glyphs = this._getGlyphs(txt);\n\n  fontSize = fontSize || this.parent._renderer._textSize;\n\n  for (var i = 0; i < glyphs.length; i++) {\n\n    var gpath = glyphs[i].getPath(x, y, fontSize),\n      paths = splitPaths(gpath.commands);\n\n    for (var j = 0; j < paths.length; j++) {\n\n      var pts = pathToPoints(paths[j], options);\n\n      for (var k = 0; k < pts.length; k++) {\n        pts[k].x += xoff;\n        result.push(pts[k]);\n      }\n    }\n\n    xoff += glyphs[i].advanceWidth * this._scale(fontSize);\n  }\n\n  return result;\n};\n\n// ----------------------------- End API ------------------------------\n\n/**\n * Returns the set of opentype glyphs for the supplied string.\n *\n * Note that there is not a strict one-to-one mapping between characters\n * and glyphs, so the list of returned glyphs can be larger or smaller\n *  than the length of the given string.\n *\n * @param  {String} str the string to be converted\n * @return {array}     the opentype glyphs\n */\np5.Font.prototype._getGlyphs = function(str) {\n\n  return this.font.stringToGlyphs(str);\n};\n\n/**\n * Returns an opentype path for the supplied string and position.\n *\n * @param  {String} line     a line of text\n * @param  {Number} x        x-position\n * @param  {Number} y        y-position\n * @param  {Object} options opentype options (optional)\n * @return {Object}     the opentype path\n */\np5.Font.prototype._getPath = function(line, x, y, options) {\n\n  var p = (options && options.renderer && options.renderer._pInst) ||\n    this.parent,\n    ctx = p._renderer.drawingContext,\n    pos = this._handleAlignment(p, ctx, line, x, y);\n\n  return this.font.getPath(line, pos.x, pos.y, p._renderer._textSize, options);\n};\n\n/*\n * Creates an SVG-formatted path-data string\n * (See http://www.w3.org/TR/SVG/paths.html#PathData)\n * from the given opentype path or string/position\n *\n * @param  {Object} path    an opentype path, OR the following:\n *\n * @param  {String} line     a line of text\n * @param  {Number} x        x-position\n * @param  {Number} y        y-position\n * @param  {Object} options opentype options (optional), set options.decimals\n * to set the decimal precision of the path-data\n *\n * @return {Object}     this p5.Font object\n */\np5.Font.prototype._getPathData = function(line, x, y, options) {\n\n  var decimals = 3;\n\n  // create path from string/position\n  if (typeof line === 'string' && arguments.length > 2) {\n\n    line = this._getPath(line, x, y, options);\n  }\n  // handle options specified in 2nd arg\n  else if (typeof x === 'object') {\n\n    options = x;\n  }\n\n  // handle svg arguments\n  if (options && typeof options.decimals === 'number') {\n\n    decimals = options.decimals;\n  }\n\n  return line.toPathData(decimals);\n};\n\n/*\n * Creates an SVG <path> element, as a string,\n * from the given opentype path or string/position\n *\n * @param  {Object} path    an opentype path, OR the following:\n *\n * @param  {String} line     a line of text\n * @param  {Number} x        x-position\n * @param  {Number} y        y-position\n * @param  {Object} options opentype options (optional), set options.decimals\n * to set the decimal precision of the path-data in the <path> element,\n *  options.fill to set the fill color for the <path> element,\n *  options.stroke to set the stroke color for the <path> element,\n *  options.strokeWidth to set the strokeWidth for the <path> element.\n *\n * @return {Object}     this p5.Font object\n */\np5.Font.prototype._getSVG = function(line, x, y, options) {\n\n  var decimals = 3;\n\n  // create path from string/position\n  if (typeof line === 'string' && arguments.length > 2) {\n\n    line = this._getPath(line, x, y, options);\n  }\n  // handle options specified in 2nd arg\n  else if (typeof x === 'object') {\n\n    options = x;\n  }\n\n  // handle svg arguments\n  if (options) {\n    if (typeof options.decimals === 'number') {\n      decimals = options.decimals;\n    }\n    if (typeof options.strokeWidth === 'number') {\n      line.strokeWidth = options.strokeWidth;\n    }\n    if (typeof options.fill !== 'undefined') {\n      line.fill = options.fill;\n    }\n    if (typeof options.stroke !== 'undefined') {\n      line.stroke = options.stroke;\n    }\n  }\n\n  return line.toSVG(decimals);\n};\n\n/*\n * Renders an opentype path or string/position\n * to the current graphics context\n *\n * @param  {Object} path    an opentype path, OR the following:\n *\n * @param  {String} line     a line of text\n * @param  {Number} x        x-position\n * @param  {Number} y        y-position\n * @param  {Object} options opentype options (optional)\n *\n * @return {Object}     this p5.Font object\n */\np5.Font.prototype._renderPath = function(line, x, y, options) {\n\n  var pdata, pg = (options && options.renderer) || this.parent._renderer,\n    ctx = pg.drawingContext;\n\n  if (typeof line === 'object' && line.commands) {\n\n    pdata = line.commands;\n  } else {\n\n    //pos = handleAlignment(p, ctx, line, x, y);\n    pdata = this._getPath(line, x, y, options).commands;\n  }\n\n  ctx.beginPath();\n  for (var i = 0; i < pdata.length; i += 1) {\n\n    var cmd = pdata[i];\n    if (cmd.type === 'M') {\n      ctx.moveTo(cmd.x, cmd.y);\n    } else if (cmd.type === 'L') {\n      ctx.lineTo(cmd.x, cmd.y);\n    } else if (cmd.type === 'C') {\n      ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n    } else if (cmd.type === 'Q') {\n      ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n    } else if (cmd.type === 'Z') {\n      ctx.closePath();\n    }\n  }\n\n  // only draw stroke if manually set by user\n  if (pg._doStroke && pg._strokeSet) {\n\n    ctx.stroke();\n  }\n\n  if (pg._doFill) {\n\n    // if fill hasn't been set by user, use default-text-fill\n    ctx.fillStyle = pg._fillSet ? ctx.fillStyle : constants._DEFAULT_TEXT_FILL;\n    ctx.fill();\n  }\n\n  return this;\n};\n\np5.Font.prototype._textWidth = function(str, fontSize) {\n\n  if (str === ' ') { // special case for now\n\n    return this.font.charToGlyph(' ').advanceWidth * this._scale(fontSize);\n  }\n\n  var bounds = this.textBounds(str, 0, 0, fontSize);\n  return bounds.w + bounds.advance;\n};\n\np5.Font.prototype._textAscent = function(fontSize) {\n\n  return this.font.ascender * this._scale(fontSize);\n};\n\np5.Font.prototype._textDescent = function(fontSize) {\n\n  return -this.font.descender * this._scale(fontSize);\n};\n\np5.Font.prototype._scale = function(fontSize) {\n\n  return (1 / this.font.unitsPerEm) * (fontSize ||\n    this.parent._renderer._textSize);\n};\n\np5.Font.prototype._handleAlignment = function(p, ctx, line, x, y, textWidth) {\n  var fontSize = p._renderer._textSize,\n    textAscent = this._textAscent(fontSize),\n    textDescent = this._textDescent(fontSize);\n\n  textWidth = textWidth !== undefined ? textWidth :\n    this._textWidth(line, fontSize);\n\n  if (ctx.textAlign === constants.CENTER) {\n    x -= textWidth / 2;\n  } else if (ctx.textAlign === constants.RIGHT) {\n    x -= textWidth;\n  }\n\n  if (ctx.textBaseline === constants.TOP) {\n    y += textAscent;\n  } else if (ctx.textBaseline === constants._CTX_MIDDLE) {\n    y += textAscent / 2;\n  } else if (ctx.textBaseline === constants.BOTTOM) {\n    y -= textDescent;\n  }\n\n  return { x: x, y: y };\n};\n\n// path-utils\n\nfunction pathToPoints(cmds, options) {\n\n  var opts = parseOpts(options, {\n    sampleFactor: 0.1,\n    simplifyThreshold: 0,\n  });\n\n  var len = pointAtLength(cmds,0,1), // total-length\n    t = len / (len * opts.sampleFactor),\n    pts = [];\n\n  for (var i = 0; i < len; i += t) {\n    pts.push(pointAtLength(cmds, i));\n  }\n\n  if (opts.simplifyThreshold) {\n    /*var count = */simplify(pts, opts.simplifyThreshold);\n    //console.log('Simplify: removed ' + count + ' pts');\n  }\n\n  return pts;\n}\n\nfunction simplify(pts, angle) {\n\n  angle = (typeof angle === 'undefined') ? 0 : angle;\n\n  var num = 0;\n  for (var i = pts.length - 1; pts.length > 3 && i >= 0; --i) {\n\n    if (collinear(at(pts, i - 1), at(pts, i), at(pts, i + 1), angle)) {\n\n      // Remove the middle point\n      pts.splice(i % pts.length, 1);\n      num++;\n    }\n  }\n  return num;\n}\n\nfunction splitPaths(cmds) {\n\n  var paths = [], current;\n  for (var i = 0; i < cmds.length; i++) {\n    if (cmds[i].type === 'M') {\n      if (current) {\n        paths.push(current);\n      }\n      current = [];\n    }\n    current.push(cmdToArr(cmds[i]));\n  }\n  paths.push(current);\n\n  return paths;\n}\n\nfunction cmdToArr(cmd) {\n\n  var arr = [ cmd.type ];\n  if (cmd.type === 'M' || cmd.type === 'L') { // moveto or lineto\n    arr.push(cmd.x, cmd.y);\n  } else if (cmd.type === 'C') {\n    arr.push(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n  } else if (cmd.type === 'Q') {\n    arr.push(cmd.x1, cmd.y1, cmd.x, cmd.y);\n  }\n  // else if (cmd.type === 'Z') { /* no-op */ }\n  return arr;\n}\n\nfunction parseOpts(options, defaults) {\n\n  if (typeof options !== 'object') {\n    options = defaults;\n  }\n  else {\n    for (var key in defaults) {\n      if (typeof options[key] === 'undefined') {\n        options[key] = defaults[key];\n      }\n    }\n  }\n  return options;\n}\n\n//////////////////////// Helpers ////////////////////////////\n\nfunction at(v, i) {\n  var s = v.length;\n  return v[i < 0 ? i % s + s : i % s];\n}\n\nfunction collinear(a, b, c, thresholdAngle) {\n\n  if (!thresholdAngle) {\n    return areaTriangle(a, b, c) === 0;\n  }\n\n  if (typeof collinear.tmpPoint1 === 'undefined') {\n    collinear.tmpPoint1 = [];\n    collinear.tmpPoint2 = [];\n  }\n\n  var ab = collinear.tmpPoint1, bc = collinear.tmpPoint2;\n  ab.x = b.x - a.x;\n  ab.y = b.y - a.y;\n  bc.x = c.x - b.x;\n  bc.y = c.y - b.y;\n\n  var dot = ab.x * bc.x + ab.y * bc.y,\n    magA = Math.sqrt(ab.x * ab.x + ab.y * ab.y),\n    magB = Math.sqrt(bc.x * bc.x + bc.y * bc.y),\n    angle = Math.acos(dot / (magA * magB));\n\n  return angle < thresholdAngle;\n}\n\nfunction areaTriangle(a, b, c) {\n  return (((b[0] - a[0]) * (c[1] - a[1])) - ((c[0] - a[0]) * (b[1] - a[1])));\n}\n\n// Portions of below code copyright 2008 Dmitry Baranovskiy (via MIT license)\n\nfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\n  var t1 = 1 - t, t13 = Math.pow(t1, 3), t12 = Math.pow(t1, 2), t2 = t * t,\n    t3 = t2 * t, x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x +\n    t3 * p2x, y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y +\n    t3 * p2y, mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n    my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n    nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n    ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n    ax = t1 * p1x + t * c1x, ay = t1 * p1y + t * c1y,\n    cx = t1 * c2x + t * p2x, cy = t1 * c2y + t * p2y,\n    alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\n\n  if (mx > nx || my < ny) { alpha += 180; }\n\n  return { x: x, y: y, m: { x: mx, y: my }, n: { x: nx, y: ny },\n    start: { x: ax, y: ay }, end: { x: cx, y: cy }, alpha: alpha\n  };\n}\n\nfunction getPointAtSegmentLength(p1x,p1y,c1x,c1y,c2x,c2y,p2x,p2y,length) {\n  return (length == null) ? bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) :\n    findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n      getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n}\n\nfunction pointAtLength(path, length, istotal) {\n  path = path2curve(path);\n  var x, y, p, l, sp = '', subpaths = {}, point, len = 0;\n  for (var i = 0, ii = path.length; i < ii; i++) {\n    p = path[i];\n    if (p[0] === 'M') {\n      x = +p[1];\n      y = +p[2];\n    } else {\n      l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n      if (len + l > length) {\n        if (!istotal) {\n          point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5],\n            p[6], length - len);\n          return { x: point.x, y: point.y, alpha: point.alpha };\n        }\n      }\n      len += l;\n      x = +p[5];\n      y = +p[6];\n    }\n    sp += p.shift() + p;\n  }\n  subpaths.end = sp;\n\n  point = istotal ? len : findDotsAtSegment\n    (x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n\n  if (point.alpha) {\n    point = { x: point.x, y: point.y, alpha: point.alpha };\n  }\n\n  return point;\n}\n\nfunction pathToAbsolute(pathArray) {\n\n  var res = [], x = 0, y = 0, mx = 0, my = 0, start = 0;\n  if (pathArray[0][0] === 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n\n  var dots,crz = pathArray.length===3 && pathArray[0][0]==='M' &&\n    pathArray[1][0].toUpperCase()==='R' && pathArray[2][0].toUpperCase()==='Z';\n\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    if (pa[0] !== String.prototype.toUpperCase.call(pa[0])) {\n      r[0] = String.prototype.toUpperCase.call(pa[0]);\n      switch (r[0]) {\n        case 'A':\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +(pa[6] + x);\n          r[7] = +(pa[7] + y);\n          break;\n        case 'V':\n          r[1] = +pa[1] + y;\n          break;\n        case 'H':\n          r[1] = +pa[1] + x;\n          break;\n        case 'R':\n          dots = [x, y].concat(pa.slice(1));\n          for (var j = 2, jj = dots.length; j < jj; j++) {\n            dots[j] = +dots[j] + x;\n            dots[++j] = +dots[j] + y;\n          }\n          res.pop();\n          res = res.concat(catmullRom2bezier(dots, crz));\n          break;\n        case 'M':\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n          break;\n        default:\n          for (j = 1, jj = pa.length; j < jj; j++) {\n            r[j] = +pa[j] + ((j % 2) ? x : y);\n          }\n      }\n    } else if (pa[0] === 'R') {\n      dots = [x, y].concat(pa.slice(1));\n      res.pop();\n      res = res.concat(catmullRom2bezier(dots, crz));\n      r = ['R'].concat(pa.slice(-2));\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n    switch (r[0]) {\n      case 'Z':\n        x = mx;\n        y = my;\n        break;\n      case 'H':\n        x = r[1];\n        break;\n      case 'V':\n        y = r[1];\n        break;\n      case 'M':\n        mx = r[r.length - 2];\n        my = r[r.length - 1];\n        break;\n      default:\n        x = r[r.length - 2];\n        y = r[r.length - 1];\n    }\n  }\n  return res;\n}\n\nfunction path2curve(path, path2) {\n\n  var p = pathToAbsolute(path), p2 = path2 && pathToAbsolute(path2),\n    attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n    attrs2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\n\n    processPath = function(path, d, pcom) {\n      var nx, ny, tq = { T: 1, Q: 1 };\n      if (!path) { return ['C', d.x, d.y, d.x, d.y, d.x, d.y]; }\n      if (!(path[0] in tq)) { d.qx = d.qy = null; }\n      switch (path[0]) {\n        case 'M':\n          d.X = path[1];\n          d.Y = path[2];\n          break;\n        case 'A':\n          path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n          break;\n        case 'S':\n          if (pcom === 'C' || pcom === 'S') {\n            nx = d.x * 2 - d.bx;\n            ny = d.y * 2 - d.by;\n          } else {\n            nx = d.x;\n            ny = d.y;\n          }\n          path = ['C', nx, ny].concat(path.slice(1));\n          break;\n        case 'T':\n          if (pcom === 'Q' || pcom === 'T') {\n            d.qx = d.x * 2 - d.qx;\n            d.qy = d.y * 2 - d.qy;\n          } else {\n            d.qx = d.x;\n            d.qy = d.y;\n          }\n          path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n          break;\n        case 'Q':\n          d.qx = path[1];\n          d.qy = path[2];\n          path = ['C'].concat(q2c(d.x,d.y,path[1],path[2],path[3],path[4]));\n          break;\n        case 'L':\n          path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\n          break;\n        case 'H':\n          path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\n          break;\n        case 'V':\n          path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\n          break;\n        case 'Z':\n          path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\n          break;\n      }\n      return path;\n    },\n\n    fixArc = function(pp, i) {\n      if (pp[i].length > 7) {\n        pp[i].shift();\n        var pi = pp[i];\n        while (pi.length) {\n          pcoms1[i] = 'A';\n          if (p2) { pcoms2[i] = 'A'; }\n          pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n        }\n        pp.splice(i, 1);\n        ii = Math.max(p.length, p2 && p2.length || 0);\n      }\n    },\n\n    fixM = function(path1, path2, a1, a2, i) {\n      if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {\n        path2.splice(i, 0, ['M', a2.x, a2.y]);\n        a1.bx = 0;\n        a1.by = 0;\n        a1.x = path1[i][1];\n        a1.y = path1[i][2];\n        ii = Math.max(p.length, p2 && p2.length || 0);\n      }\n    },\n\n    pcoms1 = [], // path commands of original path p\n    pcoms2 = [], // path commands of original path p2\n    pfirst = '', // temporary holder for original path command\n    pcom = ''; // holder for previous path command of original path\n\n  for (var i = 0, ii = Math.max(p.length, p2 && p2.length || 0); i < ii; i++) {\n    if (p[i]) { pfirst = p[i][0]; } // save current path command\n\n    if (pfirst !== 'C') {\n      pcoms1[i] = pfirst; // Save current path command\n      if (i) { pcom = pcoms1[i - 1]; } // Get previous path command pcom\n    }\n    p[i] = processPath(p[i], attrs, pcom);\n\n    if (pcoms1[i] !== 'A' && pfirst === 'C') { pcoms1[i] = 'C'; }\n\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n    if (p2) { // the same procedures is done to p2\n      if (p2[i]) { pfirst = p2[i][0]; }\n      if (pfirst !== 'C') {\n        pcoms2[i] = pfirst;\n        if (i) { pcom = pcoms2[i - 1]; }\n      }\n      p2[i] = processPath(p2[i], attrs2, pcom);\n\n      if (pcoms2[i] !== 'A' && pfirst === 'C') { pcoms2[i] = 'C'; }\n\n      fixArc(p2, i);\n    }\n    fixM(p, p2, attrs, attrs2, i);\n    fixM(p2, p, attrs2, attrs, i);\n    var seg = p[i], seg2 = p2 && p2[i], seglen = seg.length,\n      seg2len = p2 && seg2.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\n    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\n    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\n    attrs2.x = p2 && seg2[seg2len - 2];\n    attrs2.y = p2 && seg2[seg2len - 1];\n  }\n\n  return p2 ? [p, p2] : p;\n}\n\nfunction a2c(x1, y1, rx, ry, angle, lac, sweep_flag, x2, y2, recursive) {\n  // for more information of where this Math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  var PI = Math.PI, _120 = PI * 120 / 180, f1, f2, cx, cy,\n    rad = PI / 180 * (+angle || 0), res = [], xy,\n    rotate = function (x, y, rad) {\n      var X = x * Math.cos(rad) - y * Math.sin(rad),\n        Y = x * Math.sin(rad) + y * Math.cos(rad);\n      return { x: X, y: Y };\n    };\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n    var x = (x1 - x2) / 2, y = (y1 - y2) / 2,\n      h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n    if (h > 1) {\n      h = Math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n    var rx2 = rx * rx, ry2 = ry * ry,\n      k = (lac === sweep_flag ? -1 : 1) * Math.sqrt(Math.abs\n        ((rx2 * ry2 - rx2 * y * y - ry2 * x * x)/(rx2 * y * y + ry2 * x * x)));\n\n    cx = k * rx * y / ry + (x1 + x2) / 2;\n    cy = k * -ry * x / rx + (y1 + y2) / 2;\n    f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\n    f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n\n    f1 = x1 < cx ? PI - f1 : f1;\n    f2 = x2 < cx ? PI - f2 : f2;\n\n    if (f1 < 0) { f1 = PI * 2 + f1; }\n    if (f2 < 0) { f2 = PI * 2 + f2; }\n\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - PI * 2;\n    }\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n  var df = f2 - f1;\n  if (Math.abs(df) > _120) {\n    var f2old = f2, x2old = x2, y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * Math.cos(f2);\n    y2 = cy + ry * Math.sin(f2);\n    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old,\n      [f2, f2old, cx, cy]);\n  }\n  df = f2 - f1;\n  var c1 = Math.cos(f1),\n    s1 = Math.sin(f1),\n    c2 = Math.cos(f2),\n    s2 = Math.sin(f2),\n    t = Math.tan(df / 4),\n    hx = 4 / 3 * rx * t,\n    hy = 4 / 3 * ry * t,\n    m1 = [x1, y1],\n    m2 = [x1 + hx * s1, y1 - hy * c1],\n    m3 = [x2 + hx * s2, y2 - hy * c2],\n    m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  } else {\n    res = [m2, m3, m4].concat(res).join().split(',');\n    var newres = [];\n    for (var i = 0, ii = res.length; i < ii; i++) {\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i],\n        res[i + 1], rad).x;\n    }\n    return newres;\n  }\n}\n\n// http://schepers.cc/getting-to-the-point\nfunction catmullRom2bezier(crp, z) {\n  var d = [];\n  for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n    var p = [{\n      x: +crp[i - 2],\n      y: +crp[i - 1]\n    }, {\n      x: +crp[i],\n      y: +crp[i + 1]\n    }, {\n      x: +crp[i + 2],\n      y: +crp[i + 3]\n    }, {\n      x: +crp[i + 4],\n      y: +crp[i + 5]\n    }];\n    if (z) {\n      if (!i) {\n        p[0] = {\n          x: +crp[iLen - 2],\n          y: +crp[iLen - 1]\n        };\n      } else if (iLen - 4 === i) {\n        p[3] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n      } else if (iLen - 2 === i) {\n        p[2] = {\n          x: +crp[0],\n          y: +crp[1]\n        };\n        p[3] = {\n          x: +crp[2],\n          y: +crp[3]\n        };\n      }\n    } else {\n      if (iLen - 4 === i) {\n        p[3] = p[2];\n      } else if (!i) {\n        p[0] = {\n          x: +crp[i],\n          y: +crp[i + 1]\n        };\n      }\n    }\n    d.push(['C', (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y +\n      p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y -\n      p[3].y) / 6, p[2].x, p[2].y ]);\n  }\n\n  return d;\n}\n\nfunction l2c(x1, y1, x2, y2) { return [x1, y1, x2, y2, x2, y2]; }\n\nfunction q2c(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3, _23 = 2 / 3;\n  return [\n    _13 * x1 + _23 * ax, _13 * y1 + _23 * ay,\n    _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2\n  ];\n}\n\nfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n  if (z == null) { z = 1; }\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n  var z2 = z / 2,\n    n = 12, Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873,\n       -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816],\n    sum = 0, Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032,\n      0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472 ];\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2,\n      xbase = base3(ct, x1, x2, x3, x4),\n      ybase = base3(ct, y1, y2, y3, y4),\n      comb = xbase * xbase + ybase * ybase;\n    sum += Cvalues[i] * Math.sqrt(comb);\n  }\n  return z2 * sum;\n}\n\nfunction getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n  if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n    return;\n  }\n  var t = 1, step = t / 2, t2 = t - step, l, e = 0.01;\n  l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n  while (Math.abs(l - ll) > e) {\n    step /= 2;\n    t2 += (l < ll ? 1 : -1) * step;\n    l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n  }\n  return t2;\n}\n\nfunction base3(t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n    t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n}\n\nfunction cacheKey() {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  i = args.length;\n  var hash = '';\n  while (i--) {\n    hash += (args[i] === Object(args[i])) ?\n      JSON.stringify(args[i]) : args[i];\n  }\n  return hash;\n}\n\nmodule.exports = p5.Font;\n\n},{\"../core/constants\":36,\"../core/core\":37}],73:[function(_dereq_,module,exports){\n/**\n * @module Data\n * @submodule Array Functions\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/**\n * Adds a value to the end of an array. Extends the length of\n * the array by one. Maps to Array.push().\n *\n * @method append\n * @param {Array} array Array to append\n * @param {any} value to be added to the Array\n * @example\n * <div class = \"norender\"><code>\n * function setup() {\n *\n * var myArray = new Array(\"Mango\", \"Apple\", \"Papaya\")\n * print(myArray) // [\"Mango\", \"Apple\", \"Papaya\"]\n *\n * append(myArray, \"Peach\")\n * print(myArray) // [\"Mango\", \"Apple\", \"Papaya\", \"Peach\"]\n *\n * }\n * </div></code>\n */\np5.prototype.append = function(array, value) {\n  array.push(value);\n  return array;\n};\n\n/**\n * Copies an array (or part of an array) to another array. The src array is\n * copied to the dst array, beginning at the position specified by\n * srcPosition and into the position specified by dstPosition. The number of\n * elements to copy is determined by length. Note that copying values\n * overwrites existing values in the destination array. To append values\n * instead of overwriting them, use concat().\n * <br><br>\n * The simplified version with only two arguments, arrayCopy(src, dst),\n * copies an entire array to another of the same size. It is equivalent to\n * arrayCopy(src, 0, dst, 0, src.length).\n * <br><br>\n * Using this function is far more efficient for copying array data than\n * iterating through a for() loop and copying each element individually.\n *\n * @method arrayCopy\n * @param {Array}  src           the source Array\n * @param {Number} [srcPosition] starting position in the source Array\n * @param {Array}  dst           the destination Array\n * @param {Number} [dstPosition] starting position in the destination Array\n * @param {Number} [length]      number of Array elements to be copied\n *\n * @example\n *  <div class=\"norender\"><code>\n *  function setup() {\n *\n *    var src = new Array(\"A\", \"B\", \"C\");\n *    var dst = new Array( 1 ,  2 ,  3 );\n *    var srcPosition = 1;\n *    var dstPosition = 0;\n *    var length = 2;\n *\n *    print(src); // [\"A\", \"B\", \"C\"]\n *    print(dst); // [ 1 ,  2 ,  3 ]\n *\n *    arrayCopy(src, srcPosition, dst, dstPosition, length);\n *    print(dst); // [\"B\", \"C\", 3]\n *\n *    }\n *  </div></code>\n */\np5.prototype.arrayCopy = function(\n  src,\n  srcPosition,\n  dst,\n  dstPosition,\n  length) {\n\n  // the index to begin splicing from dst array\n  var start,\n      end;\n\n  if (typeof length !== 'undefined') {\n\n    end = Math.min(length, src.length);\n    start = dstPosition;\n    src = src.slice(srcPosition, end + srcPosition);\n\n  } else {\n\n    if (typeof dst !== 'undefined') { // src, dst, length\n      // rename  so we don't get confused\n      end = dst;\n      end = Math.min(end, src.length);\n    } else { // src, dst\n      end = src.length;\n    }\n\n    start = 0;\n    // rename  so we don't get confused\n    dst = srcPosition;\n    src = src.slice(0, end);\n  }\n\n  // Since we are not returning the array and JavaScript is pass by reference\n  // we must modify the actual values of the array\n  // instead of reassigning arrays\n  Array.prototype.splice.apply(dst, [start, end].concat(src));\n\n};\n\n/**\n * Concatenates two arrays, maps to Array.concat(). Does not modify the\n * input arrays.\n *\n * @method concat\n * @param {Array} a first Array to concatenate\n * @param {Array} b second Array to concatenate\n * @return {Array} concatenated array\n *\n * @example\n * <div class = \"norender\"><code>\n * function setup() {\n *   var arr1 = new Array(\"A\", \"B\", \"C\");\n *   var arr2 = new Array( 1 ,  2 ,  3 );\n *\n *   print(arr1); // [\"A\",\"B\",\"C\"]\n *   print(arr2); // [1,2,3]\n *\n *   var arr3 = concat(arr1, arr2);\n *\n *   print(arr1); // [\"A\",\"B\",\"C\"]\n *   print(arr2); // [1,2,3]\n *   print(arr3); // [\"A\",\"B\",\"C\",1,2,3]\n *\n * }\n * </div></code>\n */\np5.prototype.concat = function(list0, list1) {\n  return list0.concat(list1);\n};\n\n/**\n * Reverses the order of an array, maps to Array.reverse()\n *\n * @method reverse\n * @param {Array} list Array to reverse\n * @example\n * <div class=\"norender\"><code>\n * function setup() {\n *   var myArray = new Array(\"A\", \"B\", \"C\");\n *   print(myArray); // [\"A\",\"B\",\"C\"]\n *\n *   reverse(myArray);\n *   print(myArray); // [\"C\",\"B\",\"A\"]\n * }\n * </div></code>\n */\np5.prototype.reverse = function(list) {\n  return list.reverse();\n};\n\n/**\n * Decreases an array by one element and returns the shortened array,\n * maps to Array.pop().\n *\n * @method shorten\n * @param  {Array} list Array to shorten\n * @return {Array} shortened Array\n * @example\n * <div class = \"norender\"><code>\n * function setup() {\n *   var myArray = new Array(\"A\", \"B\", \"C\");\n *   print(myArray); // [\"A\",\"B\",\"C\"]\n *\n *   var newArray = shorten(myArray);\n *   print(myArray); // [\"A\",\"B\",\"C\"]\n *   print(newArray); // [\"A\",\"B\"]\n * }\n * </div></code>\n */\np5.prototype.shorten = function(list) {\n  list.pop();\n  return list;\n};\n\n/**\n * Randomizes the order of the elements of an array. Implements\n * <a href=\"http://Bost.Ocks.org/mike/shuffle/\" target=_blank>\n * Fisher-Yates Shuffle Algorithm</a>.\n *\n * @method shuffle\n * @param  {Array}   array  Array to shuffle\n * @param  {Boolean} [bool] modify passed array\n * @return {Array}   shuffled Array\n * @example\n * <div><code>\n * function setup() {\n *   var regularArr = ['ABC', 'def', createVector(), TAU, Math.E];\n *   print(regularArr);\n *   shuffle(regularArr, true); // force modifications to passed array\n *   print(regularArr);\n *\n *   // By default shuffle() returns a shuffled cloned array:\n *   var newArr = shuffle(regularArr);\n *   print(regularArr);\n *   print(newArr);\n * }\n * </code></div>\n */\np5.prototype.shuffle = function(arr, bool) {\n  var isView = ArrayBuffer && ArrayBuffer.isView && ArrayBuffer.isView(arr);\n  arr = bool || isView ? arr : arr.slice();\n\n  var rnd, tmp, idx = arr.length;\n  while (idx > 1) {\n    rnd = Math.random()*idx | 0;\n\n    tmp = arr[--idx];\n    arr[idx] = arr[rnd];\n    arr[rnd] = tmp;\n  }\n\n  return arr;\n};\n\n/**\n * Sorts an array of numbers from smallest to largest, or puts an array of\n * words in alphabetical order. The original array is not modified; a\n * re-ordered array is returned. The count parameter states the number of\n * elements to sort. For example, if there are 12 elements in an array and\n * count is set to 5, only the first 5 elements in the array will be sorted.\n *\n * @method sort\n * @param {Array} list Array to sort\n * @param {Number} [count] number of elements to sort, starting from 0\n *\n * @example\n * <div class = \"norender\"><code>\n * function setup() {\n *   var words = new Array(\"banana\", \"apple\", \"pear\",\"lime\");\n *   print(words); // [\"banana\", \"apple\", \"pear\", \"lime\"]\n *   var count = 4; // length of array\n *\n *   words = sort(words, count);\n *   print(words); // [\"apple\", \"banana\", \"lime\", \"pear\"]\n * }\n * </div></code>\n * <div class = \"norender\"><code>\n * function setup() {\n *   var numbers = new Array(2,6,1,5,14,9,8,12);\n *   print(numbers); // [2,6,1,5,14,9,8,12]\n *   var count = 5; // Less than the length of the array\n *\n *   numbers = sort(numbers, count);\n *   print(numbers); // [1,2,5,6,14,9,8,12]\n * }\n * </div></code>\n */\np5.prototype.sort = function(list, count) {\n  var arr = count ? list.slice(0, Math.min(count, list.length)) : list;\n  var rest = count ? list.slice(Math.min(count, list.length)) : [];\n  if (typeof arr[0] === 'string') {\n    arr = arr.sort();\n  } else {\n    arr = arr.sort(function(a,b){return a-b;});\n  }\n  return arr.concat(rest);\n};\n\n/**\n * Inserts a value or an array of values into an existing array. The first\n * parameter specifies the initial array to be modified, and the second\n * parameter defines the data to be inserted. The third parameter is an index\n * value which specifies the array position from which to insert data.\n * (Remember that array index numbering starts at zero, so the first position\n * is 0, the second position is 1, and so on.)\n *\n * @method splice\n * @param {Array}  list Array to splice into\n * @param {any}    value value to be spliced in\n * @param {Number} position in the array from which to insert data\n *\n * @example\n * <div class = \"norender\"><code>\n * function setup() {\n *   var myArray = new Array(0,1,2,3,4);\n *   var insArray = new Array(\"A\",\"B\",\"C\");\n *   print(myArray); // [0,1,2,3,4]\n *   print(insArray); // [\"A\",\"B\",\"C\"]\n *\n *   splice(myArray, insArray, 3);\n *   print(myArray); // [0,1,2,\"A\",\"B\",\"C\",3,4]\n * }\n * </div></code>\n */\np5.prototype.splice = function(list, value, index) {\n\n  // note that splice returns spliced elements and not an array\n  Array.prototype.splice.apply(list, [index, 0].concat(value));\n\n  return list;\n};\n\n/**\n * Extracts an array of elements from an existing array. The list parameter\n * defines the array from which the elements will be copied, and the start\n * and count parameters specify which elements to extract. If no count is\n * given, elements will be extracted from the start to the end of the array.\n * When specifying the start, remember that the first array element is 0.\n * This function does not change the source array.\n *\n * @method subset\n * @param  {Array}  list    Array to extract from\n * @param  {Number} start   position to begin\n * @param  {Number} [count] number of values to extract\n * @return {Array}          Array of extracted elements\n *\n * @example\n * <div class = \"norender\"><code>\n * function setup() {\n *   var myArray = new Array(1,2,3,4,5);\n *   print(myArray); // [1,2,3,4,5]\n *\n *   var sub1 = subset(myArray, 0, 3);\n *   var sub2 = subset(myArray, 2, 2);\n *   print(sub1); // [1,2,3]\n *   print(sub2); // [3,4]\n * }\n * </div></code>\n */\np5.prototype.subset = function(list, start, count) {\n  if (typeof count !== 'undefined') {\n    return list.slice(start, start + count);\n  } else {\n    return list.slice(start, list.length);\n  }\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],74:[function(_dereq_,module,exports){\n/**\n * @module Data\n * @submodule Conversion\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/**\n * Converts a string to its floating point representation. The contents of a\n * string must resemble a number, or NaN (not a number) will be returned.\n * For example, float(\"1234.56\") evaluates to 1234.56, but float(\"giraffe\")\n * will return NaN.\n *\n * @method float\n * @param {String}  str float string to parse\n * @return {Number}     floating point representation of string\n * @example\n * <div><code>\n * var str = '20';\n * var diameter = float(str);\n * ellipse(width/2, height/2, diameter, diameter);\n * </code></div>\n *\n * @alt\n * 20 by 20 white ellipse in the center of the canvas\n *\n */\np5.prototype.float = function(str) {\n  return parseFloat(str);\n};\n\n/**\n * Converts a boolean, string, or float to its integer representation.\n * When an array of values is passed in, then an int array of the same length\n * is returned.\n *\n * @method int\n * @param {String|Boolean|Number|Array} n value to parse\n * @return {Number}                     integer representation of value\n * @example\n * <div class='norender'><code>\n * print(int(\"10\")); // 10\n * print(int(10.31)); // 10\n * print(int(-10)); // -10\n * print(int(true)); // 1\n * print(int(false)); // 0\n * print(int([false, true, \"10.3\", 9.8])); // [0, 1, 10, 9]\n * </code></div>\n */\np5.prototype.int = function(n, radix) {\n  if (typeof n === 'string') {\n    radix = radix || 10;\n    return parseInt(n, radix);\n  } else if (typeof n === 'number') {\n    return n | 0;\n  } else if (typeof n === 'boolean') {\n    return n ? 1 : 0;\n  } else if (n instanceof Array) {\n    return n.map(function(n) { return p5.prototype.int(n, radix); });\n  }\n};\n\n/**\n * Converts a boolean, string or number to its string representation.\n * When an array of values is passed in, then an array of strings of the same\n * length is returned.\n *\n * @method str\n * @param {String|Boolean|Number|Array} n value to parse\n * @return {String}                     string representation of value\n * @example\n * <div class='norender'><code>\n * print(str(\"10\"));  // \"10\"\n * print(str(10.31)); // \"10.31\"\n * print(str(-10));   // \"-10\"\n * print(str(true));  // \"true\"\n * print(str(false)); // \"false\"\n * print(str([true, \"10.3\", 9.8])); // [ \"true\", \"10.3\", \"9.8\" ]\n * </code></div>\n */\np5.prototype.str = function(n) {\n  if (n instanceof Array) {\n    return n.map(p5.prototype.str);\n  } else {\n    return String(n);\n  }\n};\n\n/**\n * Converts a number or string to its boolean representation.\n * For a number, any non-zero value (positive or negative) evaluates to true,\n * while zero evaluates to false. For a string, the value \"true\" evaluates to\n * true, while any other value evaluates to false. When an array of number or\n * string values is passed in, then a array of booleans of the same length is\n * returned.\n *\n * @method boolean\n * @param {String|Boolean|Number|Array} n value to parse\n * @return {Boolean}                    boolean representation of value\n * @example\n * <div class='norender'><code>\n * print(boolean(0));               // false\n * print(boolean(1));               // true\n * print(boolean(\"true\"));          // true\n * print(boolean(\"abcd\"));          // false\n * print(boolean([0, 12, \"true\"])); // [false, true, false]\n * </code></div>\n */\np5.prototype.boolean = function(n) {\n  if (typeof n === 'number') {\n    return n !== 0;\n  } else if (typeof n === 'string') {\n    return n.toLowerCase() === 'true';\n  } else if (typeof n === 'boolean') {\n    return n;\n  } else if (n instanceof Array) {\n    return n.map(p5.prototype.boolean);\n  }\n};\n\n/**\n * Converts a number, string or boolean to its byte representation.\n * A byte can be only a whole number between -128 and 127, so when a value\n * outside of this range is converted, it wraps around to the corresponding\n * byte representation. When an array of number, string or boolean values is\n * passed in, then an array of bytes the same length is returned.\n *\n * @method byte\n * @param {String|Boolean|Number|Array} n value to parse\n * @return {Number}                     byte representation of value\n * @example\n * <div class='norender'><code>\n * print(byte(127));               // 127\n * print(byte(128));               // -128\n * print(byte(23.4));              // 23\n * print(byte(\"23.4\"));            // 23\n * print(byte(true));              // 1\n * print(byte([0, 255, \"100\"]));   // [0, -1, 100]\n * </code></div>\n */\np5.prototype.byte = function(n) {\n  var nn = p5.prototype.int(n, 10);\n  if (typeof nn === 'number') {\n    return ((nn + 128) % 256) - 128;\n  } else if (nn instanceof Array) {\n    return nn.map(p5.prototype.byte);\n  }\n};\n\n/**\n * Converts a number or string to its corresponding single-character\n * string representation. If a string parameter is provided, it is first\n * parsed as an integer and then translated into a single-character string.\n * When an array of number or string values is passed in, then an array of\n * single-character strings of the same length is returned.\n *\n * @method char\n * @param {String|Number|Array} n value to parse\n * @return {String}             string representation of value\n * @example\n * <div class='norender'><code>\n * print(char(65));                     // \"A\"\n * print(char(\"65\"));                   // \"A\"\n * print(char([65, 66, 67]));           // [ \"A\", \"B\", \"C\" ]\n * print(join(char([65, 66, 67]), '')); // \"ABC\"\n * </code></div>\n */\np5.prototype.char = function(n) {\n  if (typeof n === 'number' && !isNaN(n)) {\n    return String.fromCharCode(n);\n  } else if (n instanceof Array) {\n    return n.map(p5.prototype.char);\n  } else if (typeof n === 'string') {\n    return p5.prototype.char(parseInt(n, 10));\n  }\n};\n\n/**\n * Converts a single-character string to its corresponding integer\n * representation. When an array of single-character string values is passed\n * in, then an array of integers of the same length is returned.\n *\n * @method unchar\n * @param {String|Array} n value to parse\n * @return {Number}      integer representation of value\n * @example\n * <div class='norender'><code>\n * print(unchar(\"A\"));               // 65\n * print(unchar([\"A\", \"B\", \"C\"]));   // [ 65, 66, 67 ]\n * print(unchar(split(\"ABC\", \"\")));  // [ 65, 66, 67 ]\n * </code></div>\n */\np5.prototype.unchar = function(n) {\n  if (typeof n === 'string' && n.length === 1) {\n    return n.charCodeAt(0);\n  } else if (n instanceof Array) {\n    return n.map(p5.prototype.unchar);\n  }\n};\n\n/**\n * Converts a number to a string in its equivalent hexadecimal notation. If a\n * second parameter is passed, it is used to set the number of characters to\n * generate in the hexadecimal notation. When an array is passed in, an\n * array of strings in hexadecimal notation of the same length is returned.\n *\n * @method hex\n * @param {Number|Array} n value to parse\n * @return {String}      hexadecimal string representation of value\n * @example\n * <div class='norender'><code>\n * print(hex(255));               // \"000000FF\"\n * print(hex(255, 6));            // \"0000FF\"\n * print(hex([0, 127, 255], 6));  // [ \"000000\", \"00007F\", \"0000FF\" ]\n * </code></div>\n */\np5.prototype.hex = function(n, digits) {\n  digits = (digits === undefined || digits === null) ? digits = 8 : digits;\n  if (n instanceof Array) {\n    return n.map(function(n) { return p5.prototype.hex(n, digits); });\n  } else if (typeof n === 'number') {\n    if (n < 0) {\n      n = 0xFFFFFFFF + n + 1;\n    }\n    var hex = Number(n).toString(16).toUpperCase();\n    while (hex.length < digits) {\n      hex = '0' + hex;\n    }\n    if (hex.length >= digits) {\n      hex = hex.substring(hex.length - digits, hex.length);\n    }\n    return hex;\n  }\n};\n\n/**\n * Converts a string representation of a hexadecimal number to its equivalent\n * integer value. When an array of strings in hexadecimal notation is passed\n * in, an array of integers of the same length is returned.\n *\n * @method unhex\n * @param {String|Array} n value to parse\n * @return {Number}      integer representation of hexadecimal value\n * @example\n * <div class='norender'><code>\n * print(unhex(\"A\"));                // 10\n * print(unhex(\"FF\"));               // 255\n * print(unhex([\"FF\", \"AA\", \"00\"])); // [ 255, 170, 0 ]\n * </code></div>\n */\np5.prototype.unhex = function(n) {\n  if (n instanceof Array) {\n    return n.map(p5.prototype.unhex);\n  } else {\n    return parseInt('0x' + n, 16);\n  }\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],75:[function(_dereq_,module,exports){\n/**\n * @module Data\n * @submodule String Functions\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n//return p5; //LM is this a mistake?\n\n/**\n * Combines an array of Strings into one String, each separated by the\n * character(s) used for the separator parameter. To join arrays of ints or\n * floats, it's necessary to first convert them to Strings using nf() or\n * nfs().\n *\n * @method join\n * @param  {Array}  list      array of Strings to be joined\n * @param  {String} separator String to be placed between each item\n * @return {String}           joined String\n * @example\n * <div>\n * <code>\n * var array = [\"Hello\", \"world!\"]\n * var separator = \" \"\n * var message = join(array, separator);\n * text(message, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * \"hello world!\" displayed middle left of canvas.\n *\n */\np5.prototype.join = function(list, separator) {\n  return list.join(separator);\n};\n\n/**\n * This function is used to apply a regular expression to a piece of text,\n * and return matching groups (elements found inside parentheses) as a\n * String array. If there are no matches, a null value will be returned.\n * If no groups are specified in the regular expression, but the sequence\n * matches, an array of length 1 (with the matched text as the first element\n * of the array) will be returned.\n * <br><br>\n * To use the function, first check to see if the result is null. If the\n * result is null, then the sequence did not match at all. If the sequence\n * did match, an array is returned.\n * <br><br>\n * If there are groups (specified by sets of parentheses) in the regular\n * expression, then the contents of each will be returned in the array.\n * Element [0] of a regular expression match returns the entire matching\n * string, and the match groups start at element [1] (the first group is [1],\n * the second [2], and so on).\n *\n * @method match\n * @param  {String} str    the String to be searched\n * @param  {String} regexp the regexp to be used for matching\n * @return {Array}         Array of Strings found\n * @example\n * <div>\n * <code>\n * var string = \"Hello p5js*!\"\n * var regexp = \"p5js\\\\*\"\n * var match = match(string, regexp);\n * text(match, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * \"p5js*\" displayed middle left of canvas.\n *\n */\np5.prototype.match =  function(str, reg) {\n  return str.match(reg);\n};\n\n/**\n * This function is used to apply a regular expression to a piece of text,\n * and return a list of matching groups (elements found inside parentheses)\n * as a two-dimensional String array. If there are no matches, a null value\n * will be returned. If no groups are specified in the regular expression,\n * but the sequence matches, a two dimensional array is still returned, but\n * the second dimension is only of length one.\n * <br><br>\n * To use the function, first check to see if the result is null. If the\n * result is null, then the sequence did not match at all. If the sequence\n * did match, a 2D array is returned.\n * <br><br>\n * If there are groups (specified by sets of parentheses) in the regular\n * expression, then the contents of each will be returned in the array.\n * Assuming a loop with counter variable i, element [i][0] of a regular\n * expression match returns the entire matching string, and the match groups\n * start at element [i][1] (the first group is [i][1], the second [i][2],\n * and so on).\n *\n * @method matchAll\n * @param  {String} str    the String to be searched\n * @param  {String} regexp the regexp to be used for matching\n * @return {Array}         2d Array of Strings found\n * @example\n * <div class=\"norender\">\n * <code>\n * var string = \"Hello p5js*! Hello world!\"\n * var regexp = \"Hello\"\n * matchAll(string, regexp);\n * </code>\n * </div>\n\n */\np5.prototype.matchAll = function(str, reg) {\n  var re = new RegExp(reg, 'g');\n  var match = re.exec(str);\n  var matches = [];\n  while (match !== null) {\n    matches.push(match);\n    // matched text: match[0]\n    // match start: match.index\n    // capturing group n: match[n]\n    match = re.exec(str);\n  }\n  return matches;\n};\n\n/**\n * Utility function for formatting numbers into strings. There are two\n * versions: one for formatting floats, and one for formatting ints.\n * The values for the digits, left, and right parameters should always\n * be positive integers.\n *\n * @method nf\n * @param {Number|Array} num      the Number to format\n * @param {Number}       [left]   number of digits to the left of the\n *                                decimal point\n * @param {Number}       [right]  number of digits to the right of the\n *                                decimal point\n * @return {String|Array}         formatted String\n * @example\n * <div>\n * <code>\n * function setup() {\n *   background(200);\n *   var num = 112.53106115;\n *\n *   noStroke();\n *   fill(0);\n *   textSize(14);\n *   // Draw formatted numbers\n *   text(nf(num, 5, 2), 10, 20);\n *\n *   text(nf(num, 4, 3), 10, 55);\n *\n *   text(nf(num, 3, 6), 10, 85);\n *\n *   // Draw dividing lines\n *   stroke(120);\n *   line(0, 30, width, 30);\n *   line(0, 65, width, 65);\n * }\n * </code>\n * </div>\n *\n * @alt\n * \"0011253\" top left, \"0112.531\" mid left, \"112.531061\" bottom left canvas\n *\n */\np5.prototype.nf = function () {\n  if (arguments[0] instanceof Array) {\n    var a = arguments[1];\n    var b = arguments[2];\n    return arguments[0].map(function (x) {\n      return doNf(x, a, b);\n    });\n  }\n  else{\n    var typeOfFirst = Object.prototype.toString.call(arguments[0]);\n    if(typeOfFirst === '[object Arguments]'){\n      if(arguments[0].length===3){\n        return this.nf(arguments[0][0],arguments[0][1],arguments[0][2]);\n      }\n      else if(arguments[0].length===2){\n        return this.nf(arguments[0][0],arguments[0][1]);\n      }\n      else{\n        return this.nf(arguments[0][0]);\n      }\n    }\n    else {\n      return doNf.apply(this, arguments);\n    }\n  }\n};\n\nfunction doNf() {\n  var num = arguments[0];\n  var neg = num < 0;\n  var n = neg ? num.toString().substring(1) : num.toString();\n  var decimalInd = n.indexOf('.');\n  var intPart = decimalInd !== -1 ? n.substring(0, decimalInd) : n;\n  var decPart = decimalInd !== -1 ? n.substring(decimalInd + 1) : '';\n  var str = neg ? '-' : '';\n  if (arguments.length === 3) {\n    var decimal = '';\n    if(decimalInd !== -1 || arguments[2] - decPart.length > 0){\n      decimal = '.';\n    }\n    if (decPart.length > arguments[2]) {\n      decPart = decPart.substring(0, arguments[2]);\n    }\n    for (var i = 0; i < arguments[1] - intPart.length; i++) {\n      str += '0';\n    }\n    str += intPart;\n    str += decimal;\n    str += decPart;\n    for (var j = 0; j < arguments[2] - decPart.length; j++) {\n      str += '0';\n    }\n    return str;\n  }\n  else {\n    for (var k = 0; k < Math.max(arguments[1] - intPart.length, 0); k++) {\n      str += '0';\n    }\n    str += n;\n    return str;\n  }\n}\n\n/**\n * Utility function for formatting numbers into strings and placing\n * appropriate commas to mark units of 1000. There are two versions: one\n * for formatting ints, and one for formatting an array of ints. The value\n * for the right parameter should always be a positive integer.\n *\n * @method nfc\n * @param  {Number|Array}   num     the Number to format\n * @param  {Number}         [right] number of digits to the right of the\n *                                  decimal point\n * @return {String|Array}           formatted String\n * @example\n * <div>\n * <code>\n * function setup() {\n *   background(200);\n *   var num = 11253106.115;\n *   var numArr = new Array(1,1,2);\n *\n *   noStroke();\n *   fill(0);\n *   textSize(12);\n *\n *   // Draw formatted numbers\n *   text(nfc(num, 4, 2), 10, 30);\n *   text(nfc(numArr, 2, 1), 10, 80);\n *\n *   // Draw dividing line\n *   stroke(120);\n *   line(0, 50, width, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * \"11,253,106.115\" top middle and \"1.00,1.00,2.00\" displayed bottom mid\n *\n */\np5.prototype.nfc = function () {\n  if (arguments[0] instanceof Array) {\n    var a = arguments[1];\n    return arguments[0].map(function (x) {\n      return doNfc(x, a);\n    });\n  } else {\n    return doNfc.apply(this, arguments);\n  }\n};\nfunction doNfc() {\n  var num = arguments[0].toString();\n  var dec = num.indexOf('.');\n  var rem = dec !== -1 ? num.substring(dec) : '';\n  var n = dec !== -1 ? num.substring(0, dec) : num;\n  n = n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  if (arguments[1] === 0) {\n    rem = '';\n  }\n  else if(arguments[1] !== undefined){\n    if(arguments[1] > rem.length){\n      rem+= dec === -1 ? '.' : '';\n      var len = arguments[1] - rem.length + 1;\n      for(var i =0; i< len; i++){\n        rem += '0';\n      }\n    }\n    else{\n      rem = rem.substring(0, arguments[1] + 1);\n    }\n  }\n  return n + rem;\n}\n\n/**\n * Utility function for formatting numbers into strings. Similar to nf() but\n * puts a \"+\" in front of positive numbers and a \"-\" in front of negative\n * numbers. There are two versions: one for formatting floats, and one for\n * formatting ints. The values for left, and right parameters\n * should always be positive integers.\n *\n * @method nfp\n * @param {Number|Array} num      the Number to format\n * @param {Number}       [left]   number of digits to the left of the decimal\n *                                point\n * @param {Number}       [right]  number of digits to the right of the\n *                                decimal point\n * @return {String|Array}         formatted String\n * @example\n * <div>\n * <code>\n * function setup() {\n *   background(200);\n *   var num1 = 11253106.115;\n *   var num2 = -11253106.115;\n *\n *   noStroke();\n *   fill(0);\n *   textSize(12);\n *\n *   // Draw formatted numbers\n *   text(nfp(num1, 4, 2), 10, 30);\n *   text(nfp(num2, 4, 2), 10, 80);\n *\n *   // Draw dividing line\n *   stroke(120);\n *   line(0, 50, width, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * \"+11253106.11\" top middle and \"-11253106.11\" displayed bottom middle\n *\n */\np5.prototype.nfp = function() {\n  var nfRes = this.nf.apply(this, arguments);\n  if (nfRes instanceof Array) {\n    return nfRes.map(addNfp);\n  } else {\n    return addNfp(nfRes);\n  }\n};\n\nfunction addNfp() {\n  return (\n    parseFloat(arguments[0]) > 0) ?\n    '+'+arguments[0].toString() :\n    arguments[0].toString();\n}\n\n/**\n * Utility function for formatting numbers into strings. Similar to nf() but\n * puts a \" \" (space) in front of positive numbers and a \"-\" in front of\n * negative numbers. There are two versions: one for formatting floats, and\n * one for formatting ints. The values for the digits, left, and right\n * parameters should always be positive integers.\n *\n * @method nfs\n * @param {Number|Array} num      the Number to format\n * @param {Number}       [left]   number of digits to the left of the decimal\n *                                point\n * @param {Number}       [right]  number of digits to the right of the\n *                                decimal point\n * @return {String|Array}         formatted String\n * @example\n * <div>\n * <code>\n * function setup() {\n *   background(200);\n *   var num1 = 11253106.115;\n *   var num2 = -11253106.115;\n *\n *   noStroke();\n *   fill(0);\n *   textSize(12);\n *   // Draw formatted numbers\n *   text(nfs(num1, 4, 2), 10, 30);\n *\n *   text(nfs(num2, 4, 2), 10, 80);\n *\n *   // Draw dividing line\n *   stroke(120);\n *   line(0, 50, width, 50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * \"11253106.11\" top middle and \"-11253106.11\" displayed bottom middle\n *\n */\np5.prototype.nfs = function() {\n  var nfRes = this.nf.apply(this, arguments);\n  if (nfRes instanceof Array) {\n    return nfRes.map(addNfs);\n  } else {\n    return addNfs(nfRes);\n  }\n};\n\nfunction addNfs() {\n  return (\n    parseFloat(arguments[0]) > 0) ?\n    ' '+arguments[0].toString() :\n    arguments[0].toString();\n}\n\n/**\n * The split() function maps to String.split(), it breaks a String into\n * pieces using a character or string as the delimiter. The delim parameter\n * specifies the character or characters that mark the boundaries between\n * each piece. A String[] array is returned that contains each of the pieces.\n *\n * The splitTokens() function works in a similar fashion, except that it\n * splits using a range of characters instead of a specific character or\n * sequence.\n *\n * @method split\n * @param  {String} value the String to be split\n * @param  {String} delim the String used to separate the data\n * @return {Array}  Array of Strings\n * @example\n * <div>\n * <code>\n * var names = \"Pat,Xio,Alex\"\n * var splitString = split(names, \",\");\n * text(splitString[0], 5, 30);\n * text(splitString[1], 5, 50);\n * text(splitString[2], 5, 70);\n * </code>\n * </div>\n *\n * @alt\n * \"pat\" top left, \"Xio\" mid left and \"Alex\" displayed bottom left\n *\n */\np5.prototype.split = function(str, delim) {\n  return str.split(delim);\n};\n\n/**\n * The splitTokens() function splits a String at one or many character\n * delimiters or \"tokens.\" The delim parameter specifies the character or\n * characters to be used as a boundary.\n * <br><br>\n * If no delim characters are specified, any whitespace character is used to\n * split. Whitespace characters include tab (\\t), line feed (\\n), carriage\n * return (\\r), form feed (\\f), and space.\n *\n * @method splitTokens\n * @param  {String} value   the String to be split\n * @param  {String} [delim] list of individual Strings that will be used as\n *                          separators\n * @return {Array}          Array of Strings\n * @example\n * <div class = \"norender\">\n * <code>\n * function setup() {\n *   var myStr = \"Mango, Banana, Lime\";\n *   var myStrArr = splitTokens(myStr, \",\");\n *\n *   print(myStrArr); // prints : [\"Mango\",\" Banana\",\" Lime\"]\n * }\n * </code>\n * </div>\n */\np5.prototype.splitTokens = function() {\n  var d,sqo,sqc,str;\n  str = arguments[1];\n  if (arguments.length > 1) {\n    sqc = /\\]/g.exec(str);\n    sqo = /\\[/g.exec(str);\n    if ( sqo && sqc ) {\n      str = str.slice(0, sqc.index) + str.slice(sqc.index+1);\n      sqo = /\\[/g.exec(str);\n      str = str.slice(0, sqo.index) + str.slice(sqo.index+1);\n      d = new RegExp('[\\\\['+str+'\\\\]]','g');\n    } else if ( sqc ) {\n      str = str.slice(0, sqc.index) + str.slice(sqc.index+1);\n      d = new RegExp('[' + str + '\\\\]]', 'g');\n    } else if(sqo) {\n      str = str.slice(0, sqo.index) + str.slice(sqo.index+1);\n      d = new RegExp('[' + str + '\\\\[]', 'g');\n    } else {\n      d = new RegExp('[' + str + ']', 'g');\n    }\n  } else {\n    d = /\\s/g;\n  }\n  return arguments[0].split(d).filter(function(n){return n;});\n};\n\n/**\n * Removes whitespace characters from the beginning and end of a String. In\n * addition to standard whitespace characters such as space, carriage return,\n * and tab, this function also removes the Unicode \"nbsp\" character.\n *\n * @method trim\n * @param  {String|Array} str a String or Array of Strings to be trimmed\n * @return {String|Array}       a trimmed String or Array of Strings\n * @example\n * <div>\n * <code>\n * var string = trim(\"  No new lines\\n   \");\n * text(string +\" here\", 2, 50);\n * </code>\n * </div>\n *\n * @alt\n * \"No new lines here\" displayed center canvas\n *\n */\np5.prototype.trim = function(str) {\n  if (str instanceof Array) {\n    return str.map(this.trim);\n  } else {\n    return str.trim();\n  }\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],76:[function(_dereq_,module,exports){\n/**\n * @module IO\n * @submodule Time & Date\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/**\n * p5.js communicates with the clock on your computer. The day() function\n * returns the current day as a value from 1 - 31.\n *\n * @method day\n * @return {Number} the current day\n * @example\n * <div>\n * <code>\n * var d = day();\n * text(\"Current day: \\n\" + d, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * Current day is displayed\n *\n */\np5.prototype.day = function() {\n  return new Date().getDate();\n};\n\n/**\n * p5.js communicates with the clock on your computer. The hour() function\n * returns the current hour as a value from 0 - 23.\n *\n * @method hour\n * @return {Number} the current hour\n * @example\n * <div>\n * <code>\n * var h = hour();\n * text(\"Current hour:\\n\" + h, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * Current hour is displayed\n *\n */\np5.prototype.hour = function() {\n  return new Date().getHours();\n};\n\n/**\n * p5.js communicates with the clock on your computer. The minute() function\n * returns the current minute as a value from 0 - 59.\n *\n * @method minute\n * @return {Number} the current minute\n * @example\n * <div>\n * <code>\n * var m = minute();\n * text(\"Current minute: \\n\" + m, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * Current minute is displayed\n *\n */\np5.prototype.minute = function() {\n  return new Date().getMinutes();\n};\n\n/**\n * Returns the number of milliseconds (thousandths of a second) since\n * starting the program. This information is often used for timing events and\n * animation sequences.\n *\n * @method millis\n * @return {Number} the number of milliseconds since starting the program\n * @example\n * <div>\n * <code>\n * var millisecond = millis();\n * text(\"Milliseconds \\nrunning: \\n\" + millisecond, 5, 40);\n * </code>\n * </div>\n *\n * @alt\n * number of milliseconds since program has started displayed\n *\n */\np5.prototype.millis = function() {\n  return window.performance.now();\n};\n\n/**\n * p5.js communicates with the clock on your computer. The month() function\n * returns the current month as a value from 1 - 12.\n *\n * @method month\n * @return {Number} the current month\n * @example\n * <div>\n * <code>\n * var m = month();\n * text(\"Current month: \\n\" + m, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * Current month is displayed\n *\n */\np5.prototype.month = function() {\n  return new Date().getMonth() + 1; //January is 0!\n};\n\n/**\n * p5.js communicates with the clock on your computer. The second() function\n * returns the current second as a value from 0 - 59.\n *\n * @method second\n * @return {Number} the current second\n * @example\n * <div>\n * <code>\n * var s = second();\n * text(\"Current second: \\n\" + s, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * Current second is displayed\n *\n */\np5.prototype.second = function() {\n  return new Date().getSeconds();\n};\n\n/**\n * p5.js communicates with the clock on your computer. The year() function\n * returns the current year as an integer (2014, 2015, 2016, etc).\n *\n * @method year\n * @return {Number} the current year\n * @example\n * <div>\n * <code>\n * var y = year();\n * text(\"Current year: \\n\" + y, 5, 50);\n * </code>\n * </div>\n *\n * @alt\n * Current year is displayed\n *\n */\np5.prototype.year = function() {\n  return new Date().getFullYear();\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],77:[function(_dereq_,module,exports){\n/**\n * @module Lights, Camera\n * @submodule Camera\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/**\n * Sets camera position\n * @method camera\n * @param  {Number} x  camera position value on x axis\n * @param  {Number} y  camera position value on y axis\n * @param  {Number} z  camera position value on z axis\n * @return {p5}        the p5 object\n * @example\n * <div>\n * <code>\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n * function draw(){\n *  //move the camera away from the plane by a sin wave\n *  camera(0, 0, sin(frameCount * 0.01) * 100);\n *  plane(120, 120);\n * }\n * </code>\n * </div>\n *\n * @alt\n * blue square shrinks in size grows to fill canvas. disappears then loops.\n *\n */\np5.prototype.camera = function(x, y, z){\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  this._validateParameters(\n    'camera',\n    args,\n    ['Number', 'Number', 'Number']\n  );\n  //what it manipulates is the model view matrix\n  this._renderer.translate(-x, -y, -z);\n};\n\n/**\n * Sets perspective camera\n * @method  perspective\n * @param  {Number} fovy   camera frustum vertical field of view,\n *                         from bottom to top of view, in degrees\n * @param  {Number} aspect camera frustum aspect ratio\n * @param  {Number} near   frustum near plane length\n * @param  {Number} far    frustum far plane length\n * @return {p5}            the p5 object\n * @example\n * <div>\n * <code>\n * //drag mouse to toggle the world!\n * //you will see there's a vanish point\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n *   perspective(60 / 180 * PI, width/height, 0.1, 100);\n * }\n * function draw(){\n *  background(200);\n *  orbitControl();\n *  for(var i = -1; i < 2; i++){\n *     for(var j = -2; j < 3; j++){\n *       push();\n *       translate(i*160, 0, j*160);\n *       box(40, 40, 40);\n *       pop();\n *     }\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * colored 3d boxes toggleable with mouse position\n *\n */\np5.prototype.perspective = function(fovy,aspect,near,far) {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  this._validateParameters(\n    'perspective',\n    args,\n    ['Number', 'Number', 'Number', 'Number']\n  );\n  this._renderer.uPMatrix = p5.Matrix.identity();\n  this._renderer.uPMatrix.perspective(fovy,aspect,near,far);\n  this._renderer._curCamera = 'custom';\n};\n\n/**\n * Setup ortho camera\n * @method  ortho\n * @param  {Number} left   camera frustum left plane\n * @param  {Number} right  camera frustum right plane\n * @param  {Number} bottom camera frustum bottom plane\n * @param  {Number} top    camera frustum top plane\n * @param  {Number} near   camera frustum near plane\n * @param  {Number} far    camera frustum far plane\n * @return {p5}            the p5 object\n * @example\n * <div>\n * <code>\n * //drag mouse to toggle the world!\n * //there's no vanish point\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n *   ortho(-width/2, width/2, height/2, -height/2, 0.1, 100);\n * }\n * function draw(){\n *  background(200);\n *  orbitControl();\n *  for(var i = -1; i < 2; i++){\n *     for(var j = -2; j < 3; j++){\n *       push();\n *       translate(i*160, 0, j*160);\n *       box(40, 40, 40);\n *       pop();\n *     }\n *   }\n * }\n * </code>\n * </div>\n *\n * @alt\n * 3 3d boxes, reveal several more boxes on 3d plane when mouse used to toggle\n *\n */\np5.prototype.ortho = function(left,right,bottom,top,near,far) {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  this._validateParameters(\n    'ortho',\n    args,\n      ['Number', 'Number', 'Number', 'Number', 'Number', 'Number']\n  );\n  left /= this.width;\n  right /= this.width;\n  top /= this.height;\n  bottom /= this.height;\n  this._renderer.uPMatrix = p5.Matrix.identity();\n  this._renderer.uPMatrix.ortho(left,right,bottom,top,near,far);\n  this._renderer._curCamera = 'custom';\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],78:[function(_dereq_,module,exports){\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n//@TODO: implement full orbit controls including\n//pan, zoom, quaternion rotation, etc.\np5.prototype.orbitControl = function(){\n  if(this.mouseIsPressed){\n    this.rotateY((this.mouseX - this.width / 2) / (this.width / 2));\n    this.rotateX((this.mouseY - this.height / 2) / (this.width / 2));\n  }\n  return this;\n};\n\nmodule.exports = p5;\n},{\"../core/core\":37}],79:[function(_dereq_,module,exports){\n/**\n * @module Lights, Camera\n * @submodule Lights\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/**\n * Creates an ambient light with a color\n * @method  ambientLight\n * @param  {Number|Array|String|p5.Color} v1  gray value,\n * red or hue value (depending on the current color mode),\n * or color Array, or CSS color string\n * @param  {Number}            [v2] optional: green or saturation value\n * @param  {Number}            [v3] optional: blue or brightness value\n * @param  {Number}            [a]  optional: opacity\n * @return {p5}                the p5 object\n * @example\n * <div>\n * <code>\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n * function draw(){\n *   background(0);\n *   ambientLight(150);\n *   ambientMaterial(250);\n *   sphere(50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * nothing displayed\n *\n */\np5.prototype.ambientLight = function(v1, v2, v3, a){\n  var gl = this._renderer.GL;\n  var shaderProgram = this._renderer._getShader(\n    'lightVert', 'lightTextureFrag');\n\n  gl.useProgram(shaderProgram);\n  shaderProgram.uAmbientColor = gl.getUniformLocation(\n    shaderProgram,\n    'uAmbientColor[' + this._renderer.ambientLightCount + ']');\n\n  var color = this._renderer._pInst.color.apply(\n    this._renderer._pInst, arguments);\n  var colors = color._array;\n\n  gl.uniform3f( shaderProgram.uAmbientColor,\n    colors[0], colors[1], colors[2]);\n\n  //in case there's no material color for the geometry\n  shaderProgram.uMaterialColor = gl.getUniformLocation(\n    shaderProgram, 'uMaterialColor' );\n  gl.uniform4f( shaderProgram.uMaterialColor, 1, 1, 1, 1);\n\n  this._renderer.ambientLightCount ++;\n  shaderProgram.uAmbientLightCount =\n    gl.getUniformLocation(shaderProgram, 'uAmbientLightCount');\n  gl.uniform1i(shaderProgram.uAmbientLightCount,\n    this._renderer.ambientLightCount);\n\n  return this;\n};\n\n/**\n * Creates a directional light with a color and a direction\n * @method  directionalLight\n * @param  {Number|Array|String|p5.Color} v1   gray value,\n * red or hue value (depending on the current color mode),\n * or color Array, or CSS color string\n * @param  {Number}          [v2] optional: green or saturation value\n * @param  {Number}          [v3] optional: blue or brightness value\n * @param  {Number}          [a]  optional: opacity\n * @param  {Number|p5.Vector} x   x axis direction or a p5.Vector\n * @param  {Number}          [y]  optional: y axis direction\n * @param  {Number}          [z]  optional: z axis direction\n * @return {p5}              the p5 object\n * @example\n * <div>\n * <code>\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n * function draw(){\n *   background(0);\n *   //move your mouse to change light direction\n *   var dirX = (mouseX / width - 0.5) *2;\n *   var dirY = (mouseY / height - 0.5) *(-2);\n *   directionalLight(250, 250, 250, dirX, dirY, 0.25);\n *   ambientMaterial(250);\n *   sphere(50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * light source on canvas changeable with mouse position\n *\n */\np5.prototype.directionalLight = function(v1, v2, v3, a, x, y, z) {\n  // TODO(jgessner): Find an example using this and profile it.\n  // var args = new Array(arguments.length);\n  // for (var i = 0; i < args.length; ++i) {\n  //   args[i] = arguments[i];\n  // }\n  // this._validateParameters(\n  //   'directionalLight',\n  //   args,\n  //   [\n  //     //rgbaxyz\n  //     ['Number', 'Number', 'Number', 'Number', 'Number', 'Number', 'Number'],\n  //     //rgbxyz\n  //     ['Number', 'Number', 'Number', 'Number', 'Number', 'Number'],\n  //     //caxyz\n  //     ['Number', 'Number', 'Number', 'Number', 'Number'],\n  //     //cxyz\n  //     ['Number', 'Number', 'Number', 'Number'],\n  //     ['String', 'Number', 'Number', 'Number'],\n  //     ['Array', 'Number', 'Number', 'Number'],\n  //     ['Object', 'Number', 'Number', 'Number'],\n  //     //rgbavector\n  //     ['Number', 'Number', 'Number', 'Number', 'Object'],\n  //     //rgbvector\n  //     ['Number', 'Number', 'Number', 'Object'],\n  //     //cavector\n  //     ['Number', 'Number', 'Object'],\n  //     //cvector\n  //     ['Number', 'Object'],\n  //     ['String', 'Object'],\n  //     ['Array', 'Object'],\n  //     ['Object', 'Object']\n  //   ]\n  // );\n\n  var gl = this._renderer.GL;\n  var shaderProgram = this._renderer._getShader(\n    'lightVert', 'lightTextureFrag');\n\n  gl.useProgram(shaderProgram);\n  shaderProgram.uDirectionalColor = gl.getUniformLocation(\n    shaderProgram,\n    'uDirectionalColor[' + this._renderer.directionalLightCount + ']');\n\n  //@TODO: check parameters number\n  var color = this._renderer._pInst.color.apply(\n    this._renderer._pInst, [v1, v2, v3]);\n  var colors = color._array;\n\n  gl.uniform3f( shaderProgram.uDirectionalColor,\n    colors[0], colors[1], colors[2]);\n\n  var _x, _y, _z;\n\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  if(typeof args[args.length-1] === 'number'){\n    _x = args[args.length-3];\n    _y = args[args.length-2];\n    _z = args[args.length-1];\n\n  }else{\n    try{\n      _x = args[args.length-1].x;\n      _y = args[args.length-1].y;\n      _z = args[args.length-1].z;\n    }\n    catch(error){\n      throw error;\n    }\n  }\n\n  shaderProgram.uLightingDirection = gl.getUniformLocation(\n    shaderProgram,\n    'uLightingDirection[' + this._renderer.directionalLightCount + ']');\n  gl.uniform3f( shaderProgram.uLightingDirection, _x, _y, _z);\n\n  //in case there's no material color for the geometry\n  shaderProgram.uMaterialColor = gl.getUniformLocation(\n    shaderProgram, 'uMaterialColor' );\n  gl.uniform4f( shaderProgram.uMaterialColor, 1, 1, 1, 1);\n\n  this._renderer.directionalLightCount ++;\n  shaderProgram.uDirectionalLightCount =\n    gl.getUniformLocation(shaderProgram, 'uDirectionalLightCount');\n  gl.uniform1i(shaderProgram.uDirectionalLightCount,\n    this._renderer.directionalLightCount);\n\n  return this;\n};\n\n/**\n * Creates a point light with a color and a light position\n * @method  pointLight\n * @param  {Number|Array|String|p5.Color} v1   gray value,\n * red or hue value (depending on the current color mode),\n * or color Array, or CSS color string\n * @param  {Number}          [v2] optional: green or saturation value\n * @param  {Number}          [v3] optional: blue or brightness value\n * @param  {Number}          [a]  optional: opacity\n * @param  {Number|p5.Vector} x   x axis position or a p5.Vector\n * @param  {Number}          [y]  optional: y axis position\n * @param  {Number}          [z]  optional: z axis position\n * @return {p5}              the p5 object\n * @example\n * <div>\n * <code>\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n * function draw(){\n *   background(0);\n *   //move your mouse to change light position\n *   var locY = (mouseY / height - 0.5) *(-2);\n *   var locX = (mouseX / width - 0.5) *2;\n *   //to set the light position,\n *   //think of the world's coordinate as:\n *   // -1,1 -------- 1,1\n *   //   |            |\n *   //   |            |\n *   //   |            |\n *   // -1,-1---------1,-1\n *   pointLight(250, 250, 250, locX, locY, 0);\n *   ambientMaterial(250);\n *   sphere(50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * spot light on canvas changes position with mouse\n *\n */\np5.prototype.pointLight = function(v1, v2, v3, a, x, y, z) {\n  // TODO(jgessner): Find an example using this and profile it.\n  // var args = new Array(arguments.length);\n  // for (var i = 0; i < args.length; ++i) {\n  //   args[i] = arguments[i];\n  // }\n  // this._validateParameters(\n  //   'pointLight',\n  //   arguments,\n  //   [\n  //     //rgbaxyz\n  //     ['Number', 'Number', 'Number', 'Number', 'Number', 'Number', 'Number'],\n  //     //rgbxyz\n  //     ['Number', 'Number', 'Number', 'Number', 'Number', 'Number'],\n  //     //caxyz\n  //     ['Number', 'Number', 'Number', 'Number', 'Number'],\n  //     //cxyz\n  //     ['Number', 'Number', 'Number', 'Number'],\n  //     ['String', 'Number', 'Number', 'Number'],\n  //     ['Array', 'Number', 'Number', 'Number'],\n  //     ['Object', 'Number', 'Number', 'Number'],\n  //     //rgbavector\n  //     ['Number', 'Number', 'Number', 'Number', 'Object'],\n  //     //rgbvector\n  //     ['Number', 'Number', 'Number', 'Object'],\n  //     //cavector\n  //     ['Number', 'Number', 'Object'],\n  //     //cvector\n  //     ['Number', 'Object'],\n  //     ['String', 'Object'],\n  //     ['Array', 'Object'],\n  //     ['Object', 'Object']\n  //   ]\n  // );\n\n  var gl = this._renderer.GL;\n  var shaderProgram = this._renderer._getShader(\n    'lightVert', 'lightTextureFrag');\n\n  gl.useProgram(shaderProgram);\n  shaderProgram.uPointLightColor = gl.getUniformLocation(\n    shaderProgram,\n    'uPointLightColor[' + this._renderer.pointLightCount + ']');\n\n  //@TODO: check parameters number\n  var color = this._renderer._pInst.color.apply(\n    this._renderer._pInst, [v1, v2, v3]);\n  var colors = color._array;\n\n  gl.uniform3f( shaderProgram.uPointLightColor,\n    colors[0], colors[1], colors[2]);\n\n  var _x, _y, _z;\n\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  if(typeof args[args.length-1] === 'number'){\n    _x = args[args.length-3];\n    _y = args[args.length-2];\n    _z = args[args.length-1];\n\n  }else{\n    try{\n      _x = args[args.length-1].x;\n      _y = args[args.length-1].y;\n      _z = args[args.length-1].z;\n    }\n    catch(error){\n      throw error;\n    }\n  }\n\n  shaderProgram.uPointLightLocation = gl.getUniformLocation(\n    shaderProgram,\n    'uPointLightLocation[' + this._renderer.pointLightCount + ']');\n  gl.uniform3f( shaderProgram.uPointLightLocation, _x, _y, _z);\n\n  //in case there's no material color for the geometry\n  shaderProgram.uMaterialColor = gl.getUniformLocation(\n    shaderProgram, 'uMaterialColor' );\n  gl.uniform4f( shaderProgram.uMaterialColor, 1, 1, 1, 1);\n\n  this._renderer.pointLightCount ++;\n  shaderProgram.uPointLightCount =\n    gl.getUniformLocation(shaderProgram, 'uPointLightCount');\n  gl.uniform1i(shaderProgram.uPointLightCount,\n    this._renderer.pointLightCount);\n\n  return this;\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],80:[function(_dereq_,module,exports){\n/**\n * @module Shape\n * @submodule 3D Models\n * @for p5\n * @requires core\n * @requires p5.Geometry3D\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n_dereq_('./p5.Geometry');\n\n/**\n * Load a 3d model from an OBJ file.\n * <br><br>\n * One of the limitations of the OBJ format is that it doesn't have a built-in\n * sense of scale. This means that models exported from different programs might\n * be very different sizes. If your model isn't displaying, try calling\n * loadModel() with the normalized parameter set to true. This will resize the\n * model to a scale appropriate for p5. You can also make additional changes to\n * the final size of your model with the scale() function.\n *\n * @method loadModel\n * @param  {String} path Path of the model to be loaded\n * @param  {Boolean} [normalize] If true, scale the model to a\n *                                standardized size when loading\n * @param  {Function(p5.Geometry3D)} [successCallback] Function to be called\n *                                   once the model is loaded. Will be passed\n *                                   the 3D model object.\n * @param  {Function(Event)}    [failureCallback] called with event error if\n *                                the image fails to load.\n * @return {p5.Geometry} the p5.Geometry3D object\n * @example\n * <div>\n * <code>\n * //draw a spinning teapot\n * var teapot;\n *\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n *\n *   teapot = loadModel('assets/teapot.obj');\n * }\n *\n * function draw(){\n *   background(200);\n *   rotateX(frameCount * 0.01);\n *   rotateY(frameCount * 0.01);\n *   model(teapot);\n * }\n * </code>\n * </div>\n *\n * @alt\n * Vertically rotating 3-d teapot with red, green and blue gradient.\n *\n */\np5.prototype.loadModel = function () {\n  var path = arguments[0];\n  var normalize;\n  var successCallback;\n  var failureCallback;\n  if(typeof arguments[1] === 'boolean') {\n    normalize = arguments[1];\n    successCallback = arguments[2];\n    failureCallback = arguments[3];\n  } else {\n    normalize = false;\n    successCallback = arguments[1];\n    failureCallback = arguments[2];\n  }\n\n  var model = new p5.Geometry();\n  model.gid = path + '|' + normalize;\n  this.loadStrings(path, function(strings) {\n    parseObj(model, strings);\n\n    if (normalize) {\n      model.normalize();\n    }\n\n    if (typeof successCallback === 'function') {\n      successCallback(model);\n    }\n  }.bind(this), failureCallback);\n\n  return model;\n};\n\n/**\n * Parse OBJ lines into model. For reference, this is what a simple model of a\n * square might look like:\n *\n * v -0.5 -0.5 0.5\n * v -0.5 -0.5 -0.5\n * v -0.5 0.5 -0.5\n * v -0.5 0.5 0.5\n *\n * f 4 3 2 1\n */\nfunction parseObj( model, lines ) {\n  // OBJ allows a face to specify an index for a vertex (in the above example),\n  // but it also allows you to specify a custom combination of vertex, UV\n  // coordinate, and vertex normal. So, \"3/4/3\" would mean, \"use vertex 3 with\n  // UV coordinate 4 and vertex normal 3\". In WebGL, every vertex with different\n  // parameters must be a different vertex, so loadedVerts is used to\n  // temporarily store the parsed vertices, normals, etc., and indexedVerts is\n  // used to map a specific combination (keyed on, for example, the string\n  // \"3/4/3\"), to the actual index of the newly created vertex in the final\n  // object.\n  var loadedVerts = {'v' : [],\n                    'vt' : [],\n                    'vn' : []};\n  var indexedVerts = {};\n\n  for (var line = 0; line < lines.length; ++line) {\n    // Each line is a separate object (vertex, face, vertex normal, etc)\n    // For each line, split it into tokens on whitespace. The first token\n    // describes the type.\n    var tokens = lines[line].trim().split(/\\b\\s+/);\n\n    if (tokens.length > 0) {\n      if (tokens[0] === 'v' || tokens[0] === 'vn') {\n        // Check if this line describes a vertex or vertex normal.\n        // It will have three numeric parameters.\n        var vertex = new p5.Vector(parseFloat(tokens[1]),\n                                   parseFloat(tokens[2]),\n                                   parseFloat(tokens[3]));\n        loadedVerts[tokens[0]].push(vertex);\n      } else if (tokens[0] === 'vt') {\n        // Check if this line describes a texture coordinate.\n        // It will have two numeric parameters.\n        var texVertex = [parseFloat(tokens[1]), parseFloat(tokens[2])];\n        loadedVerts[tokens[0]].push(texVertex);\n      } else if (tokens[0] === 'f') {\n        // Check if this line describes a face.\n        // OBJ faces can have more than three points. Triangulate points.\n        for (var tri = 3; tri < tokens.length; ++tri) {\n          var face = [];\n\n          var vertexTokens = [1, tri - 1, tri];\n\n          for (var tokenInd = 0; tokenInd < vertexTokens.length; ++tokenInd) {\n            // Now, convert the given token into an index\n            var vertString = tokens[vertexTokens[tokenInd]];\n            var vertIndex = 0;\n\n            // TODO: Faces can technically use negative numbers to refer to the\n            // previous nth vertex. I haven't seen this used in practice, but\n            // it might be good to implement this in the future.\n\n            if (indexedVerts[vertString] !== undefined) {\n              vertIndex = indexedVerts[vertString];\n            } else {\n              var vertParts = vertString.split('/');\n              for (var i = 0; i < vertParts.length; i++) {\n                vertParts[i] = parseInt(vertParts[i]) - 1;\n              }\n\n              vertIndex = indexedVerts[vertString] = model.vertices.length;\n              model.vertices.push(loadedVerts.v[vertParts[0]].copy());\n              if (loadedVerts.vt[vertParts[1]]) {\n                model.uvs.push(loadedVerts.vt[vertParts[1]].slice());\n              } else {\n                model.uvs.push([0, 0]);\n              }\n\n              if (loadedVerts.vn[vertParts[2]]) {\n                model.vertexNormals.push(loadedVerts.vn[vertParts[2]].copy());\n              }\n            }\n\n            face.push(vertIndex);\n          }\n\n          model.faces.push(face);\n        }\n      }\n    }\n  }\n\n  // If the model doesn't have normals, compute the normals\n  if(model.vertexNormals.length === 0) {\n    model.computeNormals();\n  }\n\n  return model;\n}\n\n/**\n * Render a 3d model to the screen.\n *\n * @method model\n * @param  {p5.Geometry} model Loaded 3d model to be rendered\n * @example\n * <div>\n * <code>\n * //draw a spinning teapot\n * var teapot;\n *\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n *\n *   teapot = loadModel('assets/teapot.obj');\n * }\n *\n * function draw(){\n *   background(200);\n *   rotateX(frameCount * 0.01);\n *   rotateY(frameCount * 0.01);\n *   model(teapot);\n * }\n * </code>\n * </div>\n *\n * @alt\n * Vertically rotating 3-d teapot with red, green and blue gradient.\n *\n */\np5.prototype.model = function ( model ) {\n  if (model.vertices.length > 0) {\n    if (!this._renderer.geometryInHash(model.gid)) {\n      this._renderer.createBuffers(model.gid, model);\n    }\n\n    this._renderer.drawBuffers(model.gid);\n  }\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37,\"./p5.Geometry\":82}],81:[function(_dereq_,module,exports){\n/**\n * @module Lights, Camera\n * @submodule Material\n * @for p5\n * @requires core\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n//require('./p5.Texture');\n\n/**\n * Normal material for geometry. You can view all\n * possible materials in this\n * <a href=\"https://p5js.org/examples/examples/3D_Materials.php\">example</a>.\n * @method normalMaterial\n * @return {p5}                the p5 object\n * @example\n * <div>\n * <code>\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *  background(200);\n *  normalMaterial();\n *  sphere(50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * Red, green and blue gradient.\n *\n */\np5.prototype.normalMaterial = function(){\n  this._renderer._getShader('normalVert', 'normalFrag');\n  return this;\n};\n\n/**\n * Texture for geometry.  You can view other possible materials in this\n * <a href=\"https://p5js.org/examples/examples/3D_Materials.php\">example</a>.\n * @method texture\n * @param {p5.Image | p5.MediaElement | p5.Graphics} tex 2-dimensional graphics\n *                    to render as texture\n * @return {p5}                the p5 object\n * @example\n * <div>\n * <code>\n * var img;\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n *   img = loadImage(\"assets/laDefense.jpg\");\n * }\n *\n * function draw(){\n *   background(0);\n *   rotateZ(frameCount * 0.01);\n *   rotateX(frameCount * 0.01);\n *   rotateY(frameCount * 0.01);\n *   //pass image as texture\n *   texture(img);\n *   box(200, 200, 200);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var pg;\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n *   pg = createGraphics(200, 200);\n *   pg.textSize(100);\n * }\n *\n * function draw(){\n *   background(0);\n *   pg.background(255);\n *   pg.text('hello!', 0, 100);\n *   //pass image as texture\n *   texture(pg);\n *   plane(200);\n * }\n * </code>\n * </div>\n *\n * <div>\n * <code>\n * var vid;\n * function preload(){\n *   vid = createVideo(\"assets/fingers.mov\");\n *   vid.hide();\n *   vid.loop();\n * }\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *   background(0);\n *   //pass video frame as texture\n *   texture(vid);\n *   plane(200);\n * }\n * </code>\n * </div>\n *\n * @alt\n * Rotating view of many images umbrella and grid roof on a 3d plane\n * black canvas\n * black canvas\n *\n */\np5.prototype.texture = function(){\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  var gl = this._renderer.GL;\n  var shaderProgram = this._renderer._getShader('lightVert',\n    'lightTextureFrag');\n  gl.useProgram(shaderProgram);\n  var textureData;\n  //if argument is not already a texture\n  //create a new one\n  if(!args[0].isTexture){\n    if (args[0] instanceof p5.Image) {\n      textureData = args[0].canvas;\n    }\n    //if param is a video\n    else if (typeof p5.MediaElement !== 'undefined' &&\n            args[0] instanceof p5.MediaElement){\n      if(!args[0].loadedmetadata) {return;}\n      textureData = args[0].elt;\n    }\n    //used with offscreen 2d graphics renderer\n    else if(args[0] instanceof p5.Graphics){\n      textureData = args[0].elt;\n    }\n    var tex = gl.createTexture();\n    args[0]._setProperty('tex', tex);\n    args[0]._setProperty('isTexture', true);\n    this._renderer._bind.call(this, tex, textureData);\n  }\n  else {\n    if(args[0] instanceof p5.Graphics ||\n      (typeof p5.MediaElement !== 'undefined' &&\n      args[0] instanceof p5.MediaElement)){\n      textureData = args[0].elt;\n    }\n    else if(args[0] instanceof p5.Image){\n      textureData = args[0].canvas;\n    }\n    this._renderer._bind.call(this, args[0].tex, textureData);\n  }\n  //this is where we'd activate multi textures\n  //eg. gl.activeTexture(gl.TEXTURE0 + (unit || 0));\n  //but for now we just have a single texture.\n  //@TODO need to extend this functionality\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, args[0].tex);\n  gl.uniform1i(gl.getUniformLocation(shaderProgram, 'isTexture'), true);\n  gl.uniform1i(gl.getUniformLocation(shaderProgram, 'uSampler'), 0);\n  return this;\n};\n\n/**\n * Texture Util functions\n */\np5.RendererGL.prototype._bind = function(tex, data){\n  var gl = this._renderer.GL;\n  gl.bindTexture(gl.TEXTURE_2D, tex);\n  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n  gl.texImage2D(gl.TEXTURE_2D, 0,\n    gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n  gl.texParameteri(gl.TEXTURE_2D,\n  gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D,\n  gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D,\n  gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D,\n  gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n};\n\n/**\n * Checks whether val is a pot\n * more info on power of 2 here:\n * https://www.opengl.org/wiki/NPOT_Texture\n * @param  {Number}  value\n * @return {Boolean}\n */\n// function _isPowerOf2 (value){\n//   return (value & (value - 1)) === 0;\n// }\n\n/**\n * returns the next highest power of 2 value\n * @param  {Number} value [description]\n * @return {Number}       [description]\n */\n// function _nextHighestPOT (value){\n//   --value;\n//   for (var i = 1; i < 32; i <<= 1) {\n//     value = value | value >> i;\n//   }\n//   return value + 1;\n\n/**\n * Ambient material for geometry with a given color. You can view all\n * possible materials in this\n * <a href=\"https://p5js.org/examples/examples/3D_Materials.php\">example</a>.\n * @method  ambientMaterial\n * @param  {Number|Array|String|p5.Color} v1  gray value,\n * red or hue value (depending on the current color mode),\n * or color Array, or CSS color string\n * @param  {Number}            [v2] optional: green or saturation value\n * @param  {Number}            [v3] optional: blue or brightness value\n * @param  {Number}            [a]  optional: opacity\n* @return {p5}                 the p5 object\n * @example\n * <div>\n * <code>\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n * function draw(){\n *  background(0);\n *  ambientLight(100);\n *  pointLight(250, 250, 250, 100, 100, 0);\n *  ambientMaterial(250);\n *  sphere(50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * radiating light source from top right of canvas\n *\n */\np5.prototype.ambientMaterial = function(v1, v2, v3, a) {\n  var gl = this._renderer.GL;\n  var shaderProgram =\n    this._renderer._getShader('lightVert', 'lightTextureFrag');\n\n  gl.useProgram(shaderProgram);\n  shaderProgram.uMaterialColor = gl.getUniformLocation(\n    shaderProgram, 'uMaterialColor' );\n  var colors = this._renderer._applyColorBlend.apply(this._renderer, arguments);\n\n  gl.uniform4f(shaderProgram.uMaterialColor,\n    colors[0], colors[1], colors[2], colors[3]);\n\n  shaderProgram.uSpecular = gl.getUniformLocation(\n    shaderProgram, 'uSpecular' );\n  gl.uniform1i(shaderProgram.uSpecular, false);\n\n  gl.uniform1i(gl.getUniformLocation(shaderProgram, 'isTexture'), false);\n\n  return this;\n};\n\n/**\n * Specular material for geometry with a given color. You can view all\n * possible materials in this\n * <a href=\"https://p5js.org/examples/examples/3D_Materials.php\">example</a>.\n * @method specularMaterial\n * @param  {Number|Array|String|p5.Color} v1  gray value,\n * red or hue value (depending on the current color mode),\n * or color Array, or CSS color string\n * @param  {Number}            [v2] optional: green or saturation value\n * @param  {Number}            [v3] optional: blue or brightness value\n * @param  {Number}            [a]  optional: opacity\n * @return {p5}                the p5 object\n * @example\n * <div>\n * <code>\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n * function draw(){\n *  background(0);\n *  ambientLight(100);\n *  pointLight(250, 250, 250, 100, 100, 0);\n *  specularMaterial(250);\n *  sphere(50);\n * }\n * </code>\n * </div>\n *\n * @alt\n * diffused radiating light source from top right of canvas\n *\n */\np5.prototype.specularMaterial = function(v1, v2, v3, a) {\n  var gl = this._renderer.GL;\n  var shaderProgram =\n    this._renderer._getShader('lightVert', 'lightTextureFrag');\n  gl.useProgram(shaderProgram);\n  gl.uniform1i(gl.getUniformLocation(shaderProgram, 'isTexture'), false);\n  shaderProgram.uMaterialColor = gl.getUniformLocation(\n    shaderProgram, 'uMaterialColor' );\n  var colors = this._renderer._applyColorBlend.apply(this._renderer, arguments);\n  gl.uniform4f(shaderProgram.uMaterialColor,\n    colors[0], colors[1], colors[2], colors[3]);\n  shaderProgram.uSpecular = gl.getUniformLocation(\n    shaderProgram, 'uSpecular' );\n  gl.uniform1i(shaderProgram.uSpecular, true);\n\n  return this;\n};\n\n/**\n * @private blends colors according to color components.\n * If alpha value is less than 1, we need to enable blending\n * on our gl context.  Otherwise opaque objects need to a depthMask.\n * @param  {Number} v1 [description]\n * @param  {Number} v2 [description]\n * @param  {Number} v3 [description]\n * @param  {Number} a  [description]\n * @return {[Number]}  Normalized numbers array\n */\np5.RendererGL.prototype._applyColorBlend = function(v1,v2,v3,a){\n  var gl = this.GL;\n  var color = this._pInst.color.apply(\n    this._pInst, arguments);\n  var colors = color._array;\n  if(colors[colors.length-1] < 1.0){\n    gl.depthMask(false);\n    gl.enable(gl.BLEND);\n    gl.blendEquation( gl.FUNC_ADD );\n    gl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\n  } else {\n    gl.depthMask(true);\n    gl.disable(gl.BLEND);\n  }\n  return colors;\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37}],82:[function(_dereq_,module,exports){\n//some of the functions are adjusted from Three.js(http://threejs.org)\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n\n/**\n * p5 Geometry class\n * @constructor\n * @param  {Function | Object} vertData callback function or Object\n *                     containing routine(s) for vertex data generation\n * @param  {Number} [detailX] number of vertices on horizontal surface\n * @param  {Number} [detailY] number of vertices on horizontal surface\n * @param {Function} [callback] function to call upon object instantiation.\n *\n */\np5.Geometry = function\n(detailX, detailY, callback){\n  //an array containing every vertex\n  //@type [p5.Vector]\n  this.vertices = [];\n  //an array containing 1 normal per vertex\n  //@type [p5.Vector]\n  //[p5.Vector, p5.Vector, p5.Vector,p5.Vector, p5.Vector, p5.Vector,...]\n  this.vertexNormals = [];\n  //an array containing each three vertex indices that form a face\n  //[[0, 1, 2], [2, 1, 3], ...]\n  this.faces = [];\n  //a 2D array containing uvs for every vertex\n  //[[0.0,0.0],[1.0,0.0], ...]\n  this.uvs = [];\n  this.detailX = (detailX !== undefined) ? detailX: 1;\n  this.detailY = (detailY !== undefined) ? detailY: 1;\n  if(callback instanceof Function){\n    callback.call(this);\n  }\n  return this;\n};\n\np5.Geometry.prototype.computeFaces = function(){\n  var sliceCount = this.detailX + 1;\n  var a, b, c, d;\n  for (var i = 0; i < this.detailY; i++){\n    for (var j = 0; j < this.detailX; j++){\n      a = i * sliceCount + j;// + offset;\n      b = i * sliceCount + j + 1;// + offset;\n      c = (i + 1)* sliceCount + j + 1;// + offset;\n      d = (i + 1)* sliceCount + j;// + offset;\n      this.faces.push([a, b, d]);\n      this.faces.push([d, b, c]);\n    }\n  }\n  return this;\n};\n\np5.Geometry.prototype._getFaceNormal = function(faceId,vertId){\n  //This assumes that vA->vB->vC is a counter-clockwise ordering\n  var face = this.faces[faceId];\n  var vA = this.vertices[face[vertId%3]];\n  var vB = this.vertices[face[(vertId+1)%3]];\n  var vC = this.vertices[face[(vertId+2)%3]];\n  var n = p5.Vector.cross(\n    p5.Vector.sub(vB,vA),\n    p5.Vector.sub(vC,vA));\n  var sinAlpha = p5.Vector.mag(n) /\n  (p5.Vector.mag(p5.Vector.sub(vB,vA))*\n    p5.Vector.mag(p5.Vector.sub(vC,vA)));\n  n = n.normalize();\n  return n.mult(Math.asin(sinAlpha));\n};\n/**\n * computes smooth normals per vertex as an average of each\n * face.\n */\np5.Geometry.prototype.computeNormals = function (){\n  for(var v=0; v < this.vertices.length; v++){\n    var normal = new p5.Vector();\n    for(var i=0; i < this.faces.length; i++){\n      //if our face contains a given vertex\n      //calculate an average of the normals\n      //of the triangles adjacent to that vertex\n      if(this.faces[i][0] === v ||\n        this.faces[i][1] === v ||\n        this.faces[i][2] === v)\n      {\n        normal = normal.add(this._getFaceNormal(i, v));\n      }\n    }\n    normal = normal.normalize();\n    this.vertexNormals.push(normal);\n  }\n  return this;\n};\n\n/**\n * Averages the vertex normals. Used in curved\n * surfaces\n * @return {p5.Geometry}\n */\np5.Geometry.prototype.averageNormals = function() {\n\n  for(var i = 0; i <= this.detailY; i++){\n    var offset = this.detailX + 1;\n    var temp = p5.Vector\n      .add(this.vertexNormals[i*offset],\n        this.vertexNormals[i*offset + this.detailX]);\n    temp = p5.Vector.div(temp, 2);\n    this.vertexNormals[i*offset] = temp;\n    this.vertexNormals[i*offset + this.detailX] = temp;\n  }\n  return this;\n};\n\n/**\n * Averages pole normals.  Used in spherical primitives\n * @return {p5.Geometry}\n */\np5.Geometry.prototype.averagePoleNormals = function() {\n\n  //average the north pole\n  var sum = new p5.Vector(0, 0, 0);\n  for(var i = 0; i < this.detailX; i++){\n    sum.add(this.vertexNormals[i]);\n  }\n  sum = p5.Vector.div(sum, this.detailX);\n\n  for(i = 0; i < this.detailX; i++){\n    this.vertexNormals[i] = sum;\n  }\n\n  //average the south pole\n  sum = new p5.Vector(0, 0, 0);\n  for(i = this.vertices.length - 1;\n    i > this.vertices.length - 1 - this.detailX; i--){\n    sum.add(this.vertexNormals[i]);\n  }\n  sum = p5.Vector.div(sum, this.detailX);\n\n  for(i = this.vertices.length - 1;\n    i > this.vertices.length - 1 - this.detailX; i--){\n    this.vertexNormals[i] = sum;\n  }\n  return this;\n};\n\n/**\n * Modifies all vertices to be centered within the range -100 to 100.\n * @return {p5.Geometry}\n */\np5.Geometry.prototype.normalize = function() {\n  if(this.vertices.length > 0) {\n    // Find the corners of our bounding box\n    var maxPosition = this.vertices[0].copy();\n    var minPosition = this.vertices[0].copy();\n\n    for(var i = 0; i < this.vertices.length; i++) {\n      maxPosition.x = Math.max(maxPosition.x, this.vertices[i].x);\n      minPosition.x = Math.min(minPosition.x, this.vertices[i].x);\n      maxPosition.y = Math.max(maxPosition.y, this.vertices[i].y);\n      minPosition.y = Math.min(minPosition.y, this.vertices[i].y);\n      maxPosition.z = Math.max(maxPosition.z, this.vertices[i].z);\n      minPosition.z = Math.min(minPosition.z, this.vertices[i].z);\n    }\n\n    var center = p5.Vector.lerp(maxPosition, minPosition, 0.5);\n    var dist = p5.Vector.sub(maxPosition, minPosition);\n    var longestDist = Math.max(Math.max(dist.x, dist.y), dist.z);\n    var scale = 200 / longestDist;\n\n    for(i = 0; i < this.vertices.length; i++) {\n      this.vertices[i].sub(center);\n      this.vertices[i].mult(scale);\n    }\n  }\n  return this;\n};\n\nmodule.exports = p5.Geometry;\n\n},{\"../core/core\":37}],83:[function(_dereq_,module,exports){\n/**\n* @requires constants\n* @todo see methods below needing further implementation.\n* future consideration: implement SIMD optimizations\n* when browser compatibility becomes available\n* https://developer.mozilla.org/en-US/docs/Web/JavaScript/\n*   Reference/Global_Objects/SIMD\n*/\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar polarGeometry = _dereq_('../math/polargeometry');\nvar constants = _dereq_('../core/constants');\nvar GLMAT_ARRAY_TYPE = (\n    typeof Float32Array !== 'undefined') ?\n  Float32Array : Array;\n\n/**\n * A class to describe a 4x4 matrix\n * for model and view matrix manipulation in the p5js webgl renderer.\n * class p5.Matrix\n * @constructor\n * @param {Array} [mat4] array literal of our 4x4 matrix\n */\np5.Matrix = function() {\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  // This is default behavior when object\n  // instantiated using createMatrix()\n  // @todo implement createMatrix() in core/math.js\n  if(args[0] instanceof p5) {\n    // save reference to p5 if passed in\n    this.p5 = args[0];\n    if(args[1] === 'mat3'){\n      this.mat3 = args[2] || new GLMAT_ARRAY_TYPE([\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n      ]);\n    }\n    else {\n      this.mat4  = args[1] || new GLMAT_ARRAY_TYPE([\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1\n      ]);\n    }\n    // default behavior when object\n    // instantiated using new p5.Matrix()\n  } else {\n    if(args[0] === 'mat3'){\n      this.mat3 = args[1] || new GLMAT_ARRAY_TYPE([\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n      ]);\n    }\n    else {\n      this.mat4 = args[0] || new GLMAT_ARRAY_TYPE([\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1\n      ]);\n    }\n  }\n  return this;\n};\n\n/**\n * Sets the x, y, and z component of the vector using two or three separate\n * variables, the data from a p5.Matrix, or the values from a float array.\n *\n * @param {p5.Matrix|Array} [inMatrix] the input p5.Matrix or\n *                                     an Array of length 16\n */\np5.Matrix.prototype.set = function (inMatrix) {\n  if (inMatrix instanceof p5.Matrix) {\n    this.mat4 = inMatrix.mat4;\n    return this;\n  }\n  else if (inMatrix instanceof GLMAT_ARRAY_TYPE) {\n    this.mat4 = inMatrix;\n    return this;\n  }\n  return this;\n};\n\n/**\n * Gets a copy of the vector, returns a p5.Matrix object.\n *\n * @return {p5.Matrix} the copy of the p5.Matrix object\n */\np5.Matrix.prototype.get = function () {\n  return new p5.Matrix(this.mat4);\n};\n\n/**\n * return a copy of a matrix\n * @return {p5.Matrix}   the result matrix\n */\np5.Matrix.prototype.copy = function(){\n  var copied = new p5.Matrix();\n  copied.mat4[0] = this.mat4[0];\n  copied.mat4[1] = this.mat4[1];\n  copied.mat4[2] = this.mat4[2];\n  copied.mat4[3] = this.mat4[3];\n  copied.mat4[4] = this.mat4[4];\n  copied.mat4[5] = this.mat4[5];\n  copied.mat4[6] = this.mat4[6];\n  copied.mat4[7] = this.mat4[7];\n  copied.mat4[8] = this.mat4[8];\n  copied.mat4[9] = this.mat4[9];\n  copied.mat4[10] = this.mat4[10];\n  copied.mat4[11] = this.mat4[11];\n  copied.mat4[12] = this.mat4[12];\n  copied.mat4[13] = this.mat4[13];\n  copied.mat4[14] = this.mat4[14];\n  copied.mat4[15] = this.mat4[15];\n  return copied;\n};\n\n/**\n * return an identity matrix\n * @return {p5.Matrix}   the result matrix\n */\np5.Matrix.identity = function(){\n  return new p5.Matrix();\n};\n\n/**\n * transpose according to a given matrix\n * @param  {p5.Matrix | Typed Array} a  the matrix to be based on to transpose\n * @return {p5.Matrix}                  this\n */\np5.Matrix.prototype.transpose = function(a){\n  var a01, a02, a03, a12, a13, a23;\n  if(a instanceof p5.Matrix){\n    a01 = a.mat4[1];\n    a02 = a.mat4[2];\n    a03 = a.mat4[3];\n    a12 = a.mat4[6];\n    a13 = a.mat4[7];\n    a23 = a.mat4[11];\n\n    this.mat4[0] = a.mat4[0];\n    this.mat4[1] = a.mat4[4];\n    this.mat4[2] = a.mat4[8];\n    this.mat4[3] = a.mat4[12];\n    this.mat4[4] = a01;\n    this.mat4[5] = a.mat4[5];\n    this.mat4[6] = a.mat4[9];\n    this.mat4[7] = a.mat4[13];\n    this.mat4[8] = a02;\n    this.mat4[9] = a12;\n    this.mat4[10] = a.mat4[10];\n    this.mat4[11] = a.mat4[14];\n    this.mat4[12] = a03;\n    this.mat4[13] = a13;\n    this.mat4[14] = a23;\n    this.mat4[15] = a.mat4[15];\n\n  }else if(a instanceof GLMAT_ARRAY_TYPE){\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a12 = a[6];\n    a13 = a[7];\n    a23 = a[11];\n\n    this.mat4[0] = a[0];\n    this.mat4[1] = a[4];\n    this.mat4[2] = a[8];\n    this.mat4[3] = a[12];\n    this.mat4[4] = a01;\n    this.mat4[5] = a[5];\n    this.mat4[6] = a[9];\n    this.mat4[7] = a[13];\n    this.mat4[8] = a02;\n    this.mat4[9] = a12;\n    this.mat4[10] = a[10];\n    this.mat4[11] = a[14];\n    this.mat4[12] = a03;\n    this.mat4[13] = a13;\n    this.mat4[14] = a23;\n    this.mat4[15] = a[15];\n  }\n  return this;\n};\n\n/**\n * invert  matrix according to a give matrix\n * @param  {p5.Matrix or Typed Array} a   the matrix to be based on to invert\n * @return {p5.Matrix}                    this\n */\np5.Matrix.prototype.invert = function(a){\n  var a00, a01, a02, a03, a10, a11, a12, a13,\n  a20, a21, a22, a23, a30, a31, a32, a33;\n  if(a instanceof p5.Matrix){\n    a00 = a.mat4[0];\n    a01 = a.mat4[1];\n    a02 = a.mat4[2];\n    a03 = a.mat4[3];\n    a10 = a.mat4[4];\n    a11 = a.mat4[5];\n    a12 = a.mat4[6];\n    a13 = a.mat4[7];\n    a20 = a.mat4[8];\n    a21 = a.mat4[9];\n    a22 = a.mat4[10];\n    a23 = a.mat4[11];\n    a30 = a.mat4[12];\n    a31 = a.mat4[13];\n    a32 = a.mat4[14];\n    a33 = a.mat4[15];\n  }else if(a instanceof GLMAT_ARRAY_TYPE){\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    a30 = a[12];\n    a31 = a[13];\n    a32 = a[14];\n    a33 = a[15];\n  }\n  var b00 = a00 * a11 - a01 * a10,\n  b01 = a00 * a12 - a02 * a10,\n  b02 = a00 * a13 - a03 * a10,\n  b03 = a01 * a12 - a02 * a11,\n  b04 = a01 * a13 - a03 * a11,\n  b05 = a02 * a13 - a03 * a12,\n  b06 = a20 * a31 - a21 * a30,\n  b07 = a20 * a32 - a22 * a30,\n  b08 = a20 * a33 - a23 * a30,\n  b09 = a21 * a32 - a22 * a31,\n  b10 = a21 * a33 - a23 * a31,\n  b11 = a22 * a33 - a23 * a32,\n\n  // Calculate the determinant\n  det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 -\n  b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  this.mat4[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  this.mat4[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  this.mat4[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  this.mat4[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  this.mat4[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  this.mat4[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  this.mat4[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  this.mat4[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  this.mat4[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  this.mat4[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  this.mat4[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  this.mat4[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  this.mat4[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  this.mat4[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  this.mat4[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  this.mat4[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return this;\n};\n\n/**\n * Inverts a 3x3 matrix\n * @return {[type]} [description]\n */\np5.Matrix.prototype.invert3x3 = function (){\n  var a00 = this.mat3[0],\n  a01 = this.mat3[1],\n  a02 = this.mat3[2],\n  a10 = this.mat3[3],\n  a11 = this.mat3[4],\n  a12 = this.mat3[5],\n  a20 = this.mat3[6],\n  a21 = this.mat3[7],\n  a22 = this.mat3[8],\n  b01 = a22 * a11 - a12 * a21,\n  b11 = -a22 * a10 + a12 * a20,\n  b21 = a21 * a10 - a11 * a20,\n\n  // Calculate the determinant\n  det = a00 * b01 + a01 * b11 + a02 * b21;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n  this.mat3[0] = b01 * det;\n  this.mat3[1] = (-a22 * a01 + a02 * a21) * det;\n  this.mat3[2] = (a12 * a01 - a02 * a11) * det;\n  this.mat3[3] = b11 * det;\n  this.mat3[4] = (a22 * a00 - a02 * a20) * det;\n  this.mat3[5] = (-a12 * a00 + a02 * a10) * det;\n  this.mat3[6] = b21 * det;\n  this.mat3[7] = (-a21 * a00 + a01 * a20) * det;\n  this.mat3[8] = (a11 * a00 - a01 * a10) * det;\n  return this;\n};\n\n/**\n * transposes a 3x3 p5.Matrix by a mat3\n * @param  {[Number]} mat3 1-dimensional array\n * @return {p5.Matrix} this\n */\np5.Matrix.prototype.transpose3x3 = function (mat3){\n  var a01 = mat3[1], a02 = mat3[2], a12 = mat3[5];\n  this.mat3[1] = mat3[3];\n  this.mat3[2] = mat3[6];\n  this.mat3[3] = a01;\n  this.mat3[5] = mat3[7];\n  this.mat3[6] = a02;\n  this.mat3[7] = a12;\n  return this;\n};\n\n/**\n * converts a 4x4 matrix to its 3x3 inverse tranform\n * commonly used in MVMatrix to NMatrix conversions.\n * @param  {p5.Matrix} mat4 the matrix to be based on to invert\n * @return {p5.Matrix} this with mat3\n * @todo  finish implementation\n */\np5.Matrix.prototype.inverseTranspose = function (matrix){\n  if(this.mat3 === undefined){\n    console.error('sorry, this function only works with mat3');\n  }\n  else {\n    //convert mat4 -> mat3\n    this.mat3[0] = matrix.mat4[0];\n    this.mat3[1] = matrix.mat4[1];\n    this.mat3[2] = matrix.mat4[2];\n    this.mat3[3] = matrix.mat4[4];\n    this.mat3[4] = matrix.mat4[5];\n    this.mat3[5] = matrix.mat4[6];\n    this.mat3[6] = matrix.mat4[8];\n    this.mat3[7] = matrix.mat4[9];\n    this.mat3[8] = matrix.mat4[10];\n  }\n\n  this.invert3x3().transpose3x3(this.mat3);\n  return this;\n};\n\n/**\n * inspired by Toji's mat4 determinant\n * @return {Number} Determinant of our 4x4 matrix\n */\np5.Matrix.prototype.determinant = function(){\n  var d00 = (this.mat4[0] * this.mat4[5]) - (this.mat4[1] * this.mat4[4]),\n    d01 = (this.mat4[0] * this.mat4[6]) - (this.mat4[2] * this.mat4[4]),\n    d02 = (this.mat4[0] * this.mat4[7]) - (this.mat4[3] * this.mat4[4]),\n    d03 = (this.mat4[1] * this.mat4[6]) - (this.mat4[2] * this.mat4[5]),\n    d04 = (this.mat4[1] * this.mat4[7]) - (this.mat4[3] * this.mat4[5]),\n    d05 = (this.mat4[2] * this.mat4[7]) - (this.mat4[3] * this.mat4[6]),\n    d06 = (this.mat4[8] * this.mat4[13]) - (this.mat4[9] * this.mat4[12]),\n    d07 = (this.mat4[8] * this.mat4[14]) - (this.mat4[10] * this.mat4[12]),\n    d08 = (this.mat4[8] * this.mat4[15]) - (this.mat4[11] * this.mat4[12]),\n    d09 = (this.mat4[9] * this.mat4[14]) - (this.mat4[10] * this.mat4[13]),\n    d10 = (this.mat4[9] * this.mat4[15]) - (this.mat4[11] * this.mat4[13]),\n    d11 = (this.mat4[10] * this.mat4[15]) - (this.mat4[11] * this.mat4[14]);\n\n  // Calculate the determinant\n  return d00 * d11 - d01 * d10 + d02 * d09 +\n    d03 * d08 - d04 * d07 + d05 * d06;\n};\n\n/**\n * multiply two mat4s\n * @param {p5.Matrix | Array}  multMatrix The matrix we want to multiply by\n * @return {p5.Matrix}         this\n */\np5.Matrix.prototype.mult = function(multMatrix){\n  var _dest = new GLMAT_ARRAY_TYPE(16);\n  var _src = new GLMAT_ARRAY_TYPE(16);\n\n  if(multMatrix instanceof p5.Matrix) {\n    _src = multMatrix.mat4;\n  }\n  else if(multMatrix instanceof GLMAT_ARRAY_TYPE){\n    _src = multMatrix;\n  }\n\n  // each row is used for the multiplier\n  var b0  = this.mat4[0], b1 = this.mat4[1],\n    b2 = this.mat4[2], b3 = this.mat4[3];\n  _dest[0] = b0*_src[0] + b1*_src[4] + b2*_src[8] + b3*_src[12];\n  _dest[1] = b0*_src[1] + b1*_src[5] + b2*_src[9] + b3*_src[13];\n  _dest[2] = b0*_src[2] + b1*_src[6] + b2*_src[10] + b3*_src[14];\n  _dest[3] = b0*_src[3] + b1*_src[7] + b2*_src[11] + b3*_src[15];\n\n  b0 = this.mat4[4];\n  b1 = this.mat4[5];\n  b2 = this.mat4[6];\n  b3 = this.mat4[7];\n  _dest[4] = b0*_src[0] + b1*_src[4] + b2*_src[8] + b3*_src[12];\n  _dest[5] = b0*_src[1] + b1*_src[5] + b2*_src[9] + b3*_src[13];\n  _dest[6] = b0*_src[2] + b1*_src[6] + b2*_src[10] + b3*_src[14];\n  _dest[7] = b0*_src[3] + b1*_src[7] + b2*_src[11] + b3*_src[15];\n\n  b0 = this.mat4[8];\n  b1 = this.mat4[9];\n  b2 = this.mat4[10];\n  b3 = this.mat4[11];\n  _dest[8] = b0*_src[0] + b1*_src[4] + b2*_src[8] + b3*_src[12];\n  _dest[9] = b0*_src[1] + b1*_src[5] + b2*_src[9] + b3*_src[13];\n  _dest[10] = b0*_src[2] + b1*_src[6] + b2*_src[10] + b3*_src[14];\n  _dest[11] = b0*_src[3] + b1*_src[7] + b2*_src[11] + b3*_src[15];\n\n  b0 = this.mat4[12];\n  b1 = this.mat4[13];\n  b2 = this.mat4[14];\n  b3 = this.mat4[15];\n  _dest[12] = b0*_src[0] + b1*_src[4] + b2*_src[8] + b3*_src[12];\n  _dest[13] = b0*_src[1] + b1*_src[5] + b2*_src[9] + b3*_src[13];\n  _dest[14] = b0*_src[2] + b1*_src[6] + b2*_src[10] + b3*_src[14];\n  _dest[15] = b0*_src[3] + b1*_src[7] + b2*_src[11] + b3*_src[15];\n\n  this.mat4 = _dest;\n\n  return this;\n};\n\n/**\n * scales a p5.Matrix by scalars or a vector\n * @param  {p5.Vector | Array }\n *                      vector to scale by\n * @return {p5.Matrix}  this\n */\np5.Matrix.prototype.scale = function() {\n  var x,y,z;\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  //if our 1st arg is a type p5.Vector\n  if (args[0] instanceof p5.Vector){\n    x = args[0].x;\n    y = args[0].y;\n    z = args[0].z;\n  }\n  //otherwise if it's an array\n  else if (args[0] instanceof Array){\n    x = args[0][0];\n    y = args[0][1];\n    z = args[0][2];\n  }\n  var _dest = new GLMAT_ARRAY_TYPE(16);\n  _dest[0] = this.mat4[0] * x;\n  _dest[1] = this.mat4[1] * x;\n  _dest[2] = this.mat4[2] * x;\n  _dest[3] = this.mat4[3] * x;\n  _dest[4] = this.mat4[4] * y;\n  _dest[5] = this.mat4[5] * y;\n  _dest[6] = this.mat4[6] * y;\n  _dest[7] = this.mat4[7] * y;\n  _dest[8] = this.mat4[8] * z;\n  _dest[9] = this.mat4[9] * z;\n  _dest[10] = this.mat4[10] * z;\n  _dest[11] = this.mat4[11] * z;\n  _dest[12] = this.mat4[12];\n  _dest[13] = this.mat4[13];\n  _dest[14] = this.mat4[14];\n  _dest[15] = this.mat4[15];\n\n  this.mat4 = _dest;\n  return this;\n};\n\n/**\n * rotate our Matrix around an axis by the given angle.\n * @param  {Number} a The angle of rotation in radians\n * @param  {p5.Vector | Array} axis  the axis(es) to rotate around\n * @return {p5.Matrix}                    this\n * inspired by Toji's gl-matrix lib, mat4 rotation\n */\np5.Matrix.prototype.rotate = function(a, axis){\n  var x, y, z, _a, len;\n\n  if (this.p5) {\n    if (this.p5._angleMode === constants.DEGREES) {\n      _a = polarGeometry.degreesToRadians(a);\n    }\n  }\n  else {\n    _a = a;\n  }\n  if (axis instanceof p5.Vector) {\n    x = axis.x;\n    y = axis.y;\n    z = axis.z;\n  }\n  else if (axis instanceof Array) {\n    x = axis[0];\n    y = axis[1];\n    z = axis[2];\n  }\n\n  len = Math.sqrt(x * x + y * y + z * z);\n  x *= (1/len);\n  y *= (1/len);\n  z *= (1/len);\n\n  var a00 = this.mat4[0];\n  var a01 = this.mat4[1];\n  var a02 = this.mat4[2];\n  var a03 = this.mat4[3];\n  var a10 = this.mat4[4];\n  var a11 = this.mat4[5];\n  var a12 = this.mat4[6];\n  var a13 = this.mat4[7];\n  var a20 = this.mat4[8];\n  var a21 = this.mat4[9];\n  var a22 = this.mat4[10];\n  var a23 = this.mat4[11];\n\n  //sin,cos, and tan of respective angle\n  var sA = Math.sin(_a);\n  var cA = Math.cos(_a);\n  var tA = 1 - cA;\n  // Construct the elements of the rotation matrix\n  var b00 = x * x * tA + cA;\n  var b01 = y * x * tA + z * sA;\n  var b02 = z * x * tA - y * sA;\n  var b10 = x * y * tA - z * sA;\n  var b11 = y * y * tA + cA;\n  var b12 = z * y * tA + x * sA;\n  var b20 = x * z * tA + y * sA;\n  var b21 = y * z * tA - x * sA;\n  var b22 = z * z * tA + cA;\n\n  // rotation-specific matrix multiplication\n  this.mat4[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  this.mat4[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  this.mat4[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  this.mat4[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  this.mat4[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  this.mat4[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  this.mat4[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  this.mat4[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  this.mat4[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  this.mat4[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  this.mat4[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  this.mat4[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  return this;\n};\n\n/**\n * @todo  finish implementing this method!\n * translates\n * @param  {Array} v vector to translate by\n * @return {p5.Matrix}                    this\n */\np5.Matrix.prototype.translate = function(v){\n  var x = v[0],\n    y = v[1],\n    z = v[2] || 0;\n  this.mat4[12] =\n    this.mat4[0] * x +this.mat4[4] * y +this.mat4[8] * z +this.mat4[12];\n  this.mat4[13] =\n    this.mat4[1] * x +this.mat4[5] * y +this.mat4[9] * z +this.mat4[13];\n  this.mat4[14] =\n    this.mat4[2] * x +this.mat4[6] * y +this.mat4[10] * z +this.mat4[14];\n  this.mat4[15] =\n    this.mat4[3] * x +this.mat4[7] * y +this.mat4[11] * z +this.mat4[15];\n};\n\np5.Matrix.prototype.rotateX = function(a){\n  this.rotate(a, [1,0,0]);\n};\np5.Matrix.prototype.rotateY = function(a){\n  this.rotate(a, [0,1,0]);\n};\np5.Matrix.prototype.rotateZ = function(a){\n  this.rotate(a, [0,0,1]);\n};\n\n/**\n * sets the perspective matrix\n * @param  {Number} fovy   [description]\n * @param  {Number} aspect [description]\n * @param  {Number} near   near clipping plane\n * @param  {Number} far    far clipping plane\n * @return {void}\n */\np5.Matrix.prototype.perspective = function(fovy,aspect,near,far){\n\n  var f = 1.0 / Math.tan(fovy / 2),\n    nf = 1 / (near - far);\n\n  this.mat4[0] = f / aspect;\n  this.mat4[1] = 0;\n  this.mat4[2] = 0;\n  this.mat4[3] = 0;\n  this.mat4[4] = 0;\n  this.mat4[5] = f;\n  this.mat4[6] = 0;\n  this.mat4[7] = 0;\n  this.mat4[8] = 0;\n  this.mat4[9] = 0;\n  this.mat4[10] = (far + near) * nf;\n  this.mat4[11] = -1;\n  this.mat4[12] = 0;\n  this.mat4[13] = 0;\n  this.mat4[14] = (2 * far * near) * nf;\n  this.mat4[15] = 0;\n\n  return this;\n\n};\n\n/**\n * sets the ortho matrix\n * @param  {Number} left   [description]\n * @param  {Number} right  [description]\n * @param  {Number} bottom [description]\n * @param  {Number} top    [description]\n * @param  {Number} near   near clipping plane\n * @param  {Number} far    far clipping plane\n * @return {void}\n */\np5.Matrix.prototype.ortho = function(left,right,bottom,top,near,far){\n\n  var lr = 1 / (left - right),\n    bt = 1 / (bottom - top),\n    nf = 1 / (near - far);\n  this.mat4[0] = -2 * lr;\n  this.mat4[1] = 0;\n  this.mat4[2] = 0;\n  this.mat4[3] = 0;\n  this.mat4[4] = 0;\n  this.mat4[5] = -2 * bt;\n  this.mat4[6] = 0;\n  this.mat4[7] = 0;\n  this.mat4[8] = 0;\n  this.mat4[9] = 0;\n  this.mat4[10] = 2 * nf;\n  this.mat4[11] = 0;\n  this.mat4[12] = (left + right) * lr;\n  this.mat4[13] = (top + bottom) * bt;\n  this.mat4[14] = (far + near) * nf;\n  this.mat4[15] = 1;\n\n  return this;\n};\n\n/**\n * PRIVATE\n */\n// matrix methods adapted from:\n// https://developer.mozilla.org/en-US/docs/Web/WebGL/\n// gluPerspective\n//\n// function _makePerspective(fovy, aspect, znear, zfar){\n//    var ymax = znear * Math.tan(fovy * Math.PI / 360.0);\n//    var ymin = -ymax;\n//    var xmin = ymin * aspect;\n//    var xmax = ymax * aspect;\n//    return _makeFrustum(xmin, xmax, ymin, ymax, znear, zfar);\n//  }\n\n////\n//// glFrustum\n////\n//function _makeFrustum(left, right, bottom, top, znear, zfar){\n//  var X = 2*znear/(right-left);\n//  var Y = 2*znear/(top-bottom);\n//  var A = (right+left)/(right-left);\n//  var B = (top+bottom)/(top-bottom);\n//  var C = -(zfar+znear)/(zfar-znear);\n//  var D = -2*zfar*znear/(zfar-znear);\n//  var frustrumMatrix =[\n//  X, 0, A, 0,\n//  0, Y, B, 0,\n//  0, 0, C, D,\n//  0, 0, -1, 0\n//];\n//return frustrumMatrix;\n// }\n\n// function _setMVPMatrices(){\n////an identity matrix\n////@TODO use the p5.Matrix class to abstract away our MV matrices and\n///other math\n//var _mvMatrix =\n//[\n//  1.0,0.0,0.0,0.0,\n//  0.0,1.0,0.0,0.0,\n//  0.0,0.0,1.0,0.0,\n//  0.0,0.0,0.0,1.0\n//];\n\nmodule.exports = p5.Matrix;\n\n},{\"../core/constants\":36,\"../core/core\":37,\"../math/polargeometry\":67}],84:[function(_dereq_,module,exports){\n/**\n * Welcome to RendererGL Immediate Mode.\n * Immediate mode is used for drawing custom shapes\n * from a set of vertices.  Immediate Mode is activated\n * when you call beginShape() & de-activated when you call endShape().\n * Immediate mode is a style of programming borrowed\n * from OpenGL's (now-deprecated) immediate mode.\n * It differs from p5.js' default, Retained Mode, which caches\n * geometries and buffers on the CPU to reduce the number of webgl\n * draw calls. Retained mode is more efficient & performative,\n * however, Immediate Mode is useful for sketching quick\n * geometric ideas.\n */\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar constants = _dereq_('../core/constants');\n\n/**\n * Begin shape drawing.  This is a helpful way of generating\n * custom shapes quickly.  However in WEBGL mode, application\n * performance will likely drop as a result of too many calls to\n * beginShape() / endShape().  As a high performance alternative,\n * please use p5.js geometry primitives.\n * @param  {Number} mode webgl primitives mode.  beginShape supports the\n *                       following modes:\n *                       POINTS,LINES,LINE_STRIP,LINE_LOOP,TRIANGLES,\n *                       TRIANGLE_STRIP,and TRIANGLE_FAN.\n * @return {[type]}      [description]\n */\np5.RendererGL.prototype.beginShape = function(mode){\n  //default shape mode is line_strip\n  this.immediateMode.shapeMode = (mode !== undefined ) ?\n    mode : constants.LINE_STRIP;\n  //if we haven't yet initialized our\n  //immediateMode vertices & buffers, create them now!\n  if(this.immediateMode.vertexPositions === undefined){\n    this.immediateMode.vertexPositions = [];\n    this.immediateMode.vertexColors = [];\n    this.immediateMode.vertexBuffer = this.GL.createBuffer();\n    this.immediateMode.colorBuffer = this.GL.createBuffer();\n  } else {\n    this.immediateMode.vertexPositions.length = 0;\n    this.immediateMode.vertexColors.length = 0;\n  }\n  this.isImmediateDrawing = true;\n  return this;\n};\n/**\n * adds a vertex to be drawn in a custom Shape.\n * @param  {Number} x x-coordinate of vertex\n * @param  {Number} y y-coordinate of vertex\n * @param  {Number} z z-coordinate of vertex\n * @return {p5.RendererGL}   [description]\n * @TODO implement handling of p5.Vector args\n */\np5.RendererGL.prototype.vertex = function(x, y, z){\n  this.immediateMode.vertexPositions.push(x, y, z);\n  var vertexColor = this.curFillColor || [0.5, 0.5, 0.5, 1.0];\n  this.immediateMode.vertexColors.push(\n    vertexColor[0],\n    vertexColor[1],\n    vertexColor[2],\n    vertexColor[3]);\n  return this;\n};\n\n/**\n * End shape drawing and render vertices to screen.\n * @return {p5.RendererGL} [description]\n */\np5.RendererGL.prototype.endShape =\nfunction(mode, isCurve, isBezier,isQuadratic, isContour, shapeKind){\n  var gl = this.GL;\n  this._bindImmediateBuffers(\n    this.immediateMode.vertexPositions,\n    this.immediateMode.vertexColors);\n  if(mode){\n    if(this.drawMode === 'fill'){\n      switch(this.immediateMode.shapeMode){\n        case constants.LINE_STRIP:\n          this.immediateMode.shapeMode = constants.TRIANGLE_FAN;\n          break;\n        case constants.LINES:\n          this.immediateMode.shapeMode = constants.TRIANGLE_FAN;\n          break;\n        case constants.TRIANGLES:\n          this.immediateMode.shapeMode = constants.TRIANGLE_FAN;\n          break;\n      }\n    } else {\n      switch(this.immediateMode.shapeMode){\n        case constants.LINE_STRIP:\n          this.immediateMode.shapeMode = constants.LINE_LOOP;\n          break;\n        case constants.LINES:\n          this.immediateMode.shapeMode = constants.LINE_LOOP;\n          break;\n      }\n    }\n  }\n  //QUADS & QUAD_STRIP are not supported primitives modes\n  //in webgl.\n  if(this.immediateMode.shapeMode === constants.QUADS ||\n    this.immediateMode.shapeMode === constants.QUAD_STRIP){\n    throw new Error('sorry, ' + this.immediateMode.shapeMode+\n      ' not yet implemented in webgl mode.');\n  }\n  else {\n    gl.enable(gl.BLEND);\n    gl.drawArrays(this.immediateMode.shapeMode, 0,\n      this.immediateMode.vertexPositions.length / 3);\n  }\n  //clear out our vertexPositions & colors arrays\n  //after rendering\n  this.immediateMode.vertexPositions.length = 0;\n  this.immediateMode.vertexColors.length = 0;\n  this.isImmediateDrawing = false;\n  return this;\n};\n/**\n * Bind immediateMode buffers to data,\n * then draw gl arrays\n * @param  {Array} vertices Numbers array representing\n *                          vertex positions\n * @return {p5.RendererGL}\n */\np5.RendererGL.prototype._bindImmediateBuffers = function(vertices, colors){\n  this._setDefaultCamera();\n  var gl = this.GL;\n  var shaderKey = this._getCurShaderId();\n  var shaderProgram = this.mHash[shaderKey];\n  //vertex position Attribute\n  shaderProgram.vertexPositionAttribute =\n    gl.getAttribLocation(shaderProgram, 'aPosition');\n  gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.immediateMode.vertexBuffer);\n  gl.bufferData(\n    gl.ARRAY_BUFFER, new Float32Array(vertices), gl.DYNAMIC_DRAW);\n  gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute,\n    3, gl.FLOAT, false, 0, 0);\n\n  shaderProgram.vertexColorAttribute =\n    gl.getAttribLocation(shaderProgram, 'aVertexColor');\n  gl.enableVertexAttribArray(shaderProgram.vertexColorAttribute);\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.immediateMode.colorBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER,\n    new Float32Array(colors),gl.DYNAMIC_DRAW);\n  gl.vertexAttribPointer(shaderProgram.vertexColorAttribute,\n    4, gl.FLOAT, false, 0, 0);\n  //matrix\n  this._setMatrixUniforms(shaderKey);\n  //@todo implement in all shaders (not just immediateVert)\n  //set our default point size\n  // this._setUniform1f(shaderKey,\n  //   'uPointSize',\n  //   this.pointSize);\n  return this;\n};\n\n//////////////////////////////////////////////\n// COLOR\n//////////////////////////////////////////////\n\np5.RendererGL.prototype._getColorVertexShader = function(){\n  var gl = this.GL;\n  var mId = 'immediateVert|vertexColorFrag';\n  var shaderProgram;\n\n  if(!this.materialInHash(mId)){\n    shaderProgram =\n      this._initShaders('immediateVert', 'vertexColorFrag', true);\n    this.mHash[mId] = shaderProgram;\n    shaderProgram.vertexColorAttribute =\n    gl.getAttribLocation(shaderProgram, 'aVertexColor');\n    gl.enableVertexAttribArray(shaderProgram.vertexColorAttribute);\n  }else{\n    shaderProgram = this.mHash[mId];\n  }\n  return shaderProgram;\n};\n\nmodule.exports = p5.RendererGL;\n},{\"../core/constants\":36,\"../core/core\":37}],85:[function(_dereq_,module,exports){\n//Retained Mode. The default mode for rendering 3D primitives\n//in WEBGL.\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar hashCount = 0;\n/**\n * _initBufferDefaults\n * @description initializes buffer defaults. runs each time a new geometry is\n * registered\n * @param  {String} gId  key of the geometry object\n */\np5.RendererGL.prototype._initBufferDefaults = function(gId) {\n  //@TODO remove this limit on hashes in gHash\n  hashCount ++;\n  if(hashCount > 1000){\n    var key = Object.keys(this.gHash)[0];\n    delete this.gHash[key];\n    hashCount --;\n  }\n\n  var gl = this.GL;\n  //create a new entry in our gHash\n  this.gHash[gId] = {};\n  this.gHash[gId].vertexBuffer = gl.createBuffer();\n  this.gHash[gId].normalBuffer = gl.createBuffer();\n  this.gHash[gId].uvBuffer = gl.createBuffer();\n  this.gHash[gId].indexBuffer = gl.createBuffer();\n};\n/**\n * createBuffers description\n * @param  {String} gId    key of the geometry object\n * @param  {p5.Geometry}  obj contains geometry data\n */\np5.RendererGL.prototype.createBuffers = function(gId, obj) {\n  var gl = this.GL;\n  this._setDefaultCamera();\n  //initialize the gl buffers for our geom groups\n  this._initBufferDefaults(gId);\n  //return the current shaderProgram from our material hash\n  var shaderProgram = this.mHash[this._getCurShaderId()];\n  //@todo rename \"numberOfItems\" property to something more descriptive\n  //we mult the num geom faces by 3\n  this.gHash[gId].numberOfItems = obj.faces.length * 3;\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.gHash[gId].vertexBuffer);\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array( vToNArray(obj.vertices) ),\n    gl.STATIC_DRAW);\n  //vertex position\n  shaderProgram.vertexPositionAttribute =\n    gl.getAttribLocation(shaderProgram, 'aPosition');\n  gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n\n  gl.vertexAttribPointer(\n    shaderProgram.vertexPositionAttribute,\n    3, gl.FLOAT, false, 0, 0);\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.gHash[gId].normalBuffer);\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array( vToNArray(obj.vertexNormals) ),\n    gl.STATIC_DRAW);\n  //vertex normal\n  shaderProgram.vertexNormalAttribute =\n    gl.getAttribLocation(shaderProgram, 'aNormal');\n  gl.enableVertexAttribArray(shaderProgram.vertexNormalAttribute);\n\n  gl.vertexAttribPointer(\n    shaderProgram.vertexNormalAttribute,\n    3, gl.FLOAT, false, 0, 0);\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.gHash[gId].uvBuffer);\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array( flatten(obj.uvs) ),\n    gl.STATIC_DRAW);\n  //texture coordinate Attribute\n  shaderProgram.textureCoordAttribute =\n    gl.getAttribLocation(shaderProgram, 'aTexCoord');\n  gl.enableVertexAttribArray(shaderProgram.textureCoordAttribute);\n  gl.vertexAttribPointer(\n    shaderProgram.textureCoordAttribute,\n    2, gl.FLOAT, false, 0, 0);\n\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.gHash[gId].indexBuffer);\n  gl.bufferData(\n    gl.ELEMENT_ARRAY_BUFFER,\n    new Uint16Array( flatten(obj.faces) ),\n    gl.STATIC_DRAW);\n};\n\n/**\n * Draws buffers given a geometry key ID\n * @param  {String} gId     ID in our geom hash\n * @return {p5.RendererGL} this\n */\np5.RendererGL.prototype.drawBuffers = function(gId) {\n  this._setDefaultCamera();\n  var gl = this.GL;\n  var shaderKey = this._getCurShaderId();\n  var shaderProgram = this.mHash[shaderKey];\n  //vertex position buffer\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.gHash[gId].vertexBuffer);\n  gl.vertexAttribPointer(\n    shaderProgram.vertexPositionAttribute,\n    3, gl.FLOAT, false, 0, 0);\n  //normal buffer\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.gHash[gId].normalBuffer);\n  gl.vertexAttribPointer(\n    shaderProgram.vertexNormalAttribute,\n    3, gl.FLOAT, false, 0, 0);\n  // uv buffer\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.gHash[gId].uvBuffer);\n  gl.vertexAttribPointer(\n    shaderProgram.textureCoordAttribute,\n    2, gl.FLOAT, false, 0, 0);\n  //vertex index buffer\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.gHash[gId].indexBuffer);\n  this._setMatrixUniforms(shaderKey);\n  gl.drawElements(\n    gl.TRIANGLES, this.gHash[gId].numberOfItems,\n    gl.UNSIGNED_SHORT, 0);\n  return this;\n};\n///////////////////////////////\n//// UTILITY FUNCTIONS\n//////////////////////////////\n/**\n * turn a two dimensional array into one dimensional array\n * @param  {Array} arr 2-dimensional array\n * @return {Array}     1-dimensional array\n * [[1, 2, 3],[4, 5, 6]] -> [1, 2, 3, 4, 5, 6]\n */\nfunction flatten(arr){\n  if (arr.length>0){\n    return arr.reduce(function(a, b){\n      return a.concat(b);\n    });\n  } else {\n    return [];\n  }\n}\n\n/**\n * turn a p5.Vector Array into a one dimensional number array\n * @param  {Array} arr  an array of p5.Vector\n * @return {Array]}     a one dimensional array of numbers\n * [p5.Vector(1, 2, 3), p5.Vector(4, 5, 6)] ->\n * [1, 2, 3, 4, 5, 6]\n */\nfunction vToNArray(arr){\n  return flatten(arr.map(function(item){\n    return [item.x, item.y, item.z];\n  }));\n}\nmodule.exports = p5.RendererGL;\n\n},{\"../core/core\":37}],86:[function(_dereq_,module,exports){\n'use strict';\n\nvar p5 = _dereq_('../core/core');\nvar shader = _dereq_('./shader');\n_dereq_('../core/p5.Renderer');\n_dereq_('./p5.Matrix');\nvar uMVMatrixStack = [];\nvar RESOLUTION = 1000;\n\n//@TODO should implement public method\n//to override these attributes\nvar attributes = {\n  alpha: true,\n  depth: true,\n  stencil: true,\n  antialias: false,\n  premultipliedAlpha: false,\n  preserveDrawingBuffer: false\n};\n\n/**\n * @class p5.RendererGL\n * @constructor\n * @extends p5.Renderer\n * 3D graphics class.\n * @todo extend class to include public method for offscreen\n * rendering (FBO).\n *\n */\np5.RendererGL = function(elt, pInst, isMainCanvas) {\n  p5.Renderer.call(this, elt, pInst, isMainCanvas);\n  this._initContext();\n\n  this.isP3D = true; //lets us know we're in 3d mode\n  this.GL = this.drawingContext;\n  //lights\n  this.ambientLightCount = 0;\n  this.directionalLightCount = 0;\n  this.pointLightCount = 0;\n  //camera\n  this._curCamera = null;\n\n  /**\n   * model view, projection, & normal\n   * matrices\n   */\n  this.uMVMatrix = new p5.Matrix();\n  this.uPMatrix  = new p5.Matrix();\n  this.uNMatrix = new p5.Matrix('mat3');\n  //Geometry & Material hashes\n  this.gHash = {};\n  this.mHash = {};\n  //Imediate Mode\n  //default drawing is done in Retained Mode\n  this.isImmediateDrawing = false;\n  this.immediateMode = {};\n  this.curFillColor = [0.5,0.5,0.5,1.0];\n  this.curStrokeColor = [0.5,0.5,0.5,1.0];\n  this.pointSize = 5.0;//default point/stroke\n  return this;\n};\n\np5.RendererGL.prototype = Object.create(p5.Renderer.prototype);\n\n//////////////////////////////////////////////\n// Setting\n//////////////////////////////////////////////\n\np5.RendererGL.prototype._initContext = function() {\n  try {\n    this.drawingContext = this.canvas.getContext('webgl', attributes) ||\n      this.canvas.getContext('experimental-webgl', attributes);\n    if (this.drawingContext === null) {\n      throw new Error('Error creating webgl context');\n    } else {\n      console.log('p5.RendererGL: enabled webgl context');\n      var gl = this.drawingContext;\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    }\n  } catch (er) {\n    throw new Error(er);\n  }\n};\n//detect if user didn't set the camera\n//then call this function below\np5.RendererGL.prototype._setDefaultCamera = function(){\n  if(this._curCamera === null){\n    var _w = this.width;\n    var _h = this.height;\n    this.uPMatrix = p5.Matrix.identity();\n    this.uPMatrix.perspective(60 / 180 * Math.PI, _w / _h, 0.1, 100);\n    this._curCamera = 'default';\n  }\n};\n\np5.RendererGL.prototype._update = function() {\n  this.uMVMatrix = p5.Matrix.identity();\n  this.translate(0, 0, -(this.height / 2) / Math.tan(Math.PI * 30 / 180));\n  this.ambientLightCount = 0;\n  this.directionalLightCount = 0;\n  this.pointLightCount = 0;\n};\n\n/**\n * [background description]\n * @return {[type]} [description]\n */\np5.RendererGL.prototype.background = function() {\n  var gl = this.GL;\n  var _col = this._pInst.color.apply(this._pInst, arguments);\n  var _r = (_col.levels[0]) / 255;\n  var _g = (_col.levels[1]) / 255;\n  var _b = (_col.levels[2]) / 255;\n  var _a = (_col.levels[3]) / 255;\n  gl.clearColor(_r, _g, _b, _a);\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n};\n\n//@TODO implement this\n// p5.RendererGL.prototype.clear = function() {\n//@TODO\n// };\n\n//////////////////////////////////////////////\n// SHADER\n//////////////////////////////////////////////\n\n/**\n * [_initShaders description]\n * @param  {string} vertId [description]\n * @param  {string} fragId [description]\n * @return {[type]}        [description]\n */\np5.RendererGL.prototype._initShaders =\nfunction(vertId, fragId, isImmediateMode) {\n  var gl = this.GL;\n  //set up our default shaders by:\n  // 1. create the shader,\n  // 2. load the shader source,\n  // 3. compile the shader\n  var _vertShader = gl.createShader(gl.VERTEX_SHADER);\n  //load in our default vertex shader\n  gl.shaderSource(_vertShader, shader[vertId]);\n  gl.compileShader(_vertShader);\n  // if our vertex shader failed compilation?\n  if (!gl.getShaderParameter(_vertShader, gl.COMPILE_STATUS)) {\n    alert('Yikes! An error occurred compiling the shaders:' +\n      gl.getShaderInfoLog(_vertShader));\n    return null;\n  }\n\n  var _fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n  //load in our material frag shader\n  gl.shaderSource(_fragShader, shader[fragId]);\n  gl.compileShader(_fragShader);\n  // if our frag shader failed compilation?\n  if (!gl.getShaderParameter(_fragShader, gl.COMPILE_STATUS)) {\n    alert('Darn! An error occurred compiling the shaders:' +\n      gl.getShaderInfoLog(_fragShader));\n    return null;\n  }\n\n  var shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, _vertShader);\n  gl.attachShader(shaderProgram, _fragShader);\n  gl.linkProgram(shaderProgram);\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    alert('Snap! Error linking shader program');\n  }\n  //END SHADERS SETUP\n\n  this._getLocation(shaderProgram, isImmediateMode);\n\n  return shaderProgram;\n};\n\np5.RendererGL.prototype._getLocation =\nfunction(shaderProgram, isImmediateMode) {\n  var gl = this.GL;\n  gl.useProgram(shaderProgram);\n  shaderProgram.uResolution =\n    gl.getUniformLocation(shaderProgram, 'uResolution');\n  gl.uniform1f(shaderProgram.uResolution, RESOLUTION);\n\n  //projection Matrix uniform\n  shaderProgram.uPMatrixUniform =\n    gl.getUniformLocation(shaderProgram, 'uProjectionMatrix');\n  //model view Matrix uniform\n  shaderProgram.uMVMatrixUniform =\n    gl.getUniformLocation(shaderProgram, 'uModelViewMatrix');\n\n  //@TODO: figure out a better way instead of if statement\n  if(isImmediateMode === undefined){\n    //normal Matrix uniform\n    shaderProgram.uNMatrixUniform =\n    gl.getUniformLocation(shaderProgram, 'uNormalMatrix');\n\n    shaderProgram.samplerUniform =\n    gl.getUniformLocation(shaderProgram, 'uSampler');\n  }\n};\n\n/**\n * Sets a shader uniform given a shaderProgram and uniform string\n * @param {String} shaderKey key to material Hash.\n * @param {String} uniform location in shader.\n * @param { Number} data data to bind uniform.  Float data type.\n * @todo currently this function sets uniform1f data.\n * Should generalize function to accept any uniform\n * data type.\n */\np5.RendererGL.prototype._setUniform1f = function(shaderKey,uniform,data)\n{\n  var gl = this.GL;\n  var shaderProgram = this.mHash[shaderKey];\n  gl.useProgram(shaderProgram);\n  shaderProgram[uniform] = gl.getUniformLocation(shaderProgram, uniform);\n  gl.uniform1f(shaderProgram[uniform], data);\n  return this;\n};\n\np5.RendererGL.prototype._setMatrixUniforms = function(shaderKey) {\n  var gl = this.GL;\n  var shaderProgram = this.mHash[shaderKey];\n\n  gl.useProgram(shaderProgram);\n\n  gl.uniformMatrix4fv(\n    shaderProgram.uPMatrixUniform,\n    false, this.uPMatrix.mat4);\n\n  gl.uniformMatrix4fv(\n    shaderProgram.uMVMatrixUniform,\n    false, this.uMVMatrix.mat4);\n\n  this.uNMatrix.inverseTranspose(this.uMVMatrix);\n\n  gl.uniformMatrix3fv(\n    shaderProgram.uNMatrixUniform,\n    false, this.uNMatrix.mat3);\n};\n//////////////////////////////////////////////\n// GET CURRENT | for shader and color\n//////////////////////////////////////////////\np5.RendererGL.prototype._getShader = function(vertId, fragId, isImmediateMode) {\n  var mId = vertId + '|' + fragId;\n  //create it and put it into hashTable\n  if(!this.materialInHash(mId)){\n    var shaderProgram = this._initShaders(vertId, fragId, isImmediateMode);\n    this.mHash[mId] = shaderProgram;\n  }\n  this.curShaderId = mId;\n\n  return this.mHash[this.curShaderId];\n};\n\np5.RendererGL.prototype._getCurShaderId = function(){\n  //if the shader ID is not yet defined\n  var mId, shaderProgram;\n  if(this.drawMode !== 'fill' && this.curShaderId === undefined){\n    //default shader: normalMaterial()\n    mId = 'normalVert|normalFrag';\n    shaderProgram = this._initShaders('normalVert', 'normalFrag');\n    this.mHash[mId] = shaderProgram;\n    this.curShaderId = mId;\n  } else if(this.isImmediateDrawing && this.drawMode === 'fill'){\n    mId = 'immediateVert|vertexColorFrag';\n    shaderProgram = this._initShaders('immediateVert', 'vertexColorFrag');\n    this.mHash[mId] = shaderProgram;\n    this.curShaderId = mId;\n  }\n  return this.curShaderId;\n};\n\n//////////////////////////////////////////////\n// COLOR\n//////////////////////////////////////////////\n/**\n * Basic fill material for geometry with a given color\n * @method  fill\n * @param  {Number|Array|String|p5.Color} v1  gray value,\n * red or hue value (depending on the current color mode),\n * or color Array, or CSS color string\n * @param  {Number}            [v2] optional: green or saturation value\n * @param  {Number}            [v3] optional: blue or brightness value\n * @param  {Number}            [a]  optional: opacity\n * @return {p5}                the p5 object\n * @example\n * <div>\n * <code>\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *  background(0);\n *  fill(250, 0, 0);\n *  rotateX(frameCount * 0.01);\n *  rotateY(frameCount * 0.01);\n *  rotateZ(frameCount * 0.01);\n *  box(200, 200, 200);\n * }\n * </code>\n * </div>\n *\n * @alt\n * red canvas\n *\n */\np5.RendererGL.prototype.fill = function(v1, v2, v3, a) {\n  var gl = this.GL;\n  var shaderProgram;\n  //see material.js for more info on color blending in webgl\n  var colors = this._applyColorBlend.apply(this, arguments);\n  this.curFillColor = colors;\n  this.drawMode = 'fill';\n  if(this.isImmediateDrawing){\n    shaderProgram =\n    this._getShader('immediateVert','vertexColorFrag');\n    gl.useProgram(shaderProgram);\n  } else {\n    shaderProgram =\n    this._getShader('normalVert', 'basicFrag');\n    gl.useProgram(shaderProgram);\n    //RetainedMode uses a webgl uniform to pass color vals\n    //in ImmediateMode, we want access to each vertex so therefore\n    //we cannot use a uniform.\n    shaderProgram.uMaterialColor = gl.getUniformLocation(\n      shaderProgram, 'uMaterialColor' );\n    gl.uniform4f( shaderProgram.uMaterialColor,\n      colors[0],\n      colors[1],\n      colors[2],\n      colors[3]);\n  }\n  return this;\n};\np5.RendererGL.prototype.stroke = function(r, g, b, a) {\n  var color = this._pInst.color.apply(this._pInst, arguments);\n  var colorNormalized = color._array;\n  this.curStrokeColor = colorNormalized;\n  this.drawMode = 'stroke';\n  return this;\n};\n\n//@TODO\np5.RendererGL.prototype._strokeCheck = function(){\n  if(this.drawMode === 'stroke'){\n    throw new Error(\n      'stroke for shapes in 3D not yet implemented, use fill for now :('\n    );\n  }\n};\n\n/**\n * [strokeWeight description]\n * @param  {Number} pointSize stroke point size\n * @return {[type]}           [description]\n * @todo  strokeWeight currently works on points only.\n * implement on all wireframes and strokes.\n */\np5.RendererGL.prototype.strokeWeight = function(pointSize) {\n  this.pointSize = pointSize;\n  return this;\n};\n//////////////////////////////////////////////\n// HASH | for material and geometry\n//////////////////////////////////////////////\n\np5.RendererGL.prototype.geometryInHash = function(gId){\n  return this.gHash[gId] !== undefined;\n};\n\np5.RendererGL.prototype.materialInHash = function(mId){\n  return this.mHash[mId] !== undefined;\n};\n\n/**\n * [resize description]\n * @param  {[type]} w [description]\n * @param  {[tyoe]} h [description]\n * @return {[type]}   [description]\n */\np5.RendererGL.prototype.resize = function(w,h) {\n  var gl = this.GL;\n  p5.Renderer.prototype.resize.call(this, w, h);\n  gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  // If we're using the default camera, update the aspect ratio\n  if(this._curCamera === 'default') {\n    this._curCamera = null;\n    this._setDefaultCamera();\n  }\n};\n\n/**\n * clears color and depth buffers\n * with r,g,b,a\n * @param {Number} r normalized red val.\n * @param {Number} g normalized green val.\n * @param {Number} b normalized blue val.\n * @param {Number} a normalized alpha val.\n */\np5.RendererGL.prototype.clear = function() {\n  var gl = this.GL;\n  gl.clearColor(arguments[0],\n    arguments[1],\n    arguments[2],\n    arguments[3]);\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n};\n\n/**\n * [translate description]\n * @param  {[type]} x [description]\n * @param  {[type]} y [description]\n * @param  {[type]} z [description]\n * @return {[type]}   [description]\n * @todo implement handle for components or vector as args\n */\np5.RendererGL.prototype.translate = function(x, y, z) {\n  //@TODO: figure out how to fit the resolution\n  x = x / RESOLUTION;\n  y = -y / RESOLUTION;\n  z = z / RESOLUTION;\n  this.uMVMatrix.translate([x,y,z]);\n  return this;\n};\n\n/**\n * Scales the Model View Matrix by a vector\n * @param  {Number | p5.Vector | Array} x [description]\n * @param  {Number} [y] y-axis scalar\n * @param  {Number} [z] z-axis scalar\n * @return {this}   [description]\n */\np5.RendererGL.prototype.scale = function(x,y,z) {\n  this.uMVMatrix.scale([x,y,z]);\n  return this;\n};\n\np5.RendererGL.prototype.rotate = function(rad, axis){\n  this.uMVMatrix.rotate(rad, axis);\n  return this;\n};\n\np5.RendererGL.prototype.rotateX = function(rad) {\n  this.rotate(rad, [1,0,0]);\n  return this;\n};\n\np5.RendererGL.prototype.rotateY = function(rad) {\n  this.rotate(rad, [0,1,0]);\n  return this;\n};\n\np5.RendererGL.prototype.rotateZ = function(rad) {\n  this.rotate(rad, [0,0,1]);\n  return this;\n};\n\n/**\n * pushes a copy of the model view matrix onto the\n * MV Matrix stack.\n */\np5.RendererGL.prototype.push = function() {\n  uMVMatrixStack.push(this.uMVMatrix.copy());\n};\n\n/**\n * [pop description]\n * @return {[type]} [description]\n */\np5.RendererGL.prototype.pop = function() {\n  if (uMVMatrixStack.length === 0) {\n    throw new Error('Invalid popMatrix!');\n  }\n  this.uMVMatrix = uMVMatrixStack.pop();\n};\n\np5.RendererGL.prototype.resetMatrix = function() {\n  this.uMVMatrix = p5.Matrix.identity();\n  this.translate(0, 0, -800);\n  return this;\n};\n\n// Text/Typography\n// @TODO:\np5.RendererGL.prototype._applyTextProperties = function() {\n  //@TODO finish implementation\n  console.error('text commands not yet implemented in webgl');\n};\nmodule.exports = p5.RendererGL;\n\n},{\"../core/core\":37,\"../core/p5.Renderer\":43,\"./p5.Matrix\":83,\"./shader\":88}],87:[function(_dereq_,module,exports){\n/**\n * @module Shape\n * @submodule 3D Primitives\n * @for p5\n * @requires core\n * @requires p5.Geometry\n */\n\n'use strict';\n\nvar p5 = _dereq_('../core/core');\n_dereq_('./p5.Geometry');\n/**\n * Draw a plane with given a width and height\n * @method plane\n * @param  {Number} width      width of the plane\n * @param  {Number} height     height of the plane\n * @param  {Number} [detailX]  Optional number of triangle\n *                             subdivisions in x-dimension\n * @param {Number} [detailY]   Optional number of triangle\n *                             subdivisions in y-dimension\n * @return {p5}                the p5 object\n * @example\n * <div>\n * <code>\n * //draw a plane with width 200 and height 200\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *   background(200);\n *   plane(200, 200);\n * }\n * </code>\n * </div>\n *\n * @alt\n * Nothing displayed on canvas\n * Rotating interior view of a box with sides that change color.\n * 3d red and green gradient.\n * Rotating interior view of a cylinder with sides that change color.\n * Rotating view of a cylinder with sides that change color.\n * 3d red and green gradient.\n * rotating view of a multi-colored cylinder with concave sides.\n */\np5.prototype.plane = function(){\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  var width = args[0] || 50;\n  var height = args[1] || width;\n  var detailX = typeof args[2] === 'number' ? args[2] : 1;\n  var detailY = typeof args[3] === 'number' ? args[3] : 1;\n\n  var gId = 'plane|'+width+'|'+height+'|'+detailX+'|'+detailY;\n\n  if(!this._renderer.geometryInHash(gId)){\n    var _plane = function(){\n      var u,v,p;\n      for (var i = 0; i <= this.detailY; i++){\n        v = i / this.detailY;\n        for (var j = 0; j <= this.detailX; j++){\n          u = j / this.detailX;\n          p = new p5.Vector(width * u - width/2,\n            height * v - height/2,\n            0);\n          this.vertices.push(p);\n          this.uvs.push([u,v]);\n        }\n      }\n    };\n    var planeGeom =\n    new p5.Geometry(detailX, detailY, _plane);\n    planeGeom\n      .computeFaces()\n      .computeNormals();\n    this._renderer.createBuffers(gId, planeGeom);\n  }\n\n  this._renderer.drawBuffers(gId);\n\n};\n\n/**\n * Draw a box with given width, height and depth\n * @method  box\n * @param  {Number} width     width of the box\n * @param  {Number} Height    height of the box\n * @param  {Number} depth     depth of the box\n * @param {Number} [detailX]  Optional number of triangle\n *                            subdivisions in x-dimension\n * @param {Number} [detailY]  Optional number of triangle\n *                            subdivisions in y-dimension\n * @return {p5}               the p5 object\n * @example\n * <div>\n * <code>\n * //draw a spinning box with width, height and depth 200\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *   background(200);\n *   rotateX(frameCount * 0.01);\n *   rotateY(frameCount * 0.01);\n *   box(200, 200, 200);\n * }\n * </code>\n * </div>\n */\np5.prototype.box = function(){\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  var width = args[0] || 50;\n  var height = args[1] || width;\n  var depth = args[2] || width;\n\n  var detailX = typeof args[3] === 'number' ? args[3] : 4;\n  var detailY = typeof args[4] === 'number' ? args[4] : 4;\n  var gId = 'box|'+width+'|'+height+'|'+depth+'|'+detailX+'|'+detailY;\n\n  if(!this._renderer.geometryInHash(gId)){\n    var _box = function(){\n      var cubeIndices = [\n        [0, 4, 2, 6],// -1, 0, 0],// -x\n        [1, 3, 5, 7],// +1, 0, 0],// +x\n        [0, 1, 4, 5],// 0, -1, 0],// -y\n        [2, 6, 3, 7],// 0, +1, 0],// +y\n        [0, 2, 1, 3],// 0, 0, -1],// -z\n        [4, 5, 6, 7]// 0, 0, +1] // +z\n      ];\n      var id=0;\n      for (var i = 0; i < cubeIndices.length; i++) {\n        var cubeIndex = cubeIndices[i];\n        var v = i * 4;\n        for (var j = 0; j < 4; j++) {\n          var d = cubeIndex[j];\n          //inspired by lightgl:\n          //https://github.com/evanw/lightgl.js\n          //octants:https://en.wikipedia.org/wiki/Octant_(solid_geometry)\n          var octant = new p5.Vector(\n            ((d & 1) * 2 - 1)*width/2,\n            ((d & 2) - 1) *height/2,\n            ((d & 4) / 2 - 1) * depth/2);\n          this.vertices.push( octant );\n          this.uvs.push([j & 1, (j & 2) / 2]);\n          id++;\n        }\n        this.faces.push([v, v + 1, v + 2]);\n        this.faces.push([v + 2, v + 1, v + 3]);\n      }\n    };\n    var boxGeom = new p5.Geometry(detailX,detailY, _box);\n    boxGeom.computeNormals();\n    //initialize our geometry buffer with\n    //the key val pair:\n    //geometry Id, Geom object\n    this._renderer.createBuffers(gId, boxGeom);\n  }\n  this._renderer.drawBuffers(gId);\n\n  return this;\n\n};\n\n/**\n * Draw a sphere with given radius\n * @method sphere\n * @param  {Number} radius            radius of circle\n * @param  {Number} [detailX]         optional: number of segments,\n *                                    the more segments the smoother geometry\n *                                    default is 24\n * @param  {Number} [detailY]         optional: number of segments,\n *                                    the more segments the smoother geometry\n *                                    default is 16\n * @return {p5}                       the p5 object\n * @example\n * <div>\n * <code>\n * // draw a sphere with radius 200\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *   background(200);\n *   sphere(50);\n * }\n * </code>\n * </div>\n */\np5.prototype.sphere = function(){\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  //@todo validate params here\n  //\n  var radius = args[0] || 50;\n  var detailX = typeof args[1] === 'number' ? args[1] : 24;\n  var detailY = typeof args[2] === 'number' ? args[2] : 16;\n  var gId = 'sphere|'+radius+'|'+detailX+'|'+detailY;\n  if(!this._renderer.geometryInHash(gId)){\n    var _sphere = function(){\n      var u,v,p;\n      for (var i = 0; i <= this.detailY; i++){\n        v = i / this.detailY;\n        for (var j = 0; j <= this.detailX; j++){\n          u = j / this.detailX;\n          var theta = 2 * Math.PI * u;\n          var phi = Math.PI * v - Math.PI / 2;\n          p = new p5.Vector(radius * Math.cos(phi) * Math.sin(theta),\n            radius * Math.sin(phi),\n            radius * Math.cos(phi) * Math.cos(theta));\n          this.vertices.push(p);\n          this.uvs.push([u,v]);\n        }\n      }\n    };\n    var sphereGeom = new p5.Geometry(detailX, detailY, _sphere);\n    sphereGeom\n      .computeFaces()\n      .computeNormals()\n      .averageNormals()\n      .averagePoleNormals();\n    this._renderer.createBuffers(gId, sphereGeom);\n  }\n  this._renderer.drawBuffers(gId);\n\n  return this;\n};\n\n\n/**\n* @private\n* helper function for creating both cones and cyllinders\n*/\nvar _truncatedCone = function(\n  bottomRadius,\n  topRadius,\n  height,\n  detailX,\n  detailY,\n  topCap,\n  bottomCap) {\n  detailX = (detailX < 3) ? 3 : detailX;\n  detailY = (detailY < 1) ? 1 : detailY;\n  topCap = (topCap === undefined) ? true : topCap;\n  bottomCap = (bottomCap === undefined) ? true : bottomCap;\n  var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n  var vertsAroundEdge = detailX + 1;\n\n  // ensure constant slant\n  var slant = Math.atan2(bottomRadius - topRadius, height);\n  var start = topCap ? -2 : 0;\n  var end = detailY + (bottomCap ? 2 : 0);\n  var yy, ii;\n  for (yy = start; yy <= end; ++yy) {\n    var v = yy / detailY;\n    var y = height * v;\n    var ringRadius;\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > detailY) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius +\n        (topRadius - bottomRadius) * (yy / detailY);\n    }\n    if (yy === -2 || yy === detailY + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n    y -= height / 2;\n    for (ii = 0; ii < vertsAroundEdge; ++ii) {\n      //VERTICES\n      this.vertices.push(\n        new p5.Vector(\n          Math.sin(ii*Math.PI * 2 /detailX) * ringRadius,\n          y,\n          Math.cos(ii*Math.PI * 2 /detailX) * ringRadius)\n        );\n      //VERTEX NORMALS\n      this.vertexNormals.push(\n        new p5.Vector(\n          (yy < 0 || yy > detailY) ? 0 :\n          (Math.sin(ii * Math.PI * 2 / detailX) * Math.cos(slant)),\n          (yy < 0) ? -1 : (yy > detailY ? 1 : Math.sin(slant)),\n          (yy < 0 || yy > detailY) ? 0 :\n          (Math.cos(ii * Math.PI * 2 / detailX) * Math.cos(slant)))\n        );\n      //UVs\n      this.uvs.push([(ii / detailX), v]);\n    }\n  }\n  for (yy = 0; yy < detailY + extra; ++yy) {\n    for (ii = 0; ii < detailX; ++ii) {\n      this.faces.push([vertsAroundEdge * (yy + 0) + 0 + ii,\n        vertsAroundEdge * (yy + 0) + 1 + ii,\n        vertsAroundEdge * (yy + 1) + 1 + ii]);\n      this.faces.push([vertsAroundEdge * (yy + 0) + 0 + ii,\n        vertsAroundEdge * (yy + 1) + 1 + ii,\n        vertsAroundEdge * (yy + 1) + 0 + ii]);\n    }\n  }\n};\n\n/**\n * Draw a cylinder with given radius and height\n * @method  cylinder\n * @param  {Number} radius     radius of the surface\n * @param  {Number} height     height of the cylinder\n * @param  {Number} [detailX]  optional: number of segments,\n *                             the more segments the smoother geometry\n *                             default is 24\n * @param {Number} [detailY]   optional: number of segments in y-dimension,\n *                             the more segments the smoother geometry\n *                             default is 16\n * @return {p5}                the p5 object\n * @example\n * <div>\n * <code>\n * //draw a spinning cylinder with radius 200 and height 200\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *   background(200);\n *   rotateX(frameCount * 0.01);\n *   rotateZ(frameCount * 0.01);\n *   cylinder(200, 200);\n * }\n * </code>\n * </div>\n */\np5.prototype.cylinder = function(){\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  var radius = args[0] || 50;\n  var height = args[1] || radius;\n  var detailX = typeof args[2] === 'number' ? args[2] : 24;\n  var detailY = typeof args[3] === 'number' ? args[3] : 16;\n  var gId = 'cylinder|'+radius+'|'+height+'|'+detailX+'|'+detailY;\n  if(!this._renderer.geometryInHash(gId)){\n    var cylinderGeom = new p5.Geometry(detailX, detailY);\n    _truncatedCone.call(\n      cylinderGeom,\n      radius,\n      radius,\n      height,\n      detailX,\n      detailY,\n      true,true);\n    cylinderGeom.computeNormals();\n    this._renderer.createBuffers(gId, cylinderGeom);\n  }\n\n  this._renderer.drawBuffers(gId);\n\n  return this;\n};\n\n\n/**\n * Draw a cone with given radius and height\n * @method cone\n * @param  {Number} radius            radius of the bottom surface\n * @param  {Number} height            height of the cone\n * @param  {Number} [detailX]         optional: number of segments,\n *                                    the more segments the smoother geometry\n *                                    default is 24\n * @param  {Number} [detailY]         optional: number of segments,\n *                                    the more segments the smoother geometry\n *                                    default is 16\n * @return {p5}                       the p5 object\n * @example\n * <div>\n * <code>\n * //draw a spinning cone with radius 200 and height 200\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *   background(200);\n *   rotateX(frameCount * 0.01);\n *   rotateZ(frameCount * 0.01);\n *   cone(200, 200);\n * }\n * </code>\n * </div>\n */\np5.prototype.cone = function(){\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  var baseRadius = args[0] || 50;\n  var height = args[1] || baseRadius;\n  var detailX = typeof args[2] === 'number' ? args[2] : 24;\n  var detailY = typeof args[3] === 'number' ? args[3] : 16;\n  var gId = 'cone|'+baseRadius+'|'+height+'|'+detailX+'|'+detailY;\n  if(!this._renderer.geometryInHash(gId)){\n    var coneGeom = new p5.Geometry(detailX, detailY);\n    _truncatedCone.call(coneGeom,\n      baseRadius,\n      0,//top radius 0\n      height,\n      detailX,\n      detailY,\n      true,\n      true);\n    //for cones we need to average Normals\n    coneGeom\n      .computeNormals();\n    this._renderer.createBuffers(gId, coneGeom);\n  }\n\n  this._renderer.drawBuffers(gId);\n\n  return this;\n};\n\n/**\n * Draw an ellipsoid with given raduis\n * @method ellipsoid\n * @param  {Number} radiusx           xradius of circle\n * @param  {Number} radiusy           yradius of circle\n * @param  {Number} radiusz           zradius of circle\n * @param  {Number} [detailX]         optional: number of segments,\n *                                    the more segments the smoother geometry\n *                                    default is 24. Avoid detail number above\n *                                    150, it may crash the browser.\n * @param  {Number} [detailY]         optional: number of segments,\n *                                    the more segments the smoother geometry\n *                                    default is 16. Avoid detail number above\n *                                    150, it may crash the browser.\n * @return {p5}                       the p5 object\n * @example\n * <div>\n * <code>\n * // draw an ellipsoid with radius 20, 30 and 40.\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *   background(200);\n *   ellipsoid(20, 30, 40);\n * }\n * </code>\n * </div>\n */\np5.prototype.ellipsoid = function(){\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  var detailX = typeof args[3] === 'number' ? args[3] : 24;\n  var detailY = typeof args[4] === 'number' ? args[4] : 24;\n  var radiusX = args[0] || 50;\n  var radiusY = args[1] || radiusX;\n  var radiusZ = args[2] || radiusX;\n\n  var gId = 'ellipsoid|'+radiusX+'|'+radiusY+\n  '|'+radiusZ+'|'+detailX+'|'+detailY;\n\n\n  if(!this._renderer.geometryInHash(gId)){\n    var _ellipsoid = function(){\n      var u,v,p;\n      for (var i = 0; i <= this.detailY; i++){\n        v = i / this.detailY;\n        for (var j = 0; j <= this.detailX; j++){\n          u = j / this.detailX;\n          var theta = 2 * Math.PI * u;\n          var phi = Math.PI * v - Math.PI / 2;\n          p = new p5.Vector(radiusX * Math.cos(phi) * Math.sin(theta),\n            radiusY * Math.sin(phi),\n            radiusZ * Math.cos(phi) * Math.cos(theta));\n          this.vertices.push(p);\n          this.uvs.push([u,v]);\n        }\n      }\n    };\n    var ellipsoidGeom = new p5.Geometry(detailX, detailY,_ellipsoid);\n    ellipsoidGeom\n      .computeFaces()\n      .computeNormals();\n    this._renderer.createBuffers(gId, ellipsoidGeom);\n  }\n\n  this._renderer.drawBuffers(gId);\n\n  return this;\n};\n\n/**\n * Draw a torus with given radius and tube radius\n * @method torus\n * @param  {Number} radius        radius of the whole ring\n * @param  {Number} tubeRadius    radius of the tube\n * @param  {Number} [detailX]     optional: number of segments in x-dimension,\n *                                the more segments the smoother geometry\n *                                default is 24\n * @param  {Number} [detailY]     optional: number of segments in y-dimension,\n *                                the more segments the smoother geometry\n *                                default is 16\n * @return {p5}                   the p5 object\n * @example\n * <div>\n * <code>\n * //draw a spinning torus with radius 200 and tube radius 60\n * function setup(){\n *   createCanvas(100, 100, WEBGL);\n * }\n *\n * function draw(){\n *   background(200);\n *   rotateX(frameCount * 0.01);\n *   rotateY(frameCount * 0.01);\n *   torus(200, 60);\n * }\n * </code>\n * </div>\n */\np5.prototype.torus = function(){\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  var detailX = typeof args[2] === 'number' ? args[2] : 24;\n  var detailY = typeof args[3] === 'number' ? args[3] : 16;\n\n  var radius = args[0] || 50;\n  var tubeRadius = args[1] || 10;\n\n  var gId = 'torus|'+radius+'|'+tubeRadius+'|'+detailX+'|'+detailY;\n\n  if(!this._renderer.geometryInHash(gId)){\n    var _torus = function(){\n      var u,v,p;\n      for (var i = 0; i <= this.detailY; i++){\n        v = i / this.detailY;\n        for (var j = 0; j <= this.detailX; j++){\n          u = j / this.detailX;\n          var theta = 2 * Math.PI * u;\n          var phi = 2 * Math.PI * v;\n          p = new p5.Vector(\n            (radius + tubeRadius * Math.cos(phi)) * Math.cos(theta),\n            (radius + tubeRadius * Math.cos(phi)) * Math.sin(theta),\n            tubeRadius * Math.sin(phi));\n          this.vertices.push(p);\n          this.uvs.push([u,v]);\n        }\n      }\n    };\n    var torusGeom = new p5.Geometry(detailX, detailY, _torus);\n    torusGeom\n      .computeFaces()\n      .computeNormals()\n      .averageNormals();\n    this._renderer.createBuffers(gId, torusGeom);\n  }\n\n  this._renderer.drawBuffers(gId);\n\n  return this;\n};\n\n///////////////////////\n/// 2D primitives\n/////////////////////////\n\n//@TODO\np5.RendererGL.prototype.point = function(x, y, z){\n  console.log('point not yet implemented in webgl');\n  return this;\n};\n\np5.RendererGL.prototype.triangle = function\n(args){\n  var x1=args[0], y1=args[1];\n  var x2=args[2], y2=args[3];\n  var x3=args[4], y3=args[5];\n  var gId = 'tri|'+x1+'|'+y1+'|'+\n  x2+'|'+y2+'|'+\n  x3+'|'+y3;\n  if(!this.geometryInHash(gId)){\n    var _triangle = function(){\n      var vertices = [];\n      vertices.push(new p5.Vector(x1,y1,0));\n      vertices.push(new p5.Vector(x2,y2,0));\n      vertices.push(new p5.Vector(x3,y3,0));\n      this.vertices = vertices;\n      this.faces = [[0,1,2]];\n      this.uvs = [[0,0],[0,1],[1,1]];\n    };\n    var triGeom = new p5.Geometry(1,1,_triangle);\n    triGeom.computeNormals();\n    this.createBuffers(gId, triGeom);\n  }\n\n  this.drawBuffers(gId);\n  return this;\n};\n\np5.RendererGL.prototype.ellipse = function\n(args){\n  var x = args[0];\n  var y = args[1];\n  var width = args[2];\n  var height = args[3];\n  //detailX and Y are optional 6th & 7th\n  //arguments\n  var detailX = args[4] || 24;\n  var detailY = args[5] || 16;\n  var gId = 'ellipse|'+args[0]+'|'+args[1]+'|'+args[2]+'|'+\n  args[3];\n  if(!this.geometryInHash(gId)){\n    var _ellipse = function(){\n      var u,v,p;\n      var centerX = x+width*0.5;\n      var centerY = y+height*0.5;\n      for (var i = 0; i <= this.detailY; i++){\n        v = i / this.detailY;\n        for (var j = 0; j <= this.detailX; j++){\n          u = j / this.detailX;\n          var theta = 2 * Math.PI * u;\n          if(v === 0){\n            p = new p5.Vector(centerX, centerY, 0);\n          }\n          else{\n            var _x = centerX + width*0.5 * Math.cos(theta);\n            var _y = centerY + height*0.5 * Math.sin(theta);\n            p = new p5.Vector(_x, _y, 0);\n          }\n          this.vertices.push(p);\n          this.uvs.push([u,v]);\n        }\n      }\n    };\n    var ellipseGeom = new p5.Geometry(detailX,detailY,_ellipse);\n    ellipseGeom\n      .computeFaces()\n      .computeNormals();\n    this.createBuffers(gId, ellipseGeom);\n  }\n  this.drawBuffers(gId);\n  return this;\n};\n\np5.RendererGL.prototype.rect = function\n(args){\n  var gId = 'rect|'+args[0]+'|'+args[1]+'|'+args[2]+'|'+\n  args[3];\n  var x = args[0];\n  var y = args[1];\n  var width = args[2];\n  var height = args[3];\n  var detailX = args[4] || 24;\n  var detailY = args[5] || 16;\n  if(!this.geometryInHash(gId)){\n    var _rect = function(){\n      var u,v,p;\n      for (var i = 0; i <= this.detailY; i++){\n        v = i / this.detailY;\n        for (var j = 0; j <= this.detailX; j++){\n          u = j / this.detailX;\n          // var _x = x-width/2;\n          // var _y = y-height/2;\n          p = new p5.Vector(\n            x + (width*u),\n            y + (height*v),\n            0\n          );\n          this.vertices.push(p);\n          this.uvs.push([u,v]);\n        }\n      }\n    };\n    var rectGeom = new p5.Geometry(detailX,detailY,_rect);\n    rectGeom\n      .computeFaces()\n      .computeNormals();\n    this.createBuffers(gId, rectGeom);\n  }\n  this.drawBuffers(gId);\n  return this;\n};\n\np5.RendererGL.prototype.quad = function(){\n  var args = new Array(arguments.length);\n  for (var i = 0; i < args.length; ++i) {\n    args[i] = arguments[i];\n  }\n  //@todo validate params here\n  //\n  var x1 = args[0],\n    y1 = args[1],\n    x2 = args[2],\n    y2 = args[3],\n    x3 = args[4],\n    y3 = args[5],\n    x4 = args[6],\n    y4 = args[7];\n  var gId = 'quad|'+x1+'|'+y1+'|'+\n  x2+'|'+y2+'|'+\n  x3+'|'+y3+'|'+\n  x4+'|'+y4;\n  if(!this.geometryInHash(gId)){\n    var _quad = function(){\n      this.vertices.push(new p5.Vector(x1,y1,0));\n      this.vertices.push(new p5.Vector(x2,y2,0));\n      this.vertices.push(new p5.Vector(x3,y3,0));\n      this.vertices.push(new p5.Vector(x4,y4,0));\n      this.uvs.push([0, 0], [1, 0], [1, 1], [0, 1]);\n    };\n    var quadGeom = new p5.Geometry(2,2,_quad);\n    quadGeom.computeNormals();\n    quadGeom.faces = [[0,1,2],[2,3,0]];\n    this.createBuffers(gId, quadGeom);\n  }\n  this.drawBuffers(gId);\n  return this;\n};\n\n//this implementation of bezier curve\n//is based on Bernstein polynomial\np5.RendererGL.prototype.bezier = function\n(args){\n  var bezierDetail=args[12] || 20;//value of Bezier detail\n  this.beginShape();\n  var coeff=[0,0,0,0];//  Bernstein polynomial coeffecients\n  var vertex=[0,0,0]; //(x,y,z) coordinates of points in bezier curve\n  for(var i=0; i<=bezierDetail; i++){\n    coeff[0]=Math.pow(1-(i/bezierDetail),3);\n    coeff[1]=(3*(i/bezierDetail)) * (Math.pow(1-(i/bezierDetail),2));\n    coeff[2]=(3*Math.pow(i/bezierDetail,2)) * (1-(i/bezierDetail));\n    coeff[3]=Math.pow(i/bezierDetail,3);\n    vertex[0]=args[0]*coeff[0] + args[3]*coeff[1] +\n              args[6]*coeff[2] + args[9]*coeff[3];\n    vertex[1]=args[1]*coeff[0] + args[4]*coeff[1] +\n              args[7]*coeff[2] + args[10]*coeff[3];\n    vertex[2]=args[2]*coeff[0] + args[5]*coeff[1] +\n              args[8]*coeff[2] + args[11]*coeff[3];\n    this.vertex(vertex[0],vertex[1],vertex[2]);\n  }\n  this.endShape();\n  return this;\n};\n\np5.RendererGL.prototype.curve=function\n(args){\n  var curveDetail=args[12];\n  this.beginShape();\n  var coeff=[0,0,0,0];//coeffecients of the equation\n  var vertex=[0,0,0]; //(x,y,z) coordinates of points in bezier curve\n  for(var i=0; i<=curveDetail; i++){\n    coeff[0]=Math.pow((i/curveDetail),3) * 0.5;\n    coeff[1]=Math.pow((i/curveDetail),2) * 0.5;\n    coeff[2]=(i/curveDetail) * 0.5;\n    coeff[3]=0.5;\n    vertex[0]=coeff[0]*(-args[0] + (3*args[3]) - (3*args[6]) +args[9]) +\n              coeff[1]*((2*args[0]) - (5*args[3]) + (4*args[6]) - args[9]) +\n              coeff[2]*(-args[0] + args[6]) +\n              coeff[3]*(2*args[3]);\n    vertex[1]=coeff[0]*(-args[1] + (3*args[4]) - (3*args[7]) +args[10]) +\n              coeff[1]*((2*args[1]) - (5*args[4]) + (4*args[7]) - args[10]) +\n              coeff[2]*(-args[1] + args[7]) +\n              coeff[3]*(2*args[4]);\n    vertex[2]=coeff[0]*(-args[2] + (3*args[5]) - (3*args[8]) +args[11]) +\n              coeff[1]*((2*args[2]) - (5*args[5]) + (4*args[8]) - args[11]) +\n              coeff[2]*(-args[2] + args[8]) +\n              coeff[3]*(2*args[5]);\n    this.vertex(vertex[0],vertex[1],vertex[2]);\n  }\n  this.endShape();\n  return this;\n};\n\nmodule.exports = p5;\n\n},{\"../core/core\":37,\"./p5.Geometry\":82}],88:[function(_dereq_,module,exports){\n\n\nmodule.exports = {\n  immediateVert:\n    \"attribute vec3 aPosition;\\nattribute vec4 aVertexColor;\\n\\nuniform mat4 uModelViewMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform float uResolution;\\nuniform float uPointSize;\\n\\nvarying vec4 vColor;\\nvoid main(void) {\\n  vec4 positionVec4 = vec4(aPosition / uResolution *vec3(1.0, -1.0, 1.0), 1.0);\\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\\n  vColor = aVertexColor;\\n  gl_PointSize = uPointSize;\\n}\\n\",\n  vertexColorVert:\n    \"attribute vec3 aPosition;\\nattribute vec4 aVertexColor;\\n\\nuniform mat4 uModelViewMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform float uResolution;\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  vec4 positionVec4 = vec4(aPosition / uResolution * vec3(1.0, -1.0, 1.0), 1.0);\\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\\n  vColor = aVertexColor;\\n}\\n\",\n  vertexColorFrag:\n    \"precision mediump float;\\nvarying vec4 vColor;\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n}\",\n  normalVert:\n    \"attribute vec3 aPosition;\\nattribute vec3 aNormal;\\nattribute vec2 aTexCoord;\\n\\nuniform mat4 uModelViewMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform mat3 uNormalMatrix;\\nuniform float uResolution;\\n\\nvarying vec3 vVertexNormal;\\nvarying highp vec2 vVertTexCoord;\\n\\nvoid main(void) {\\n  vec4 positionVec4 = vec4(aPosition / uResolution * vec3(1.0, -1.0, 1.0), 1.0);\\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\\n  vVertexNormal = vec3( uNormalMatrix * aNormal );\\n  vVertTexCoord = aTexCoord;\\n}\\n\",\n  normalFrag:\n    \"precision mediump float;\\nvarying vec3 vVertexNormal;\\nvoid main(void) {\\n  gl_FragColor = vec4(vVertexNormal, 1.0);\\n}\",\n  basicFrag:\n    \"precision mediump float;\\nvarying vec3 vVertexNormal;\\nuniform vec4 uMaterialColor;\\nvoid main(void) {\\n  gl_FragColor = uMaterialColor;\\n}\",\n  lightVert:\n    \"attribute vec3 aPosition;\\nattribute vec3 aNormal;\\nattribute vec2 aTexCoord;\\n\\nuniform mat4 uModelViewMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform mat3 uNormalMatrix;\\nuniform float uResolution;\\nuniform int uAmbientLightCount;\\nuniform int uDirectionalLightCount;\\nuniform int uPointLightCount;\\n\\nuniform vec3 uAmbientColor[8];\\nuniform vec3 uLightingDirection[8];\\nuniform vec3 uDirectionalColor[8];\\nuniform vec3 uPointLightLocation[8];\\nuniform vec3 uPointLightColor[8];\\nuniform bool uSpecular;\\n\\nvarying vec3 vVertexNormal;\\nvarying vec2 vVertTexCoord;\\nvarying vec3 vLightWeighting;\\n\\nvec3 ambientLightFactor = vec3(0.0, 0.0, 0.0);\\nvec3 directionalLightFactor = vec3(0.0, 0.0, 0.0);\\nvec3 pointLightFactor = vec3(0.0, 0.0, 0.0);\\nvec3 pointLightFactor2 = vec3(0.0, 0.0, 0.0);\\n\\nvoid main(void){\\n\\n  vec4 positionVec4 = vec4(aPosition / uResolution, 1.0);\\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\\n\\n  vec3 vertexNormal = vec3( uNormalMatrix * aNormal );\\n  vVertexNormal = vertexNormal;\\n  vVertTexCoord = aTexCoord;\\n\\n  vec4 mvPosition = uModelViewMatrix * vec4(aPosition / uResolution, 1.0);\\n  vec3 eyeDirection = normalize(-mvPosition.xyz);\\n\\n  float shininess = 32.0;\\n  float specularFactor = 2.0;\\n  float diffuseFactor = 0.3;\\n\\n  for(int i = 0; i < 8; i++){\\n    if(uAmbientLightCount == i) break;\\n    ambientLightFactor += uAmbientColor[i];\\n  }\\n\\n  for(int j = 0; j < 8; j++){\\n    if(uDirectionalLightCount == j) break;\\n    vec3 dir = uLightingDirection[j];\\n    float directionalLightWeighting = max(dot(vertexNormal, dir), 0.0);\\n    directionalLightFactor += uDirectionalColor[j] * directionalLightWeighting;\\n  }\\n\\n  for(int k = 0; k < 8; k++){\\n    if(uPointLightCount == k) break;\\n    vec3 loc = uPointLightLocation[k];\\n    //loc = loc / uResolution;\\n    vec3 lightDirection = normalize(loc - mvPosition.xyz);\\n\\n    float directionalLightWeighting = max(dot(vertexNormal, lightDirection), 0.0);\\n    pointLightFactor += uPointLightColor[k] * directionalLightWeighting;\\n\\n    //factor2 for specular\\n    vec3 reflectionDirection = reflect(-lightDirection, vertexNormal);\\n    float specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), shininess);\\n\\n    pointLightFactor2 += uPointLightColor[k] * (specularFactor * specularLightWeighting\\n      +  directionalLightWeighting * diffuseFactor);\\n  }\\n\\n  if(!uSpecular){\\n    vLightWeighting =  ambientLightFactor + directionalLightFactor + pointLightFactor;\\n  }else{\\n    vLightWeighting = ambientLightFactor + directionalLightFactor + pointLightFactor2;\\n  }\\n\\n}\\n\",\n  lightTextureFrag:\n    \"precision mediump float;\\n\\nuniform vec4 uMaterialColor;\\nuniform sampler2D uSampler;\\nuniform bool isTexture;\\n\\nvarying vec3 vLightWeighting;\\nvarying highp vec2 vVertTexCoord;\\n\\nvoid main(void) {\\n  if(!isTexture){\\n    gl_FragColor = vec4(vec3(uMaterialColor.rgb * vLightWeighting), uMaterialColor.a);\\n  }else{\\n    vec4 textureColor = texture2D(uSampler, vVertTexCoord);\\n    if(vLightWeighting == vec3(0., 0., 0.)){\\n      gl_FragColor = textureColor;\\n    }else{\\n      gl_FragColor = vec4(vec3(textureColor.rgb * vLightWeighting), textureColor.a);\\n    }\\n  }\\n}\"\n};\n},{}]},{},[28])(28)\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/p5/lib/p5.js\n ** module id = 31\n ** module chunks = 0\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/process/browser.js\n ** module id = 32\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMChildrenOperations\n */\n\n'use strict';\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar Danger = require('./Danger');\nvar ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\n\nfunction getNodeAfter(parentNode, node) {\n  // Special case for text components, which return [open, close] comments\n  // from getHostNode.\n  if (Array.isArray(node)) {\n    node = node[1];\n  }\n  return node ? node.nextSibling : parentNode.firstChild;\n}\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n  // We rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n  // we are careful to use `null`.)\n  parentNode.insertBefore(childNode, referenceNode);\n});\n\nfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n}\n\nfunction moveChild(parentNode, childNode, referenceNode) {\n  if (Array.isArray(childNode)) {\n    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n  } else {\n    insertChildAt(parentNode, childNode, referenceNode);\n  }\n}\n\nfunction removeChild(parentNode, childNode) {\n  if (Array.isArray(childNode)) {\n    var closingComment = childNode[1];\n    childNode = childNode[0];\n    removeDelimitedText(parentNode, childNode, closingComment);\n    parentNode.removeChild(closingComment);\n  }\n  parentNode.removeChild(childNode);\n}\n\nfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n  var node = openingComment;\n  while (true) {\n    var nextNode = node.nextSibling;\n    insertChildAt(parentNode, node, referenceNode);\n    if (node === closingComment) {\n      break;\n    }\n    node = nextNode;\n  }\n}\n\nfunction removeDelimitedText(parentNode, startNode, closingComment) {\n  while (true) {\n    var node = startNode.nextSibling;\n    if (node === closingComment) {\n      // The closing comment is removed by ReactMultiChild.\n      break;\n    } else {\n      parentNode.removeChild(node);\n    }\n  }\n}\n\nfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n  var parentNode = openingComment.parentNode;\n  var nodeAfterComment = openingComment.nextSibling;\n  if (nodeAfterComment === closingComment) {\n    // There are no text nodes between the opening and closing comments; insert\n    // a new one if stringText isn't empty.\n    if (stringText) {\n      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n    }\n  } else {\n    if (stringText) {\n      // Set the text content of the first node after the opening comment, and\n      // remove all following nodes up until the closing comment.\n      setTextContent(nodeAfterComment, stringText);\n      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n    } else {\n      removeDelimitedText(parentNode, openingComment, closingComment);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);\n  }\n}\n\nvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\nif (process.env.NODE_ENV !== 'production') {\n  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n    if (prevInstance._debugID !== 0) {\n      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());\n    } else {\n      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n      if (nextInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());\n      }\n    }\n  };\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\n  replaceDelimitedText: replaceDelimitedText,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  processUpdates: function (parentNode, updates) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      var update = updates[k];\n      switch (update.type) {\n        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });\n          }\n          break;\n        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });\n          }\n          break;\n        case ReactMultiChildUpdateTypes.SET_MARKUP:\n          setInnerHTML(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());\n          }\n          break;\n        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n          setTextContent(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());\n          }\n          break;\n        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n          removeChild(parentNode, update.fromNode);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });\n          }\n          break;\n      }\n    }\n  }\n\n};\n\nmodule.exports = DOMChildrenOperations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMChildrenOperations.js\n ** module id = 33\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMNamespaces\n */\n\n'use strict';\n\nvar DOMNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg'\n};\n\nmodule.exports = DOMNamespaces;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMNamespaces.js\n ** module id = 34\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginRegistry\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Injectable ordering of event plugins.\n */\nvar EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!EventPluginOrder) {\n    // Wait until an `EventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var PluginModule = namesToPlugins[pluginName];\n    var pluginIndex = EventPluginOrder.indexOf(pluginName);\n    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;\n    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\n    var publishedEvents = PluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\n  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, PluginModule, eventName) {\n  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;\n  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var lowerCasedName = registrationName.toLowerCase();\n    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Mapping from lowercase registration names to the properly cased version,\n   * used to warn in the case of missing event handlers. Available\n   * only in __DEV__.\n   * @type {Object}\n   */\n  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function (InjectedEventPluginOrder) {\n    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;\n    // Clone the ordering so it cannot be dynamically mutated.\n    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function (injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var PluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {\n        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;\n        namesToPlugins[pluginName] = PluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function (event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n    }\n    for (var phase in dispatchConfig.phasedRegistrationNames) {\n      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\n        continue;\n      }\n      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];\n      if (PluginModule) {\n        return PluginModule;\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function () {\n    EventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;\n      for (var lowerCasedName in possibleRegistrationNames) {\n        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {\n          delete possibleRegistrationNames[lowerCasedName];\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPluginRegistry.js\n ** module id = 35\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventConstants = require('./EventConstants');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `ComponentTree`: [required] Module that can convert between React instances\n *   and actual node references.\n */\nvar ComponentTree;\nvar TreeTraversal;\nvar injection = {\n  injectComponentTree: function (Injected) {\n    ComponentTree = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n    }\n  },\n  injectTreeTraversal: function (Injected) {\n    TreeTraversal = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;\n}\n\nvar validateEventDispatches;\nif (process.env.NODE_ENV !== 'production') {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    var instancesIsArr = Array.isArray(dispatchInstances);\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nfunction executeDispatch(event, simulated, listener, inst) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n\n  getInstanceFromNode: function (node) {\n    return ComponentTree.getInstanceFromNode(node);\n  },\n  getNodeFromInstance: function (node) {\n    return ComponentTree.getNodeFromInstance(node);\n  },\n  isAncestor: function (a, b) {\n    return TreeTraversal.isAncestor(a, b);\n  },\n  getLowestCommonAncestor: function (a, b) {\n    return TreeTraversal.getLowestCommonAncestor(a, b);\n  },\n  getParentInstance: function (inst) {\n    return TreeTraversal.getParentInstance(inst);\n  },\n  traverseTwoPhase: function (target, fn, arg) {\n    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n  },\n  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n  },\n\n  injection: injection\n};\n\nmodule.exports = EventPluginUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPluginUtils.js\n ** module id = 36\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule KeyEscapeUtils\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/KeyEscapeUtils.js\n ** module id = 37\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: ReactPropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/LinkedValueUtils.js\n ** module id = 38\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponent\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'setState');\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponent.js\n ** module id = 39\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentEnvironment\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkup: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponentEnvironment.js\n ** module id = 40\n ** module chunks = 0\n **/","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentTreeHook\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction isNative(fn) {\n  // Based on isNative() from Lodash\n  var funcToString = Function.prototype.toString;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var reIsNative = RegExp('^' + funcToString\n  // Take an example native function source for comparison\n  .call(hasOwnProperty)\n  // Strip regex characters so we can use it for regex\n  .replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  // Remove hasOwnProperty from the template to make it generic\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n  try {\n    var source = funcToString.call(fn);\n    return reIsNative.test(source);\n  } catch (err) {\n    return false;\n  }\n}\n\nvar canUseCollections =\n// Array.from\ntypeof Array.from === 'function' &&\n// Map\ntypeof Map === 'function' && isNative(Map) &&\n// Map.prototype.keys\nMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n// Set\ntypeof Set === 'function' && isNative(Set) &&\n// Set.prototype.keys\nSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\nvar itemMap;\nvar rootIDSet;\n\nvar itemByKey;\nvar rootByKey;\n\nif (canUseCollections) {\n  itemMap = new Map();\n  rootIDSet = new Set();\n} else {\n  itemByKey = {};\n  rootByKey = {};\n}\n\nvar unmountedIDs = [];\n\n// Use non-numeric keys to prevent V8 performance issues:\n// https://github.com/facebook/react/pull/7232\nfunction getKeyFromID(id) {\n  return '.' + id;\n}\nfunction getIDFromKey(key) {\n  return parseInt(key.substr(1), 10);\n}\n\nfunction get(id) {\n  if (canUseCollections) {\n    return itemMap.get(id);\n  } else {\n    var key = getKeyFromID(id);\n    return itemByKey[key];\n  }\n}\n\nfunction remove(id) {\n  if (canUseCollections) {\n    itemMap['delete'](id);\n  } else {\n    var key = getKeyFromID(id);\n    delete itemByKey[key];\n  }\n}\n\nfunction create(id, element, parentID) {\n  var item = {\n    element: element,\n    parentID: parentID,\n    text: null,\n    childIDs: [],\n    isMounted: false,\n    updateCount: 0\n  };\n\n  if (canUseCollections) {\n    itemMap.set(id, item);\n  } else {\n    var key = getKeyFromID(id);\n    itemByKey[key] = item;\n  }\n}\n\nfunction addRoot(id) {\n  if (canUseCollections) {\n    rootIDSet.add(id);\n  } else {\n    var key = getKeyFromID(id);\n    rootByKey[key] = true;\n  }\n}\n\nfunction removeRoot(id) {\n  if (canUseCollections) {\n    rootIDSet['delete'](id);\n  } else {\n    var key = getKeyFromID(id);\n    delete rootByKey[key];\n  }\n}\n\nfunction getRegisteredIDs() {\n  if (canUseCollections) {\n    return Array.from(itemMap.keys());\n  } else {\n    return Object.keys(itemByKey).map(getIDFromKey);\n  }\n}\n\nfunction getRootIDs() {\n  if (canUseCollections) {\n    return Array.from(rootIDSet.keys());\n  } else {\n    return Object.keys(rootByKey).map(getIDFromKey);\n  }\n}\n\nfunction purgeDeep(id) {\n  var item = get(id);\n  if (item) {\n    var childIDs = item.childIDs;\n\n    remove(id);\n    childIDs.forEach(purgeDeep);\n  }\n}\n\nfunction describeComponentFrame(name, source, ownerName) {\n  return '\\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n}\n\nfunction getDisplayName(element) {\n  if (element == null) {\n    return '#empty';\n  } else if (typeof element === 'string' || typeof element === 'number') {\n    return '#text';\n  } else if (typeof element.type === 'string') {\n    return element.type;\n  } else {\n    return element.type.displayName || element.type.name || 'Unknown';\n  }\n}\n\nfunction describeID(id) {\n  var name = ReactComponentTreeHook.getDisplayName(id);\n  var element = ReactComponentTreeHook.getElement(id);\n  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n  var ownerName;\n  if (ownerID) {\n    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n  }\n  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n  return describeComponentFrame(name, element && element._source, ownerName);\n}\n\nvar ReactComponentTreeHook = {\n  onSetChildren: function (id, nextChildIDs) {\n    var item = get(id);\n    item.childIDs = nextChildIDs;\n\n    for (var i = 0; i < nextChildIDs.length; i++) {\n      var nextChildID = nextChildIDs[i];\n      var nextChild = get(nextChildID);\n      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n      if (nextChild.parentID == null) {\n        nextChild.parentID = id;\n        // TODO: This shouldn't be necessary but mounting a new root during in\n        // componentWillMount currently causes not-yet-mounted components to\n        // be purged from our tree data so their parent ID is missing.\n      }\n      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n    }\n  },\n  onBeforeMountComponent: function (id, element, parentID) {\n    create(id, element, parentID);\n  },\n  onBeforeUpdateComponent: function (id, element) {\n    var item = get(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.element = element;\n  },\n  onMountComponent: function (id) {\n    var item = get(id);\n    item.isMounted = true;\n    var isRoot = item.parentID === 0;\n    if (isRoot) {\n      addRoot(id);\n    }\n  },\n  onUpdateComponent: function (id) {\n    var item = get(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.updateCount++;\n  },\n  onUnmountComponent: function (id) {\n    var item = get(id);\n    if (item) {\n      // We need to check if it exists.\n      // `item` might not exist if it is inside an error boundary, and a sibling\n      // error boundary child threw while mounting. Then this instance never\n      // got a chance to mount, but it still gets an unmounting event during\n      // the error boundary cleanup.\n      item.isMounted = false;\n      var isRoot = item.parentID === 0;\n      if (isRoot) {\n        removeRoot(id);\n      }\n    }\n    unmountedIDs.push(id);\n  },\n  purgeUnmountedComponents: function () {\n    if (ReactComponentTreeHook._preventPurging) {\n      // Should only be used for testing.\n      return;\n    }\n\n    for (var i = 0; i < unmountedIDs.length; i++) {\n      var id = unmountedIDs[i];\n      purgeDeep(id);\n    }\n    unmountedIDs.length = 0;\n  },\n  isMounted: function (id) {\n    var item = get(id);\n    return item ? item.isMounted : false;\n  },\n  getCurrentStackAddendum: function (topElement) {\n    var info = '';\n    if (topElement) {\n      var type = topElement.type;\n      var name = typeof type === 'function' ? type.displayName || type.name : type;\n      var owner = topElement._owner;\n      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());\n    }\n\n    var currentOwner = ReactCurrentOwner.current;\n    var id = currentOwner && currentOwner._debugID;\n\n    info += ReactComponentTreeHook.getStackAddendumByID(id);\n    return info;\n  },\n  getStackAddendumByID: function (id) {\n    var info = '';\n    while (id) {\n      info += describeID(id);\n      id = ReactComponentTreeHook.getParentID(id);\n    }\n    return info;\n  },\n  getChildIDs: function (id) {\n    var item = get(id);\n    return item ? item.childIDs : [];\n  },\n  getDisplayName: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element) {\n      return null;\n    }\n    return getDisplayName(element);\n  },\n  getElement: function (id) {\n    var item = get(id);\n    return item ? item.element : null;\n  },\n  getOwnerID: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element || !element._owner) {\n      return null;\n    }\n    return element._owner._debugID;\n  },\n  getParentID: function (id) {\n    var item = get(id);\n    return item ? item.parentID : null;\n  },\n  getSource: function (id) {\n    var item = get(id);\n    var element = item ? item.element : null;\n    var source = element != null ? element._source : null;\n    return source;\n  },\n  getText: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (typeof element === 'string') {\n      return element;\n    } else if (typeof element === 'number') {\n      return '' + element;\n    } else {\n      return null;\n    }\n  },\n  getUpdateCount: function (id) {\n    var item = get(id);\n    return item ? item.updateCount : 0;\n  },\n\n\n  getRegisteredIDs: getRegisteredIDs,\n\n  getRootIDs: getRootIDs\n};\n\nmodule.exports = ReactComponentTreeHook;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponentTreeHook.js\n ** module id = 41\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactErrorUtils\n */\n\n'use strict';\n\nvar caughtError = null;\n\n/**\n * Call a function while guarding against errors that happens within it.\n *\n * @param {?String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} a First argument\n * @param {*} b Second argument\n */\nfunction invokeGuardedCallback(name, func, a, b) {\n  try {\n    return func(a, b);\n  } catch (x) {\n    if (caughtError === null) {\n      caughtError = x;\n    }\n    return undefined;\n  }\n}\n\nvar ReactErrorUtils = {\n  invokeGuardedCallback: invokeGuardedCallback,\n\n  /**\n   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n   * handler are sure to be rethrown by rethrowCaughtError.\n   */\n  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\n  /**\n   * During execution of guarded functions we will capture the first error which\n   * we will rethrow to be handled by the top level error handler.\n   */\n  rethrowCaughtError: function () {\n    if (caughtError) {\n      var error = caughtError;\n      caughtError = null;\n      throw error;\n    }\n  }\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  /**\n   * To help development we can get better devtools integration by simulating a\n   * real browser event.\n   */\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {\n      var boundFunc = func.bind(null, a, b);\n      var evtType = 'react-' + name;\n      fakeNode.addEventListener(evtType, boundFunc, false);\n      var evt = document.createEvent('Event');\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n      fakeNode.removeEventListener(evtType, boundFunc, false);\n    };\n  }\n}\n\nmodule.exports = ReactErrorUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactErrorUtils.js\n ** module id = 42\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNoopUpdateQueue\n */\n\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {},\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nmodule.exports = ReactNoopUpdateQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactNoopUpdateQueue.js\n ** module id = 43\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocationNames\n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypeLocationNames.js\n ** module id = 44\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocations\n */\n\n'use strict';\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\nvar ReactPropTypeLocations = keyMirror({\n  prop: null,\n  context: null,\n  childContext: null\n});\n\nmodule.exports = ReactPropTypeLocations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypeLocations.js\n ** module id = 45\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypesSecret\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypesSecret.js\n ** module id = 46\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdateQueue\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction enqueueUpdate(internalInstance) {\n  ReactUpdates.enqueueUpdate(internalInstance);\n}\n\nfunction formatUnexpectedArgument(arg) {\n  var type = typeof arg;\n  if (type !== 'object') {\n    return type;\n  }\n  var displayName = arg.constructor && arg.constructor.name || type;\n  var keys = Object.keys(arg);\n  if (keys.length > 0 && keys.length < 20) {\n    return displayName + ' (keys: ' + keys.join(', ') + ')';\n  }\n  return displayName;\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      var ctor = publicInstance.constructor;\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;\n    }\n    return null;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(publicInstance);\n    if (internalInstance) {\n      // During componentWillMount and render this will still be null but after\n      // that will always render to something. At least for now. So we can use\n      // this hack.\n      return !!internalInstance._renderedComponent;\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @param {string} callerName Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback, callerName) {\n    ReactUpdateQueue.validateCallback(callback, callerName);\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function (internalInstance, callback) {\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onSetState();\n      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;\n    }\n\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {\n    internalInstance._pendingElement = nextElement;\n    // TODO: introduce _pendingContext instead of setting it directly.\n    internalInstance._context = nextContext;\n    enqueueUpdate(internalInstance);\n  },\n\n  validateCallback: function (callback, callerName) {\n    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactUpdateQueue.js\n ** module id = 47\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createMicrosoftUnsafeLocalFunction\n */\n\n/* globals MSApp */\n\n'use strict';\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\n\nvar createMicrosoftUnsafeLocalFunction = function (func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function (arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\nmodule.exports = createMicrosoftUnsafeLocalFunction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/createMicrosoftUnsafeLocalFunction.js\n ** module id = 48\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventCharCode\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\n\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventCharCode.js\n ** module id = 49\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventModifierState\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventModifierState.js\n ** module id = 50\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventTarget\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\n\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventTarget.js\n ** module id = 51\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isEventSupported\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature = document.implementation && document.implementation.hasFeature &&\n  // always returns true in newer browsers as per the standard.\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n  document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/isEventSupported.js\n ** module id = 52\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n */\n\n'use strict';\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\n\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  var prevType = typeof prevElement;\n  var nextType = typeof nextElement;\n  if (prevType === 'string' || prevType === 'number') {\n    return nextType === 'string' || nextType === 'number';\n  } else {\n    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n  }\n}\n\nmodule.exports = shouldUpdateReactComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/shouldUpdateReactComponent.js\n ** module id = 53\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/traverseAllChildren.js\n ** module id = 54\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule validateDOMNesting\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar validateDOMNesting = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  var buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\n  var emptyAncestorInfo = {\n    current: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null\n  };\n\n  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n    var info = { tag: tag, instance: instance };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  var isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body';\n      case '#document':\n        return tag === 'html';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n\n      case 'pre':\n      case 'listing':\n\n      case 'table':\n\n      case 'hr':\n\n      case 'xmp':\n\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  /**\n   * Given a ReactCompositeComponent instance, return a list of its recursive\n   * owners, starting at the root and ending with the instance itself.\n   */\n  var findOwnerStack = function (instance) {\n    if (!instance) {\n      return [];\n    }\n\n    var stack = [];\n    do {\n      stack.push(instance);\n    } while (instance = instance._currentElement._owner);\n    stack.reverse();\n    return stack;\n  };\n\n  var didWarn = {};\n\n  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n      childTag = '#text';\n    }\n\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    var problematic = invalidParent || invalidAncestor;\n\n    if (problematic) {\n      var ancestorTag = problematic.tag;\n      var ancestorInstance = problematic.instance;\n\n      var childOwner = childInstance && childInstance._currentElement._owner;\n      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\n      var childOwners = findOwnerStack(childOwner);\n      var ancestorOwners = findOwnerStack(ancestorOwner);\n\n      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n      var i;\n\n      var deepestCommon = -1;\n      for (i = 0; i < minStackLen; i++) {\n        if (childOwners[i] === ancestorOwners[i]) {\n          deepestCommon = i;\n        } else {\n          break;\n        }\n      }\n\n      var UNKNOWN = '(unknown)';\n      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ownerInfo = [].concat(\n      // If the parent and child instances have a common owner ancestor, start\n      // with that -- otherwise we just start with the parent's owners.\n      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n      // If we're warning about an invalid (non-parent) ancestry, add '...'\n      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\n      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n      if (didWarn[warnKey]) {\n        return;\n      }\n      didWarn[warnKey] = true;\n\n      var tagDisplayName = childTag;\n      var whitespaceInfo = '';\n      if (childTag === '#text') {\n        if (/\\S/.test(childText)) {\n          tagDisplayName = 'Text nodes';\n        } else {\n          tagDisplayName = 'Whitespace text nodes';\n          whitespaceInfo = ' Make sure you don\\'t have any extra whitespace between tags on ' + 'each line of your source code.';\n        }\n      } else {\n        tagDisplayName = '<' + childTag + '>';\n      }\n\n      if (invalidParent) {\n        var info = '';\n        if (ancestorTag === 'table' && childTag === 'tr') {\n          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n        }\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;\n      }\n    }\n  };\n\n  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\n  // For testing\n  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n  };\n}\n\nmodule.exports = validateDOMNesting;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/validateDOMNesting.js\n ** module id = 55\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/shallowEqual.js\n ** module id = 56\n ** module chunks = 0\n **/","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/promise/lib/core.js\n ** module id = 57\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSProperty\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\n\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundAttachment: true,\n    backgroundColor: true,\n    backgroundImage: true,\n    backgroundPositionX: true,\n    backgroundPositionY: true,\n    backgroundRepeat: true\n  },\n  backgroundPosition: {\n    backgroundPositionX: true,\n    backgroundPositionY: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  },\n  outline: {\n    outlineWidth: true,\n    outlineStyle: true,\n    outlineColor: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/CSSProperty.js\n ** module id = 58\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CallbackQueue\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\nfunction CallbackQueue() {\n  this._callbacks = null;\n  this._contexts = null;\n}\n\n_assign(CallbackQueue.prototype, {\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n  enqueue: function (callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  },\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll: function () {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    if (callbacks) {\n      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].call(contexts[i]);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  },\n\n  checkpoint: function () {\n    return this._callbacks ? this._callbacks.length : 0;\n  },\n\n  rollback: function (len) {\n    if (this._callbacks) {\n      this._callbacks.length = len;\n      this._contexts.length = len;\n    }\n  },\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset: function () {\n    this._callbacks = null;\n    this._contexts = null;\n  },\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor: function () {\n    this.reset();\n  }\n\n});\n\nPooledClass.addPoolingTo(CallbackQueue);\n\nmodule.exports = CallbackQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/CallbackQueue.js\n ** module id = 59\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');\nvar warning = require('fbjs/lib/warning');\n\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\n\nfunction isAttributeNameSafe(attributeName) {\n  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n    return true;\n  }\n  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n  return false;\n}\n\nfunction shouldIgnoreValue(propertyInfo, value) {\n  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n  },\n\n  setAttributeForID: function (node, id) {\n    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n  },\n\n  createMarkupForRoot: function () {\n    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n  },\n\n  setAttributeForRoot: function (node) {\n    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      if (shouldIgnoreValue(propertyInfo, value)) {\n        return '';\n      }\n      var attributeName = propertyInfo.attributeName;\n      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n        return attributeName + '=\"\"';\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    }\n    return null;\n  },\n\n  /**\n   * Creates markup for a custom property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {string} Markup string, or empty string if the property was invalid.\n   */\n  createMarkupForCustomAttribute: function (name, value) {\n    if (!isAttributeNameSafe(name) || value == null) {\n      return '';\n    }\n    return name + '=' + quoteAttributeValueForBrowser(value);\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(propertyInfo, value)) {\n        this.deleteValueForProperty(node, name);\n        return;\n      } else if (propertyInfo.mustUseProperty) {\n        // Contrary to `setAttribute`, object properties are properly\n        // `toString`ed by IE8/9.\n        node[propertyInfo.propertyName] = value;\n      } else {\n        var attributeName = propertyInfo.attributeName;\n        var namespace = propertyInfo.attributeNamespace;\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        if (namespace) {\n          node.setAttributeNS(namespace, attributeName, '' + value);\n        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n          node.setAttribute(attributeName, '');\n        } else {\n          node.setAttribute(attributeName, '' + value);\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      DOMPropertyOperations.setValueForAttribute(node, name, value);\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);\n    }\n  },\n\n  setValueForAttribute: function (node, name, value) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (value == null) {\n      node.removeAttribute(name);\n    } else {\n      node.setAttribute(name, '' + value);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);\n    }\n  },\n\n  /**\n   * Deletes an attributes from a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForAttribute: function (node, name) {\n    node.removeAttribute(name);\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (propertyInfo.mustUseProperty) {\n        var propName = propertyInfo.propertyName;\n        if (propertyInfo.hasBooleanValue) {\n          node[propName] = false;\n        } else {\n          node[propName] = '';\n        }\n      } else {\n        node.removeAttribute(propertyInfo.attributeName);\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMPropertyOperations.js\n ** module id = 60\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.func = forEachFunction;\n  this.context = forEachContext;\n  this.count = 0;\n}\nForEachBookKeeping.prototype.destructor = function () {\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func;\n  var context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n  this.result = mapResult;\n  this.keyPrefix = keyPrefix;\n  this.func = mapFunction;\n  this.context = mapContext;\n  this.count = 0;\n}\nMapBookKeeping.prototype.destructor = function () {\n  this.result = null;\n  this.keyPrefix = null;\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result;\n  var keyPrefix = bookKeeping.keyPrefix;\n  var func = bookKeeping.func;\n  var context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (ReactElement.isValidElement(mappedChild)) {\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n  count: countChildren,\n  toArray: toArray\n};\n\nmodule.exports = ReactChildren;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactChildren.js\n ** module id = 61\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactClass\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar keyMirror = require('fbjs/lib/keyMirror');\nvar keyOf = require('fbjs/lib/keyOf');\nvar warning = require('fbjs/lib/warning');\n\nvar MIXINS_KEY = keyOf({ mixins: null });\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\nvar SpecPolicy = keyMirror({\n  /**\n   * These methods may be defined only once by the class specification or mixin.\n   */\n  DEFINE_ONCE: null,\n  /**\n   * These methods may be defined by both the class specification and mixins.\n   * Subsequent definitions will be chained. These methods must return void.\n   */\n  DEFINE_MANY: null,\n  /**\n   * These methods are overriding the base class.\n   */\n  OVERRIDE_BASE: null,\n  /**\n   * These methods are similar to DEFINE_MANY, except we assume they return\n   * objects. We try to merge the keys of the return values of all the mixed in\n   * functions. If there is a key conflict we throw.\n   */\n  DEFINE_MANY_MERGED: null\n});\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or host components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will be available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: SpecPolicy.DEFINE_MANY,\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: SpecPolicy.DEFINE_ONCE,\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: SpecPolicy.OVERRIDE_BASE\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function (Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function (Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function (Constructor, childContextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);\n    }\n    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n  },\n  contextTypes: function (Constructor, contextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);\n    }\n    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function (Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function (Constructor, propTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);\n    }\n    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n  },\n  statics: function (Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  },\n  autobind: function () {} };\n\n// noop\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but only in __DEV__\n      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n    }\n  }\n}\n\nfunction validateMethodOverride(isAlreadyDefined, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (isAlreadyDefined) {\n    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classes.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    if (process.env.NODE_ENV !== 'production') {\n      var typeofSpec = typeof spec;\n      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n    }\n\n    return;\n  }\n\n  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\n  var proto = Constructor.prototype;\n  var autoBindPairs = proto.__reactAutoBindPairs;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above.\n      continue;\n    }\n\n    var property = spec[name];\n    var isAlreadyDefined = proto.hasOwnProperty(name);\n    validateMethodOverride(isAlreadyDefined, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n      if (shouldAutoBind) {\n        autoBindPairs.push(name, property);\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride.\n          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (process.env.NODE_ENV !== 'production') {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\n    var isInherited = name in Constructor;\n    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (process.env.NODE_ENV !== 'production') {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    boundMethod.bind = function (newThis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n      } else if (!args.length) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  var pairs = component.__reactAutoBindPairs;\n  for (var i = 0; i < pairs.length; i += 2) {\n    var autoBindKey = pairs[i];\n    var method = pairs[i + 1];\n    component[autoBindKey] = bindAutoBindMethod(component, method);\n  }\n}\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function (newState, callback) {\n    this.updater.enqueueReplaceState(this, newState);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback, 'replaceState');\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function () {\n    return this.updater.isMounted(this);\n  }\n};\n\nvar ReactClassComponent = function () {};\n_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function (spec) {\n    var Constructor = function (props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (initialState === undefined && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\n      this.state = initialState;\n    };\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function (mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactClass.js\n ** module id = 62\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponentFlags\n */\n\n'use strict';\n\nvar ReactDOMComponentFlags = {\n  hasCachedChildNodes: 1 << 0\n};\n\nmodule.exports = ReactDOMComponentFlags;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMComponentFlags.js\n ** module id = 63\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelect\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar DisabledInputUtils = require('./DisabledInputUtils');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValueDefaultValue = false;\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n    this._wrapperState.pendingUpdate = false;\n\n    var props = this._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      updateOptions(this, Boolean(props.multiple), value);\n    }\n  }\n}\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction checkSelectPropTypes(inst, props) {\n  var owner = inst._currentElement._owner;\n  LinkedValueUtils.checkPropTypes('select', props, owner);\n\n  if (props.valueLink !== undefined && !didWarnValueLink) {\n    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\n    didWarnValueLink = true;\n  }\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    var isArray = Array.isArray(props[propName]);\n    if (props.multiple && !isArray) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    } else if (!props.multiple && isArray) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    }\n  }\n}\n\n/**\n * @param {ReactDOMComponent} inst\n * @param {boolean} multiple\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(inst, multiple, propValue) {\n  var selectedValue, i;\n  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n\n  if (multiple) {\n    selectedValue = {};\n    for (i = 0; i < propValue.length; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0; i < options.length; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = {\n  getHostProps: function (inst, props) {\n    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {\n      onChange: inst._wrapperState.onChange,\n      value: undefined\n    });\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkSelectPropTypes(inst, props);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      pendingUpdate: false,\n      initialValue: value != null ? value : props.defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      wasMultiple: Boolean(props.multiple)\n    };\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n      didWarnValueDefaultValue = true;\n    }\n  },\n\n  getSelectValueContext: function (inst) {\n    // ReactDOMOption looks at this initial value so the initial generated\n    // markup has correct `selected` attributes\n    return inst._wrapperState.initialValue;\n  },\n\n  postUpdateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // After the initial mount, we control selected-ness manually so don't pass\n    // this value down\n    inst._wrapperState.initialValue = undefined;\n\n    var wasMultiple = inst._wrapperState.wasMultiple;\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      inst._wrapperState.pendingUpdate = false;\n      updateOptions(inst, Boolean(props.multiple), value);\n    } else if (wasMultiple !== Boolean(props.multiple)) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (props.defaultValue != null) {\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n      }\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  if (this._rootNodeID) {\n    this._wrapperState.pendingUpdate = true;\n  }\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMSelect;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMSelect.js\n ** module id = 64\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\n'use strict';\n\nvar emptyComponentFactory;\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponentFactory: function (factory) {\n    emptyComponentFactory = factory;\n  }\n};\n\nvar ReactEmptyComponent = {\n  create: function (instantiate) {\n    return emptyComponentFactory(instantiate);\n  }\n};\n\nReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\nmodule.exports = ReactEmptyComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEmptyComponent.js\n ** module id = 65\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactFeatureFlags\n * \n */\n\n'use strict';\n\nvar ReactFeatureFlags = {\n  // When true, call console.time() before and .timeEnd() after each top-level\n  // render (both initial renders and updates). Useful when looking at prod-mode\n  // timeline profiles in Chrome, for example.\n  logTopLevelRenders: false\n};\n\nmodule.exports = ReactFeatureFlags;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactFeatureFlags.js\n ** module id = 66\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactHostComponent\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around host tags.\nvar tagToComponentClass = {};\nvar textComponentClass = null;\n\nvar ReactHostComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function (componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function (componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function (componentClasses) {\n    _assign(tagToComponentClass, componentClasses);\n  }\n};\n\n/**\n * Get a host internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\n  return new genericComponentClass(element);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactHostComponent = {\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactHostComponentInjection\n};\n\nmodule.exports = ReactHostComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactHostComponent.js\n ** module id = 67\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInputSelection\n */\n\n'use strict';\n\nvar ReactDOMSelection = require('./ReactDOMSelection');\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar focusNode = require('fbjs/lib/focusNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function (elem) {\n    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n  },\n\n  getSelectionInformation: function () {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function (priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function (input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || { start: 0, end: 0 };\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function (input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (end === undefined) {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInputSelection.js\n ** module id = 68\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMount\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMProperty = require('./DOMProperty');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMContainerInfo = require('./ReactDOMContainerInfo');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactElement = require('./ReactElement');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\nvar setInnerHTML = require('./setInnerHTML');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\nvar instancesByReactRootID = {};\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n  var markerName;\n  if (ReactFeatureFlags.logTopLevelRenders) {\n    var wrappedElement = wrapperInstance._currentElement.props;\n    var type = wrappedElement.type;\n    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n    console.time(markerName);\n  }\n\n  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n  );\n\n  if (markerName) {\n    console.timeEnd(markerName);\n  }\n\n  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */\n  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container, safely) {\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onBeginFlush();\n  }\n  ReactReconciler.unmountComponent(instance, safely);\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onEndFlush();\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  if (rootEl) {\n    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n    return !!(inst && inst._hostParent);\n  }\n}\n\n/**\n * True if the supplied DOM node is a React DOM element and\n * it has been rendered by another copy of React.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM has been rendered by another copy of React\n * @internal\n */\nfunction nodeIsRenderedByOtherInstance(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n}\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n}\n\n/**\n * True if the supplied DOM node is a valid React node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid React DOM node.\n * @internal\n */\nfunction isReactNode(node) {\n  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n}\n\nfunction getHostRootInstanceInContainer(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n}\n\nfunction getTopLevelWrapperInContainer(container) {\n  var root = getHostRootInstanceInContainer(container);\n  return root ? root._hostContainerInfo._topLevelWrapper : null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar topLevelRootCounter = 1;\nvar TopLevelWrapper = function () {\n  this.rootID = topLevelRootCounter++;\n};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (process.env.NODE_ENV !== 'production') {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  // this.props is actually a ReactElement\n  return this.props;\n};\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n\n  TopLevelWrapper: TopLevelWrapper,\n\n  /**\n   * Used by devtools. The keys are not important.\n   */\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    return prevComponent;\n  },\n\n  /**\n   * Render a new component into the DOM. Hooked by hooks!\n   *\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n    var componentInstance = instantiateReactComponent(nextElement, false);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\n    var wrapperID = componentInstance._instance.rootID;\n    instancesByReactRootID[wrapperID] = componentInstance;\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :\n    // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\n    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);\n\n    var nextContext;\n    if (parentComponent) {\n      var parentInst = ReactInstanceMap.get(parentComponent);\n      nextContext = parentInst._processChildContext(parentInst._context);\n    } else {\n      nextContext = emptyObject;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n    if (!prevComponent) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n      }\n\n      return false;\n    }\n    delete instancesByReactRootID[prevComponent._instance.rootID];\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n    return true;\n  },\n\n  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        ReactDOMComponentTree.precacheNode(instance, rootElement);\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\n        var normalizedMarkup = markup;\n        if (process.env.NODE_ENV !== 'production') {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n        }\n      }\n    }\n\n    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      DOMLazyTree.insertTreeBefore(container, markup, null);\n    } else {\n      setInnerHTML(container, markup);\n      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n      if (hostNode._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());\n      }\n    }\n  }\n};\n\nmodule.exports = ReactMount;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMount.js\n ** module id = 69\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChildUpdateTypes\n */\n\n'use strict';\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\n/**\n * When a component's children are updated, a series of update configuration\n * objects are created in order to batch and serialize the required changes.\n *\n * Enumerates all the possible types of update configurations.\n *\n * @internal\n */\nvar ReactMultiChildUpdateTypes = keyMirror({\n  INSERT_MARKUP: null,\n  MOVE_EXISTING: null,\n  REMOVE_NODE: null,\n  SET_MARKUP: null,\n  TEXT_CONTENT: null\n});\n\nmodule.exports = ReactMultiChildUpdateTypes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMultiChildUpdateTypes.js\n ** module id = 70\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNodeTypes\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ReactNodeTypes = {\n  HOST: 0,\n  COMPOSITE: 1,\n  EMPTY: 2,\n\n  getType: function (node) {\n    if (node === null || node === false) {\n      return ReactNodeTypes.EMPTY;\n    } else if (ReactElement.isValidElement(node)) {\n      if (typeof node.type === 'function') {\n        return ReactNodeTypes.COMPOSITE;\n      } else {\n        return ReactNodeTypes.HOST;\n      }\n    }\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;\n  }\n};\n\nmodule.exports = ReactNodeTypes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactNodeTypes.js\n ** module id = 71\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypes\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getIteratorFn = require('./getIteratorFn');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n  symbol: createPrimitiveTypeChecker('symbol'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: createElementTypeChecker(),\n  instanceOf: createInstanceTypeChecker,\n  node: createNodeChecker(),\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker\n};\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n/*eslint-disable no-self-compare*/\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n/*eslint-enable no-self-compare*/\n\n/**\n * We use an Error-like object for backward compatibility as people may call\n * PropTypes directly and inspect their output. However we don't use real\n * Errors anymore. We don't inspect their stack anyway, and creating them\n * is prohibitively expensive if they are created too often, such as what\n * happens in oneOfType() for any type before the one that matched.\n */\nfunction PropTypeError(message) {\n  this.message = message;\n  this.stack = '';\n}\n// Make `instanceof Error` still work for returned errors.\nPropTypeError.prototype = Error.prototype;\n\nfunction createChainableTypeChecker(validate) {\n  if (process.env.NODE_ENV !== 'production') {\n    var manualPropTypeCallCache = {};\n  }\n  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n    componentName = componentName || ANONYMOUS;\n    propFullName = propFullName || propName;\n    if (process.env.NODE_ENV !== 'production') {\n      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {\n        var cacheKey = componentName + ':' + propName;\n        if (!manualPropTypeCallCache[cacheKey]) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;\n          manualPropTypeCallCache[cacheKey] = true;\n        }\n      }\n    }\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        return new PropTypeError('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location, propFullName);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location, propFullName, secret) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (typeof typeChecker !== 'function') {\n      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n    }\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    if (!ReactElement.isValidElement(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      var actualClassName = getClassName(props[propName]);\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  if (!Array.isArray(expectedValues)) {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n    return emptyFunction.thatReturnsNull;\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (is(propValue, expectedValues[i])) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (typeof typeChecker !== 'function') {\n      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n    }\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  if (!Array.isArray(arrayOfTypeCheckers)) {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n    return emptyFunction.thatReturnsNull;\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n\n      var iteratorFn = getIteratorFn(propValue);\n      if (iteratorFn) {\n        var iterator = iteratorFn.call(propValue);\n        var step;\n        if (iteratorFn !== propValue.entries) {\n          while (!(step = iterator.next()).done) {\n            if (!isNode(step.value)) {\n              return false;\n            }\n          }\n        } else {\n          // Iterator will provide entry [k,v] tuples rather than values.\n          while (!(step = iterator.next()).done) {\n            var entry = step.value;\n            if (entry) {\n              if (!isNode(entry[1])) {\n                return false;\n              }\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction isSymbol(propType, propValue) {\n  // Native Symbol.\n  if (propType === 'symbol') {\n    return true;\n  }\n\n  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n  if (propValue['@@toStringTag'] === 'Symbol') {\n    return true;\n  }\n\n  // Fallback for non-spec compliant Symbols which are polyfilled.\n  if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n    return true;\n  }\n\n  return false;\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  if (isSymbol(propType, propValue)) {\n    return 'symbol';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\n// Returns class name of the object, if any.\nfunction getClassName(propValue) {\n  if (!propValue.constructor || !propValue.constructor.name) {\n    return ANONYMOUS;\n  }\n  return propValue.constructor.name;\n}\n\nmodule.exports = ReactPropTypes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypes.js\n ** module id = 72\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactVersion\n */\n\n'use strict';\n\nmodule.exports = '15.3.2';\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactVersion.js\n ** module id = 73\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ViewportMetrics\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function (scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ViewportMetrics.js\n ** module id = 74\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule accumulateInto\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/accumulateInto.js\n ** module id = 75\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule canDefineProperty\n */\n\n'use strict';\n\nvar canDefineProperty = false;\nif (process.env.NODE_ENV !== 'production') {\n  try {\n    Object.defineProperty({}, 'x', { get: function () {} });\n    canDefineProperty = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\nmodule.exports = canDefineProperty;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/canDefineProperty.js\n ** module id = 76\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule forEachAccumulated\n * \n */\n\n'use strict';\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\n\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nmodule.exports = forEachAccumulated;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/forEachAccumulated.js\n ** module id = 77\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getHostComponentFromComposite\n */\n\n'use strict';\n\nvar ReactNodeTypes = require('./ReactNodeTypes');\n\nfunction getHostComponentFromComposite(inst) {\n  var type;\n\n  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n    inst = inst._renderedComponent;\n  }\n\n  if (type === ReactNodeTypes.HOST) {\n    return inst._renderedComponent;\n  } else if (type === ReactNodeTypes.EMPTY) {\n    return null;\n  }\n}\n\nmodule.exports = getHostComponentFromComposite;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getHostComponentFromComposite.js\n ** module id = 78\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getIteratorFn\n * \n */\n\n'use strict';\n\n/* global Symbol */\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getIteratorFn.js\n ** module id = 79\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getTextContentAccessor\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getTextContentAccessor.js\n ** module id = 80\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactCompositeComponent = require('./ReactCompositeComponent');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactHostComponent = require('./ReactHostComponent');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function (element) {\n  this.construct(element);\n};\n_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {\n  _instantiateReactComponent: instantiateReactComponent\n});\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n}\n\nvar nextDebugID = 1;\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {boolean} shouldHaveDebugID\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, shouldHaveDebugID) {\n  var instance;\n\n  if (node === null || node === false) {\n    instance = ReactEmptyComponent.create(instantiateReactComponent);\n  } else if (typeof node === 'object') {\n    var element = node;\n    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;\n\n    // Special case string values\n    if (typeof element.type === 'string') {\n      instance = ReactHostComponent.createInternalComponent(element);\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // representations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n\n      // We renamed this. Allow the old name for compat. :(\n      if (!instance.getHostNode) {\n        instance.getHostNode = instance.getNativeNode;\n      }\n    } else {\n      instance = new ReactCompositeComponentWrapper(element);\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactHostComponent.createInstanceForText(node);\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;\n  }\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    instance._debugID = shouldHaveDebugID ? nextDebugID++ : 0;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/instantiateReactComponent.js\n ** module id = 81\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextInputElement\n * \n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\n\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[elem.type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = isTextInputElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/isTextInputElement.js\n ** module id = 82\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setTextContent\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar setInnerHTML = require('./setInnerHTML');\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function (node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function (node, text) {\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/setTextContent.js\n ** module id = 83\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/EventListener.js\n ** module id = 84\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/focusNode.js\n ** module id = 85\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n */\nfunction getActiveElement() /*?DOMElement*/{\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  try {\n    return document.activeElement || document.body;\n  } catch (e) {\n    return document.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/getActiveElement.js\n ** module id = 86\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = require('./lib/React');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/react.js\n ** module id = 87\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = require('react/lib/ReactDOM');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-dom/index.js\n ** module id = 88\n ** module chunks = 0\n **/","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/config/polyfills.js\n ** module id = 89\n ** module chunks = 0\n **/","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/asap/browser-raw.js\n ** module id = 90\n ** module chunks = 0\n **/","import React, { Component } from 'react';\nimport p5 from 'p5';\nimport gravitron from './sketches/gravitron';\n// Same sketch, but with blue planets for testing.\nimport otherSketch from './sketches/otherSketch';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    // List with all sketches.\n    this.sketchList = {\n      gravitron: {\n        name: 'Gravitron',\n        sketch: gravitron,\n      }, \n      otherSketch: {\n        name: 'Other Sketch',\n        sketch: otherSketch,\n      },\n    };\n    const urlParam = window.location.search.substr(1);\n    // If the url parameter is invalid resort to the default sketch.\n    const queriedSketch = this.sketchList[urlParam] ? this.sketchList[urlParam] : this.sketchList['gravitron'];\n    this.state = { currentSketch: queriedSketch }\n    this.changeSketch = this.changeSketch.bind(this);\n  }\n\n  // Pressing the buttons changes the sketch for testing. We should implement some sort of carousel later.\n  changeSketch(sketch) {\n    if (window.location.search.substr(1) !== sketch) {\n      window.location.search = sketch;\n      const queriedSketch = this.sketchList[sketch] ? this.sketchList[sketch] : gravitron;\n      this.setState({ currentSketch: queriedSketch })\n      new p5(this.state.currentSketch.sketch, 'sketch');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"sketch\"></div>\n        <div className=\"title\">SMC Programming Club</div>\n        <div className=\"info\">\"{this.state.currentSketch.name}\"</div>\n        <button\n          onClick={() => this.changeSketch('gravitron')}\n          style={{ position: 'fixed', right: '2%', top: '2%' }}\n        >\n          Change to Gravitron\n        </button>\n        <button\n          onClick={() => this.changeSketch('otherSketch')}\n          style={{ position: 'fixed', right: '2%', top: '10%' }}\n        >\n          Change to Other Sketch\n        </button>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    new p5(this.state.currentSketch.sketch, 'sketch');\n  }\n}\n\nexport default App;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/App.js\n **/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import p5 from 'p5';\n\nvar gravitron = (p) => {\n\n  var centerPlanet;\n  var planetArray;\n  var indicator;\n\n  // CONSTANTS\n  var G = 6.67384e-2;\n  var MIN_SIZE = 5;\n  var MAX_SIZE = 100;\n  var GROWTH_RATE = 1.2;\n\n  var colorPalette = ['#451804', '#c1440e', '#e77d11', '#fda600'];\n\n  // function proj(v1, v2) {\n  //   var dot = p.Vector.dot(v1, v2);\n  //   var comp = dot / v2.magSq();\n  //   return p.Vector.mult(v2, comp);\n  // }\n\n  function Indicator(x, y) {\n    this.location = p.createVector(x, y);\n    this.radius = MIN_SIZE;\n    this.growthRate = GROWTH_RATE;\n    this.randomColor = colorPalette[p.floor(p.random(colorPalette.length))];\n    \n    this.render = function() {\n      p.stroke(this.randomColor);\n      p.fill(this.randomColor);\n      // Draw a line showing the initial force of the Planet\n      p.line(p.mouseX, p.mouseY, this.location.x, this.location.y);\n      \n      // Draw a circle that will change sizes between MAX_SIZE and MIN_SIZE\n      p.ellipse(this.location.x, this.location.y, this.radius*2);\n      this.radius += this.growthRate;\n      if (this.radius < MIN_SIZE || this.radius > MAX_SIZE) {\n        this.growthRate *= -1;\n      }\n    };\n    \n    this.release = function() {\n      // Make a new Planet at this location\n      var planet = new Planet(this.location.x, this.location.y, this.radius, this.randomColor);\n      planetArray.push(planet);\n      \n      // Find the distance between this location and the mouse\n      // Use that as the Planet's initial force\n      var force = p.createVector(this.location.x - p.mouseX, this.location.y - p.mouseY);\n      force.mult(10);\n      planet.applyForce(force);\n      \n    };\n  }\n\n  function Planet(x, y, radius, color) {\n    this.location     = p.createVector(x, y);\n    this.velocity     = p.createVector(0, 0);\n    this.acceleration = p.createVector(0, 0);\n    this.radius       = radius;\n    this.color        = color;\n    \n    this.mass = function() {\n      // Area = PI * r^2\n      return p.PI * p.pow(this.radius, 2);\n    };\n    \n    this.applyForce = function(force) {\n      // Newton's Second Law F=m*a\n      var a = force.div(this.mass());\n      this.acceleration.add(a);\n    };\n    \n    this.attract = function(otherPlanet) {\n      var vectorBetween = p5.Vector.sub(this.location, otherPlanet.location);\n      \n      var r  = vectorBetween.mag();\n      var m1 = this.mass();\n      var m2 = otherPlanet.mass();\n      \n      if (r > this.radius + otherPlanet.radius) {\n        var force       = (G * m1 * m2) / p.pow(r, 2);\n        var direction   = vectorBetween.normalize();\n        var forceVector = p5.Vector.mult(direction, force);\n        \n        otherPlanet.applyForce(forceVector);\n      }\n    };\n    \n    this.render = function() {\n      p.stroke(this.color);\n      p.fill(this.color);\n      p.ellipse(this.location.x, this.location.y, this.radius*2);\n      this.velocity.add(this.acceleration);\n      this.location.add(this.velocity);\n      this.acceleration.mult(0);\n    };\n  }\n\n\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n    planetArray = [];\n    centerPlanet = new Planet(p.windowWidth / 2, p.windowHeight / 2, 150, '#FDB813');\n  };\n  p.draw = () => {\n    p.background(255, 255, 255, 50);\n    centerPlanet.render();\n    for (var i = 0; i < planetArray.length; i++) {\n      centerPlanet.attract(planetArray[i]);\n      planetArray[i].render();\n      for (var j = 0; j < planetArray.length; j++) {\n        if (i !== j) {\n          planetArray[i].attract(planetArray[j]);\n        }\n      }\n    }\n    if (indicator) {\n      indicator.render();\n    }\n  };\n  p.mousePressed = () => {\n    indicator = new Indicator(p.mouseX, p.mouseY);\n  }\n  p.mouseReleased = () => {\n    if (indicator) {\n      indicator.release();\n      indicator = null;\n    }\n  }\n}\n\nexport default gravitron;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/sketches/gravitron.js\n **/","import p5 from 'p5';\n\nvar otherSketch = (p) => {\n\n  var centerPlanet;\n  var planetArray;\n  var indicator;\n\n  // CONSTANTS\n  var G = 6.67384e-2;\n  var MIN_SIZE = 5;\n  var MAX_SIZE = 100;\n  var GROWTH_RATE = 1.2;\n\n  var colorPalette = ['blue', 'blue', 'blue', 'blue'];\n\n  // function proj(v1, v2) {\n  //   var dot = p.Vector.dot(v1, v2);\n  //   var comp = dot / v2.magSq();\n  //   return p.Vector.mult(v2, comp);\n  // }\n\n  function Indicator(x, y) {\n    this.location = p.createVector(x, y);\n    this.radius = MIN_SIZE;\n    this.growthRate = GROWTH_RATE;\n    this.randomColor = colorPalette[p.floor(p.random(colorPalette.length))];\n    \n    this.render = function() {\n      p.stroke(this.randomColor);\n      p.fill(this.randomColor);\n      // Draw a line showing the initial force of the Planet\n      p.line(p.mouseX, p.mouseY, this.location.x, this.location.y);\n      \n      // Draw a circle that will change sizes between MAX_SIZE and MIN_SIZE\n      p.ellipse(this.location.x, this.location.y, this.radius*2);\n      this.radius += this.growthRate;\n      if (this.radius < MIN_SIZE || this.radius > MAX_SIZE) {\n        this.growthRate *= -1;\n      }\n    };\n    \n    this.release = function() {\n      // Make a new Planet at this location\n      var planet = new Planet(this.location.x, this.location.y, this.radius, this.randomColor);\n      planetArray.push(planet);\n      \n      // Find the distance between this location and the mouse\n      // Use that as the Planet's initial force\n      var force = p.createVector(this.location.x - p.mouseX, this.location.y - p.mouseY);\n      force.mult(10);\n      planet.applyForce(force);\n      \n    };\n  }\n\n  function Planet(x, y, radius, color) {\n    this.location     = p.createVector(x, y);\n    this.velocity     = p.createVector(0, 0);\n    this.acceleration = p.createVector(0, 0);\n    this.radius       = radius;\n    this.color        = color;\n    \n    this.mass = function() {\n      // Area = PI * r^2\n      return p.PI * p.pow(this.radius, 2);\n    };\n    \n    this.applyForce = function(force) {\n      // Newton's Second Law F=m*a\n      var a = force.div(this.mass());\n      this.acceleration.add(a);\n    };\n    \n    this.attract = function(otherPlanet) {\n      var vectorBetween = p5.Vector.sub(this.location, otherPlanet.location);\n      \n      var r  = vectorBetween.mag();\n      var m1 = this.mass();\n      var m2 = otherPlanet.mass();\n      \n      if (r > this.radius + otherPlanet.radius) {\n        var force       = (G * m1 * m2) / p.pow(r, 2);\n        var direction   = vectorBetween.normalize();\n        var forceVector = p5.Vector.mult(direction, force);\n        \n        otherPlanet.applyForce(forceVector);\n      }\n    };\n    \n    this.render = function() {\n      p.stroke(this.color);\n      p.fill(this.color);\n      p.ellipse(this.location.x, this.location.y, this.radius*2);\n      this.velocity.add(this.acceleration);\n      this.location.add(this.velocity);\n      this.acceleration.mult(0);\n    };\n  }\n\n\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n    planetArray = [];\n    centerPlanet = new Planet(p.windowWidth / 2, p.windowHeight / 2, 150, 'blue');\n  };\n  p.draw = () => {\n    p.background(255, 255, 255, 50);\n    centerPlanet.render();\n    for (var i = 0; i < planetArray.length; i++) {\n      centerPlanet.attract(planetArray[i]);\n      planetArray[i].render();\n      for (var j = 0; j < planetArray.length; j++) {\n        if (i !== j) {\n          planetArray[i].attract(planetArray[j]);\n        }\n      }\n    }\n    if (indicator) {\n      indicator.render();\n    }\n  };\n  p.mousePressed = () => {\n    indicator = new Indicator(p.mouseX, p.mouseY);\n  }\n  p.mouseReleased = () => {\n    if (indicator) {\n      indicator.release();\n      indicator = null;\n    }\n  }\n}\n\nexport default otherSketch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/sketches/otherSketch.js\n **/","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/promise/lib/es6-extensions.js\n ** module id = 98\n ** module chunks = 0\n **/","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/promise/lib/rejection-tracking.js\n ** module id = 99\n ** module chunks = 0\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/whatwg-fetch/fetch.js\n ** module id = 100\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AutoFocusUtils\n */\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar focusNode = require('fbjs/lib/focusNode');\n\nvar AutoFocusUtils = {\n  focusDOMComponent: function () {\n    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));\n  }\n};\n\nmodule.exports = AutoFocusUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/AutoFocusUtils.js\n ** module id = 101\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BeforeInputEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar FallbackCompositionState = require('./FallbackCompositionState');\nvar SyntheticCompositionEvent = require('./SyntheticCompositionEvent');\nvar SyntheticInputEvent = require('./SyntheticInputEvent');\n\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onBeforeInput: null }),\n      captured: keyOf({ onBeforeInputCapture: null })\n    },\n    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCompositionEnd: null }),\n      captured: keyOf({ onCompositionEndCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCompositionStart: null }),\n      captured: keyOf({ onCompositionStartCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCompositionUpdate: null }),\n      captured: keyOf({ onCompositionUpdateCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n}\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionStart:\n      return eventTypes.compositionStart;\n    case topLevelTypes.topCompositionEnd:\n      return eventTypes.compositionEnd;\n    case topLevelTypes.topCompositionUpdate:\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topKeyUp:\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case topLevelTypes.topKeyDown:\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case topLevelTypes.topKeyPress:\n    case topLevelTypes.topMouseDown:\n    case topLevelTypes.topBlur:\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionEnd:\n      return getDataFromCustomEvent(nativeEvent);\n    case topLevelTypes.topKeyPress:\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case topLevelTypes.topTextInput:\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (currentComposition) {\n    if (topLevelType === topLevelTypes.topCompositionEnd || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case topLevelTypes.topPaste:\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case topLevelTypes.topKeyPress:\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case topLevelTypes.topCompositionEnd:\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/BeforeInputEventPlugin.js\n ** module id = 102\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\nvar dangerousStyleValue = require('./dangerousStyleValue');\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\nvar warning = require('fbjs/lib/warning');\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar hasShorthandPropertyBug = false;\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  var tempStyle = document.createElement('div').style;\n  try {\n    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n    tempStyle.font = '';\n  } catch (e) {\n    hasShorthandPropertyBug = true;\n  }\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n\n  var warnHyphenatedStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnBadVendoredStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value, owner) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n  };\n\n  var warnStyleValueIsNaN = function (name, value, owner) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n  };\n\n  var checkRenderMessage = function (owner) {\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' Check the render method of `' + name + '`.';\n      }\n    }\n    return '';\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   * @param {ReactDOMComponent} component\n   */\n  var warnValidStyle = function (name, value, component) {\n    var owner;\n    if (component) {\n      owner = component._currentElement._owner;\n    }\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name, owner);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name, owner);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value, owner);\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      warnStyleValueIsNaN(name, value, owner);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles, component) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styleValue, component);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   */\n  setValueForStyles: function (node, styles, component) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);\n    }\n\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styles[styleName], component);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\n      if (styleName === 'float' || styleName === 'cssFloat') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/CSSPropertyOperations.js\n ** module id = 103\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ChangeEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\nvar isEventSupported = require('./isEventSupported');\nvar isTextInputElement = require('./isTextInputElement');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onChange: null }),\n      captured: keyOf({ onChangeCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementInst = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue(false);\n}\n\nfunction startWatchingForChangeEventIE8(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementInst = null;\n}\n\nfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === topLevelTypes.topChange) {\n    return targetInst;\n  }\n}\nfunction handleEventsForChangeEventIE8(topLevelType, target, targetInst) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(target, targetInst);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  // IE10+ fire input events to often, such when a placeholder\n  // changes or when an input with a placeholder is focused.\n  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);\n}\n\n/**\n * (For IE <=11) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp = {\n  get: function () {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function (val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For IE <=11) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\n  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n  // on DOM elements\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  if (activeElement.attachEvent) {\n    activeElement.attachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.addEventListener('propertychange', handlePropertyChange, false);\n  }\n}\n\n/**\n * (For IE <=11) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n\n  if (activeElement.detachEvent) {\n    activeElement.detachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.removeEventListener('propertychange', handlePropertyChange, false);\n  }\n\n  activeElement = null;\n  activeElementInst = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For IE <=11) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetInstForInputEvent(topLevelType, targetInst) {\n  if (topLevelType === topLevelTypes.topInput) {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return targetInst;\n  }\n}\n\nfunction handleEventsForInputEventIE(topLevelType, target, targetInst) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9-11, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetInstForInputEventIE(topLevelType, targetInst) {\n  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementInst;\n    }\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n  if (topLevelType === topLevelTypes.topClick) {\n    return targetInst;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    var getTargetInstFunc, handleEventFunc;\n    if (shouldUseChangeEvent(targetNode)) {\n      if (doesChangeEventBubble) {\n        getTargetInstFunc = getTargetInstForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(targetNode)) {\n      if (isInputEventSupported) {\n        getTargetInstFunc = getTargetInstForInputEvent;\n      } else {\n        getTargetInstFunc = getTargetInstForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForClickEvent;\n    }\n\n    if (getTargetInstFunc) {\n      var inst = getTargetInstFunc(topLevelType, targetInst);\n      if (inst) {\n        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);\n        event.type = 'change';\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, targetNode, targetInst);\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ChangeEventPlugin.js\n ** module id = 104\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Danger\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\nvar Danger = {\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;\n    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;\n    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;\n\n    if (typeof markup === 'string') {\n      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n      oldChild.parentNode.replaceChild(newChild, oldChild);\n    } else {\n      DOMLazyTree.replaceChildWithTree(oldChild, markup);\n    }\n  }\n\n};\n\nmodule.exports = Danger;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/Danger.js\n ** module id = 105\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DefaultEventPluginOrder\n */\n\n'use strict';\n\nvar keyOf = require('fbjs/lib/keyOf');\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nvar DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];\n\nmodule.exports = DefaultEventPluginOrder;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DefaultEventPluginOrder.js\n ** module id = 106\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({ onMouseEnter: null }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  },\n  mouseLeave: {\n    registrationName: keyOf({ onMouseLeave: null }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  }\n};\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (nativeEventTarget.window === nativeEventTarget) {\n      // `nativeEventTarget` is probably a window object.\n      win = nativeEventTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = nativeEventTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = targetInst;\n      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n    } else {\n      // Moving to a node from outside the window.\n      from = null;\n      to = targetInst;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = fromNode;\n    leave.relatedTarget = toNode;\n\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = toNode;\n    enter.relatedTarget = fromNode;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n\n    return [leave, enter];\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EnterLeaveEventPlugin.js\n ** module id = 107\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FallbackCompositionState\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\n_assign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/FallbackCompositionState.js\n ** module id = 108\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule HTMLDOMPropertyConfig\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\n\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: 0,\n    acceptCharset: 0,\n    accessKey: 0,\n    action: 0,\n    allowFullScreen: HAS_BOOLEAN_VALUE,\n    allowTransparency: 0,\n    alt: 0,\n    // specifies target context for links with `preload` type\n    as: 0,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: 0,\n    // autoFocus is polyfilled/normalized by AutoFocusUtils\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    capture: HAS_BOOLEAN_VALUE,\n    cellPadding: 0,\n    cellSpacing: 0,\n    charSet: 0,\n    challenge: 0,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    cite: 0,\n    classID: 0,\n    className: 0,\n    cols: HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: 0,\n    content: 0,\n    contentEditable: 0,\n    contextMenu: 0,\n    controls: HAS_BOOLEAN_VALUE,\n    coords: 0,\n    crossOrigin: 0,\n    data: 0, // For `<object />` acts as `src`.\n    dateTime: 0,\n    'default': HAS_BOOLEAN_VALUE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: 0,\n    disabled: HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: 0,\n    encType: 0,\n    form: 0,\n    formAction: 0,\n    formEncType: 0,\n    formMethod: 0,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: 0,\n    frameBorder: 0,\n    headers: 0,\n    height: 0,\n    hidden: HAS_BOOLEAN_VALUE,\n    high: 0,\n    href: 0,\n    hrefLang: 0,\n    htmlFor: 0,\n    httpEquiv: 0,\n    icon: 0,\n    id: 0,\n    inputMode: 0,\n    integrity: 0,\n    is: 0,\n    keyParams: 0,\n    keyType: 0,\n    kind: 0,\n    label: 0,\n    lang: 0,\n    list: 0,\n    loop: HAS_BOOLEAN_VALUE,\n    low: 0,\n    manifest: 0,\n    marginHeight: 0,\n    marginWidth: 0,\n    max: 0,\n    maxLength: 0,\n    media: 0,\n    mediaGroup: 0,\n    method: 0,\n    min: 0,\n    minLength: 0,\n    // Caution; `option.selected` is not updated if `select.multiple` is\n    // disabled with `removeAttribute`.\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: 0,\n    nonce: 0,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: 0,\n    pattern: 0,\n    placeholder: 0,\n    playsInline: HAS_BOOLEAN_VALUE,\n    poster: 0,\n    preload: 0,\n    profile: 0,\n    radioGroup: 0,\n    readOnly: HAS_BOOLEAN_VALUE,\n    referrerPolicy: 0,\n    rel: 0,\n    required: HAS_BOOLEAN_VALUE,\n    reversed: HAS_BOOLEAN_VALUE,\n    role: 0,\n    rows: HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: HAS_NUMERIC_VALUE,\n    sandbox: 0,\n    scope: 0,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: 0,\n    seamless: HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: 0,\n    size: HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: 0,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: 0,\n    src: 0,\n    srcDoc: 0,\n    srcLang: 0,\n    srcSet: 0,\n    start: HAS_NUMERIC_VALUE,\n    step: 0,\n    style: 0,\n    summary: 0,\n    tabIndex: 0,\n    target: 0,\n    title: 0,\n    // Setting .type throws on non-<input> tags\n    type: 0,\n    useMap: 0,\n    value: 0,\n    width: 0,\n    wmode: 0,\n    wrap: 0,\n\n    /**\n     * RDFa Properties\n     */\n    about: 0,\n    datatype: 0,\n    inlist: 0,\n    prefix: 0,\n    // property is also supported for OpenGraph in meta tags.\n    property: 0,\n    resource: 0,\n    'typeof': 0,\n    vocab: 0,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: 0,\n    autoCorrect: 0,\n    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n    autoSave: 0,\n    // color is for Safari mask-icon link\n    color: 0,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: 0,\n    itemScope: HAS_BOOLEAN_VALUE,\n    itemType: 0,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: 0,\n    itemRef: 0,\n    // results show looking glass icon and recent searches on input\n    // search fields in WebKit/Blink\n    results: 0,\n    // IE-only attribute that specifies security restrictions on an iframe\n    // as an alternative to the sandbox attribute on IE<10\n    security: 0,\n    // IE-only attribute that controls focus behavior\n    unselectable: 0\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {}\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/HTMLDOMPropertyConfig.js\n ** module id = 109\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule React\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactComponent = require('./ReactComponent');\nvar ReactPureComponent = require('./ReactPureComponent');\nvar ReactClass = require('./ReactClass');\nvar ReactDOMFactories = require('./ReactDOMFactories');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactVersion = require('./ReactVersion');\n\nvar onlyChild = require('./onlyChild');\nvar warning = require('fbjs/lib/warning');\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar __spread = _assign;\n\nif (process.env.NODE_ENV !== 'production') {\n  var warned = false;\n  __spread = function () {\n    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;\n    warned = true;\n    return _assign.apply(null, arguments);\n  };\n}\n\nvar React = {\n\n  // Modern\n\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    toArray: ReactChildren.toArray,\n    only: onlyChild\n  },\n\n  Component: ReactComponent,\n  PureComponent: ReactPureComponent,\n\n  createElement: createElement,\n  cloneElement: cloneElement,\n  isValidElement: ReactElement.isValidElement,\n\n  // Classic\n\n  PropTypes: ReactPropTypes,\n  createClass: ReactClass.createClass,\n  createFactory: createFactory,\n  createMixin: function (mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n\n  // This looks DOM specific but these are actually isomorphic helpers\n  // since they are just generating DOM strings.\n  DOM: ReactDOMFactories,\n\n  version: ReactVersion,\n\n  // Deprecated hook for JSX spread, don't use this for anything.\n  __spread: __spread\n};\n\nmodule.exports = React;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/React.js\n ** module id = 110\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildReconciler\n */\n\n'use strict';\n\nvar ReactReconciler = require('./ReactReconciler');\n\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('./ReactComponentTreeHook');\n}\n\nfunction instantiateChild(childInstances, child, name, selfDebugID) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!ReactComponentTreeHook) {\n      ReactComponentTreeHook = require('./ReactComponentTreeHook');\n    }\n    if (!keyUnique) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n    }\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, true);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots\n  ) {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {\n        return instantiateChild(childInsts, child, name, selfDebugID);\n      }, childInstances);\n    } else {\n      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    }\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots\n  ) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return;\n    }\n    var name;\n    var prevChild;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n          ReactReconciler.unmountComponent(prevChild, false);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, true);\n        nextChildren[name] = nextChildInstance;\n        // Creating mount image now ensures refs are resolved in right order\n        // (see https://github.com/facebook/react/pull/7101 for explanation).\n        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);\n        mountImages.push(nextChildMountImage);\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        prevChild = prevChildren[name];\n        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n        ReactReconciler.unmountComponent(prevChild, false);\n      }\n    }\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function (renderedChildren, safely) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild, safely);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactChildReconciler.js\n ** module id = 111\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentBrowserEnvironment\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponentBrowserEnvironment.js\n ** module id = 112\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactErrorUtils = require('./ReactErrorUtils');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactNodeTypes = require('./ReactNodeTypes');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactReconciler = require('./ReactReconciler');\n\nvar checkReactTypeSpec = require('./checkReactTypeSpec');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar CompositeTypes = {\n  ImpureClass: 0,\n  PureClass: 1,\n  StatelessFunctional: 2\n};\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  var element = Component(this.props, this.context, this.updater);\n  warnIfInvalidElement(Component, element);\n  return element;\n};\n\nfunction warnIfInvalidElement(Component, element) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n  }\n}\n\nfunction shouldConstruct(Component) {\n  return !!(Component.prototype && Component.prototype.isReactComponent);\n}\n\nfunction isPureComponent(Component) {\n  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n}\n\n// Separated into a function to contain deoptimizations caused by try/finally.\nfunction measureLifeCyclePerf(fn, debugID, timerType) {\n  if (debugID === 0) {\n    // Top-level wrappers (see ReactMount) and empty components (see\n    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n    // Both are implementation details that should go away in the future.\n    return fn();\n  }\n\n  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n  try {\n    return fn();\n  } finally {\n    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n  }\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponentMixin = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = 0;\n    this._compositeType = null;\n    this._instance = null;\n    this._hostParent = null;\n    this._hostContainerInfo = null;\n\n    // See ReactUpdateQueue\n    this._updateBatchNumber = null;\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedNodeType = null;\n    this._renderedComponent = null;\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n\n    // ComponentWillUnmount shall only be called once\n    this._calledComponentWillUnmount = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._warnedAboutRefsInRender = false;\n    }\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} hostParent\n   * @param {?object} hostContainerInfo\n   * @param {?object} context\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var _this = this;\n\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var publicProps = this._currentElement.props;\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    var updateQueue = transaction.getUpdateQueue();\n\n    // Initialize the public class\n    var doConstruct = shouldConstruct(Component);\n    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n    var renderedElement;\n\n    // Support functional components\n    if (!doConstruct && (inst == null || inst.render == null)) {\n      renderedElement = inst;\n      warnIfInvalidElement(Component, renderedElement);\n      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n      inst = new StatelessComponent(Component);\n      this._compositeType = CompositeTypes.StatelessFunctional;\n    } else {\n      if (isPureComponent(Component)) {\n        this._compositeType = CompositeTypes.PureClass;\n      } else {\n        this._compositeType = CompositeTypes.ImpureClass;\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n      }\n\n      var propsMutated = inst.props !== publicProps;\n      var componentName = Component.displayName || Component.name || 'Component';\n\n      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\\'s constructor was passed.', componentName, componentName) : void 0;\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = updateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var markup;\n    if (inst.unstable_handleError) {\n      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } else {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n\n    if (inst.componentDidMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(function () {\n            return inst.componentDidMount();\n          }, _this._debugID, 'componentDidMount');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n      }\n    }\n\n    return markup;\n  },\n\n  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactCurrentOwner.current = this;\n      try {\n        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n    }\n  },\n\n  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n    var Component = this._currentElement.type;\n\n    if (doConstruct) {\n      if (process.env.NODE_ENV !== 'production') {\n        return measureLifeCyclePerf(function () {\n          return new Component(publicProps, publicContext, updateQueue);\n        }, this._debugID, 'ctor');\n      } else {\n        return new Component(publicProps, publicContext, updateQueue);\n      }\n    }\n\n    // This can still be an instance in case of factory components\n    // but we'll count this as time spent rendering as the more common case.\n    if (process.env.NODE_ENV !== 'production') {\n      return measureLifeCyclePerf(function () {\n        return Component(publicProps, publicContext, updateQueue);\n      }, this._debugID, 'render');\n    } else {\n      return Component(publicProps, publicContext, updateQueue);\n    }\n  },\n\n  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var markup;\n    var checkpoint = transaction.checkpoint();\n    try {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } catch (e) {\n      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n      transaction.rollback(checkpoint);\n      this._instance.unstable_handleError(e);\n      if (this._pendingStateQueue) {\n        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n      }\n      checkpoint = transaction.checkpoint();\n\n      this._renderedComponent.unmountComponent(true);\n      transaction.rollback(checkpoint);\n\n      // Try again - we've informed the component about the error, so they can render an error message this time.\n      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n    return markup;\n  },\n\n  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var inst = this._instance;\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (inst.componentWillMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillMount();\n        }, debugID, 'componentWillMount');\n      } else {\n        inst.componentWillMount();\n      }\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    var nodeType = ReactNodeTypes.getType(renderedElement);\n    this._renderedNodeType = nodeType;\n    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n    );\n    this._renderedComponent = child;\n\n    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (debugID !== 0) {\n        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n      }\n    }\n\n    return markup;\n  },\n\n  getHostNode: function () {\n    return ReactReconciler.getHostNode(this._renderedComponent);\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    if (!this._renderedComponent) {\n      return;\n    }\n\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n      inst._calledComponentWillUnmount = true;\n\n      if (safely) {\n        var name = this.getName() + '.componentWillUnmount()';\n        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCyclePerf(function () {\n            return inst.componentWillUnmount();\n          }, this._debugID, 'componentWillUnmount');\n        } else {\n          inst.componentWillUnmount();\n        }\n      }\n    }\n\n    if (this._renderedComponent) {\n      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n      this._renderedNodeType = null;\n      this._renderedComponent = null;\n      this._instance = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = 0;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    var maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext;\n\n    if (inst.getChildContext) {\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n        try {\n          childContext = inst.getChildContext();\n        } finally {\n          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n        }\n      } else {\n        childContext = inst.getChildContext();\n      }\n    }\n\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n      if (process.env.NODE_ENV !== 'production') {\n        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n      }\n      return _assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Assert that the context types are valid\n   *\n   * @param {object} typeSpecs Map of context field to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkContextTypes: function (typeSpecs, values, location) {\n    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n  },\n\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    } else {\n      this._updateBatchNumber = null;\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    var willReceive = false;\n    var nextContext;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = inst.context;\n    } else {\n      nextContext = this._processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n\n    var prevProps = prevParentElement.props;\n    var nextProps = nextParentElement.props;\n\n    // Not a simple state update but a props update\n    if (prevParentElement !== nextParentElement) {\n      willReceive = true;\n    }\n\n    // An update here will schedule an update but immediately set\n    // _pendingStateQueue which will ensure that any state updates gets\n    // immediately reconciled instead of waiting for the next batch.\n    if (willReceive && inst.componentWillReceiveProps) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillReceiveProps(nextProps, nextContext);\n        }, this._debugID, 'componentWillReceiveProps');\n      } else {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n    var shouldUpdate = true;\n\n    if (!this._pendingForceUpdate) {\n      if (inst.shouldComponentUpdate) {\n        if (process.env.NODE_ENV !== 'production') {\n          shouldUpdate = measureLifeCyclePerf(function () {\n            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n          }, this._debugID, 'shouldComponentUpdate');\n        } else {\n          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n        }\n      } else {\n        if (this._compositeType === CompositeTypes.PureClass) {\n          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n        }\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n    }\n\n    this._updateBatchNumber = null;\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = _assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var _this2 = this;\n\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n        }, this._debugID, 'componentWillUpdate');\n      } else {\n        inst.componentWillUpdate(nextProps, nextState, nextContext);\n      }\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (hasComponentDidUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n      }\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\n      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n      this._renderedNodeType = nodeType;\n      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n      );\n      this._renderedComponent = child;\n\n      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (debugID !== 0) {\n          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n        }\n      }\n\n      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n    }\n  },\n\n  /**\n   * Overridden in shallow rendering.\n   *\n   * @protected\n   */\n  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedComponent;\n\n    if (process.env.NODE_ENV !== 'production') {\n      renderedComponent = measureLifeCyclePerf(function () {\n        return inst.render();\n      }, this._debugID, 'render');\n    } else {\n      renderedComponent = inst.render();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (renderedComponent === undefined && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedComponent = null;\n      }\n    }\n\n    return renderedComponent;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedComponent;\n    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n      ReactCurrentOwner.current = this;\n      try {\n        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    return renderedComponent;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n    var publicComponentInstance = component.getPublicInstance();\n    if (process.env.NODE_ENV !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nvar ReactCompositeComponent = {\n\n  Mixin: ReactCompositeComponentMixin\n\n};\n\nmodule.exports = ReactCompositeComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactCompositeComponent.js\n ** module id = 113\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOM\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDefaultInjection = require('./ReactDefaultInjection');\nvar ReactMount = require('./ReactMount');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdates = require('./ReactUpdates');\nvar ReactVersion = require('./ReactVersion');\n\nvar findDOMNode = require('./findDOMNode');\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');\nvar warning = require('fbjs/lib/warning');\n\nReactDefaultInjection.inject();\n\nvar ReactDOM = {\n  findDOMNode: findDOMNode,\n  render: ReactMount.render,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  version: ReactVersion,\n\n  /* eslint-disable camelcase */\n  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\n/* eslint-enable camelcase */\nif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    ComponentTree: {\n      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,\n      getNodeFromInstance: function (inst) {\n        // inst is an internal instance (but could be a composite)\n        if (inst._renderedComponent) {\n          inst = getHostComponentFromComposite(inst);\n        }\n        if (inst) {\n          return ReactDOMComponentTree.getNodeFromInstance(inst);\n        } else {\n          return null;\n        }\n      }\n    },\n    Mount: ReactMount,\n    Reconciler: ReactReconciler\n  });\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // First check if devtools is not installed\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n      // If we're in Chrome or Firefox, provide a download link if not installed.\n      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n        // Firefox does not have the issue with devtools loaded over file://\n        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;\n        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');\n      }\n    }\n\n    var testFunc = function testFn() {};\n    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;\n\n    // If we're in IE8, check to see if we are in compatibility mode and provide\n    // information on preventing compatibility mode\n    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\n    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : void 0;\n\n    var expectedFeatures = [\n    // shims\n    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;\n        break;\n      }\n    }\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactInstrumentation = require('./ReactInstrumentation');\n  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');\n  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');\n\n  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);\n  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);\n}\n\nmodule.exports = ReactDOM;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOM.js\n ** module id = 114\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n'use strict';\n\nvar DisabledInputUtils = require('./DisabledInputUtils');\n\n/**\n * Implements a <button> host component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = {\n  getHostProps: DisabledInputUtils.getHostProps\n};\n\nmodule.exports = ReactDOMButton;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMButton.js\n ** module id = 115\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponent\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar AutoFocusUtils = require('./AutoFocusUtils');\nvar CSSPropertyOperations = require('./CSSPropertyOperations');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMNamespaces = require('./DOMNamespaces');\nvar DOMProperty = require('./DOMProperty');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactDOMButton = require('./ReactDOMButton');\nvar ReactDOMComponentFlags = require('./ReactDOMComponentFlags');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMInput = require('./ReactDOMInput');\nvar ReactDOMOption = require('./ReactDOMOption');\nvar ReactDOMSelect = require('./ReactDOMSelect');\nvar ReactDOMTextarea = require('./ReactDOMTextarea');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMultiChild = require('./ReactMultiChild');\nvar ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar isEventSupported = require('./isEventSupported');\nvar keyOf = require('fbjs/lib/keyOf');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar validateDOMNesting = require('./validateDOMNesting');\nvar warning = require('fbjs/lib/warning');\n\nvar Flags = ReactDOMComponentFlags;\nvar deleteListener = EventPluginHub.deleteListener;\nvar getNode = ReactDOMComponentTree.getNodeFromInstance;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = EventPluginRegistry.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = { 'string': true, 'number': true };\n\nvar STYLE = keyOf({ style: null });\nvar HTML = keyOf({ __html: null });\nvar RESERVED_PROPS = {\n  children: null,\n  dangerouslySetInnerHTML: null,\n  suppressContentEditableWarning: null\n};\n\n// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).\nvar DOC_FRAGMENT_TYPE = 11;\n\nfunction getDeclarationErrorAddendum(internalInstance) {\n  if (internalInstance) {\n    var owner = internalInstance._currentElement._owner || null;\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' This DOM node was rendered by `' + name + '`.';\n      }\n    }\n  }\n  return '';\n}\n\nfunction friendlyStringify(obj) {\n  if (typeof obj === 'object') {\n    if (Array.isArray(obj)) {\n      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n    } else {\n      var pairs = [];\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n        }\n      }\n      return '{' + pairs.join(', ') + '}';\n    }\n  } else if (typeof obj === 'string') {\n    return JSON.stringify(obj);\n  } else if (typeof obj === 'function') {\n    return '[function object]';\n  }\n  // Differs from JSON.stringify in that undefined because undefined and that\n  // inf and nan don't become null\n  return String(obj);\n}\n\nvar styleMutationWarning = {};\n\nfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n  if (style1 == null || style2 == null) {\n    return;\n  }\n  if (shallowEqual(style1, style2)) {\n    return;\n  }\n\n  var componentName = component._tag;\n  var owner = component._currentElement._owner;\n  var ownerName;\n  if (owner) {\n    ownerName = owner.getName();\n  }\n\n  var hash = ownerName + '|' + componentName;\n\n  if (styleMutationWarning.hasOwnProperty(hash)) {\n    return;\n  }\n\n  styleMutationWarning[hash] = true;\n\n  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;\n}\n\n/**\n * @param {object} component\n * @param {?object} props\n */\nfunction assertValidProps(component, props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[component._tag]) {\n    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;\n  }\n  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;\n}\n\nfunction enqueuePutListener(inst, registrationName, listener, transaction) {\n  if (transaction instanceof ReactServerRenderingTransaction) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : void 0;\n  }\n  var containerInfo = inst._hostContainerInfo;\n  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;\n  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;\n  listenTo(registrationName, doc);\n  transaction.getReactMountReady().enqueue(putListener, {\n    inst: inst,\n    registrationName: registrationName,\n    listener: listener\n  });\n}\n\nfunction putListener() {\n  var listenerToPut = this;\n  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);\n}\n\nfunction inputPostMount() {\n  var inst = this;\n  ReactDOMInput.postMountWrapper(inst);\n}\n\nfunction textareaPostMount() {\n  var inst = this;\n  ReactDOMTextarea.postMountWrapper(inst);\n}\n\nfunction optionPostMount() {\n  var inst = this;\n  ReactDOMOption.postMountWrapper(inst);\n}\n\nvar setAndValidateContentChildDev = emptyFunction;\nif (process.env.NODE_ENV !== 'production') {\n  setAndValidateContentChildDev = function (content) {\n    var hasExistingContent = this._contentDebugID != null;\n    var debugID = this._debugID;\n    // This ID represents the inlined child that has no backing instance:\n    var contentDebugID = -debugID;\n\n    if (content == null) {\n      if (hasExistingContent) {\n        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);\n      }\n      this._contentDebugID = null;\n      return;\n    }\n\n    validateDOMNesting(null, String(content), this, this._ancestorInfo);\n    this._contentDebugID = contentDebugID;\n    if (hasExistingContent) {\n      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);\n      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);\n    } else {\n      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);\n      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);\n      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);\n    }\n  };\n}\n\n// There are so many media events, it makes sense to just\n// maintain a list rather than create a `trapBubbledEvent` for each\nvar mediaEvents = {\n  topAbort: 'abort',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTimeUpdate: 'timeupdate',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting'\n};\n\nfunction trapBubbledEventsLocal() {\n  var inst = this;\n  // If a component renders to null or if another component fatals and causes\n  // the state of the tree to be corrupted, `node` here can be null.\n  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;\n  var node = getNode(inst);\n  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;\n\n  switch (inst._tag) {\n    case 'iframe':\n    case 'object':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n      break;\n    case 'video':\n    case 'audio':\n\n      inst._wrapperState.listeners = [];\n      // Create listener for each media event\n      for (var event in mediaEvents) {\n        if (mediaEvents.hasOwnProperty(event)) {\n          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));\n        }\n      }\n      break;\n    case 'source':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];\n      break;\n    case 'img':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n      break;\n    case 'form':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];\n      break;\n    case 'input':\n    case 'select':\n    case 'textarea':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];\n      break;\n  }\n}\n\nfunction postUpdateSelectWrapper() {\n  ReactDOMSelect.postUpdateWrapper(this);\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special-case tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n};\n\n// NOTE: menuitem's close tag should be omitted, but that causes problems.\nvar newlineEatingTags = {\n  'listing': true,\n  'pre': true,\n  'textarea': true\n};\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = _assign({\n  'menuitem': true\n}, omittedCloseTags);\n\n// We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;\n    validatedTagCache[tag] = true;\n  }\n}\n\nfunction isCustomComponent(tagName, props) {\n  return tagName.indexOf('-') >= 0 || props.is != null;\n}\n\nvar globalIdCounter = 1;\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(element) {\n  var tag = element.type;\n  validateDangerousTag(tag);\n  this._currentElement = element;\n  this._tag = tag.toLowerCase();\n  this._namespaceURI = null;\n  this._renderedChildren = null;\n  this._previousStyle = null;\n  this._previousStyleCopy = null;\n  this._hostNode = null;\n  this._hostParent = null;\n  this._rootNodeID = 0;\n  this._domID = 0;\n  this._hostContainerInfo = null;\n  this._wrapperState = null;\n  this._topLevelWrapper = null;\n  this._flags = 0;\n  if (process.env.NODE_ENV !== 'production') {\n    this._ancestorInfo = null;\n    setAndValidateContentChildDev.call(this, null);\n  }\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?ReactDOMComponent} the parent component instance\n   * @param {?object} info about the host container\n   * @param {object} context\n   * @return {string} The computed markup.\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    this._rootNodeID = globalIdCounter++;\n    this._domID = hostContainerInfo._idCounter++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var props = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        this._wrapperState = {\n          listeners: null\n        };\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'button':\n        props = ReactDOMButton.getHostProps(this, props, hostParent);\n        break;\n      case 'input':\n        ReactDOMInput.mountWrapper(this, props, hostParent);\n        props = ReactDOMInput.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'option':\n        ReactDOMOption.mountWrapper(this, props, hostParent);\n        props = ReactDOMOption.getHostProps(this, props);\n        break;\n      case 'select':\n        ReactDOMSelect.mountWrapper(this, props, hostParent);\n        props = ReactDOMSelect.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.mountWrapper(this, props, hostParent);\n        props = ReactDOMTextarea.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n    }\n\n    assertValidProps(this, props);\n\n    // We create tags in the namespace of their parent container, except HTML\n    // tags get no namespace.\n    var namespaceURI;\n    var parentTag;\n    if (hostParent != null) {\n      namespaceURI = hostParent._namespaceURI;\n      parentTag = hostParent._tag;\n    } else if (hostContainerInfo._tag) {\n      namespaceURI = hostContainerInfo._namespaceURI;\n      parentTag = hostContainerInfo._tag;\n    }\n    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\n      namespaceURI = DOMNamespaces.html;\n    }\n    if (namespaceURI === DOMNamespaces.html) {\n      if (this._tag === 'svg') {\n        namespaceURI = DOMNamespaces.svg;\n      } else if (this._tag === 'math') {\n        namespaceURI = DOMNamespaces.mathml;\n      }\n    }\n    this._namespaceURI = namespaceURI;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo._tag) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(this._tag, null, this, parentInfo);\n      }\n      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);\n    }\n\n    var mountImage;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var el;\n      if (namespaceURI === DOMNamespaces.html) {\n        if (this._tag === 'script') {\n          // Create the script via .innerHTML so its \"parser-inserted\" flag is\n          // set to true and it does not execute\n          var div = ownerDocument.createElement('div');\n          var type = this._currentElement.type;\n          div.innerHTML = '<' + type + '></' + type + '>';\n          el = div.removeChild(div.firstChild);\n        } else if (props.is) {\n          el = ownerDocument.createElement(this._currentElement.type, props.is);\n        } else {\n          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.\n          // See discussion in https://github.com/facebook/react/pull/6896\n          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n          el = ownerDocument.createElement(this._currentElement.type);\n        }\n      } else {\n        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);\n      }\n      ReactDOMComponentTree.precacheNode(this, el);\n      this._flags |= Flags.hasCachedChildNodes;\n      if (!this._hostParent) {\n        DOMPropertyOperations.setAttributeForRoot(el);\n      }\n      this._updateDOMProperties(null, props, transaction);\n      var lazyTree = DOMLazyTree(el);\n      this._createInitialChildren(transaction, props, context, lazyTree);\n      mountImage = lazyTree;\n    } else {\n      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n      var tagContent = this._createContentMarkup(transaction, props, context);\n      if (!tagContent && omittedCloseTags[this._tag]) {\n        mountImage = tagOpen + '/>';\n      } else {\n        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n      }\n    }\n\n    switch (this._tag) {\n      case 'input':\n        transaction.getReactMountReady().enqueue(inputPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'textarea':\n        transaction.getReactMountReady().enqueue(textareaPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'select':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'button':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'option':\n        transaction.getReactMountReady().enqueue(optionPostMount, this);\n        break;\n    }\n\n    return mountImage;\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n    var ret = '<' + this._currentElement.type;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (propValue) {\n          enqueuePutListener(this, propKey, propValue, transaction);\n        }\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            if (process.env.NODE_ENV !== 'production') {\n              // See `_updateDOMProperties`. style block\n              this._previousStyle = propValue;\n            }\n            propValue = this._previousStyleCopy = _assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);\n        }\n        var markup = null;\n        if (this._tag != null && isCustomComponent(this._tag, props)) {\n          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n          }\n        } else {\n          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        }\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret;\n    }\n\n    if (!this._hostParent) {\n      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();\n    }\n    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);\n    return ret;\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function (transaction, props, context) {\n    var ret = '';\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        ret = innerHTML.__html;\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        ret = escapeTextContentForBrowser(contentToUse);\n        if (process.env.NODE_ENV !== 'production') {\n          setAndValidateContentChildDev.call(this, contentToUse);\n        }\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        ret = mountImages.join('');\n      }\n    }\n    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n      // text/html ignores the first character in these tags if it's a newline\n      // Prefer to break application/xml over text/html (for now) by adding\n      // a newline specifically to get eaten by the parser. (Alternately for\n      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n      // \\r is normalized out by HTMLTextAreaElement#value.)\n      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n      return '\\n' + ret;\n    } else {\n      return ret;\n    }\n  },\n\n  _createInitialChildren: function (transaction, props, context, lazyTree) {\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        if (process.env.NODE_ENV !== 'production') {\n          setAndValidateContentChildDev.call(this, contentToUse);\n        }\n        DOMLazyTree.queueText(lazyTree, contentToUse);\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        for (var i = 0; i < mountImages.length; i++) {\n          DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n        }\n      }\n    }\n  },\n\n  /**\n   * Receives a next element and updates the component.\n   *\n   * @internal\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   */\n  receiveComponent: function (nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevElement, nextElement, context) {\n    var lastProps = prevElement.props;\n    var nextProps = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'button':\n        lastProps = ReactDOMButton.getHostProps(this, lastProps);\n        nextProps = ReactDOMButton.getHostProps(this, nextProps);\n        break;\n      case 'input':\n        lastProps = ReactDOMInput.getHostProps(this, lastProps);\n        nextProps = ReactDOMInput.getHostProps(this, nextProps);\n        break;\n      case 'option':\n        lastProps = ReactDOMOption.getHostProps(this, lastProps);\n        nextProps = ReactDOMOption.getHostProps(this, nextProps);\n        break;\n      case 'select':\n        lastProps = ReactDOMSelect.getHostProps(this, lastProps);\n        nextProps = ReactDOMSelect.getHostProps(this, nextProps);\n        break;\n      case 'textarea':\n        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);\n        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);\n        break;\n    }\n\n    assertValidProps(this, nextProps);\n    this._updateDOMProperties(lastProps, nextProps, transaction);\n    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\n    switch (this._tag) {\n      case 'input':\n        // Update the wrapper around inputs *after* updating props. This has to\n        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations\n        // raise warnings and prevent the new value from being assigned.\n        ReactDOMInput.updateWrapper(this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.updateWrapper(this);\n        break;\n      case 'select':\n        // <select> value update needs to occur after <option> children\n        // reconciliation\n        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n        break;\n    }\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {?DOMElement} node\n   */\n  _updateDOMProperties: function (lastProps, nextProps, transaction) {\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (lastProps[propKey]) {\n          // Only call deleteListener if there was a listener previously or\n          // else willDeleteListener gets called when there wasn't actually a\n          // listener (e.g., onClick={null})\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, lastProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          if (process.env.NODE_ENV !== 'production') {\n            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n            this._previousStyle = nextProp;\n          }\n          nextProp = this._previousStyleCopy = _assign({}, nextProp);\n        } else {\n          this._previousStyleCopy = null;\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (nextProp) {\n          enqueuePutListener(this, propKey, nextProp, transaction);\n        } else if (lastProp) {\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, nextProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        var node = getNode(this);\n        // If we're updating to null or undefined, we should remove the property\n        // from the DOM node instead of inadvertently setting to a string. This\n        // brings us in line with the same behavior we have on initial render.\n        if (nextProp != null) {\n          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n        } else {\n          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n        }\n      }\n    }\n    if (styleUpdates) {\n      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   */\n  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n        if (process.env.NODE_ENV !== 'production') {\n          setAndValidateContentChildDev.call(this, nextContent);\n        }\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        this.updateMarkup('' + nextHtml);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    } else if (nextChildren != null) {\n      if (process.env.NODE_ENV !== 'production') {\n        setAndValidateContentChildDev.call(this, null);\n      }\n\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  getHostNode: function () {\n    return getNode(this);\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        var listeners = this._wrapperState.listeners;\n        if (listeners) {\n          for (var i = 0; i < listeners.length; i++) {\n            listeners[i].remove();\n          }\n        }\n        break;\n      case 'html':\n      case 'head':\n      case 'body':\n        /**\n         * Components like <html> <head> and <body> can't be removed or added\n         * easily in a cross-browser way, however it's valuable to be able to\n         * take advantage of React's reconciliation for styling and <title>\n         * management. So we just document it and throw in dangerous cases.\n         */\n        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;\n        break;\n    }\n\n    this.unmountChildren(safely);\n    ReactDOMComponentTree.uncacheNode(this);\n    EventPluginHub.deleteAllListeners(this);\n    this._rootNodeID = 0;\n    this._domID = 0;\n    this._wrapperState = null;\n\n    if (process.env.NODE_ENV !== 'production') {\n      setAndValidateContentChildDev.call(this, null);\n    }\n  },\n\n  getPublicInstance: function () {\n    return getNode(this);\n  }\n\n};\n\n_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\nmodule.exports = ReactDOMComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMComponent.js\n ** module id = 116\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMContainerInfo\n */\n\n'use strict';\n\nvar validateDOMNesting = require('./validateDOMNesting');\n\nvar DOC_NODE_TYPE = 9;\n\nfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n  var info = {\n    _topLevelWrapper: topLevelWrapper,\n    _idCounter: 1,\n    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,\n    _node: node,\n    _tag: node ? node.nodeName.toLowerCase() : null,\n    _namespaceURI: node ? node.namespaceURI : null\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;\n  }\n  return info;\n}\n\nmodule.exports = ReactDOMContainerInfo;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMContainerInfo.js\n ** module id = 117\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMEmptyComponent\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar ReactDOMEmptyComponent = function (instantiate) {\n  // ReactCompositeComponent uses this:\n  this._currentElement = null;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n  this._hostContainerInfo = null;\n  this._domID = 0;\n};\n_assign(ReactDOMEmptyComponent.prototype, {\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var domID = hostContainerInfo._idCounter++;\n    this._domID = domID;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var nodeValue = ' react-empty: ' + this._domID + ' ';\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var node = ownerDocument.createComment(nodeValue);\n      ReactDOMComponentTree.precacheNode(this, node);\n      return DOMLazyTree(node);\n    } else {\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd insert a comment node, but since this is a situation\n        // where React won't take over (static pages), we can simply return\n        // nothing.\n        return '';\n      }\n      return '<!--' + nodeValue + '-->';\n    }\n  },\n  receiveComponent: function () {},\n  getHostNode: function () {\n    return ReactDOMComponentTree.getNodeFromInstance(this);\n  },\n  unmountComponent: function () {\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n});\n\nmodule.exports = ReactDOMEmptyComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMEmptyComponent.js\n ** module id = 118\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMFactories\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @private\n */\nvar createDOMFactory = ReactElement.createFactory;\nif (process.env.NODE_ENV !== 'production') {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createDOMFactory = ReactElementValidator.createFactory;\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOMFactories = {\n  a: createDOMFactory('a'),\n  abbr: createDOMFactory('abbr'),\n  address: createDOMFactory('address'),\n  area: createDOMFactory('area'),\n  article: createDOMFactory('article'),\n  aside: createDOMFactory('aside'),\n  audio: createDOMFactory('audio'),\n  b: createDOMFactory('b'),\n  base: createDOMFactory('base'),\n  bdi: createDOMFactory('bdi'),\n  bdo: createDOMFactory('bdo'),\n  big: createDOMFactory('big'),\n  blockquote: createDOMFactory('blockquote'),\n  body: createDOMFactory('body'),\n  br: createDOMFactory('br'),\n  button: createDOMFactory('button'),\n  canvas: createDOMFactory('canvas'),\n  caption: createDOMFactory('caption'),\n  cite: createDOMFactory('cite'),\n  code: createDOMFactory('code'),\n  col: createDOMFactory('col'),\n  colgroup: createDOMFactory('colgroup'),\n  data: createDOMFactory('data'),\n  datalist: createDOMFactory('datalist'),\n  dd: createDOMFactory('dd'),\n  del: createDOMFactory('del'),\n  details: createDOMFactory('details'),\n  dfn: createDOMFactory('dfn'),\n  dialog: createDOMFactory('dialog'),\n  div: createDOMFactory('div'),\n  dl: createDOMFactory('dl'),\n  dt: createDOMFactory('dt'),\n  em: createDOMFactory('em'),\n  embed: createDOMFactory('embed'),\n  fieldset: createDOMFactory('fieldset'),\n  figcaption: createDOMFactory('figcaption'),\n  figure: createDOMFactory('figure'),\n  footer: createDOMFactory('footer'),\n  form: createDOMFactory('form'),\n  h1: createDOMFactory('h1'),\n  h2: createDOMFactory('h2'),\n  h3: createDOMFactory('h3'),\n  h4: createDOMFactory('h4'),\n  h5: createDOMFactory('h5'),\n  h6: createDOMFactory('h6'),\n  head: createDOMFactory('head'),\n  header: createDOMFactory('header'),\n  hgroup: createDOMFactory('hgroup'),\n  hr: createDOMFactory('hr'),\n  html: createDOMFactory('html'),\n  i: createDOMFactory('i'),\n  iframe: createDOMFactory('iframe'),\n  img: createDOMFactory('img'),\n  input: createDOMFactory('input'),\n  ins: createDOMFactory('ins'),\n  kbd: createDOMFactory('kbd'),\n  keygen: createDOMFactory('keygen'),\n  label: createDOMFactory('label'),\n  legend: createDOMFactory('legend'),\n  li: createDOMFactory('li'),\n  link: createDOMFactory('link'),\n  main: createDOMFactory('main'),\n  map: createDOMFactory('map'),\n  mark: createDOMFactory('mark'),\n  menu: createDOMFactory('menu'),\n  menuitem: createDOMFactory('menuitem'),\n  meta: createDOMFactory('meta'),\n  meter: createDOMFactory('meter'),\n  nav: createDOMFactory('nav'),\n  noscript: createDOMFactory('noscript'),\n  object: createDOMFactory('object'),\n  ol: createDOMFactory('ol'),\n  optgroup: createDOMFactory('optgroup'),\n  option: createDOMFactory('option'),\n  output: createDOMFactory('output'),\n  p: createDOMFactory('p'),\n  param: createDOMFactory('param'),\n  picture: createDOMFactory('picture'),\n  pre: createDOMFactory('pre'),\n  progress: createDOMFactory('progress'),\n  q: createDOMFactory('q'),\n  rp: createDOMFactory('rp'),\n  rt: createDOMFactory('rt'),\n  ruby: createDOMFactory('ruby'),\n  s: createDOMFactory('s'),\n  samp: createDOMFactory('samp'),\n  script: createDOMFactory('script'),\n  section: createDOMFactory('section'),\n  select: createDOMFactory('select'),\n  small: createDOMFactory('small'),\n  source: createDOMFactory('source'),\n  span: createDOMFactory('span'),\n  strong: createDOMFactory('strong'),\n  style: createDOMFactory('style'),\n  sub: createDOMFactory('sub'),\n  summary: createDOMFactory('summary'),\n  sup: createDOMFactory('sup'),\n  table: createDOMFactory('table'),\n  tbody: createDOMFactory('tbody'),\n  td: createDOMFactory('td'),\n  textarea: createDOMFactory('textarea'),\n  tfoot: createDOMFactory('tfoot'),\n  th: createDOMFactory('th'),\n  thead: createDOMFactory('thead'),\n  time: createDOMFactory('time'),\n  title: createDOMFactory('title'),\n  tr: createDOMFactory('tr'),\n  track: createDOMFactory('track'),\n  u: createDOMFactory('u'),\n  ul: createDOMFactory('ul'),\n  'var': createDOMFactory('var'),\n  video: createDOMFactory('video'),\n  wbr: createDOMFactory('wbr'),\n\n  // SVG\n  circle: createDOMFactory('circle'),\n  clipPath: createDOMFactory('clipPath'),\n  defs: createDOMFactory('defs'),\n  ellipse: createDOMFactory('ellipse'),\n  g: createDOMFactory('g'),\n  image: createDOMFactory('image'),\n  line: createDOMFactory('line'),\n  linearGradient: createDOMFactory('linearGradient'),\n  mask: createDOMFactory('mask'),\n  path: createDOMFactory('path'),\n  pattern: createDOMFactory('pattern'),\n  polygon: createDOMFactory('polygon'),\n  polyline: createDOMFactory('polyline'),\n  radialGradient: createDOMFactory('radialGradient'),\n  rect: createDOMFactory('rect'),\n  stop: createDOMFactory('stop'),\n  svg: createDOMFactory('svg'),\n  text: createDOMFactory('text'),\n  tspan: createDOMFactory('tspan')\n};\n\nmodule.exports = ReactDOMFactories;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMFactories.js\n ** module id = 119\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMFeatureFlags\n */\n\n'use strict';\n\nvar ReactDOMFeatureFlags = {\n  useCreateElement: true\n};\n\nmodule.exports = ReactDOMFeatureFlags;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMFeatureFlags.js\n ** module id = 120\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIDOperations\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\n/**\n * Operations used to process updates to DOM nodes.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {\n    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);\n    DOMChildrenOperations.processUpdates(node, updates);\n  }\n};\n\nmodule.exports = ReactDOMIDOperations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMIDOperations.js\n ** module id = 121\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMInput\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DisabledInputUtils = require('./DisabledInputUtils');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnCheckedLink = false;\nvar didWarnValueDefaultValue = false;\nvar didWarnCheckedDefaultChecked = false;\nvar didWarnControlledToUncontrolled = false;\nvar didWarnUncontrolledToControlled = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMInput.updateWrapper(this);\n  }\n}\n\nfunction isControlled(props) {\n  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = {\n  getHostProps: function (inst, props) {\n    var value = LinkedValueUtils.getValue(props);\n    var checked = LinkedValueUtils.getChecked(props);\n\n    var hostProps = _assign({\n      // Make sure we set .type before any other properties (setting .value\n      // before .type means .value is lost in IE11 and below)\n      type: undefined,\n      // Make sure we set .step before .value (setting .value before .step\n      // means .value is rounded on mount, based upon step precision)\n      step: undefined,\n      // Make sure we set .min & .max before .value (to ensure proper order\n      // in corner cases such as min or max deriving from value, e.g. Issue #7170)\n      min: undefined,\n      max: undefined\n    }, DisabledInputUtils.getHostProps(inst, props), {\n      defaultChecked: undefined,\n      defaultValue: undefined,\n      value: value != null ? value : inst._wrapperState.initialValue,\n      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\n      var owner = inst._currentElement._owner;\n\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.checkedLink !== undefined && !didWarnCheckedLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnCheckedLink = true;\n      }\n      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnCheckedDefaultChecked = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnValueDefaultValue = true;\n      }\n    }\n\n    var defaultValue = props.defaultValue;\n    inst._wrapperState = {\n      initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n      initialValue: props.value != null ? props.value : defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst)\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      inst._wrapperState.controlled = isControlled(props);\n    }\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var controlled = isControlled(props);\n      var owner = inst._currentElement._owner;\n\n      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnUncontrolledToControlled = true;\n      }\n      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnControlledToUncontrolled = true;\n      }\n    }\n\n    // TODO: Shouldn't this be getChecked(props)?\n    var checked = props.checked;\n    if (checked != null) {\n      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);\n    }\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      var newValue = '' + value;\n\n      // To avoid side effects (such as losing text selection), only set value if changed\n      if (newValue !== node.value) {\n        node.value = newValue;\n      }\n    } else {\n      if (props.value == null && props.defaultValue != null) {\n        node.defaultValue = '' + props.defaultValue;\n      }\n      if (props.checked == null && props.defaultChecked != null) {\n        node.defaultChecked = !!props.defaultChecked;\n      }\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\n    // Detach value from defaultValue. We won't do anything if we're working on\n    // submit or reset inputs as those values & defaultValues are linked. They\n    // are not resetable nodes so this operation doesn't matter and actually\n    // removes browser-default values (eg \"Submit Query\") when no value is\n    // provided.\n\n    switch (props.type) {\n      case 'submit':\n      case 'reset':\n        break;\n      case 'color':\n      case 'date':\n      case 'datetime':\n      case 'datetime-local':\n      case 'month':\n      case 'time':\n      case 'week':\n        // This fixes the no-show issue on iOS Safari and Android Chrome:\n        // https://github.com/facebook/react/issues/7233\n        node.value = '';\n        node.value = node.defaultValue;\n        break;\n      default:\n        node.value = node.value;\n        break;\n    }\n\n    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n    // this is needed to work around a chrome bug where setting defaultChecked\n    // will sometimes influence the value of checked (even after detachment).\n    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n    // We need to temporarily unset name to avoid disrupting radio button groups.\n    var name = node.name;\n    if (name !== '') {\n      node.name = '';\n    }\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !node.defaultChecked;\n    if (name !== '') {\n      node.name = name;\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  // Here we use asap to wait until all updates have propagated, which\n  // is important when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n\n  var name = props.name;\n  if (props.type === 'radio' && name != null) {\n    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form, let's just use the global\n    // `querySelectorAll` to ensure we don't miss anything.\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);\n      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = ReactDOMInput;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMInput.js\n ** module id = 122\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMSelect = require('./ReactDOMSelect');\n\nvar warning = require('fbjs/lib/warning');\nvar didWarnInvalidOptionChildren = false;\n\nfunction flattenChildren(children) {\n  var content = '';\n\n  // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n  ReactChildren.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n    if (typeof child === 'string' || typeof child === 'number') {\n      content += child;\n    } else if (!didWarnInvalidOptionChildren) {\n      didWarnInvalidOptionChildren = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n    }\n  });\n\n  return content;\n}\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, hostParent) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n    }\n\n    // Look up whether this option is 'selected'\n    var selectValue = null;\n    if (hostParent != null) {\n      var selectParent = hostParent;\n\n      if (selectParent._tag === 'optgroup') {\n        selectParent = selectParent._hostParent;\n      }\n\n      if (selectParent != null && selectParent._tag === 'select') {\n        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n      }\n    }\n\n    // If the value is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      var value;\n      if (props.value != null) {\n        value = props.value + '';\n      } else {\n        value = flattenChildren(props.children);\n      }\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  postMountWrapper: function (inst) {\n    // value=\"\" should make a value attribute (#6219)\n    var props = inst._currentElement.props;\n    if (props.value != null) {\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      node.setAttribute('value', props.value);\n    }\n  },\n\n  getHostProps: function (inst, props) {\n    var hostProps = _assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      hostProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = flattenChildren(props.children);\n\n    if (content) {\n      hostProps.children = content;\n    }\n\n    return hostProps;\n  }\n\n};\n\nmodule.exports = ReactDOMOption;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMOption.js\n ** module id = 123\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelection\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n  // divs do not seem to expose properties, triggering a \"Permission denied\n  // error\" if any of its properties are accessed. The only seemingly possible\n  // way to avoid erroring is to access a property that typically works for\n  // non-anonymous divs and catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    currentRange.startContainer.nodeType;\n    currentRange.endContainer.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (offsets.end === undefined) {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMSelection.js\n ** module id = 124\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextComponent\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar validateDOMNesting = require('./validateDOMNesting');\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings between comment nodes so that they\n * can undergo the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function (text) {\n  // TODO: This is really a ReactText (ReactNode), not a ReactElement\n  this._currentElement = text;\n  this._stringText = '' + text;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n\n  // Properties\n  this._domID = 0;\n  this._mountIndex = 0;\n  this._closingComment = null;\n  this._commentNodes = null;\n};\n\n_assign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo != null) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(null, this._stringText, this, parentInfo);\n      }\n    }\n\n    var domID = hostContainerInfo._idCounter++;\n    var openingValue = ' react-text: ' + domID + ' ';\n    var closingValue = ' /react-text ';\n    this._domID = domID;\n    this._hostParent = hostParent;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var openingComment = ownerDocument.createComment(openingValue);\n      var closingComment = ownerDocument.createComment(closingValue);\n      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));\n      if (this._stringText) {\n        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));\n      }\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));\n      ReactDOMComponentTree.precacheNode(this, openingComment);\n      this._closingComment = closingComment;\n      return lazyTree;\n    } else {\n      var escapedText = escapeTextContentForBrowser(this._stringText);\n\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd wrap this between comment nodes for the reasons stated\n        // above, but since this is a situation where React won't take over\n        // (static pages), we can simply return the text as it is.\n        return escapedText;\n      }\n\n      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';\n    }\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function (nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        var commentNodes = this.getHostNode();\n        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);\n      }\n    }\n  },\n\n  getHostNode: function () {\n    var hostNode = this._commentNodes;\n    if (hostNode) {\n      return hostNode;\n    }\n    if (!this._closingComment) {\n      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);\n      var node = openingComment.nextSibling;\n      while (true) {\n        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;\n        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {\n          this._closingComment = node;\n          break;\n        }\n        node = node.nextSibling;\n      }\n    }\n    hostNode = [this._hostNode, this._closingComment];\n    this._commentNodes = hostNode;\n    return hostNode;\n  },\n\n  unmountComponent: function () {\n    this._closingComment = null;\n    this._commentNodes = null;\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMTextComponent.js\n ** module id = 125\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextarea\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DisabledInputUtils = require('./DisabledInputUtils');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValDefaultVal = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMTextarea.updateWrapper(this);\n  }\n}\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = {\n  getHostProps: function (inst, props) {\n    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.  We could add a check in setTextContent\n    // to only set the value if/when the value differs from the node value (which would\n    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.\n    // The value can be a boolean or object so that's why it's forced to be a string.\n    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {\n      value: undefined,\n      defaultValue: undefined,\n      children: '' + inst._wrapperState.initialValue,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n        didWarnValDefaultVal = true;\n      }\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    var initialValue = value;\n\n    // Only bother fetching default value if we're going to use it\n    if (value == null) {\n      var defaultValue = props.defaultValue;\n      // TODO (yungsters): Remove support for children content in <textarea>.\n      var children = props.children;\n      if (children != null) {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;\n        }\n        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;\n        if (Array.isArray(children)) {\n          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;\n          children = children[0];\n        }\n\n        defaultValue = '' + children;\n      }\n      if (defaultValue == null) {\n        defaultValue = '';\n      }\n      initialValue = defaultValue;\n    }\n\n    inst._wrapperState = {\n      initialValue: '' + initialValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      var newValue = '' + value;\n\n      // To avoid side effects (such as losing text selection), only set value if changed\n      if (newValue !== node.value) {\n        node.value = newValue;\n      }\n      if (props.defaultValue == null) {\n        node.defaultValue = newValue;\n      }\n    }\n    if (props.defaultValue != null) {\n      node.defaultValue = props.defaultValue;\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\n    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.\n    node.value = node.textContent; // Detach value from defaultValue\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMTextarea;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMTextarea.js\n ** module id = 126\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTreeTraversal\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nfunction getLowestCommonAncestor(instA, instB) {\n  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  var depthA = 0;\n  for (var tempA = instA; tempA; tempA = tempA._hostParent) {\n    depthA++;\n  }\n  var depthB = 0;\n  for (var tempB = instB; tempB; tempB = tempB._hostParent) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = instA._hostParent;\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = instB._hostParent;\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  var depth = depthA;\n  while (depth--) {\n    if (instA === instB) {\n      return instA;\n    }\n    instA = instA._hostParent;\n    instB = instB._hostParent;\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\nfunction isAncestor(instA, instB) {\n  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\n  while (instB) {\n    if (instB === instA) {\n      return true;\n    }\n    instB = instB._hostParent;\n  }\n  return false;\n}\n\n/**\n * Return the parent instance of the passed-in instance.\n */\nfunction getParentInstance(inst) {\n  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;\n\n  return inst._hostParent;\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n  while (inst) {\n    path.push(inst);\n    inst = inst._hostParent;\n  }\n  var i;\n  for (i = path.length; i-- > 0;) {\n    fn(path[i], false, arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], true, arg);\n  }\n}\n\n/**\n * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n * should would receive a `mouseEnter` or `mouseLeave` event.\n *\n * Does not invoke the callback on the nearest common ancestor because nothing\n * \"entered\" or \"left\" that element.\n */\nfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\n  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n  var pathFrom = [];\n  while (from && from !== common) {\n    pathFrom.push(from);\n    from = from._hostParent;\n  }\n  var pathTo = [];\n  while (to && to !== common) {\n    pathTo.push(to);\n    to = to._hostParent;\n  }\n  var i;\n  for (i = 0; i < pathFrom.length; i++) {\n    fn(pathFrom[i], true, argFrom);\n  }\n  for (i = pathTo.length; i-- > 0;) {\n    fn(pathTo[i], false, argTo);\n  }\n}\n\nmodule.exports = {\n  isAncestor: isAncestor,\n  getLowestCommonAncestor: getLowestCommonAncestor,\n  getParentInstance: getParentInstance,\n  traverseTwoPhase: traverseTwoPhase,\n  traverseEnterLeave: traverseEnterLeave\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMTreeTraversal.js\n ** module id = 127\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactUpdates = require('./ReactUpdates');\nvar Transaction = require('./Transaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function () {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\n_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  }\n});\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function (callback, a, b, c, d, e) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      callback(a, b, c, d, e);\n    } else {\n      transaction.perform(callback, null, a, b, c, d, e);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDefaultBatchingStrategy.js\n ** module id = 128\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultInjection\n */\n\n'use strict';\n\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactDOMComponent = require('./ReactDOMComponent');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');\nvar ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactEventListener = require('./ReactEventListener');\nvar ReactInjection = require('./ReactInjection');\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\nvar SelectEventPlugin = require('./SelectEventPlugin');\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n  alreadyInjected = true;\n\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n\n  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n    return new ReactDOMEmptyComponent(instantiate);\n  });\n\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n}\n\nmodule.exports = {\n  inject: inject\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDefaultInjection.js\n ** module id = 129\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventEmitterMixin\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue(false);\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   */\n  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEventEmitterMixin.js\n ** module id = 130\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\n/**\n * Find the deepest React component completely containing the root of the\n * passed-in instance (for use when entire React trees are nested within each\n * other). If React trees are not nested, returns null.\n */\nfunction findParent(inst) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  while (inst._hostParent) {\n    inst = inst._hostParent;\n  }\n  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n  var container = rootNode.parentNode;\n  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\n_assign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = targetInst;\n  do {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = ancestor && findParent(ancestor);\n  } while (ancestor);\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    targetInst = bookKeeping.ancestors[i];\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEventListener.js\n ** module id = 131\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInjection\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactClass = require('./ReactClass');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactHostComponent = require('./ReactHostComponent');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  Class: ReactClass.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventPluginUtils: EventPluginUtils.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  HostComponent: ReactHostComponent.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInjection.js\n ** module id = 132\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMarkupChecksum\n */\n\n'use strict';\n\nvar adler32 = require('./adler32');\n\nvar TAG_END = /\\/?>/;\nvar COMMENT_START = /^<\\!\\-\\-/;\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup);\n\n    // Add checksum (handle both parent tags, comments and self-closing tags)\n    if (COMMENT_START.test(markup)) {\n      return markup;\n    } else {\n      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n    }\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMarkupChecksum.js\n ** module id = 133\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChild\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactChildReconciler = require('./ReactChildReconciler');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar flattenChildren = require('./flattenChildren');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Make an update for markup to be rendered and inserted at a supplied index.\n *\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction makeInsertMarkup(markup, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for moving an existing element to another index.\n *\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction makeMove(child, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: ReactReconciler.getHostNode(child),\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for removing an element at an index.\n *\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction makeRemove(child, node) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: node,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the markup of a node.\n *\n * @param {string} markup Markup that renders into an element.\n * @private\n */\nfunction makeSetMarkup(markup) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: ReactMultiChildUpdateTypes.SET_MARKUP,\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the text content.\n *\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction makeTextContent(textContent) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\n    content: textContent,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Push an update, if any, onto the queue. Creates a new queue if none is\n * passed and always returns the queue. Mutative.\n */\nfunction enqueue(queue, update) {\n  if (update) {\n    queue = queue || [];\n    queue.push(update);\n  }\n  return queue;\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue(inst, updateQueue) {\n  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);\n}\n\nvar setChildrenForInstrumentation = emptyFunction;\nif (process.env.NODE_ENV !== 'production') {\n  var getDebugID = function (inst) {\n    if (!inst._debugID) {\n      // Check for ART-like instances. TODO: This is silly/gross.\n      var internal;\n      if (internal = ReactInstanceMap.get(inst)) {\n        inst = internal;\n      }\n    }\n    return inst._debugID;\n  };\n  setChildrenForInstrumentation = function (children) {\n    var debugID = getDebugID(this);\n    // TODO: React Native empty components are also multichild.\n    // This means they still get into this method but don't have _debugID.\n    if (debugID !== 0) {\n      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {\n        return children[key]._debugID;\n      }) : []);\n    }\n  };\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n      if (process.env.NODE_ENV !== 'production') {\n        var selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n        }\n      }\n      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n    },\n\n    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {\n      var nextChildren;\n      var selfDebugID = 0;\n      if (process.env.NODE_ENV !== 'production') {\n        selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          return nextChildren;\n        }\n      }\n      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n      return nextChildren;\n    },\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function (nestedChildren, transaction, context) {\n      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n      this._renderedChildren = children;\n\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          var selfDebugID = 0;\n          if (process.env.NODE_ENV !== 'production') {\n            selfDebugID = getDebugID(this);\n          }\n          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          child._mountIndex = index++;\n          mountImages.push(mountImage);\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        setChildrenForInstrumentation.call(this, children);\n      }\n\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function (nextContent) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      // Set new text content.\n      var updates = [makeTextContent(nextContent)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Replaces any rendered children with a markup string.\n     *\n     * @param {string} nextMarkup String of markup.\n     * @internal\n     */\n    updateMarkup: function (nextMarkup) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      var updates = [makeSetMarkup(nextMarkup)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      // Hook used by React ART\n      this._updateChildren(nextNestedChildrenElements, transaction, context);\n    },\n\n    /**\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var removedNodes = {};\n      var mountImages = [];\n      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var updates = null;\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var nextIndex = 0;\n      var lastIndex = 0;\n      // `nextMountIndex` will increment for each newly mounted child.\n      var nextMountIndex = 0;\n      var lastPlacedNode = null;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            // The `removedNodes` loop below will actually remove the child.\n          }\n          // The child must be instantiated before it's mounted.\n          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));\n          nextMountIndex++;\n        }\n        nextIndex++;\n        lastPlacedNode = ReactReconciler.getHostNode(nextChild);\n      }\n      // Remove children that are no longer present.\n      for (name in removedNodes) {\n        if (removedNodes.hasOwnProperty(name)) {\n          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));\n        }\n      }\n      if (updates) {\n        processQueue(this, updates);\n      }\n      this._renderedChildren = nextChildren;\n\n      if (process.env.NODE_ENV !== 'production') {\n        setChildrenForInstrumentation.call(this, nextChildren);\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted. It does not actually perform any\n     * backend operations.\n     *\n     * @internal\n     */\n    unmountChildren: function (safely) {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren, safely);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function (child, afterNode, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        return makeMove(child, afterNode, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function (child, afterNode, mountImage) {\n      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function (child, node) {\n      return makeRemove(child, node);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {\n      child._mountIndex = index;\n      return this.createChild(child, afterNode, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @private\n     */\n    _unmountChild: function (child, node) {\n      var update = this.removeChild(child, node);\n      child._mountIndex = null;\n      return update;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMultiChild.js\n ** module id = 134\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactOwner\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n\n  /**\n   * @param {?object} object\n   * @return {boolean} True if `object` is a valid owner.\n   * @final\n   */\n  isValidOwner: function (object) {\n    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n  },\n\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function (component, ref, owner) {\n    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function (component, ref, owner) {\n    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;\n    var ownerPublicInstance = owner.getPublicInstance();\n    // Check that `component`'s owner is still alive and that `component` is still the current ref\n    // because we do not want to detach the ref if another component stole it.\n    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactOwner.js\n ** module id = 135\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPureComponent\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactPureComponent(props, context, updater) {\n  // Duplicated from ReactComponent.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = ReactComponent.prototype;\nReactPureComponent.prototype = new ComponentDummy();\nReactPureComponent.prototype.constructor = ReactPureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(ReactPureComponent.prototype, ReactComponent.prototype);\nReactPureComponent.prototype.isPureReactComponent = true;\n\nmodule.exports = ReactPureComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPureComponent.js\n ** module id = 136\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconcileTransaction\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar Transaction = require('./Transaction');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function () {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n   *   restores the previous value.\n   */\n  close: function (previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function () {\n    this.reactMountReady.notifyAll();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\nif (process.env.NODE_ENV !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction(useCreateElement) {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactDOMTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = useCreateElement;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap procedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return ReactUpdateQueue;\n  },\n\n  /**\n   * Save current transaction state -- if the return value from this method is\n   * passed to `rollback`, the transaction will be reset to that state.\n   */\n  checkpoint: function () {\n    // reactMountReady is the our only stateful wrapper\n    return this.reactMountReady.checkpoint();\n  },\n\n  rollback: function (checkpoint) {\n    this.reactMountReady.rollback(checkpoint);\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\n_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactReconcileTransaction.js\n ** module id = 137\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRef\n */\n\n'use strict';\n\nvar ReactOwner = require('./ReactOwner');\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function (instance, element) {\n  if (element === null || element === false) {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n\n  return (\n    // This has a few false positives w/r/t empty components.\n    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||\n    // If owner changes but we have an unchanged function ref, don't update refs\n    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner\n  );\n};\n\nReactRef.detachRefs = function (instance, element) {\n  if (element === null || element === false) {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactRef.js\n ** module id = 138\n ** module chunks = 0\n **/","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\nvar Transaction = require('./Transaction');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactServerUpdateQueue = require('./ReactServerUpdateQueue');\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [];\n\nif (process.env.NODE_ENV !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\nvar noopCallbackQueue = {\n  enqueue: function () {}\n};\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.useCreateElement = false;\n  this.updateQueue = new ReactServerUpdateQueue(this);\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap procedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return noopCallbackQueue;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return this.updateQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {},\n\n  checkpoint: function () {},\n\n  rollback: function () {}\n};\n\n_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactServerRenderingTransaction.js\n ** module id = 139\n ** module chunks = 0\n **/","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerUpdateQueue\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar Transaction = require('./Transaction');\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the update queue used for server rendering.\n * It delegates to ReactUpdateQueue while server rendering is in progress and\n * switches to ReactNoopUpdateQueue after the transaction has completed.\n * @class ReactServerUpdateQueue\n * @param {Transaction} transaction\n */\n\nvar ReactServerUpdateQueue = function () {\n  /* :: transaction: Transaction; */\n\n  function ReactServerUpdateQueue(transaction) {\n    _classCallCheck(this, ReactServerUpdateQueue);\n\n    this.transaction = transaction;\n  }\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n\n\n  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {\n    return false;\n  };\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);\n    }\n  };\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueForceUpdate(publicInstance);\n    } else {\n      warnNoop(publicInstance, 'forceUpdate');\n    }\n  };\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} completeState Next state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);\n    } else {\n      warnNoop(publicInstance, 'replaceState');\n    }\n  };\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} partialState Next partial state to be merged with state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);\n    } else {\n      warnNoop(publicInstance, 'setState');\n    }\n  };\n\n  return ReactServerUpdateQueue;\n}();\n\nmodule.exports = ReactServerUpdateQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactServerUpdateQueue.js\n ** module id = 140\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SVGDOMPropertyConfig\n */\n\n'use strict';\n\nvar NS = {\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace'\n};\n\n// We use attributes for everything SVG so let's avoid some duplication and run\n// code instead.\n// The following are all specified in the HTML config already so we exclude here.\n// - class (as className)\n// - color\n// - height\n// - id\n// - lang\n// - max\n// - media\n// - method\n// - min\n// - name\n// - style\n// - target\n// - type\n// - width\nvar ATTRS = {\n  accentHeight: 'accent-height',\n  accumulate: 0,\n  additive: 0,\n  alignmentBaseline: 'alignment-baseline',\n  allowReorder: 'allowReorder',\n  alphabetic: 0,\n  amplitude: 0,\n  arabicForm: 'arabic-form',\n  ascent: 0,\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n  autoReverse: 'autoReverse',\n  azimuth: 0,\n  baseFrequency: 'baseFrequency',\n  baseProfile: 'baseProfile',\n  baselineShift: 'baseline-shift',\n  bbox: 0,\n  begin: 0,\n  bias: 0,\n  by: 0,\n  calcMode: 'calcMode',\n  capHeight: 'cap-height',\n  clip: 0,\n  clipPath: 'clip-path',\n  clipRule: 'clip-rule',\n  clipPathUnits: 'clipPathUnits',\n  colorInterpolation: 'color-interpolation',\n  colorInterpolationFilters: 'color-interpolation-filters',\n  colorProfile: 'color-profile',\n  colorRendering: 'color-rendering',\n  contentScriptType: 'contentScriptType',\n  contentStyleType: 'contentStyleType',\n  cursor: 0,\n  cx: 0,\n  cy: 0,\n  d: 0,\n  decelerate: 0,\n  descent: 0,\n  diffuseConstant: 'diffuseConstant',\n  direction: 0,\n  display: 0,\n  divisor: 0,\n  dominantBaseline: 'dominant-baseline',\n  dur: 0,\n  dx: 0,\n  dy: 0,\n  edgeMode: 'edgeMode',\n  elevation: 0,\n  enableBackground: 'enable-background',\n  end: 0,\n  exponent: 0,\n  externalResourcesRequired: 'externalResourcesRequired',\n  fill: 0,\n  fillOpacity: 'fill-opacity',\n  fillRule: 'fill-rule',\n  filter: 0,\n  filterRes: 'filterRes',\n  filterUnits: 'filterUnits',\n  floodColor: 'flood-color',\n  floodOpacity: 'flood-opacity',\n  focusable: 0,\n  fontFamily: 'font-family',\n  fontSize: 'font-size',\n  fontSizeAdjust: 'font-size-adjust',\n  fontStretch: 'font-stretch',\n  fontStyle: 'font-style',\n  fontVariant: 'font-variant',\n  fontWeight: 'font-weight',\n  format: 0,\n  from: 0,\n  fx: 0,\n  fy: 0,\n  g1: 0,\n  g2: 0,\n  glyphName: 'glyph-name',\n  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n  glyphOrientationVertical: 'glyph-orientation-vertical',\n  glyphRef: 'glyphRef',\n  gradientTransform: 'gradientTransform',\n  gradientUnits: 'gradientUnits',\n  hanging: 0,\n  horizAdvX: 'horiz-adv-x',\n  horizOriginX: 'horiz-origin-x',\n  ideographic: 0,\n  imageRendering: 'image-rendering',\n  'in': 0,\n  in2: 0,\n  intercept: 0,\n  k: 0,\n  k1: 0,\n  k2: 0,\n  k3: 0,\n  k4: 0,\n  kernelMatrix: 'kernelMatrix',\n  kernelUnitLength: 'kernelUnitLength',\n  kerning: 0,\n  keyPoints: 'keyPoints',\n  keySplines: 'keySplines',\n  keyTimes: 'keyTimes',\n  lengthAdjust: 'lengthAdjust',\n  letterSpacing: 'letter-spacing',\n  lightingColor: 'lighting-color',\n  limitingConeAngle: 'limitingConeAngle',\n  local: 0,\n  markerEnd: 'marker-end',\n  markerMid: 'marker-mid',\n  markerStart: 'marker-start',\n  markerHeight: 'markerHeight',\n  markerUnits: 'markerUnits',\n  markerWidth: 'markerWidth',\n  mask: 0,\n  maskContentUnits: 'maskContentUnits',\n  maskUnits: 'maskUnits',\n  mathematical: 0,\n  mode: 0,\n  numOctaves: 'numOctaves',\n  offset: 0,\n  opacity: 0,\n  operator: 0,\n  order: 0,\n  orient: 0,\n  orientation: 0,\n  origin: 0,\n  overflow: 0,\n  overlinePosition: 'overline-position',\n  overlineThickness: 'overline-thickness',\n  paintOrder: 'paint-order',\n  panose1: 'panose-1',\n  pathLength: 'pathLength',\n  patternContentUnits: 'patternContentUnits',\n  patternTransform: 'patternTransform',\n  patternUnits: 'patternUnits',\n  pointerEvents: 'pointer-events',\n  points: 0,\n  pointsAtX: 'pointsAtX',\n  pointsAtY: 'pointsAtY',\n  pointsAtZ: 'pointsAtZ',\n  preserveAlpha: 'preserveAlpha',\n  preserveAspectRatio: 'preserveAspectRatio',\n  primitiveUnits: 'primitiveUnits',\n  r: 0,\n  radius: 0,\n  refX: 'refX',\n  refY: 'refY',\n  renderingIntent: 'rendering-intent',\n  repeatCount: 'repeatCount',\n  repeatDur: 'repeatDur',\n  requiredExtensions: 'requiredExtensions',\n  requiredFeatures: 'requiredFeatures',\n  restart: 0,\n  result: 0,\n  rotate: 0,\n  rx: 0,\n  ry: 0,\n  scale: 0,\n  seed: 0,\n  shapeRendering: 'shape-rendering',\n  slope: 0,\n  spacing: 0,\n  specularConstant: 'specularConstant',\n  specularExponent: 'specularExponent',\n  speed: 0,\n  spreadMethod: 'spreadMethod',\n  startOffset: 'startOffset',\n  stdDeviation: 'stdDeviation',\n  stemh: 0,\n  stemv: 0,\n  stitchTiles: 'stitchTiles',\n  stopColor: 'stop-color',\n  stopOpacity: 'stop-opacity',\n  strikethroughPosition: 'strikethrough-position',\n  strikethroughThickness: 'strikethrough-thickness',\n  string: 0,\n  stroke: 0,\n  strokeDasharray: 'stroke-dasharray',\n  strokeDashoffset: 'stroke-dashoffset',\n  strokeLinecap: 'stroke-linecap',\n  strokeLinejoin: 'stroke-linejoin',\n  strokeMiterlimit: 'stroke-miterlimit',\n  strokeOpacity: 'stroke-opacity',\n  strokeWidth: 'stroke-width',\n  surfaceScale: 'surfaceScale',\n  systemLanguage: 'systemLanguage',\n  tableValues: 'tableValues',\n  targetX: 'targetX',\n  targetY: 'targetY',\n  textAnchor: 'text-anchor',\n  textDecoration: 'text-decoration',\n  textRendering: 'text-rendering',\n  textLength: 'textLength',\n  to: 0,\n  transform: 0,\n  u1: 0,\n  u2: 0,\n  underlinePosition: 'underline-position',\n  underlineThickness: 'underline-thickness',\n  unicode: 0,\n  unicodeBidi: 'unicode-bidi',\n  unicodeRange: 'unicode-range',\n  unitsPerEm: 'units-per-em',\n  vAlphabetic: 'v-alphabetic',\n  vHanging: 'v-hanging',\n  vIdeographic: 'v-ideographic',\n  vMathematical: 'v-mathematical',\n  values: 0,\n  vectorEffect: 'vector-effect',\n  version: 0,\n  vertAdvY: 'vert-adv-y',\n  vertOriginX: 'vert-origin-x',\n  vertOriginY: 'vert-origin-y',\n  viewBox: 'viewBox',\n  viewTarget: 'viewTarget',\n  visibility: 0,\n  widths: 0,\n  wordSpacing: 'word-spacing',\n  writingMode: 'writing-mode',\n  x: 0,\n  xHeight: 'x-height',\n  x1: 0,\n  x2: 0,\n  xChannelSelector: 'xChannelSelector',\n  xlinkActuate: 'xlink:actuate',\n  xlinkArcrole: 'xlink:arcrole',\n  xlinkHref: 'xlink:href',\n  xlinkRole: 'xlink:role',\n  xlinkShow: 'xlink:show',\n  xlinkTitle: 'xlink:title',\n  xlinkType: 'xlink:type',\n  xmlBase: 'xml:base',\n  xmlns: 0,\n  xmlnsXlink: 'xmlns:xlink',\n  xmlLang: 'xml:lang',\n  xmlSpace: 'xml:space',\n  y: 0,\n  y1: 0,\n  y2: 0,\n  yChannelSelector: 'yChannelSelector',\n  z: 0,\n  zoomAndPan: 'zoomAndPan'\n};\n\nvar SVGDOMPropertyConfig = {\n  Properties: {},\n  DOMAttributeNamespaces: {\n    xlinkActuate: NS.xlink,\n    xlinkArcrole: NS.xlink,\n    xlinkHref: NS.xlink,\n    xlinkRole: NS.xlink,\n    xlinkShow: NS.xlink,\n    xlinkTitle: NS.xlink,\n    xlinkType: NS.xlink,\n    xmlBase: NS.xml,\n    xmlLang: NS.xml,\n    xmlSpace: NS.xml\n  },\n  DOMAttributeNames: {}\n};\n\nObject.keys(ATTRS).forEach(function (key) {\n  SVGDOMPropertyConfig.Properties[key] = 0;\n  if (ATTRS[key]) {\n    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];\n  }\n});\n\nmodule.exports = SVGDOMPropertyConfig;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SVGDOMPropertyConfig.js\n ** module id = 141\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SelectEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar isTextInputElement = require('./isTextInputElement');\nvar keyOf = require('fbjs/lib/keyOf');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSelect: null }),\n      captured: keyOf({ onSelectCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]\n  }\n};\n\nvar activeElement = null;\nvar activeElementInst = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events. See #3639.\nvar hasListener = false;\nvar ON_SELECT_KEY = keyOf({ onSelect: null });\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case topLevelTypes.topFocus:\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case topLevelTypes.topBlur:\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case topLevelTypes.topMouseDown:\n        mouseDown = true;\n        break;\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topMouseUp:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case topLevelTypes.topSelectionChange:\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    if (registrationName === ON_SELECT_KEY) {\n      hasListener = true;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SelectEventPlugin.js\n ** module id = 142\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SimpleEventPlugin\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventConstants = require('./EventConstants');\nvar EventListener = require('fbjs/lib/EventListener');\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticAnimationEvent = require('./SyntheticAnimationEvent');\nvar SyntheticClipboardEvent = require('./SyntheticClipboardEvent');\nvar SyntheticEvent = require('./SyntheticEvent');\nvar SyntheticFocusEvent = require('./SyntheticFocusEvent');\nvar SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\nvar SyntheticDragEvent = require('./SyntheticDragEvent');\nvar SyntheticTouchEvent = require('./SyntheticTouchEvent');\nvar SyntheticTransitionEvent = require('./SyntheticTransitionEvent');\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar SyntheticWheelEvent = require('./SyntheticWheelEvent');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getEventCharCode = require('./getEventCharCode');\nvar invariant = require('fbjs/lib/invariant');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  abort: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onAbort: true }),\n      captured: keyOf({ onAbortCapture: true })\n    }\n  },\n  animationEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onAnimationEnd: true }),\n      captured: keyOf({ onAnimationEndCapture: true })\n    }\n  },\n  animationIteration: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onAnimationIteration: true }),\n      captured: keyOf({ onAnimationIterationCapture: true })\n    }\n  },\n  animationStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onAnimationStart: true }),\n      captured: keyOf({ onAnimationStartCapture: true })\n    }\n  },\n  blur: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onBlur: true }),\n      captured: keyOf({ onBlurCapture: true })\n    }\n  },\n  canPlay: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCanPlay: true }),\n      captured: keyOf({ onCanPlayCapture: true })\n    }\n  },\n  canPlayThrough: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCanPlayThrough: true }),\n      captured: keyOf({ onCanPlayThroughCapture: true })\n    }\n  },\n  click: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onClick: true }),\n      captured: keyOf({ onClickCapture: true })\n    }\n  },\n  contextMenu: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onContextMenu: true }),\n      captured: keyOf({ onContextMenuCapture: true })\n    }\n  },\n  copy: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCopy: true }),\n      captured: keyOf({ onCopyCapture: true })\n    }\n  },\n  cut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCut: true }),\n      captured: keyOf({ onCutCapture: true })\n    }\n  },\n  doubleClick: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDoubleClick: true }),\n      captured: keyOf({ onDoubleClickCapture: true })\n    }\n  },\n  drag: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDrag: true }),\n      captured: keyOf({ onDragCapture: true })\n    }\n  },\n  dragEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragEnd: true }),\n      captured: keyOf({ onDragEndCapture: true })\n    }\n  },\n  dragEnter: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragEnter: true }),\n      captured: keyOf({ onDragEnterCapture: true })\n    }\n  },\n  dragExit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragExit: true }),\n      captured: keyOf({ onDragExitCapture: true })\n    }\n  },\n  dragLeave: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragLeave: true }),\n      captured: keyOf({ onDragLeaveCapture: true })\n    }\n  },\n  dragOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragOver: true }),\n      captured: keyOf({ onDragOverCapture: true })\n    }\n  },\n  dragStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragStart: true }),\n      captured: keyOf({ onDragStartCapture: true })\n    }\n  },\n  drop: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDrop: true }),\n      captured: keyOf({ onDropCapture: true })\n    }\n  },\n  durationChange: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDurationChange: true }),\n      captured: keyOf({ onDurationChangeCapture: true })\n    }\n  },\n  emptied: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onEmptied: true }),\n      captured: keyOf({ onEmptiedCapture: true })\n    }\n  },\n  encrypted: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onEncrypted: true }),\n      captured: keyOf({ onEncryptedCapture: true })\n    }\n  },\n  ended: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onEnded: true }),\n      captured: keyOf({ onEndedCapture: true })\n    }\n  },\n  error: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onError: true }),\n      captured: keyOf({ onErrorCapture: true })\n    }\n  },\n  focus: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onFocus: true }),\n      captured: keyOf({ onFocusCapture: true })\n    }\n  },\n  input: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onInput: true }),\n      captured: keyOf({ onInputCapture: true })\n    }\n  },\n  invalid: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onInvalid: true }),\n      captured: keyOf({ onInvalidCapture: true })\n    }\n  },\n  keyDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onKeyDown: true }),\n      captured: keyOf({ onKeyDownCapture: true })\n    }\n  },\n  keyPress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onKeyPress: true }),\n      captured: keyOf({ onKeyPressCapture: true })\n    }\n  },\n  keyUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onKeyUp: true }),\n      captured: keyOf({ onKeyUpCapture: true })\n    }\n  },\n  load: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoad: true }),\n      captured: keyOf({ onLoadCapture: true })\n    }\n  },\n  loadedData: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoadedData: true }),\n      captured: keyOf({ onLoadedDataCapture: true })\n    }\n  },\n  loadedMetadata: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoadedMetadata: true }),\n      captured: keyOf({ onLoadedMetadataCapture: true })\n    }\n  },\n  loadStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoadStart: true }),\n      captured: keyOf({ onLoadStartCapture: true })\n    }\n  },\n  // Note: We do not allow listening to mouseOver events. Instead, use the\n  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\n  mouseDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseDown: true }),\n      captured: keyOf({ onMouseDownCapture: true })\n    }\n  },\n  mouseMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseMove: true }),\n      captured: keyOf({ onMouseMoveCapture: true })\n    }\n  },\n  mouseOut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseOut: true }),\n      captured: keyOf({ onMouseOutCapture: true })\n    }\n  },\n  mouseOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseOver: true }),\n      captured: keyOf({ onMouseOverCapture: true })\n    }\n  },\n  mouseUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseUp: true }),\n      captured: keyOf({ onMouseUpCapture: true })\n    }\n  },\n  paste: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPaste: true }),\n      captured: keyOf({ onPasteCapture: true })\n    }\n  },\n  pause: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPause: true }),\n      captured: keyOf({ onPauseCapture: true })\n    }\n  },\n  play: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPlay: true }),\n      captured: keyOf({ onPlayCapture: true })\n    }\n  },\n  playing: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPlaying: true }),\n      captured: keyOf({ onPlayingCapture: true })\n    }\n  },\n  progress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onProgress: true }),\n      captured: keyOf({ onProgressCapture: true })\n    }\n  },\n  rateChange: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onRateChange: true }),\n      captured: keyOf({ onRateChangeCapture: true })\n    }\n  },\n  reset: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onReset: true }),\n      captured: keyOf({ onResetCapture: true })\n    }\n  },\n  scroll: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onScroll: true }),\n      captured: keyOf({ onScrollCapture: true })\n    }\n  },\n  seeked: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSeeked: true }),\n      captured: keyOf({ onSeekedCapture: true })\n    }\n  },\n  seeking: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSeeking: true }),\n      captured: keyOf({ onSeekingCapture: true })\n    }\n  },\n  stalled: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onStalled: true }),\n      captured: keyOf({ onStalledCapture: true })\n    }\n  },\n  submit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSubmit: true }),\n      captured: keyOf({ onSubmitCapture: true })\n    }\n  },\n  suspend: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSuspend: true }),\n      captured: keyOf({ onSuspendCapture: true })\n    }\n  },\n  timeUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTimeUpdate: true }),\n      captured: keyOf({ onTimeUpdateCapture: true })\n    }\n  },\n  touchCancel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchCancel: true }),\n      captured: keyOf({ onTouchCancelCapture: true })\n    }\n  },\n  touchEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchEnd: true }),\n      captured: keyOf({ onTouchEndCapture: true })\n    }\n  },\n  touchMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchMove: true }),\n      captured: keyOf({ onTouchMoveCapture: true })\n    }\n  },\n  touchStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchStart: true }),\n      captured: keyOf({ onTouchStartCapture: true })\n    }\n  },\n  transitionEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTransitionEnd: true }),\n      captured: keyOf({ onTransitionEndCapture: true })\n    }\n  },\n  volumeChange: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onVolumeChange: true }),\n      captured: keyOf({ onVolumeChangeCapture: true })\n    }\n  },\n  waiting: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onWaiting: true }),\n      captured: keyOf({ onWaitingCapture: true })\n    }\n  },\n  wheel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onWheel: true }),\n      captured: keyOf({ onWheelCapture: true })\n    }\n  }\n};\n\nvar topLevelEventsToDispatchConfig = {\n  topAbort: eventTypes.abort,\n  topAnimationEnd: eventTypes.animationEnd,\n  topAnimationIteration: eventTypes.animationIteration,\n  topAnimationStart: eventTypes.animationStart,\n  topBlur: eventTypes.blur,\n  topCanPlay: eventTypes.canPlay,\n  topCanPlayThrough: eventTypes.canPlayThrough,\n  topClick: eventTypes.click,\n  topContextMenu: eventTypes.contextMenu,\n  topCopy: eventTypes.copy,\n  topCut: eventTypes.cut,\n  topDoubleClick: eventTypes.doubleClick,\n  topDrag: eventTypes.drag,\n  topDragEnd: eventTypes.dragEnd,\n  topDragEnter: eventTypes.dragEnter,\n  topDragExit: eventTypes.dragExit,\n  topDragLeave: eventTypes.dragLeave,\n  topDragOver: eventTypes.dragOver,\n  topDragStart: eventTypes.dragStart,\n  topDrop: eventTypes.drop,\n  topDurationChange: eventTypes.durationChange,\n  topEmptied: eventTypes.emptied,\n  topEncrypted: eventTypes.encrypted,\n  topEnded: eventTypes.ended,\n  topError: eventTypes.error,\n  topFocus: eventTypes.focus,\n  topInput: eventTypes.input,\n  topInvalid: eventTypes.invalid,\n  topKeyDown: eventTypes.keyDown,\n  topKeyPress: eventTypes.keyPress,\n  topKeyUp: eventTypes.keyUp,\n  topLoad: eventTypes.load,\n  topLoadedData: eventTypes.loadedData,\n  topLoadedMetadata: eventTypes.loadedMetadata,\n  topLoadStart: eventTypes.loadStart,\n  topMouseDown: eventTypes.mouseDown,\n  topMouseMove: eventTypes.mouseMove,\n  topMouseOut: eventTypes.mouseOut,\n  topMouseOver: eventTypes.mouseOver,\n  topMouseUp: eventTypes.mouseUp,\n  topPaste: eventTypes.paste,\n  topPause: eventTypes.pause,\n  topPlay: eventTypes.play,\n  topPlaying: eventTypes.playing,\n  topProgress: eventTypes.progress,\n  topRateChange: eventTypes.rateChange,\n  topReset: eventTypes.reset,\n  topScroll: eventTypes.scroll,\n  topSeeked: eventTypes.seeked,\n  topSeeking: eventTypes.seeking,\n  topStalled: eventTypes.stalled,\n  topSubmit: eventTypes.submit,\n  topSuspend: eventTypes.suspend,\n  topTimeUpdate: eventTypes.timeUpdate,\n  topTouchCancel: eventTypes.touchCancel,\n  topTouchEnd: eventTypes.touchEnd,\n  topTouchMove: eventTypes.touchMove,\n  topTouchStart: eventTypes.touchStart,\n  topTransitionEnd: eventTypes.transitionEnd,\n  topVolumeChange: eventTypes.volumeChange,\n  topWaiting: eventTypes.waiting,\n  topWheel: eventTypes.wheel\n};\n\nfor (var type in topLevelEventsToDispatchConfig) {\n  topLevelEventsToDispatchConfig[type].dependencies = [type];\n}\n\nvar ON_CLICK_KEY = keyOf({ onClick: null });\nvar onClickListeners = {};\n\nfunction getDictionaryKey(inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n}\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case topLevelTypes.topAbort:\n      case topLevelTypes.topCanPlay:\n      case topLevelTypes.topCanPlayThrough:\n      case topLevelTypes.topDurationChange:\n      case topLevelTypes.topEmptied:\n      case topLevelTypes.topEncrypted:\n      case topLevelTypes.topEnded:\n      case topLevelTypes.topError:\n      case topLevelTypes.topInput:\n      case topLevelTypes.topInvalid:\n      case topLevelTypes.topLoad:\n      case topLevelTypes.topLoadedData:\n      case topLevelTypes.topLoadedMetadata:\n      case topLevelTypes.topLoadStart:\n      case topLevelTypes.topPause:\n      case topLevelTypes.topPlay:\n      case topLevelTypes.topPlaying:\n      case topLevelTypes.topProgress:\n      case topLevelTypes.topRateChange:\n      case topLevelTypes.topReset:\n      case topLevelTypes.topSeeked:\n      case topLevelTypes.topSeeking:\n      case topLevelTypes.topStalled:\n      case topLevelTypes.topSubmit:\n      case topLevelTypes.topSuspend:\n      case topLevelTypes.topTimeUpdate:\n      case topLevelTypes.topVolumeChange:\n      case topLevelTypes.topWaiting:\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case topLevelTypes.topKeyPress:\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case topLevelTypes.topBlur:\n      case topLevelTypes.topFocus:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case topLevelTypes.topClick:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topDoubleClick:\n      case topLevelTypes.topMouseDown:\n      case topLevelTypes.topMouseMove:\n      case topLevelTypes.topMouseOut:\n      case topLevelTypes.topMouseOver:\n      case topLevelTypes.topMouseUp:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case topLevelTypes.topDrag:\n      case topLevelTypes.topDragEnd:\n      case topLevelTypes.topDragEnter:\n      case topLevelTypes.topDragExit:\n      case topLevelTypes.topDragLeave:\n      case topLevelTypes.topDragOver:\n      case topLevelTypes.topDragStart:\n      case topLevelTypes.topDrop:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case topLevelTypes.topTouchCancel:\n      case topLevelTypes.topTouchEnd:\n      case topLevelTypes.topTouchMove:\n      case topLevelTypes.topTouchStart:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case topLevelTypes.topAnimationEnd:\n      case topLevelTypes.topAnimationIteration:\n      case topLevelTypes.topAnimationStart:\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case topLevelTypes.topTransitionEnd:\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case topLevelTypes.topScroll:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case topLevelTypes.topWheel:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case topLevelTypes.topCopy:\n      case topLevelTypes.topCut:\n      case topLevelTypes.topPaste:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    // Mobile Safari does not fire properly bubble click events on\n    // non-interactive elements, which means delegated click listeners do not\n    // fire. The workaround for this bug involves attaching an empty click\n    // listener on the target node.\n    if (registrationName === ON_CLICK_KEY) {\n      var key = getDictionaryKey(inst);\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      if (!onClickListeners[key]) {\n        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n      }\n    }\n  },\n\n  willDeleteListener: function (inst, registrationName) {\n    if (registrationName === ON_CLICK_KEY) {\n      var key = getDictionaryKey(inst);\n      onClickListeners[key].remove();\n      delete onClickListeners[key];\n    }\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SimpleEventPlugin.js\n ** module id = 143\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticAnimationEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\nvar AnimationEventInterface = {\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);\n\nmodule.exports = SyntheticAnimationEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticAnimationEvent.js\n ** module id = 144\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticClipboardEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticClipboardEvent.js\n ** module id = 145\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticCompositionEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\nmodule.exports = SyntheticCompositionEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticCompositionEvent.js\n ** module id = 146\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticDragEvent\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticDragEvent.js\n ** module id = 147\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticFocusEvent\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticFocusEvent.js\n ** module id = 148\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticInputEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\nmodule.exports = SyntheticInputEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticInputEvent.js\n ** module id = 149\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticKeyboardEvent\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventCharCode = require('./getEventCharCode');\nvar getEventKey = require('./getEventKey');\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticKeyboardEvent.js\n ** module id = 150\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticTouchEvent\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticTouchEvent.js\n ** module id = 151\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticTransitionEvent\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\nvar TransitionEventInterface = {\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);\n\nmodule.exports = SyntheticTransitionEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticTransitionEvent.js\n ** module id = 152\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticWheelEvent\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX :\n    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY :\n    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY :\n    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticWheelEvent.js\n ** module id = 153\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule adler32\n * \n */\n\n'use strict';\n\nvar MOD = 65521;\n\n// adler32 is not cryptographically strong, and is only used to sanity check that\n// markup generated on the server matches the markup generated on the client.\n// This implementation (a modified version of the SheetJS version) has been optimized\n// for our use case, at the expense of conforming to the adler32 specification\n// for non-ascii inputs.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  var i = 0;\n  var l = data.length;\n  var m = l & ~0x3;\n  while (i < m) {\n    var n = Math.min(i + 4096, m);\n    for (; i < n; i += 4) {\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n    }\n    a %= MOD;\n    b %= MOD;\n  }\n  for (; i < l; i++) {\n    b += a += data.charCodeAt(i);\n  }\n  a %= MOD;\n  b %= MOD;\n  return a | b << 16;\n}\n\nmodule.exports = adler32;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/adler32.js\n ** module id = 154\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule checkReactTypeSpec\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('./ReactComponentTreeHook');\n}\n\nvar loggedTypeFailures = {};\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?object} element The React element that is being type-checked\n * @param {?number} debugID The React component instance that is being type-checked\n * @private\n */\nfunction checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {\n  for (var typeSpecName in typeSpecs) {\n    if (typeSpecs.hasOwnProperty(typeSpecName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;\n        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n      } catch (ex) {\n        error = ex;\n      }\n      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var componentStackInfo = '';\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!ReactComponentTreeHook) {\n            ReactComponentTreeHook = require('./ReactComponentTreeHook');\n          }\n          if (debugID !== null) {\n            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);\n          } else if (element !== null) {\n            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);\n          }\n        }\n\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;\n      }\n    }\n  }\n}\n\nmodule.exports = checkReactTypeSpec;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/checkReactTypeSpec.js\n ** module id = 155\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule dangerousStyleValue\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar warning = require('fbjs/lib/warning');\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\nvar styleWarnings = {};\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @param {ReactDOMComponent} component\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, component) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    if (process.env.NODE_ENV !== 'production') {\n      // Allow '0' to pass through without warning. 0 is already special and\n      // doesn't require units, so we don't need to warn about it.\n      if (component && value !== '0') {\n        var owner = component._currentElement._owner;\n        var ownerName = owner ? owner.getName() : null;\n        if (ownerName && !styleWarnings[ownerName]) {\n          styleWarnings[ownerName] = {};\n        }\n        var warned = false;\n        if (ownerName) {\n          var warnings = styleWarnings[ownerName];\n          warned = warnings[name];\n          if (!warned) {\n            warnings[name] = true;\n          }\n        }\n        if (!warned) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n        }\n      }\n    }\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/dangerousStyleValue.js\n ** module id = 156\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findDOMNode\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {?DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (process.env.NODE_ENV !== 'production') {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (componentOrElement.nodeType === 1) {\n    return componentOrElement;\n  }\n\n  var inst = ReactInstanceMap.get(componentOrElement);\n  if (inst) {\n    inst = getHostComponentFromComposite(inst);\n    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n  }\n\n  if (typeof componentOrElement.render === 'function') {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n  }\n}\n\nmodule.exports = findDOMNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/findDOMNode.js\n ** module id = 157\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenChildren\n * \n */\n\n'use strict';\n\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('./ReactComponentTreeHook');\n}\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n * @param {number=} selfDebugID Optional debugID of the current internal instance.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n  // We found a component instance.\n  if (traverseContext && typeof traverseContext === 'object') {\n    var result = traverseContext;\n    var keyUnique = result[name] === undefined;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ReactComponentTreeHook) {\n        ReactComponentTreeHook = require('./ReactComponentTreeHook');\n      }\n      if (!keyUnique) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n      }\n    }\n    if (keyUnique && child != null) {\n      result[name] = child;\n    }\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children, selfDebugID) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n\n  if (process.env.NODE_ENV !== 'production') {\n    traverseAllChildren(children, function (traverseContext, child, name) {\n      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n    }, result);\n  } else {\n    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  }\n  return result;\n}\n\nmodule.exports = flattenChildren;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/flattenChildren.js\n ** module id = 158\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventKey\n */\n\n'use strict';\n\nvar getEventCharCode = require('./getEventCharCode');\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventKey.js\n ** module id = 159\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNodeForCharacterOffset\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\n\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getNodeForCharacterOffset.js\n ** module id = 160\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getVendorPrefixedEventName\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  prefixes['ms' + styleProp] = 'MS' + eventName;\n  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nvar vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nvar prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nvar style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (ExecutionEnvironment.canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  var prefixMap = vendorPrefixes[eventName];\n\n  for (var styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return '';\n}\n\nmodule.exports = getVendorPrefixedEventName;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getVendorPrefixedEventName.js\n ** module id = 161\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule onlyChild\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/onlyChild.js\n ** module id = 162\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule quoteAttributeValueForBrowser\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/quoteAttributeValueForBrowser.js\n ** module id = 163\n ** module chunks = 0\n **/","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule renderSubtreeIntoContainer\n*/\n\n'use strict';\n\nvar ReactMount = require('./ReactMount');\n\nmodule.exports = ReactMount.renderSubtreeIntoContainer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/renderSubtreeIntoContainer.js\n ** module id = 164\n ** module chunks = 0\n **/","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/camelize.js\n ** module id = 165\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar camelize = require('./camelize');\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/camelizeStyleName.js\n ** module id = 166\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/containsNode.js\n ** module id = 167\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar invariant = require('./invariant');\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList\n  // in old versions of Safari).\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;\n\n  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;\n\n  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;\n\n  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return (\n    // not null/false\n    !!obj && (\n    // arrays are objects, NodeLists are functions in Safari\n    typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    'length' in obj &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    typeof obj.nodeType != 'number' && (\n    // a real array\n    Array.isArray(obj) ||\n    // arguments\n    'callee' in obj ||\n    // HTMLCollection/NodeList\n    'item' in obj)\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/createArrayFromMixed.js\n ** module id = 168\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/*eslint-disable fb-www/unsafe-html*/\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar getMarkupWrap = require('./getMarkupWrap');\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = Array.from(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/createNodesFromMarkup.js\n ** module id = 169\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/*eslint-disable fb-www/unsafe-html */\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap\n};\n\n// Initialize the SVG elements since we know they'll always need to be wrapped\n// consistently. If they are created inside a <div> they will be initialized in\n// the wrong namespace (and will not display).\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\nsvgElements.forEach(function (nodeName) {\n  markupWrap[nodeName] = svgWrap;\n  shouldWrap[nodeName] = true;\n});\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\nmodule.exports = getMarkupWrap;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/getMarkupWrap.js\n ** module id = 170\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\n\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: window.pageXOffset || document.documentElement.scrollLeft,\n      y: window.pageYOffset || document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/getUnboundedScrollPosition.js\n ** module id = 171\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/hyphenate.js\n ** module id = 172\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar hyphenate = require('./hyphenate');\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/hyphenateStyleName.js\n ** module id = 173\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/isNode.js\n ** module id = 174\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/isTextNode.js\n ** module id = 175\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/memoizeStringOnly.js\n ** module id = 176\n ** module chunks = 0\n **/"],"sourceRoot":""}